Export{
 Version{"2.7.3.0";}
 CountryCodeElement{2;49;44;}
 CountryCodeText{3;49;86;44;}
 Task{"sk316_gateway_test";
  SequenceCategory{"sk316";}
  SequenceContext{}}
 Counts{46;206;238;115;0;1;}}
Types{
 TypeDef{"PBLTXT";
  LangName{"PBLTXT";"PBLTXT";}"TEXT";"";
  LangDesc{"Pruefblock-Text";"";}}
 TypeDef{"DebugLevel";
  LangName{"DebugLevel";"DebugLevel";}"INT";"";
  LangDesc{"";"";}}
 TypeDef{"TimeF";
  LangName{"TimeF";"TimeF";}"FLOAT";"";
  LangDesc{"";"";}}
 TypeDef{"DialogTyp";
  LangName{"DialogTyp";"DialogTyp";}"INT";"";
  LangDesc{"Dialog Handle";"Dialog handle";}}
 TypeDef{"DialogSchalter";
  LangName{"DialogSchalter";"DialogSchalter";}"INT";"";
  LangDesc{"Dialog-Schalter";"Dialog-Schalter";}}
 TypeDef{"ERROR";
  LangName{"ERROR";"ERROR";}"INT";"";
  LangDesc{"Fehlervariable";"";}}
 TypeDef{"Codefile_Result_Int";
  LangName{"Codefile_Result_Int";"Codefile_Result_Int";}"INT";"";
  LangDesc{"Ergebnissse der Codefileauswahl";"";}}
 TypeDef{"DialogLine";
  LangName{"DialogLine";"DialogLine";}"INT";"";
  LangDesc{"Dialog-Zeile";"Dialog-Zeile";}}
 TypeDef{"STG_Nr_Liste";
  LangName{"STG_Nr_Liste";"STG_Nr_Liste";}"STRING";"";
  LangDesc{"";"";}}
 TypeDef{"Codefile_Result_Str";
  LangName{"Codefile_Result_Str";"Codefile_Result_Str";}"STRING";"";
  LangDesc{"Ergebnissse der Codefileauswahl";"";}}
 TypeDef{"XMLFILE";
  LangName{"XMLFILE";"XMLFILE";}"STRING";"";
  LangDesc{"Name der XML-Datei";"XML Filename";}}
 TypeDef{"XMLVERSION";
  LangName{"XMLVERSION";"XMLVERSION";}"STRING";"";
  LangDesc{"";"";}}
 TypeDef{"Timeout";
  LangName{"Timeout";"Timeout";}"INT";"[s]";
  LangDesc{"Timeoutzeit in Sekunden";"[s]";}}
 TypeDef{"STATTXT";
  LangName{"STATTXT";"STATTXT";}"TEXT";"";
  LangDesc{"Pruefschritt-Text";"";}}
 TypeDef{"ZDC_HNDL";
  LangName{"ZDC_HNDL";"ZDC_HNDL";}"INT";"";
  LangDesc{"";"";}}
 TypeDef{"Level";
  LangName{"Level";"Level";}"INT";"";
  LangDesc{"";"";}}
 TypeDef{"ZDC_MODUSTEIL";
  LangName{"ZDC_MODUSTEIL";"ZDC_MODUSTEIL";}"STRING";"";
  LangDesc{"";"";}}
 TypeDef{"VCIKANAL";
  LangName{"VCIKANAL";"VCIKANAL";}"INT";"";
  LangDesc{"VCI-Kanal";"VCI-Kanal";}}
 TypeDef{"VCITYP";
  LangName{"VCITYP";"VCITYP";}"INT";"";
  LangDesc{"Typ des VCI";"";}}
 TypeDef{"VCI_Protokoll";
  LangName{"VCI_Protokoll";"VCI_Protokoll";}"STRING";"";
  LangDesc{"";"";}}
 TypeDef{"ECU";
  LangName{"ECU";"ECU";}"STRING";"";
  LangDesc{"Steuergeraete";"";}}
 TypeDef{"PAR_HNDL";
  LangName{"PAR_HNDL";"PAR_HNDL";}"INT";"";
  LangDesc{"";"";}}
 TypeDef{"VW_Result_Tel";
  LangName{"VW_Result_Tel";"VW_Result_Tel";}"STRING";"";
  LangDesc{"Ergebnistelegramme VW_Kommunikation";"";}}
 TypeDef{"ID_Nummern";
  LangName{"ID_Nummern";"ID_Nummern";}"INT";"";
  LangDesc{"";"";}}
 TypeDef{"VW_Subsystem";
  LangName{"VW_Subsystem";"VW_Subsystem";}"INT";"";
  LangDesc{"";"";}}
 TypeDef{"StgTNr";
  LangName{"StgTNr";"StgTNr";}"STRING";"";
  LangDesc{"";"";}}
 TypeDef{"ZUSTAND";
  LangName{"ZUSTAND";"ZUSTAND";}"INT";"";
  LangDesc{"Zustandvariable";"";}}
 TypeDef{"Time";
  LangName{"Time";"Time";}"INT";"[s]";
  LangDesc{"Zeit";"Zeit";}}
 TypeDef{"StgCodierung";
  LangName{"StgCodierung";"StgCodierung";}"INT";"";
  LangDesc{"";"";}}
 TypeDef{"BinServices";
  LangName{"BinServices";"BinServices";}"STRING";"";
  LangDesc{"unterstuetzte Funktionen";"";}}
 TypeDef{"StgHWTNR";
  LangName{"StgHWTNR";"StgHWTNR";}"STRING";"";
  LangDesc{"";"";}}
 TypeDef{"BgrNr";
  LangName{"BgrNr";"BgrNr";}"STRING";"";
  LangDesc{"";"";}}
 TypeDef{"Bool";
  LangName{"Bool";"Bool";}"INT";"";
  LangDesc{"Logischer Zustand";"Logischer Zustand";}}
 TypeDef{"Baugruppenstring";
  LangName{"Baugruppenstring";"Baugruppenstring";}"STRING";"";
  LangDesc{"";"";}}
 TypeDef{"FZD";
  LangName{"FZD";"FZD";}"STRING";"";
  LangDesc{"Fahrzeugdaten";"";}}
 TypeDef{"Sorte";
  LangName{"Sorte";"Sorte";}"STRING";"";
  LangDesc{"Sortennummer HW / SW";"";}}
 TypeDef{"VW_Codes";
  LangName{"VW_Codes";"VW_Codes";}"INT";"";
  LangDesc{"";"";}}
 TypeDef{"VW_Send_LID_ASCII_String";
  LangName{"VW_Send_LID_ASCII_String";"VW_Send_LID_ASCII_String";}"INT";"";
  LangDesc{"";"";}}
 TypeDef{"VW_ASCII_String";
  LangName{"VW_ASCII_String";"VW_ASCII_String";}"STRING";"";
  LangDesc{"";"";}}
 TypeDef{"STG_Datenstand";
  LangName{"STG_Datenstand";"STG_Datenstand";}"STRING";"";
  LangDesc{"";"";}}
 TypeDef{"VW_LID";
  LangName{"VW_LID";"VW_LID";}"STRING";"";
  LangDesc{"";"";}}
 TypeDef{"VCISendTel";
  LangName{"VCISendTel";"VCISendTel";}"STRING";"";
  LangDesc{"VCI-Sendetelegramm";"";}}
 TypeDef{"VW_Konfiguration_String";
  LangName{"VW_Konfiguration_String";"VW_Konfiguration_String";}"STRING";"";
  LangDesc{"Identifier schreibener Dienste";"";}}
 TypeDef{"VW_Fehler_Filter";
  LangName{"VW_Fehler_Filter";"VW_Fehler_Filter";}"STRING";"";
  LangDesc{"";"";}}
 TypeDef{"VW_Anzeigegruppe";
  LangName{"VW_Anzeigegruppe";"VW_Anzeigegruppe";}"INT";"";
  LangDesc{"";"";}}
 TypeDef{"VCIResult";
  LangName{"VCIResult";"VCIResult";}"STRING";"";
  LangDesc{"VCI-Regebnis";"VCI-Regebnis";}}}
Symbols{
 VarDef{"CPblText_Gateway_test";
  LangName{"CPblText_Gateway_test";"CPblText_Gateway_test";}"Var";"PBLTXT";
  LangDesc{"";"";}
  LangText{"\"Gateway test\"";"\"\xA1\xEF\xCD\xF8\xB9\xD8 \xBC\xEC\xB2\xE2\"";"\"Gateway test\"";}"Const";}
 VarDef{"DLevel_0";
  LangName{"DLevel_0";"DLevel_0";}"Var";"DebugLevel";
  LangDesc{"0 - keine Protokollierung";"0 - keine Protokollierung";}"0";}
 VarDef{"ConstVar22415";
  LangName{"";"";}"Value";"INT";
  LangDesc{"";"";}"5";"Const";}
 VarDef{"DTimeF";
  LangName{"DTimeF";"DTimeF";}"Var";"TimeF";
  LangDesc{"";"";}"";}
 VarDef{"DIALOG_LOKAL";
  LangName{"DIALOG_LOKAL";"DIALOG_LOKAL";}"Var";"DialogTyp";
  LangDesc{"Dialog Handle unshared";"Dialog handle unshared";}"-1";}
 VarDef{"CTextCodierungGateway";
  LangName{"CTextCodierungGateway";"CTextCodierungGateway";}"Var";"TEXT";
  LangDesc{"";"";}
  LangText{"\"Gateway Stg\"";"\"\xCD\xF8\xB9\xD8\"";"\"Gateway ECU\"";}"Const";}
 VarDef{"CDialogS_NON";
  LangName{"CDialogS_NON";"CDialogS_NON";}"Var";"DialogSchalter";
  LangDesc{"kein Schalter";"NO switch";}"0";"Const";}
 VarDef{"CTextLeer";
  LangName{"CTextLeer";"CTextLeer";}"Var";"TEXT";
  LangDesc{"Leerer text";"Empty text";}
  LangText{"\"\"";"\"\"";"\"\"";}"Const";}
 VarDef{"CDialogS_OK_ABBR";
  LangName{"CDialogS_OK_ABBR";"CDialogS_OK_ABBR";}"Var";"DialogSchalter";
  LangDesc{"";"";}"3";"Const";}
 VarDef{"LAS_Codefile_ZV";
  LangName{"LAS_Codefile_ZV";"LAS_Codefile_ZV";}"Var";"LAS";
  LangDesc{"Zentralverriegelung";"Centralised door locking";}"\"$4K3\"";"Const";}
 VarDef{"NOK";
  LangName{"NOK";"NOK";}"Var";"ERROR";
  LangDesc{"NOK-Ergebnis";"NOK result";}"1";"Shared";"Always";"Const";}
 VarDef{"CText_TestBlockIncomplete";
  LangName{"CText_TestBlockIncomplete";"CText_TestBlockIncomplete";}"Var";"TEXT";
  LangDesc{"";"";}
  LangText{"\"Pruefblock unvollstaendig\"";"\"Test block \xB2\xBB\xCD\xEA\xD5\xFB\"";"\"Test block incomplete\"";}"Const";}
 VarDef{"CText_TestBlockComplete";
  LangName{"CText_TestBlockComplete";"CText_TestBlockComplete";}"Var";"TEXT";
  LangDesc{"";"";}
  LangText{"\"Pruefblock vollstaendig\"";"\"Test block \xCD\xEA\xD5\xFB\"";"\"Test block complete\"";}"Const";}
 VarDef{"DString";
  LangName{"DString";"DString";}"Var";"STRING";
  LangDesc{"";"";}"";}
 VarDef{"Gateway_Status";
  LangName{"Gateway_Status";"Gateway_Status";}"Var";"Codefile_Result_Int";
  LangDesc{"Codierbares Gateway";"Codeable gateway";}"-2";"Shared";}
 VarDef{"ConstVar22417";
  LangName{"";"";}"Value";"INT";
  LangDesc{"";"";}"-2";"Const";}
 VarDef{"CDialogZeile1";
  LangName{"CDialogZeile1";"CDialogZeile1";}"Var";"DialogLine";
  LangDesc{"";"";}"1";"Const";}
 VarDef{"CTextCodefile_Gateway";
  LangName{"CTextCodefile_Gateway";"CTextCodefile_Gateway";}"Var";"TEXT";
  LangDesc{"";"";}
  LangText{"\"Codefileauswahl  Gateway\"";"\"\xB6\xC1\xCD\xF8\xB9\xD8\xB1\xE0\xC2\xEB\xCE\xC4\xBC\xFE\"";"\"Codefile selection Gateway\"";}"Const";}
 VarDef{"Gateway";
  LangName{"Gateway";"Gateway";}"Var";"STG_Nr_Liste";
  LangDesc{"Gateway";"Gateway";}"\"19\"";"Const";}
 VarDef{"Gateway_ID_Result";
  LangName{"Gateway_ID_Result";"Gateway_ID_Result";}"Var";"Codefile_Result_Str";
  LangDesc{"";"";}"\"\"";"Shared";}
 VarDef{"Dummy_ID_2_Result";
  LangName{"Dummy_ID_2_Result";"Dummy_ID_2_Result";}"Var";"Codefile_Result_Str";
  LangDesc{"";"";}"\"\"";}
 VarDef{"Dummy_ID_3_Result";
  LangName{"Dummy_ID_3_Result";"Dummy_ID_3_Result";}"Var";"Codefile_Result_Str";
  LangDesc{"";"";}"\"\"";}
 VarDef{"Dummy_ID_4_Result";
  LangName{"Dummy_ID_4_Result";"Dummy_ID_4_Result";}"Var";"Codefile_Result_Str";
  LangDesc{"";"";}"\"\"";}
 VarDef{"Dummy_ID_5_Result";
  LangName{"Dummy_ID_5_Result";"Dummy_ID_5_Result";}"Var";"Codefile_Result_Str";
  LangDesc{"";"";}"\"\"";}
 VarDef{"Dummy_ID_6_Result";
  LangName{"Dummy_ID_6_Result";"Dummy_ID_6_Result";}"Var";"Codefile_Result_Str";
  LangDesc{"";"";}"\"\"";}
 VarDef{"Dummy_ID_7_Result";
  LangName{"Dummy_ID_7_Result";"Dummy_ID_7_Result";}"Var";"Codefile_Result_Str";
  LangDesc{"";"";}"\"\"";}
 VarDef{"Gateway_Codierung_Result";
  LangName{"Gateway_Codierung_Result";"Gateway_Codierung_Result";}"Var";"Codefile_Result_Int";
  LangDesc{"";"";}"-1";"Shared";}
 VarDef{"Gateway_LongCode_Result";
  LangName{"Gateway_LongCode_Result";"Gateway_LongCode_Result";}"Var";"Codefile_Result_Str";
  LangDesc{"";"";}"\"\"";"Shared";}
 VarDef{"Gateway_Codier_Art";
  LangName{"Gateway_Codier_Art";"Gateway_Codier_Art";}"Var";"Codefile_Result_Int";
  LangDesc{"";"";}"-1";"Shared";}
 VarDef{"Dummy_Login_1";
  LangName{"Dummy_Login_1";"Dummy_Login_1";}"Var";"Codefile_Result_Int";
  LangDesc{"";"";}"-1";}
 VarDef{"Dummy_Login_2";
  LangName{"Dummy_Login_2";"Dummy_Login_2";}"Var";"Codefile_Result_Int";
  LangDesc{"";"";}"-1";}
 VarDef{"Dummy_Anzahl_Stg";
  LangName{"Dummy_Anzahl_Stg";"Dummy_Anzahl_Stg";}"Var";"Codefile_Result_Int";
  LangDesc{"Anzahl der Verbauten Steuergeraete";"";}"-1";"Shared";}
 VarDef{"Gateway_Anpassung_String";
  LangName{"Gateway_Anpassung_String";"Gateway_Anpassung_String";}"Var";"Codefile_Result_Str";
  LangDesc{"";"";}"\"\"";"Shared";}
 VarDef{"Gateway_Prog_String";
  LangName{"Gateway_Prog_String";"Gateway_Prog_String";}"Var";"Codefile_Result_Str";
  LangDesc{"";"";}"\"\"";"Shared";}
 VarDef{"Gateway_ProgL_String";
  LangName{"Gateway_ProgL_String";"Gateway_ProgL_String";}"Var";"Codefile_Result_Str";
  LangDesc{"";"";}"\"\"";"Shared";}
 VarDef{"Gateway_Result";
  LangName{"Gateway_Result";"Gateway_Result";}"Var";"Codefile_Result_Str";
  LangDesc{"";"";}"\"\"";"Shared";}
 VarDef{"Gateway_Auswahl";
  LangName{"Gateway_Auswahl";"Gateway_Auswahl";}"Var";"Codefile_Result_Str";
  LangDesc{"";"";}"\"\"";"Shared";}
 VarDef{"GatewayContainer_Name";
  LangName{"GatewayContainer_Name";"GatewayContainer_Name";}"Var";"XMLFILE";
  LangDesc{"";"";}"\"\"";"Shared";}
 VarDef{"GatewayContainer_Version";
  LangName{"GatewayContainer_Version";"GatewayContainer_Version";}"Var";"XMLVERSION";
  LangDesc{"";"";}"\"\"";"Shared";}
 VarDef{"Gateway_ID_Exp";
  LangName{"Gateway_ID_Exp";"Gateway_ID_Exp";}"Var";"Codefile_Result_Str";
  LangDesc{"";"";}"\"\"";"Shared";}
 VarDef{"Dummy_HWBgp";
  LangName{"Dummy_HWBgp";"Dummy_HWBgp";}"Var";"Codefile_Result_Str";
  LangDesc{"";"";}"\"\"";}
 VarDef{"Dummy_SWBgp";
  LangName{"Dummy_SWBgp";"Dummy_SWBgp";}"Var";"Codefile_Result_Str";
  LangDesc{"";"";}"\"\"";}
 VarDef{"Dummy_Rohteilenummer";
  LangName{"Dummy_Rohteilenummer";"Dummy_Rohteilenummer";}"Var";"Codefile_Result_Str";
  LangDesc{"";"";}"\"\"";}
 VarDef{"CDialog_Keine_Anzeige";
  LangName{"CDialog_Keine_Anzeige";"CDialog_Keine_Anzeige";}"Var";"DialogLine";
  LangDesc{"";"";}"0";"Const";}
 VarDef{"CTextCodefileAuswahl";
  LangName{"CTextCodefileAuswahl";"CTextCodefileAuswahl";}"Var";"TEXT";
  LangDesc{"";"";}
  LangText{"\"Codefileauswahl\"";"\"\xB6\xC1\xB1\xE0\xC2\xEB\xCE\xC4\xBC\xFE\"";"\"Codefileauswahl\"";}"Const";}
 VarDef{"Dummy";
  LangName{"Dummy";"Dummy";}"Var";"STG_Nr_Liste";
  LangDesc{"Dummy";"Dummy";}"\"00\"";"Const";}
 VarDef{"Dummy_ID_1_Result";
  LangName{"Dummy_ID_1_Result";"Dummy_ID_1_Result";}"Var";"Codefile_Result_Str";
  LangDesc{"";"";}"\"\"";}
 VarDef{"Dummy_Codierung_Result";
  LangName{"Dummy_Codierung_Result";"Dummy_Codierung_Result";}"Var";"Codefile_Result_Int";
  LangDesc{"";"";}"-1";}
 VarDef{"Dummy_LongCode_Result";
  LangName{"Dummy_LongCode_Result";"Dummy_LongCode_Result";}"Var";"Codefile_Result_Str";
  LangDesc{"";"";}"\"\"";}
 VarDef{"Dummy_Codier_Art";
  LangName{"Dummy_Codier_Art";"Dummy_Codier_Art";}"Var";"Codefile_Result_Int";
  LangDesc{"";"";}"-1";}
 VarDef{"Dummy_Anpassung_String";
  LangName{"Dummy_Anpassung_String";"Dummy_Anpassung_String";}"Var";"Codefile_Result_Str";
  LangDesc{"";"";}"\"\"";}
 VarDef{"Dummy_Prog_String";
  LangName{"Dummy_Prog_String";"Dummy_Prog_String";}"Var";"Codefile_Result_Str";
  LangDesc{"";"";}"\"\"";}
 VarDef{"Dummy_ProgL_String";
  LangName{"Dummy_ProgL_String";"Dummy_ProgL_String";}"Var";"Codefile_Result_Str";
  LangDesc{"";"";}"\"\"";}
 VarDef{"Dummy_Status";
  LangName{"Dummy_Status";"Dummy_Status";}"Var";"Codefile_Result_Int";
  LangDesc{"";"";}"-2";}
 VarDef{"Dummy_Result";
  LangName{"Dummy_Result";"Dummy_Result";}"Var";"Codefile_Result_Str";
  LangDesc{"";"";}"\"\"";}
 VarDef{"Dummy_Auswahl";
  LangName{"Dummy_Auswahl";"Dummy_Auswahl";}"Var";"Codefile_Result_Str";
  LangDesc{"";"";}"\"\"";}
 VarDef{"DContainer_Name";
  LangName{"DContainer_Name";"DContainer_Name";}"Var";"XMLFILE";
  LangDesc{"";"";}"\"\"";"Shared";}
 VarDef{"DummyContainer_Version";
  LangName{"DummyContainer_Version";"DummyContainer_Version";}"Var";"XMLVERSION";
  LangDesc{"";"";}"\"\"";}
 VarDef{"Dummy_ID_Exp";
  LangName{"Dummy_ID_Exp";"Dummy_ID_Exp";}"Var";"Codefile_Result_Str";
  LangDesc{"";"";}"\"\"";}
 VarDef{"CTime30";
  LangName{"CTime30";"CTime30";}"Var";"Timeout";
  LangDesc{"";"";}"30";"Const";}
 VarDef{"CStatTxtCodefileGateway_24412";
  LangName{"CStatTxtCodefileGateway_24412";"CStatTxtCodefileGateway_24412";}"Var";"STATTXT";
  LangDesc{"";"";}
  LangText{"\"Codefileauswahl Gateway\"";"\"\xB6\xC1\xCD\xF8\xB9\xD8\xB1\xE0\xC2\xEB\xCE\xC4\xBC\xFE\"";"\"Codefile selection Gateway\"";}"Const";}
 VarDef{"DZdcHndl";
  LangName{"DZdcHndl";"DZdcHndl";}"Var";"ZDC_HNDL";
  LangDesc{"";"";}"-1";}
 VarDef{"CLevel3";
  LangName{"CLevel3";"CLevel3";}"Var";"Level";
  LangDesc{"";"";}"3";"Const";}
 VarDef{"DummyContainer_Name";
  LangName{"DummyContainer_Name";"DummyContainer_Name";}"Var";"XMLFILE";
  LangDesc{"";"";}"\"\"";}
 VarDef{"CLevel0";
  LangName{"CLevel0";"CLevel0";}"Var";"Level";
  LangDesc{"";"";}"0";"Const";}
 VarDef{"CZDCModusAll";
  LangName{"CZDCModusAll";"CZDCModusAll";}"Var";"ZDC_MODUSTEIL";
  LangDesc{"";"";}"\"\"";"Const";}
 VarDef{"CStat_ZDC_Codierung_vw_2000";
  LangName{"CStat_ZDC_Codierung_vw_2000";"CStat_ZDC_Codierung_vw_2000";}"Var";"STATTXT";
  LangDesc{"";"";}
  LangText{"\"ZDC_Codierung VW 2000\"";"\"ZDC\xB1\xE0\xC2\xEBVW2000\"";"\"ZDC Coding VW 2000\"";}"Const";}
 VarDef{"CStat_ZDC_Anpasung_2000";
  LangName{"CStat_ZDC_Anpasung_2000";"CStat_ZDC_Anpasung_2000";}"Var";"STATTXT";
  LangDesc{"";"";}
  LangText{"\"ZDC Anpasung KW2000\"";"\"ZDC\xC6\xA5\xC5\xE4KW2000\"";"\"ZDC Anpasung KW2000\"";}"Const";}
 VarDef{"CStat_ZDC_ProgramL_2000";
  LangName{"CStat_ZDC_ProgramL_2000";"CStat_ZDC_ProgramL_2000";}"Var";"STATTXT";
  LangDesc{"";"";}
  LangText{"\"ZDC programming KW2000\"";"\"ZDC\xB1\xE0\xB3\xCCKW2000\"";"\"ZDC programming KW2000\"";}"Const";}
 VarDef{"VCIKanal1";
  LangName{"VCIKanal1";"VCIKanal1";}"Var";"VCIKANAL";
  LangDesc{"";"";}"-1";}
 VarDef{"VCI_Typ_VCI5";
  LangName{"VCI_Typ_VCI5";"VCI_Typ_VCI5";}"Var";"VCITYP";
  LangDesc{"";"";}"1";"Const";}
 VarDef{"Prokoll_KWP2000_TP20";
  LangName{"Prokoll_KWP2000_TP20";"Prokoll_KWP2000_TP20";}"Var";"VCI_Protokoll";
  LangDesc{"";"";}"\"VW2000_TP20\"";"Const";}
 VarDef{"ECU_Gateway";
  LangName{"ECU_Gateway";"ECU_Gateway";}"Var";"ECU";
  LangDesc{"";"";}"\"Gateway\"";"Const";}
 VarDef{"CTimeout_00010";
  LangName{"CTimeout_00010";"CTimeout_00010";}"Var";"Timeout";
  LangDesc{"";"";}"10";"Const";}
 VarDef{"DLevel";
  LangName{"DLevel";"DLevel";}"Var";"DebugLevel";
  LangDesc{"";"";}"0";}
 VarDef{"SemaCanTP20";
  LangName{"SemaCanTP20";"SemaCanTP20";}"Var";"PAR_HNDL";
  LangDesc{"";"";}"";"Shared";}
 VarDef{"CStatKommunikationGateway_24413";
  LangName{"CStatKommunikationGateway_24413";"CStatKommunikationGateway_24413";}"Var";"STATTXT";
  LangDesc{"";"";}
  LangText{"\"Kommunikation Gateway\"";"\"\xBA\xF4\xBD\xD0\xCD\xF8\xB9\xD8\"";"\"Communicate to Gateway\"";}"Const";}
 VarDef{"CTime01";
  LangName{"CTime01";"CTime01";}"Var";"Timeout";
  LangDesc{"1 Sekunde";"1 second";}"1";"Const";}
 VarDef{"VW_Stg_ID";
  LangName{"VW_Stg_ID";"VW_Stg_ID";}"Var";"VW_Result_Tel";
  LangDesc{"VW Ergebnis ID-Lesen";"VW result ID read";}"\"\"";}
 VarDef{"ID_lesen";
  LangName{"ID_lesen";"ID_lesen";}"Var";"STATTXT";
  LangDesc{"";"";}
  LangText{"\"ID_lesen\"";"\"\xB6\xC1\xC1\xE3\xBC\xFE\xBA\xC5\"";"\"Read ID\"";}"Const";}
 VarDef{"erste_ID";
  LangName{"erste_ID";"erste_ID";}"Var";"ID_Nummern";
  LangDesc{"";"";}"1";"Const";}
 VarDef{"LIN_Subsystem";
  LangName{"LIN_Subsystem";"LIN_Subsystem";}"Var";"VW_Subsystem";
  LangDesc{"";"";}"";}
 VarDef{"DTNR";
  LangName{"DTNR";"DTNR";}"Var";"StgTNr";
  LangDesc{"";"";}"\"\"";}
 VarDef{"CStatTeilenummerGateway";
  LangName{"CStatTeilenummerGateway";"CStatTeilenummerGateway";}"Var";"STATTXT";
  LangDesc{"";"";}
  LangText{"\"Teilenummer Gateway\"";"\"\xCD\xF8\xB9\xD8\xC1\xE3\xBC\xFE\xBA\xC5\"";"\"Part number Gateway\"";}"Const";}
 VarDef{"Nein";
  LangName{"Nein";"Nein";}"Var";"ZUSTAND";
  LangDesc{"";"";}"0";"Const";}
 VarDef{"CTime_1";
  LangName{"CTime_1";"CTime_1";}"Var";"Time";
  LangDesc{"1 Sekunde";"";}"1";"Const";}
 VarDef{"VW_Master";
  LangName{"VW_Master";"VW_Master";}"Var";"VW_Subsystem";
  LangDesc{"";"";}"0x03";"Const";}
 VarDef{"CStatCodierungGateway";
  LangName{"CStatCodierungGateway";"CStatCodierungGateway";}"Var";"STATTXT";
  LangDesc{"";"";}
  LangText{"\"Codierung lesen Gateway\"";"\"\xB6\xC1\xCD\xF8\xB9\xD8\xB1\xE0\xC2\xEB\"";"\"Read code gateway\"";}"Const";}
 VarDef{"ConstVar37666";
  LangName{"";"";}"Value";"STRING";
  LangDesc{"";"";}"\"\\x01\\x14\"";"Const";}
 VarDef{"DLangCodierung";
  LangName{"DLangCodierung";"DLangCodierung";}"Var";"STRING";
  LangDesc{"";"";}"\"\"";}
 VarDef{"DInt";
  LangName{"DInt";"DInt";}"Var";"INT";
  LangDesc{"";"";}"";}
 VarDef{"VW_Stg_ID_91";
  LangName{"VW_Stg_ID_91";"VW_Stg_ID_91";}"Var";"VW_Result_Tel";
  LangDesc{"";"";}"\"\"";}
 VarDef{"DSTGHWIdString";
  LangName{"DSTGHWIdString";"DSTGHWIdString";}"Var";"StgHWTNR";
  LangDesc{"";"";}"\"\"";}
 VarDef{"Gateway_0";
  LangName{"Gateway_0";"Gateway_0";}"Var";"BgrNr";
  LangDesc{"Hersteller -Kennzeichen, -Datum, -Pr\xFCfstandNr";"";}"\"K19\"";}
 VarDef{"CInt3";
  LangName{"CInt3";"CInt3";}"Var";"INT";
  LangDesc{"";"";}"3";"Const";}
 VarDef{"CLogFalsch";
  LangName{"CLogFalsch";"CLogFalsch";}"Var";"Bool";
  LangDesc{"Logisch falsch";"Logisch falsch";}"0";"Const";}
 VarDef{"DHerstellerAenderungsdatum";
  LangName{"DHerstellerAenderungsdatum";"DHerstellerAenderungsdatum";}"Var";"Baugruppenstring";
  LangDesc{"";"";}"\"\"";}
 VarDef{"CStatTxt_Gateway_BG_0";
  LangName{"CStatTxt_Gateway_BG_0";"CStatTxt_Gateway_BG_0";}"Var";"STATTXT";
  LangDesc{"";"";}
  LangText{"\"Gateway BG Typ 0\"";"\"Gateway BG Typ 0\"";"\"Gateway BG Typ 0\"";}"Const";}
 VarDef{"Gateway_1";
  LangName{"Gateway_1";"Gateway_1";}"Var";"BgrNr";
  LangDesc{"HW Teilenummer und Version";"";}"\"389\"";"Const";}
 VarDef{"CStatTxt_Gateway_BG_1";
  LangName{"CStatTxt_Gateway_BG_1";"CStatTxt_Gateway_BG_1";}"Var";"STATTXT";
  LangDesc{"";"";}
  LangText{"\"Gateway BG Typ 1\"";"\"Gateway BG Typ 1\"";"\"Gateway BG Typ 1\"";}"Const";}
 VarDef{"Gateway_2";
  LangName{"Gateway_2";"Gateway_2";}"Var";"BgrNr";
  LangDesc{"SW Teilenummer und Version";"";}"\"431\"";"Const";}
 VarDef{"CStatTxt_Gateway_BG_2";
  LangName{"CStatTxt_Gateway_BG_2";"CStatTxt_Gateway_BG_2";}"Var";"STATTXT";
  LangDesc{"";"";}
  LangText{"\"Gateway BG Typ 2\"";"\"Gateway BG Typ 2\"";"\"Gateway BG Typ 2\"";}"Const";}
 VarDef{"ConstVar32791";
  LangName{"";"";}"Value";"STRING";
  LangDesc{"";"";}"\"665\"";"Const";}
 VarDef{"ConstVar32792";
  LangName{"";"";}"Value";"STRING";
  LangDesc{"";"";}"\"067\"";"Const";}
 VarDef{"ConstVar32793";
  LangName{"";"";}"Value";"STRING";
  LangDesc{"";"";}"\"068\"";"Const";}
 VarDef{"FZD";
  LangName{"FZD";"FZD";}"Var";"FZD";
  LangDesc{"";"";}"";"Shared";"Always";}
 VarDef{"CInt1000";
  LangName{"CInt1000";"CInt1000";}"Var";"INT";
  LangDesc{"";"";}"1000";"Const";}
 VarDef{"CStatTxt_Gateway_BG_3";
  LangName{"CStatTxt_Gateway_BG_3";"CStatTxt_Gateway_BG_3";}"Var";"STATTXT";
  LangDesc{"";"";}
  LangText{"\"Gateway BG Typ 3\"";"\"Gateway BG Typ 3\"";"\"Gateway BG Typ 3\"";}"Const";}
 VarDef{"VW_FSP_Result";
  LangName{"VW_FSP_Result";"VW_FSP_Result";}"Var";"VW_Result_Tel";
  LangDesc{"VW Ergebnis FSP-Lesen";"VW result on fault memory read";}"\"\"";}
 VarDef{"VW_Codes_FSP_Lesen";
  LangName{"VW_Codes_FSP_Lesen";"VW_Codes_FSP_Lesen";}"Var";"VW_Codes";
  LangDesc{"";"";}"-1";"Shared";}
 VarDef{"CStatTxtFspGateway";
  LangName{"CStatTxtFspGateway";"CStatTxtFspGateway";}"Var";"STATTXT";
  LangDesc{"";"";}
  LangText{"\"FSP Gateway\"";"\"\xCD\xF8\xB9\xD8\xB9\xCA\xD5\xCF\xC2\xEB\"";"\"DTC Gateway\"";}"Const";}
 VarDef{"Ja";
  LangName{"Ja";"Ja";}"Var";"ZUSTAND";
  LangDesc{"";"";}"1";"Const";}
 VarDef{"CTime_0";
  LangName{"CTime_0";"CTime_0";}"Var";"Time";
  LangDesc{"";"";}"0";"Const";}
 VarDef{"OK";
  LangName{"OK";"OK";}"Var";"ERROR";
  LangDesc{"OK-Ergebnis";"OK result";}"0";"Shared";"Always";"Const";}
 VarDef{"LAS_WFS3Gen_3_Schluessel1";
  LangName{"LAS_WFS3Gen_3_Schluessel1";"LAS_WFS3Gen_3_Schluessel1";}"Var";"LAS";
  LangDesc{"WFS3Gen nicht 3 Schluessel";"WFS3Gen not 3 Key";}"\"-$4K3\"";"Const";}
 VarDef{"CText_Info_TestBlockIncomplete";
  LangName{"CText_Info_TestBlockIncomplete";"CText_Info_TestBlockIncomplete";}"Var";"TEXT";
  LangDesc{"";"";}
  LangText{"\"Pruefblock unvollstaendig\"";"\"\xB2\xE2\xCA\xD4\xCE\xB4\xCD\xEA\xB3\xC9\"";"\"Test block incomplete\"";}"Const";}
 VarDef{"CText_Info_Codefile_Gateway";
  LangName{"CText_Info_Codefile_Gateway";"CText_Info_Codefile_Gateway";}"Var";"TEXT";
  LangDesc{"";"";}
  LangText{"\"Codefile Gateway\"";"\"Gateway\xB1\xE0\xC2\xEB\xCE\xC4\xBC\xFE\"";"\"Codefile Gateway\"";}"Const";}
 VarDef{"C19_Gateway";
  LangName{"C19_Gateway";"C19_Gateway";}"Var";"STG_Nr_Liste";
  LangDesc{"Gateway";"Gateway";}"\"19\"";"Const";}
 VarDef{"Gateway_ID_1_Result";
  LangName{"Gateway_ID_1_Result";"Gateway_ID_1_Result";}"Var";"Codefile_Result_Str";
  LangDesc{"";"";}"\"\"";}
 VarDef{"Gateway_ID_2_Result";
  LangName{"Gateway_ID_2_Result";"Gateway_ID_2_Result";}"Var";"Codefile_Result_Str";
  LangDesc{"";"";}"\"\"";}
 VarDef{"Gateway_ID_3_Result";
  LangName{"Gateway_ID_3_Result";"Gateway_ID_3_Result";}"Var";"Codefile_Result_Str";
  LangDesc{"";"";}"\"\"";}
 VarDef{"Gateway_ID_4_Result";
  LangName{"Gateway_ID_4_Result";"Gateway_ID_4_Result";}"Var";"Codefile_Result_Str";
  LangDesc{"";"";}"\"\"";}
 VarDef{"Gateway_ID_5_Result";
  LangName{"Gateway_ID_5_Result";"Gateway_ID_5_Result";}"Var";"Codefile_Result_Str";
  LangDesc{"";"";}"\"\"";}
 VarDef{"Gateway_ID_6_Result";
  LangName{"Gateway_ID_6_Result";"Gateway_ID_6_Result";}"Var";"Codefile_Result_Str";
  LangDesc{"";"";}"\"\"";}
 VarDef{"Gateway_ID_7_Result";
  LangName{"Gateway_ID_7_Result";"Gateway_ID_7_Result";}"Var";"Codefile_Result_Str";
  LangDesc{"";"";}"\"\"";}
 VarDef{"Gateway_Coding_Result";
  LangName{"Gateway_Coding_Result";"Gateway_Coding_Result";}"Var";"Codefile_Result_Int";
  LangDesc{"";"";}"-1";"Shared";}
 VarDef{"Gateway_Coding_Style";
  LangName{"Gateway_Coding_Style";"Gateway_Coding_Style";}"Var";"Codefile_Result_Int";
  LangDesc{"";"";}"-1";}
 VarDef{"Gateway_Login_1";
  LangName{"Gateway_Login_1";"Gateway_Login_1";}"Var";"Codefile_Result_Int";
  LangDesc{"";"";}"-1";}
 VarDef{"Gateway_Login_2";
  LangName{"Gateway_Login_2";"Gateway_Login_2";}"Var";"Codefile_Result_Int";
  LangDesc{"";"";}"-1";}
 VarDef{"Gateway_Quantity_ECU";
  LangName{"Gateway_Quantity_ECU";"Gateway_Quantity_ECU";}"Var";"Codefile_Result_Int";
  LangDesc{"";"";}"-1";}
 VarDef{"Gateway_Adaptation_String";
  LangName{"Gateway_Adaptation_String";"Gateway_Adaptation_String";}"Var";"Codefile_Result_Str";
  LangDesc{"";"";}"\"\"";}
 VarDef{"Gateway_State";
  LangName{"Gateway_State";"Gateway_State";}"Var";"Codefile_Result_Int";
  LangDesc{"";"";}"-2";}
 VarDef{"Gateway_Selection";
  LangName{"Gateway_Selection";"Gateway_Selection";}"Var";"Codefile_Result_Str";
  LangDesc{"";"";}"\"\"";}
 VarDef{"Gateway_Container_Name";
  LangName{"Gateway_Container_Name";"Gateway_Container_Name";}"Var";"XMLFILE";
  LangDesc{"";"";}"\"\"";}
 VarDef{"Gateway_Container_Version";
  LangName{"Gateway_Container_Version";"Gateway_Container_Version";}"Var";"XMLVERSION";
  LangDesc{"Container Version Bordnetz STG";"";}"\"\"";}
 VarDef{"Gateway_ID_Expression_Result";
  LangName{"Gateway_ID_Expression_Result";"Gateway_ID_Expression_Result";}"Var";"Codefile_Result_Str";
  LangDesc{"";"";}"\"\"";}
 VarDef{"Gateway_HWBgp";
  LangName{"Gateway_HWBgp";"Gateway_HWBgp";}"Var";"Codefile_Result_Str";
  LangDesc{"";"";}"\"\"";}
 VarDef{"Gateway_SWBgp";
  LangName{"Gateway_SWBgp";"Gateway_SWBgp";}"Var";"Codefile_Result_Str";
  LangDesc{"";"";}"\"\"";}
 VarDef{"Gateway_RawPartNumber";
  LangName{"Gateway_RawPartNumber";"Gateway_RawPartNumber";}"Var";"Codefile_Result_Str";
  LangDesc{"";"";}"\"\"";}
 VarDef{"CTime10";
  LangName{"CTime10";"CTime10";}"Var";"Timeout";
  LangDesc{"Timeout-Wert fuer 10 s";"Timeout value for 10 s";}"10";"Const";}
 VarDef{"CInt_DebugLevel_02";
  LangName{"CInt_DebugLevel_02";"CInt_DebugLevel_02";}"Var";"DebugLevel";
  LangDesc{"2 - Statistik ueber IR-Bloecke bilden";"2 - Statistik ueber IR-Bloecke bilden";}"2";"Const";}
 VarDef{"Dummy_Container_Name";
  LangName{"Dummy_Container_Name";"Dummy_Container_Name";}"Var";"XMLFILE";
  LangDesc{"";"";}"\"\"";}
 VarDef{"Dummy_Container_Version";
  LangName{"Dummy_Container_Version";"Dummy_Container_Version";}"Var";"XMLVERSION";
  LangDesc{"";"";}"\"\"";}
 VarDef{"CInt_DebugLevel_00";
  LangName{"CInt_DebugLevel_00";"CInt_DebugLevel_00";}"Var";"DebugLevel";
  LangDesc{"0 - No tracing";"0 - No tracing";}"0";}
 VarDef{"CText_Info_Codefile_Selection";
  LangName{"CText_Info_Codefile_Selection";"CText_Info_Codefile_Selection";}"Var";"TEXT";
  LangDesc{"";"";}
  LangText{"\"Codefileauswahl\"";"\"\xB1\xE0\xC2\xEB\xCE\xC4\xBC\xFE\xD1\xA1\xD4\xF1\"";"\"Codefile selection\"";}"Const";}
 VarDef{"CStr_ZDC_Modus_All";
  LangName{"CStr_ZDC_Modus_All";"CStr_ZDC_Modus_All";}"Var";"ZDC_MODUSTEIL";
  LangDesc{"";"";}"\"\"";"Const";}
 VarDef{"CZDCModus_K1";
  LangName{"CZDCModus_K1";"CZDCModus_K1";}"Var";"ZDC_MODUSTEIL";
  LangDesc{"";"";}"\"K1\"";"Const";}
 VarDef{"Gateway_ZDC_Calibration_String_1";
  LangName{"Gateway_ZDC_Calibration_String_1";"Gateway_ZDC_Calibration_String_1";}"Var";"Codefile_Result_Str";
  LangDesc{"";"";}"\"\"";}
 VarDef{"LAS_not_GP1";
  LangName{"LAS_not_GP1";"LAS_not_GP1";}"Var";"LAS";
  LangDesc{"";"";}"\"-$GP1\"";"Const";}
 VarDef{"ConstVar46968";
  LangName{"";"";}"Value";"STRING";
  LangDesc{"";"";}"\"PKZZ_K1\"";"Const";}
 VarDef{"LAS_GP1";
  LangName{"LAS_GP1";"LAS_GP1";}"Var";"LAS";
  LangDesc{"";"";}"\"$GP1\"";"Const";}
 VarDef{"CZDCModus_K2";
  LangName{"CZDCModus_K2";"CZDCModus_K2";}"Var";"ZDC_MODUSTEIL";
  LangDesc{"";"CZDCModus_K2";}"\"K2\"";"Const";}
 VarDef{"Gateway_ZDC_Calibration_String_2";
  LangName{"Gateway_ZDC_Calibration_String_2";"Gateway_ZDC_Calibration_String_2";}"Var";"Codefile_Result_Str";
  LangDesc{"";"";}"\"\"";}
 VarDef{"ConstVar46969";
  LangName{"";"";}"Value";"STRING";
  LangDesc{"";"";}"\"PKZZ_K2\"";"Const";}
 VarDef{"CNullPosition";
  LangName{"CNullPosition";"CNullPosition";}"Var";"INT";
  LangDesc{"";"";}"0";"Const";}
 VarDef{"ConstVar44293";
  LangName{"";"";}"Value";"STRING";
  LangDesc{"";"";}"\"### Gateway Container Name\"";"Const";}
 VarDef{"ConstVar44294";
  LangName{"";"";}"Value";"STRING";
  LangDesc{"";"";}"\"### Gateway Container Version\"";"Const";}
 VarDef{"CLID_VW_SparePartNumber";
  LangName{"CLID_VW_SparePartNumber";"CLID_VW_SparePartNumber";}"Var";"VW_Send_LID_ASCII_String";
  LangDesc{"";"";}"0xF187";"Const";}
 VarDef{"DStr_Gateway_Spare_PartNo";
  LangName{"DStr_Gateway_Spare_PartNo";"DStr_Gateway_Spare_PartNo";}"Var";"StgTNr";
  LangDesc{"";"";}"\"\"";}
 VarDef{"DLID";
  LangName{"DLID";"DLID";}"Var";"VW_Result_Tel";
  LangDesc{"";"";}"\"\"";}
 VarDef{"DVW_ASCII_String";
  LangName{"DVW_ASCII_String";"DVW_ASCII_String";}"Var";"VW_ASCII_String";
  LangDesc{"";"";}"\"\"";}
 VarDef{"ConstVar44303";
  LangName{"";"";}"Value";"STRING";
  LangDesc{"";"";}"\"### Gateway Spare PartNo\"";"Const";}
 VarDef{"ConstVar44786";
  LangName{"";"";}"Value";"STRING";
  LangDesc{"";"";}"\"\\h20\"";"Const";}
 VarDef{"DVWSparePartNumber";
  LangName{"DVWSparePartNumber";"DVWSparePartNumber";}"Var";"VW_Result_Tel";
  LangDesc{"";"";}"\"\"";}
 VarDef{"Dummy_ID_Expression_Result";
  LangName{"Dummy_ID_Expression_Result";"Dummy_ID_Expression_Result";}"Var";"Codefile_Result_Str";
  LangDesc{"";"";}"\"\"";}
 VarDef{"CLID_VW_HW_Ref_PartNo";
  LangName{"CLID_VW_HW_Ref_PartNo";"CLID_VW_HW_Ref_PartNo";}"Var";"VW_Send_LID_ASCII_String";
  LangDesc{"";"";}"0xF191";"Const";}
 VarDef{"DStr_Gateway_HW_Ref_PartNo";
  LangName{"DStr_Gateway_HW_Ref_PartNo";"DStr_Gateway_HW_Ref_PartNo";}"Var";"StgTNr";
  LangDesc{"";"";}"\"\"";}
 VarDef{"CStat_HW_Ref_PartNo_Gateway_test";
  LangName{"CStat_HW_Ref_PartNo_Gateway_test";"CStat_HW_Ref_PartNo_Gateway_test";}"Var";"STATTXT";
  LangDesc{"";"";}
  LangText{"\"HW Reference PartNo. Gateway test\"";"\"\xCD\xF8\xB9\xD8\xD3\xB2\xBC\xFE\xC1\xE3\xBC\xFE\xBA\xC5\xBC\xEC\xB2\xE2\"";"\"HW Reference PartNo. Gateway test\"";}"Const";}
 VarDef{"ConstVar44309";
  LangName{"";"";}"Value";"STRING";
  LangDesc{"";"";}"\"### Gateway HW_Ref PartNo\"";"Const";}
 VarDef{"CLID_VW_HW_Version_Number";
  LangName{"CLID_VW_HW_Version_Number";"CLID_VW_HW_Version_Number";}"Var";"VW_Send_LID_ASCII_String";
  LangDesc{"";"";}"0xF1A3";"Const";}
 VarDef{"DStr_Gateway_HW_Version";
  LangName{"DStr_Gateway_HW_Version";"DStr_Gateway_HW_Version";}"Var";"STG_Datenstand";
  LangDesc{"";"";}"\"\"";}
 VarDef{"ConstVar44312";
  LangName{"";"";}"Value";"STRING";
  LangDesc{"";"";}"\"### Gateway HW Version\"";"Const";}
 VarDef{"CLID_VW_SW_Version_Number";
  LangName{"CLID_VW_SW_Version_Number";"CLID_VW_SW_Version_Number";}"Var";"VW_Send_LID_ASCII_String";
  LangDesc{"";"";}"0xF189";"Const";}
 VarDef{"DStr_Gateway_SW_Version";
  LangName{"DStr_Gateway_SW_Version";"DStr_Gateway_SW_Version";}"Var";"STG_Datenstand";
  LangDesc{"";"";}"\"\"";}
 VarDef{"ConstVar44315";
  LangName{"";"";}"Value";"STRING";
  LangDesc{"";"";}"\"### Gateway SW Version\"";"Const";}
 VarDef{"CStat_HW_Version_Gateway_test";
  LangName{"CStat_HW_Version_Gateway_test";"CStat_HW_Version_Gateway_test";}"Var";"STATTXT";
  LangDesc{"";"";}
  LangText{"\"HW Version Gateway test\"";"\"\xCD\xF8\xB9\xD8\xD3\xB2\xBC\xFE\xB0\xE6\xB1\xBE\xBC\xEC\xB2\xE2\"";"\"HW Version Gateway test\"";}"Const";}
 VarDef{"CStat_SW_Version_Gateway_test";
  LangName{"CStat_SW_Version_Gateway_test";"CStat_SW_Version_Gateway_test";}"Var";"STATTXT";
  LangDesc{"";"";}
  LangText{"\"SW Version Gateway test\"";"\"Gateway\xC8\xED\xBC\xFE\xB0\xE6\xB1\xBE \xBC\xEC\xB2\xE2\"";"\"SW Version Gateway test\"";}"Const";}
 VarDef{"CDialogZeile2";
  LangName{"CDialogZeile2";"CDialogZeile2";}"Var";"DialogLine";
  LangDesc{"";"";}"2";"Const";}
 VarDef{"CText_Info_Read_Configuration_string";
  LangName{"CText_Info_Read_Configuration_string";"CText_Info_Read_Configuration_string";}"Var";"TEXT";
  LangDesc{"";"";}
  LangText{"\"Read configuration string\"";"\"\xB6\xC1\xC8\xA1\xC5\xE4\xD6\xC3\"";"\"Read configuration string\"";}"Const";}
 VarDef{"CLID_04A3_Gateway_configuration";
  LangName{"CLID_04A3_Gateway_configuration";"CLID_04A3_Gateway_configuration";}"Var";"VW_LID";
  LangDesc{"";"";}"\"\\h04A3\"";"Const";}
 VarDef{"DStr_Variant_Coding";
  LangName{"DStr_Variant_Coding";"DStr_Variant_Coding";}"Var";"STG_Datenstand";
  LangDesc{"";"";}"\"\"";}
 VarDef{"CLID_0600_VWCodingValue";
  LangName{"CLID_0600_VWCodingValue";"CLID_0600_VWCodingValue";}"Var";"VW_LID";
  LangDesc{"";"";}"\"\\h0600\"";"Const";}
 VarDef{"ConstVar44322";
  LangName{"";"";}"Value";"STRING";
  LangDesc{"";"";}"\"### Gateway_variant_Coding\"";"Const";}
 VarDef{"Gateway_ZDC_Calibration_String";
  LangName{"Gateway_ZDC_Calibration_String";"Gateway_ZDC_Calibration_String";}"Var";"Codefile_Result_Str";
  LangDesc{"";"";}"\"\"";}
 VarDef{"ConstVar44324";
  LangName{"";"";}"Value";"STRING";
  LangDesc{"";"";}"\"### Gateway_ZDC_Calibration_String\"";"Const";}
 VarDef{"VW_DTC_Result";
  LangName{"VW_DTC_Result";"VW_DTC_Result";}"Var";"VW_Result_Tel";
  LangDesc{"VW Ergebnis FSP-Lesen";"VW result on fault memory read";}"\"\"";}
 VarDef{"VW_Codes_DTC_Read";
  LangName{"VW_Codes_DTC_Read";"VW_Codes_DTC_Read";}"Var";"VW_Codes";
  LangDesc{"";"";}"-1";}
 VarDef{"CStr_DTC_Filter_template";
  LangName{"CStr_DTC_Filter_template";"CStr_DTC_Filter_template";}"Var";"VW_Fehler_Filter";
  LangDesc{"";"";}"\"\"";"Const";}
 VarDef{"CText_Info_TestBlockComplete";
  LangName{"CText_Info_TestBlockComplete";"CText_Info_TestBlockComplete";}"Var";"TEXT";
  LangDesc{"";"";}
  LangText{"\"Pruefblock vollstaendig\"";"\"\xB2\xE2\xCA\xD4\xCD\xEA\xB3\xC9\"";"\"Test block complete\"";}"Const";}
 VarDef{"DTimeF2";
  LangName{"DTimeF2";"DTimeF2";}"Var";"TimeF";
  LangDesc{"";"";}"";}
 VarDef{"CFloat0";
  LangName{"CFloat0";"CFloat0";}"Var";"FLOAT";
  LangDesc{"";"";}"0.0";"Const";}
 VarDef{"CFloat_3600";
  LangName{"CFloat_3600";"CFloat_3600";}"Var";"FLOAT";
  LangDesc{"";"";}"3600.0";"Const";}
 VarDef{"CStatTxt_a5_gateway_test";
  LangName{"CStatTxt_a5_gateway_test";"CStatTxt_a5_gateway_test";}"Var";"STATTXT";
  LangDesc{"";"";}
  LangText{"\"a5_gateway_test\"";"\"Gateway test \xBC\xEC\xB2\xE2\xCA\xB1\xBC\xE4\"";"\"Test time Gateway test\"";}"Const";}
 VarDef{"VW_Stg_ID_86";
  LangName{"VW_Stg_ID_86";"VW_Stg_ID_86";}"Var";"VW_Result_Tel";
  LangDesc{"";"";}"\"\"";}
 VarDef{"VW_Stg_Teil_ID";
  LangName{"VW_Stg_Teil_ID";"VW_Stg_Teil_ID";}"Var";"VW_Result_Tel";
  LangDesc{"";"";}"\"\"";}
 VarDef{"DVciResult";
  LangName{"DVciResult";"DVciResult";}"Var";"VCIResult";
  LangDesc{"VCI-Ergebnisdatenblock";"VCI result data block";}"\"\"";}
 VarDef{"CVciSTelNull";
  LangName{"CVciSTelNull";"CVciSTelNull";}"Var";"VCISendTel";
  LangDesc{"";"";}"\"\"";"Const";}
 VarDef{"CInt0";
  LangName{"CInt0";"CInt0";}"Var";"INT";
  LangDesc{"";"";}"0";"Const";}
 VarDef{"DLID1Result";
  LangName{"DLID1Result";"DLID1Result";}"Var";"VCIResult";
  LangDesc{"";"";}"\"\"";}
 VarDef{"DLIDResult2";
  LangName{"DLIDResult2";"DLIDResult2";}"Var";"VCIResult";
  LangDesc{"";"";}"\"\"";}
 VarDef{"DLID3Result";
  LangName{"DLID3Result";"DLID3Result";}"Var";"VCIResult";
  LangDesc{"";"";}"\"\"";}
 VarDef{"DLID4Result";
  LangName{"DLID4Result";"DLID4Result";}"Var";"VCIResult";
  LangDesc{"";"";}"\"\"";}
 VarDef{"DLID5Result";
  LangName{"DLID5Result";"DLID5Result";}"Var";"VCIResult";
  LangDesc{"";"";}"\"\"";}
 VarDef{"DLID6Result";
  LangName{"DLID6Result";"DLID6Result";}"Var";"VCIResult";
  LangDesc{"";"";}"\"\"";}
 VarDef{"DLID7Result";
  LangName{"DLID7Result";"DLID7Result";}"Var";"VCIResult";
  LangDesc{"";"";}"\"\"";}
 VarDef{"DLID8Result";
  LangName{"DLID8Result";"DLID8Result";}"Var";"VCIResult";
  LangDesc{"";"";}"\"\"";}}
ExportTags{}
NodeCategories{}
SequenceCategories{
 SequenceCategory{"sk316";"";}}
Library{
 FunctionDef{
  Name{"Sequences";}
  LangName{"Sequences";"Sequences";}
  Type{1;}
  Icon{8;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"no";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{0;1;"dsa-nj";}
   Version{0;1;"dsa-nj";"[ Baustein importiert (ersetzt) ]";"admin";"21.01.2005 11:57:13";}}
  FunctionDef{
   Name{"sk316_gateway_test_LibMain";}
   LangName{"sk316_gateway_test_LibMain";"sk316_gateway_test_LibMain";}
   Type{4;}
   Icon{5;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"no";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"sequence root for task sk316_gateway_test";"sequence root for task sk316_gateway_test";}
   Rights{"Write";"Read";}
   VersionInfo{}}}
 FunctionDef{
  Name{"Neu";}
  LangName{"Neu";"New";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"Strukturelement";"This branch of the library is used for temporary files from\r\nnew or imported library modules. It is a pure structuring\r\nlevel.";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;5;"nbmr";}
   Version{0;1;"d1";"- in Arbeit -";"admin";"07.04.2003 09:15:28";}
   Version{1;0;"lm_lap";"Info added";"lm";"19.02.2004 15:41:00";}
   Version{1;1;"lm_lap";"- in Arbeit -";"lm";"19.02.2004 15:41:21";}
   Version{1;2;"RHMPil";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"20.05.2005 17:15:46";}
   Version{1;3;"nbpj2";"[ Baustein importiert (ersetzt) ]";"pj";"08.06.2009 16:13:54";}
   Version{1;4;"nbpj2";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"13.11.2009 14:32:37";}
   Version{1;5;"nbmr";"[ Baustein importiert (ersetzt) ]";"dsa";"05.05.2010 12:44:41";}}}
 FunctionDef{
  Name{"DSA_Bibliothek";}
  LangName{"DSA_Bibliothek";"DSA_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;1;"AC";}
   Version{1;0;"AC";"- freigegeben -";"dsa-admin";"04.03.2003 11:44:35";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"admin";"03.07.2006 10:17:25";}}
  FunctionDef{
   Name{"Daten_Bearbeitung";}
   LangName{"DatenBearbeitung";"Data_Manipulation";}
   CvsVerHis{}
   Type{1;}
   Icon{0;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Sammlung von Bausteinen zur Bearbeitung von Variablen.";"Data editing arises very frequently. Calculations must be carried out, character strings\r\nmust be copied or separated out, parameters must be initialised...";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{0;1;"SVW";}
    Version{0;1;"SVW";"- in Arbeit -";"admin";"12.04.2004 19:29:41";}}
   FunctionDef{
    Name{"IntegerData";}
    LangName{"IntegerData";"IntegerData";}
    CvsVerHis{}
    Type{1;}
    Icon{0;}
    Properties{"Begin";}
    FormalParam{}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"";}
    NodeCategory{"";}
    Info{"Sammlung von Bausteinen zur Bearbeitung von ganzen Zahlen.";"";}
    Rights{"Write";"Read";}
    VersionInfo{
     CurVersion{0;5;"PAE";}
     Version{0;1;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"24.07.2006 17:06:11";}
     Version{0;2;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"25.07.2006 08:26:54";}
     Version{0;3;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"25.07.2006 08:31:26";}
     Version{0;4;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"25.07.2006 08:35:22";}
     Version{0;5;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"25.07.2006 08:36:15";}}
    FunctionDef{
     Name{"IntAssign";}
     LangName{"IntAssign";"IntAssign";}
     CvsVerHis{}
     Type{1;}
     Icon{0;}
     Properties{"Begin";}
     FormalParam{
      OutputParam{"Destination";
       LangName{"Destination";"Destination";}"INT";"";
       LangDesc{"";"";}}
      InputParam{"Value";
       LangName{"Value";"Value";}"INT";"";
       LangDesc{"";"";}}}
     LocalVar{}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     MSLCode{"  *Destination  = Value;";}
     NodeCategory{"";}
     Info{"Baustein zum Setzen einer Integer Variable.";"Component used to set a variable.";}
     Rights{"Write";"Read";}
     VersionInfo{
      CurVersion{0;3;"SVW";}
      Version{0;1;"RHM";"- in Arbeit -";"admin";"27.08.2002 09:12:36";}
      Version{0;2;"SVW";"- in Arbeit -";"admin";"12.04.2004 19:41:05";}
      Version{0;3;"SVW";"- in Arbeit -";"admin";"12.04.2004 22:07:06";}}}}}}
 FunctionDef{
  Name{"DSA_Bibliothek";}
  LangName{"DSA_Bibliothek";"DSA_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;1;"AC";}
   Version{1;0;"AC";"- freigegeben -";"dsa-admin";"04.03.2003 11:44:35";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"admin";"03.07.2006 10:17:25";}}
  FunctionDef{
   Name{"Zeitgeber";}
   LangName{"Zeitgeber";"Timer";}
   CvsVerHis{}
   Type{1;}
   Icon{0;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Sammlung von Bausteinen zur Zeit\xFCberwachung und zur Ausf\xFChrungsverz\xF6gerung.";"Collection of components used in relation to timeouts and\r\nprocessing delays.";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{0;1;"SVW";}
    Version{0;1;"SVW";"- in Arbeit -";"admin";"12.04.2004 21:35:52";}}
   FunctionDef{
    Name{"ZeitLesen";}
    LangName{"ZeitLesen";"Read_Time";}
    CvsVerHis{}
    Type{1;}
    Icon{0;}
    Properties{"Begin";}
    FormalParam{
     OutputParam{"ZeitPunkt";
      LangName{"ZeitPunkt";"ZeitPunkt";}"TimeF";"DTimeF";
      LangDesc{"";"Read the current time";}}}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{" *ZeitPunkt = clock ();";}
    NodeCategory{"";}
    Info{"Baustein zum lesen der Zeit. \r\n\r\nDie aktuelle Zeit kommt als Float zurueck.";"Element to read the time. \r\n\r\nThe actual time will be returned as Float.";}
    Rights{"Write";"Read";}
    VersionInfo{
     CurVersion{0;3;"SVW";}
     Version{0;1;"RHM";"- in Arbeit -";"admin";"27.08.2002 09:29:38";}
     Version{0;2;"SVW";"- in Arbeit -";"admin";"30.09.2003 15:30:40";}
     Version{0;3;"SVW";"- in Arbeit -";"admin";"17.12.2003 09:38:29";}}}}}
 FunctionDef{
  Name{"DSA_Bibliothek";}
  LangName{"DSA_Bibliothek";"DSA_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;1;"AC";}
   Version{1;0;"AC";"- freigegeben -";"dsa-admin";"04.03.2003 11:44:35";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"admin";"03.07.2006 10:17:25";}}
  FunctionDef{
   Name{"BenutzerSchnittstellen";}
   LangName{"BenutzerSchnittstellen";"UserInterface";}
   CvsVerHis{}
   Type{1;}
   Icon{2;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Sammlung von Bausteinen zur Benutzerschnittstelle";"Collection of components relating to the user interface.";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{1;2;"SVW";}
    Version{1;0;"AC";"- freigegeben -";"dsa-admin";"04.03.2003 11:34:14";}
    Version{1;1;"SVW";"- in Arbeit -";"admin";"12.04.2004 19:08:29";}
    Version{1;2;"SVW";"- in Arbeit -";"admin";"12.04.2004 21:13:06";}}
   FunctionDef{
    Name{"DlgInit";}
    LangName{"DlgInit";"DlgInit";}
    CvsVerHis{}
    Type{1;}
    Icon{2;}
    Properties{"Begin";}
    FormalParam{
     OutputParam{"DialogHndl";
      LangName{"DialogHndl";"DialogHndl";}"DialogTyp";"DIALOG_LOKAL";
      LangDesc{"Dialog handle";"Dialog handle";}}}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"err = _dlgInit (DialogHndl);\r\n";}
    NodeCategory{"";}
    Info{"Baustein zur Initialisierung der Benutzerschnittstelle";"Initialises the communication handle (must take place once before each dialogue operation)";}
    Rights{"Write";"Read";}
    VersionInfo{
     CurVersion{0;1;"SVW";}
     Version{0;1;"SVW";"- in Arbeit -";"admin";"12.04.2004 16:21:05";}}}}}
 FunctionDef{
  Name{"DSA_Bibliothek";}
  LangName{"DSA_Bibliothek";"DSA_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;1;"AC";}
   Version{1;0;"AC";"- freigegeben -";"dsa-admin";"04.03.2003 11:44:35";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"admin";"03.07.2006 10:17:25";}}
  FunctionDef{
   Name{"BenutzerSchnittstellen";}
   LangName{"BenutzerSchnittstellen";"UserInterface";}
   CvsVerHis{}
   Type{1;}
   Icon{2;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Sammlung von Bausteinen zur Benutzerschnittstelle";"Collection of components relating to the user interface.";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{1;2;"SVW";}
    Version{1;0;"AC";"- freigegeben -";"dsa-admin";"04.03.2003 11:34:14";}
    Version{1;1;"SVW";"- in Arbeit -";"admin";"12.04.2004 19:08:29";}
    Version{1;2;"SVW";"- in Arbeit -";"admin";"12.04.2004 21:13:06";}}
   FunctionDef{
    Name{"MultiDisplay";}
    LangName{"MultiDisplay";"MultiDisplay";}
    CvsVerHis{}
    Type{1;}
    Icon{0;}
    Properties{"Begin";}
    FormalParam{}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"";}
    NodeCategory{"";}
    Info{"Sammlung von Bausteinen der Benutzerschnittstelle zur zeilenorientierten Ausgabe (Multi-Display)";"The MultiDisplay functions operate somewhat differently from the MsgBox, ListBox, and Input functions.\r\nThese are displayed when called up, and are then hidden as soon as the user activates \"OK\" or \"Abort\".\r\nThe \"Multifunctional dialogue box\" is always shown (although it may be temporarily obscured, for example\r\nby a \"MsgBox\"). It has four lines which can be selected independently of one another.\r\nEach line may display a text, or a text and a Bitmap graphic, or a scale and a brief text.";}
    Rights{"Write";"Read";}
    VersionInfo{
     CurVersion{0;3;"SVW";}
     Version{0;1;"AC";"- in Arbeit -";"admin";"13.02.2003 14:26:51";}
     Version{0;2;"AC";"- in Arbeit -";"admin";"13.02.2003 14:26:59";}
     Version{0;3;"SVW";"- in Arbeit -";"admin";"12.04.2004 19:15:06";}}
    FunctionDef{
     Name{"DlgMultiInit";}
     LangName{"DlgMultiInit";"DlgMultiInit";}
     CvsVerHis{}
     Type{1;}
     Icon{2;}
     Properties{"Begin";}
     FormalParam{
      InputParam{"DialogHndl";
       LangName{"DialogHndl";"DialogHndl";}"DialogTyp";"DIALOG_LOKAL";
       LangDesc{"Dialog handle";"Dialog handle";}}
      InputParam{"Titel";
       LangName{"Titel";"Titel";}"TEXT";"CTextLeer";
       LangDesc{"Titelzeile";"General headline string";}}
      InputParam{"Schalter";
       LangName{"Schalter";"Schalter";}"DialogSchalter";"CDialogS_OK_ABBR";
       LangDesc{"Dialog-Schalter";"Dialog switch";}}}
     LocalVar{}
     Condition{"ever";"ok";"";}
     Evaluation{"no";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     MSLCode{"  err = _dlgMultiInit (DialogHndl, Titel, Schalter);\r\n";}
     NodeCategory{"";}
     Info{"Bausteinen zur Initialisierung der Anzeigeeinheit.";"Component for the initialisation of the display unit.\r\n\"Titel\" defines the first line\r\n\"Schalter\" defines the switch configuration (of the 2 switches)\r\nat the MFT.";}
     Rights{"Write";"Read";}
     VersionInfo{
      CurVersion{0;3;"SVW";}
      Version{0;1;"AC";"- in Arbeit -";"admin";"13.02.2003 14:26:41";}
      Version{0;2;"SVW";"- in Arbeit -";"admin";"12.04.2004 16:24:17";}
      Version{0;3;"SVW";"- in Arbeit -";"admin";"12.04.2004 21:14:42";}}}}}}
 FunctionDef{
  Name{"DSA_Bibliothek";}
  LangName{"DSA_Bibliothek";"DSA_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;1;"AC";}
   Version{1;0;"AC";"- freigegeben -";"dsa-admin";"04.03.2003 11:44:35";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"admin";"03.07.2006 10:17:25";}}
  FunctionDef{
   Name{"StatistikElemente";}
   LangName{"StatistikElemente";"StatisticElements";}
   CvsVerHis{}
   Type{1;}
   Icon{1;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Sammlung von Bausteinen zur Statistikdatengenerierung";"Collection of components relating to the generation of\r\nstatistical data.\r\n\r\nIt only makes sense to execute test sequences if there is some way of storing the results.\r\nThat is why PRODIS-OFFICE has built-in functions to gather and generate result data.\r\nOn the other hand, not all modules supply results which are relevant to the test sequence.\r\nFor example, a module which scans a measurement from a control unit should generate result data,\r\nbut a module which simply increases a loop counter should not provide such data.\r\nIt is the job of the person creating the test sequence to determine which modules generate result data.\r\nThe following sub-chapter addresses further aspects of result data generation.\r\n\r\n\r\nSome special modules must be included in the test sequence if any result data are to be generated.\r\nResult data are also known as \"statistical data\", since such data are used to generate statistical\r\nevaluations regarding the number of OK and NOK tests, or regarding the measurements ascertained.\r\n\r\n\r\nIt is also necessary that the DTM function be active, and that a valid communication handle exists\r\nfor the communication between the test sequence and the DTM.\r\nDuring execution of the StatisticResult module, the result data record is transferred to the DTM\r\nfor transmission to the host computer.";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{0;4;"SVW";}
    Version{0;1;"SVW";"- in Arbeit -";"admin";"12.04.2004 19:57:30";}
    Version{0;2;"SVW";"- in Arbeit -";"admin";"12.04.2004 19:58:34";}
    Version{0;3;"SVW";"- in Arbeit -";"admin";"12.04.2004 20:03:39";}
    Version{0;4;"SVW";"- in Arbeit -";"admin";"12.04.2004 21:43:02";}}
   FunctionDef{
    Name{"StatSetAsciiResult";}
    LangName{"StatSetAsciiResult";"StatSetAsciiResult_209565";}
    CvsVerHis{}
    Type{1;}
    Icon{1;}
    Properties{"Begin";}
    FormalParam{
     InputParam{"Error";
      LangName{"Error";"";}"ERROR";"";
      LangDesc{"Fehler fuer Statistikeintrag";"";}}
     InputParam{"StringWert";
      LangName{"StringWert";"";}"STRING";"DString";
      LangDesc{"";"";}}}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"if (Error == OK)\r\n  _statSetAsciiResult (Error, StringWert, FOK);\r\nelse\r\n  _statSetAsciiResult (Error, StringWert, FMWNOK);\r\n";}
    NodeCategory{"";}
    Info{"Baustein zum Schreiben von OK oder NOK in die Statistik. (S)";"";}
    Rights{"Write";"Read";}
    VersionInfo{
     CurVersion{0;3;"svw";}
     Version{0;1;"PAE";"[ Baustein importiert (neu) ]";"dsa-admin";"24.07.2006 17:06:12";}
     Version{0;2;"dsanbpj2";"[ Baustein importiert (neu) ]";"admin";"18.10.2006 13:19:09";}
     Version{0;3;"svw";"[ Baustein importiert (ersetzt) ]";"dsa";"05.07.2010 12:19:39";}}}}}
 FunctionDef{
  Name{"Basis_Bibliothek";}
  LangName{"Basis_Bibliothek";"Base_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;0;"AC";}
   Version{1;0;"AC";"- freigegeben -";"dsa-admin";"04.03.2003 11:44:35";}}
  FunctionDef{
   Name{"Daten_Pruefungen";}
   LangName{"DatenPruefungen";"Data_Examination";}
   CvsVerHis{}
   Type{1;}
   Icon{0;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Sammlung von Pruef-Bausteinen";"";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{0;5;"PAE";}
    Version{0;1;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"24.07.2006 17:06:11";}
    Version{0;2;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"25.07.2006 08:26:55";}
    Version{0;3;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"25.07.2006 08:31:27";}
    Version{0;4;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"25.07.2006 08:35:23";}
    Version{0;5;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"25.07.2006 08:36:16";}}
   FunctionDef{
    Name{"IntNeu";}
    LangName{"IntPrfg";"Integer_Examination";}
    CvsVerHis{}
    Type{1;}
    Icon{1;}
    Properties{"Begin";}
    FormalParam{}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"";}
    NodeCategory{"";}
    Info{"";"";}
    Rights{"Write";"Read";}
    VersionInfo{}
    FunctionDef{
     Name{"IWertVergleich";}
     LangName{"IWertVergleich";"IntValueComparison";}
     CvsVerHis{}
     Type{1;}
     Icon{1;}
     Properties{"Begin";}
     FormalParam{
      InputParam{"Istwert";
       LangName{"Istwert";"Istwert";}"INT";"";
       LangDesc{"Istwert";"Actual value";}}
      InputParam{"Sollwert";
       LangName{"Sollwert";"Sollwert";}"INT";"";
       LangDesc{"Sollwert";"Target value";}}}
     LocalVar{}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     MSLCode{"_statSetValue(sprintf(\"%d\",Sollwert));\r\n\r\nif (Istwert == Sollwert)\r\n  err = _statSetIntResult (OK, Istwert, FOK);\r\nelse\r\n  err = _statSetIntResult (NOK, Istwert, FMWNOK);\r\n";}
     NodeCategory{"";}
     Info{"Baustein zum Vergleich von zwei ganzen Zahlen auf Gleichheit. (S)";"Checks whether two whole number values are identical";}
     Rights{"Write";"Read";}
     VersionInfo{
      CurVersion{0;4;"SVW";}
      Version{0;1;"MOS";"- in Arbeit -";"dsa-admin";"30.04.2003 13:04:30";}
      Version{0;2;"SVW";"- in Arbeit -";"admin";"17.12.2003 09:46:02";}
      Version{0;3;"SVW";"- in Arbeit -";"admin";"17.12.2003 09:46:39";}
      Version{0;4;"SVW";"- in Arbeit -";"admin";"12.04.2004 19:53:23";}}}}}}
 FunctionDef{
  Name{"VW_spezifische_Bibliothek";}
  LangName{"VW_spezifische_Bibliothek";"VW_specific_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"Sammlung von Bausteinen zur Kommunikation mit Steuergeraeten von VW.";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;2;"ZPH18";}
   Version{1;0;"AC";"- freigegeben -";"vw-admin";"04.03.2003 11:56:19";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"07.08.2006 13:58:14";}
   Version{1;2;"ZPH18";"[ Baustein importiert (ersetzt) ]";"admin";"14.08.2007 15:07:01";}}
  FunctionDef{
   Name{"VW_Codefileauswahl";}
   LangName{"VW_Codefileauswahl";"VW_Codefileauswahl";}
   CvsVerHis{}
   Type{1;}
   Icon{0;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Platzhalter f\xFCr Pr\xFCfschritte";"";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{0;1;"PAE";}
    Version{0;1;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"24.07.2006 17:06:13";}}
   FunctionDef{
    Name{"Pfau_9_2_0";}
    LangName{"Pfau_9_2_0";"";}
    CvsVerHis{}
    Type{1;}
    Icon{0;}
    Properties{"Begin";}
    FormalParam{}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"";}
    NodeCategory{"";}
    Info{"";"";}
    Rights{"Write";"Read";}
    VersionInfo{
     CurVersion{0;1;"PAE";}
     Version{0;1;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"24.07.2006 17:06:13";}}
    FunctionDef{
     Name{"VW_Codefile_STG";}
     LangName{"VW_Codefile_STG";"VW_Codefile_STG";}
     CvsVerHis{}
     Type{1;}
     Icon{0;}
     Properties{"Begin";}
     FormalParam{
      InputParam{"DialogHndl";
       LangName{"DialogHndl";"DialogHndl";}"DialogTyp";"DIALOG_LOKAL";
       LangDesc{"Dialog handle";"Dialog handle";}}
      InputParam{"Zeile";
       LangName{"Zeile";"Zeile";}"DialogLine";"CDialog_Keine_Anzeige";
       LangDesc{"Ausgabezeile";"Output line";}}
      InputParam{"Text";
       LangName{"Text";"Text";}"TEXT";"CTextCodefileAuswahl";
       LangDesc{"Ausgabetext";"Output text";}}
      InputParam{"STG_Nr";
       LangName{"STG_Nr";"STG_Nr";}"STG_Nr_Liste";"Dummy";
       LangDesc{"Steuerger\xE4tenummer";"ECU address";}}
      OutputParam{"ID_Result1";
       LangName{"ID_Result1";"ID_Result1";}"Codefile_Result_Str";"Dummy_ID_1_Result";
       LangDesc{"ID-String";"1. ID string";}}
      OutputParam{"ID_Result2";
       LangName{"ID_Result2";"ID_Result2";}"Codefile_Result_Str";"Dummy_ID_2_Result";
       LangDesc{"ID-String";"2. ID string";}}
      OutputParam{"ID_Result3";
       LangName{"ID_Result3";"ID_Result3";}"Codefile_Result_Str";"Dummy_ID_3_Result";
       LangDesc{"ID-String";"3. ID string";}}
      OutputParam{"ID_Result4";
       LangName{"ID_Result4";"ID_Result4";}"Codefile_Result_Str";"Dummy_ID_4_Result";
       LangDesc{"ID-String";"4. ID string";}}
      OutputParam{"ID_Result5";
       LangName{"ID_Result5";"ID_Result5";}"Codefile_Result_Str";"Dummy_ID_5_Result";
       LangDesc{"ID-String";"5. ID string";}}
      OutputParam{"ID_Result6";
       LangName{"ID_Result6";"ID_Result6";}"Codefile_Result_Str";"Dummy_ID_6_Result";
       LangDesc{"ID-String";"6. ID string";}}
      OutputParam{"ID_Result7";
       LangName{"ID_Result7";"ID_Result7";}"Codefile_Result_Str";"Dummy_ID_7_Result";
       LangDesc{"ID-String";"7. ID string";}}
      OutputParam{"Codierung_Result";
       LangName{"Codierung_Result";"Codierung_Result";}"Codefile_Result_Int";"Dummy_Codierung_Result";
       LangDesc{"Codierung";"Short coding string";}}
      OutputParam{"LangCode_Result";
       LangName{"LangCode_Result";"LangCode_Result";}"Codefile_Result_Str";"Dummy_LongCode_Result";
       LangDesc{"Lange Codierung String";"Long coding string";}}
      OutputParam{"Codier_Art";
       LangName{"Codier_Art";"Codier_Art";}"Codefile_Result_Int";"Dummy_Codier_Art";
       LangDesc{"Art der Codierung 0 = kurze / 1 = lange ";"Coding style: 0=short / 1=long";}}
      OutputParam{"Login1_Result";
       LangName{"Login1_Result";"Login1_Result";}"Codefile_Result_Int";"Dummy_Login_1";
       LangDesc{"1. Login";"1. Login";}}
      OutputParam{"Login2_Result";
       LangName{"Login2_Result";"Login2_Result";}"Codefile_Result_Int";"Dummy_Login_2";
       LangDesc{"2. Login";"2. Login";}}
      OutputParam{"Anzahl_Stg";
       LangName{"Anzahl_Stg";"Anzahl_Stg";}"Codefile_Result_Int";"Dummy_Anzahl_Stg";
       LangDesc{"Anzahl der Stg im Fahrzeug";"Quantity of vehicle ECU's";}}
      OutputParam{"Anpassung_String";
       LangName{"Anpassung_String";"Anpassung_String";}"Codefile_Result_Str";"Dummy_Anpassung_String";
       LangDesc{"Anpassungsdaten";"Adaptation data";}}
      OutputParam{"Prog_String";
       LangName{"Prog_String";"Prog_String";}"Codefile_Result_Str";"Dummy_Prog_String";
       LangDesc{"zu programmierender String";"Programming string; 2-Byte address format";}}
      OutputParam{"ProgL_String";
       LangName{"ProgL_String";"ProgL_String";}"Codefile_Result_Str";"Dummy_ProgL_String";
       LangDesc{"zu programmierender String im 4 Byte Adress-Format";"Programming string; 4-Byte address format";}}
      OutputParam{"Result_Status";
       LangName{"Result_Status";"Result_Status";}"Codefile_Result_Int";"Dummy_Status";
       LangDesc{"Status Auswahl (-1= l\xE4uft 0=OK 1=NOK)";"State check: -1=still running; 0=OK; 1-NOK";}}
      OutputParam{"Result";
       LangName{"Result";"Result";}"Codefile_Result_Str";"Dummy_Result";
       LangDesc{"unformatierter ErgebnisString";"Unformated result string";}}
      OutputParam{"Auswahl_Ergebnis";
       LangName{"Auswahl_Ergebnis";"Auswahl_Ergebnis";}"Codefile_Result_Str";"Dummy_Auswahl";
       LangDesc{"Version/SatzNr/LAS";"Version/Record-No/LAS";}}
      OutputParam{"XmlContainer";
       LangName{"XmlContainer";"XmlContainer";}"XMLFILE";"DContainer_Name";
       LangDesc{"Name der XML-Datei";"Name of XML File";}}
      OutputParam{"XmlVersion";
       LangName{"XmlVersion";"XmlVersion";}"XMLVERSION";"DummyContainer_Version";
       LangDesc{"Version des XML-Datei z.B. 0151/0202";"Version dof XML-File ze.g. 0151/0202";}}
      OutputParam{"ID_Expression";
       LangName{"ID_Expression";"ID_Expression";}"Codefile_Result_Str";"Dummy_ID_Exp";
       LangDesc{"Logischer Ausdr\xFCck der IDs (FTN)";"Logical term of ID's (FTN)";}}
      OutputParam{"HWBgp";
       LangName{"HWBgp";"HWBgp";}"Codefile_Result_Str";"Dummy_HWBgp";
       LangDesc{"HW Baugruppe der verwendeten Zeile der FTab";"HW Baugruppe from FTab";}}
      OutputParam{"SWBgp";
       LangName{"SWBgp";"SWBgp";}"Codefile_Result_Str";"Dummy_SWBgp";
       LangDesc{"SW Baugruppe der verwendeten Zeile der FTab";"SW Baugruppe from Ftab";}}
      OutputParam{"Rohteilenummer";
       LangName{"Rohteilenummer";"Rohteilenummer";}"Codefile_Result_Str";"Dummy_Rohteilenummer";
       LangDesc{"Rohteilenummer: ID-Expression der FTab (optional)";"ID-Expression (raw) from FTab";}}}
     LocalVar{
      LocVarDef{"Fehler_0x1000";
       LangName{"Fehler_0x1000";"";}"Locvar";"TEXT";
       LangDesc{"";"";}
       LangText{"\"0x1000 Fehler oeffnen Dateien\"";"\"0x1000 \xCE\xC4\xBC\xFE\xB4\xF2\xBF\xAA\xCA\xA7\xB0\xDC\"";"\"0x1000 error opening files\"";}"Const";}
      LocVarDef{"Fehler_0x1001";
       LangName{"Fehler_0x1001";"";}"Locvar";"TEXT";
       LangDesc{"";"";}
       LangText{"\"0x1001 Fehler LAS Analyse\"";"\"0x1001 LAS\xB7\xD6\xCE\xF6\xCA\xA7\xB0\xDC\"";"\"0x1001 Error LAS analysis\"";}"Const";}
      LocVarDef{"Fehler_0x1002";
       LangName{"Fehler_0x1002";"";}"Locvar";"TEXT";
       LangDesc{"";"";}
       LangText{"\"0x1002 Fehler schliessen Dateien\"";"\"0x1002 \xCE\xC4\xBC\xFE\xB9\xD8\xB1\xD5\xCA\xA7\xB0\xDC\"";"\"0x1002 Error closing files\"";}"Const";}
      LocVarDef{"Fehler_0x1003";
       LangName{"Fehler_0x1003";"";}"Locvar";"TEXT";
       LangDesc{"";"";}
       LangText{"\"0x1003 Versionen unterschiedlich\"";"\"0x1003 \xB0\xE6\xB1\xBE\xB4\xED\xCE\xF3\"";"\"0x1003 Versions different\"";}"Const";}
      LocVarDef{"Fehler_0x1004";
       LangName{"Fehler_0x1004";"";}"Locvar";"TEXT";
       LangDesc{"";"";}
       LangText{"\"0x1004 Satzanzahl unterschiedlich\"";"\"0x1004 \xCE\xDE\xB2\xBB\xCD\xAC\xCC\xF5\xC4\xBF\"";"\"0x1004 No of entries different\"";}"Const";}
      LocVarDef{"Fehler_0x1005";
       LangName{"Fehler_0x1005";"";}"Locvar";"TEXT";
       LangDesc{"";"";}
       LangText{"\"0x1005 keinen Satz gefunden\"";"\"0x1005 \xCE\xB4\xD5\xD2\xB5\xBD\xC8\xCE\xBA\xCE\xCC\xF5\xC4\xBF\"";"\"0x1005 no entry found\"";}"Const";}
      LocVarDef{"Fehler_0x1006";
       LangName{"Fehler_0x1006";"";}"Locvar";"TEXT";
       LangDesc{"";"";}
       LangText{"\"0x1006 Satz nicht eindeutig\"";"\"0x1006 \xCC\xF5\xC4\xBF\xB2\xBB\xCF\xE0\xCD\xAC\"";"\"0x1006 entry not unique\"";}"Const";}
      LocVarDef{"Fehler_0x1007";
       LangName{"Fehler_0x1007";"";}"Locvar";"TEXT";
       LangDesc{"";"";}
       LangText{"\"0x1007 Daten nicht lesbar\"";"\"0x1007 \xCE\xDE\xB7\xA8\xB6\xC1\xCA\xFD\xBE\xDD\"";"\"0x1007 not able to read data \"";}"Const";}
      LocVarDef{"Fehler_0x1008";
       LangName{"Fehler_0x1008";"";}"Locvar";"TEXT";
       LangDesc{"";"";}
       LangText{"\"0x1008 Version nicht lesbar\"";"\"0x1008 \xCE\xDE\xB7\xA8\xB6\xC1\xB0\xE6\xB1\xBE\"";"\"0x1008 not able to read version\"";}"Const";}
      LocVarDef{"Fehler_0x1009";
       LangName{"Fehler_0x1009";"";}"Locvar";"TEXT";
       LangDesc{"";"";}
       LangText{"\"0x1009 LAS nicht lesbar\"";"\"0x1009 \xCE\xDE\xB7\xA8\xB6\xC1LAS\"";"\"0x1009 not able to read LAS\"";}"Const";}
      LocVarDef{"Fehler_0xxxxx";
       LangName{"Fehler_0xxxxx";"";}"Locvar";"TEXT";
       LangDesc{"";"";}
       LangText{"\"unbekannt Code\"";"\"\xC2\xEB\xCE\xDE\xB7\xA8\xCA\xB6\xB1\xF0\"";"\"unknown code\"";}"Const";}
      LocVarDef{"Fehler_FalscheVersion";
       LangName{"Fehler_FalscheVersion";"";}"Locvar";"TEXT";
       LangDesc{"";"";}
       LangText{"\"falsche Version (> 102)\"";"\"\xB0\xE6\xB1\xBE\xB4\xED\xCE\xF3 (>102)\"";"\"wrong version (> 102)\"";}"Const";}
      LocVarDef{"KommentarFehler";
       LangName{"KommentarFehler";"";}"Locvar";"TEXT";
       LangDesc{"";"";}
       LangText{"\"Fehler\"";"\"\xB4\xED\xCE\xF3\"";"\"Error\"";}"Const";}}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     MSLCode{"// sz  16.07.09 Erweiterung um \"spath\" fuer den Pfad im Ftab-Prozess bei neuem Datenkonzept (ODX Stufe 5 b)\r\n// sz  27.08.07 Erweiterung RTN (Rohteilenummer) / HW/SW Baugruppe als R?kgabewerte\r\n// sz  21.01.05 Bugfix: fehlende Initialisierung des Parameters XmlVersion\r\n// sz  08.06.04 Bugfix zum Bugfix: im Fehlerfall wird jetzt nicht mehr abgebrochen\r\n// sz  07.06.04 Bugfix zur Versionskennung der FTab und LAS-String in der Statistik\r\n// sz  28.04.04 Bugfix zur Inkompatibilitaet der Freigabetabelle *.txt mit mehr als 3 TNR (abschneiden der TNR 4 u. 5)\r\n// jk  11.09.03 Bugfix zur Erzeugung von Prog_String\r\n// sz, 03.09.03 Bugfix zur Erzeugung von Prog_String\r\n// cm, 13.08.03 Erweiterung um den Parameter ProgL_String / WinPfau mit 4 Byte Adr im ZDC 1.52\r\n// cm, 07.08.03 Erweiterung ZDC2.02\r\n// Nutzbar bis Winpfau 9.1.4 (Struktur 102)\r\n// sz, 24.03.03\r\n// jk, 09.04.03 geaedert, plus Anpassung_String\r\n//                        Prog_String, wenn nicht vorhanden Leer\r\n// sz, 16.04.03 kurze Codierung f? Zahlenbasis != 1\r\n// sz, 22.04.03 Bugfix, Anpassung  \r\n\r\nstring \tLasString;\r\nstring\tCodeString;\r\nstring\tTeilString;\r\nstring\tVerString;\r\nstring\tErrString;\r\nstring\tsCodewordInfo;\r\nstring\tTmpString;\r\nint\t_err;\r\nint\tStgArt;\r\nint\tVersion;\r\nint\tElementeAnzahl;\r\nint\txmlPathLen;\r\nint\tcodeLen;\r\nint\tiZahlenbasis;\r\nint\tPos;\r\nint     csf, noblk, iCodeCnt, iLogCnt, iLogin, iAnpCnt, iAnpKa, iAnpWert, iStgCnt;\r\nint\tlen;\r\nint\tipath = 0;\r\nstring\ttelname, tel, ftn, rtn;\r\nstring\tprogstr, codestr, anpstr;\r\nstring\tdelim = \"+\";\r\nstring\tspath = \"/data/sfd/ftab/\";\r\n\r\n*XmlContainer=\"\";\r\n*XmlVersion=\"\";\r\n*Result_Status = -1;\r\n*ID_Result1 = \"\";\r\n*ID_Result2 = \"\";\r\n*ID_Result3 = \"\";\r\n*ID_Result4 = \"\";\r\n*ID_Result5 = \"\";\r\n*ID_Result6 = \"\";\r\n*ID_Result7 = \"\";\r\n*Result\t= \"\";\r\n*Codier_Art = -1;\r\n*Codierung_Result = -1;\r\n*LangCode_Result = \"\";\r\n*Auswahl_Ergebnis = \"\";\r\n*Login1_Result = 0;\r\n*Login2_Result = -1;\r\n*Anpassung_String = \"\";\r\n*Prog_String = \"\";\r\n*ProgL_String = \"\";\r\n*Anzahl_Stg = 0;\r\n*ID_Expression = \"\";\r\n*HWBgp = \"\";\r\n*SWBgp = \"\";\r\n*Rohteilenummer = \"\";\r\n\r\nif (Zeile > 0)\r\n    _dlgMultiSetLine (DialogHndl, Zeile, Text);\r\n\r\n_err = codefileExecute (\"l\" + STG_Nr + \"tab\", \"codef\" + STG_Nr, \"codver\" + STG_Nr, &CodeString, &VerString, &LasString);\r\n\r\nif(_err == 0x1000)\r\n{\r\n    _err = codefileExecute (spath + \"l\" + STG_Nr + \"tab\", spath + \"codef\" + STG_Nr, spath + \"codver\" + STG_Nr, &CodeString, &VerString, &LasString);\r\n    if(_err != 0)\r\n    {\r\n\tErrString = sprintf(\"%s-0x%x\",\"unbekannter Code\",_err);\r\n    \terr = NOK;\r\n    }\r\n    else\r\n    {\r\n\tipath = 1;\r\n      ErrString = \"\";\r\n      err = OK;\r\n    }\r\n}\r\nelse\r\n{\r\n    ErrString = \"\";\r\n    err = OK;\r\n}\r\n\r\nswitch ( _err )\r\n{\r\ncase 0x1000 : \r\n\t{\r\n\t\tErrString = Fehler_0x1000;\r\n\t\terr = NOK;\r\n\t}\r\ncase 0x1001 : \r\n\t{\r\n\t\tErrString = Fehler_0x1001;\r\n\t\terr = NOK;\r\n\t}\r\ncase 0x1002 : \r\n\t{\r\n\t\tErrString = Fehler_0x1002;\r\n\t\terr = OK;\r\n\t}\r\ncase 0x1003 : \r\n\t{\r\n\t\tErrString = Fehler_0x1003;\r\n\t\terr = NOK;\r\n\t}\r\ncase 0x1004 : \r\n\t{\r\n\t\tErrString = Fehler_0x1004;\r\n\t\terr = NOK;\r\n\t}\r\ncase 0x1005 : \r\n\t{\r\n\t\tErrString = Fehler_0x1005;\r\n\t\terr = NOK;\r\n\t}\r\ncase 0x1006 : \r\n\t{\r\n\t\tErrString = Fehler_0x1006;\r\n\t\terr = NOK;\r\n\t}\r\ncase 0x1007 : \r\n\t{\r\n\t\tErrString = Fehler_0x1007;\r\n\t\terr = NOK;\r\n\t}\r\ncase 0x1008 : \r\n\t{\r\n\t\tErrString = Fehler_0x1008;\r\n\t\terr = OK;\r\n\t}\r\ncase 0x1009 : \r\n\t{\r\n\t\tErrString = Fehler_0x1009;\r\n\t\terr = NOK;\r\n\t}\r\n}\r\n\r\nif (!err)\r\n{\r\n    // Aufbereitung, wenn alles OK\r\n    VerString = tostr (VerString);\r\n    LasString = tostr (LasString); \r\n    *Result = CodeString;\r\n    Version = binstrtoi(midstr(CodeString,0,4));\r\n    if (Version == 0x43463230)\t// CF20\r\n    {\r\n\t// CSF-Format\r\n\terrDebug (2, midstr(CodeString, 0, 200));\r\n\tcsf = csfrdOpen (CodeString, &telname);\r\n\tif (csf < 0)\r\n\t    err = errFatal (NOK, \"wrong format\");\r\n\telse\r\n\t{\r\n\t    while (!err && csfrdGetTel (csf, &tel) == 0)\r\n\t    {\r\n//\t    \terrDebug (10, \"subtel=\", tel); // Debug cmcm\r\n\t    \terr = csfRead (tel, &telname);\r\n\t    \tif (!err)\r\n\t    \t{\r\n\t    \t    if (telname == \"ZDC\")\r\n\t    \t    {\r\n\t    \t      err = csfRead (tel, &telname, XmlVersion, XmlContainer);\r\n\t    \t      if (ipath)\r\n\t\t    \t      *XmlContainer = spath + *XmlContainer;\r\n\t    \t\terrDebug (11, \"xmlver=\", *XmlVersion, \" xmlfile=\", *XmlContainer);\r\n\t\t\tif (*XmlVersion == \"0152\")\r\n\t\t\t{\r\n\t\t\t    _err = _vwcodewExecuteEx (*XmlContainer, LangCode_Result, &sCodewordInfo, &iZahlenbasis);\r\n\t\t\t    if (_err == OK)\r\n\t\t\t\t{\r\n\t\t\t\t    if (iZahlenbasis != 1)\t// kurze Codierung\r\n\t\t\t\t    {\t\r\n\t\t\t\t\t*Codier_Art = 0;\r\n\t\t\t\t\terrDebug (13, hexstr (*LangCode_Result));\r\n\t\t\t\t\t*Codierung_Result = binstrtoi (*LangCode_Result);\r\n\t\t\t\t    }\r\n\t\t\t\t    else\t// lange Codierung\r\n\t\t\t\t    {\r\n\t\t\t\t\t*Codier_Art = 1;\r\n\t\t\t\t\t*LangCode_Result = midstr (*LangCode_Result, 1, -1);\r\n\t\t\t\t\terrDebug (14, hexstr (*LangCode_Result));\r\n\t\t\t\t    }\r\n\t\t\t\t    errDebug (12, sprintf (\"CWG: %s\", sCodewordInfo));\r\n\t\t             }\t\r\n\t\t\t     else errDebug (13, \"No CWG!\");\r\n\t\t\t}\r\n\t    \t    }\r\n\t    \t    else if (telname == \"FTN\")\r\n\t\t    {\r\n\t\t\terr = csfRead (tel, &telname, &ftn);\r\n\t\t\terrDebug (15, sprintf (\"FTN: %s\", ftn));\r\n\t\t\t*ID_Expression = ftn;\r\n   \t\t\tif (ftn [0] == '+')\r\n\t\t            ftn = midstr (ftn, 1, -1);\r\n\t\t\tif (strfind (ftn, \"/()\") < 0)\r\n\t    \t      {\r\n\t    \t            if (strtok (&ftn, ID_Result1, delim) >= 0)\r\n\t\t\t\t    *ID_Result1 = sprintf (\"%-12s\", *ID_Result1);\r\n\t    \t            if (strtok (&ftn, ID_Result2, delim) >= 0)\r\n\t\t\t\t    *ID_Result2 = sprintf (\"%-12s\", *ID_Result2);\r\n\t    \t            if (strtok (&ftn, ID_Result3, delim) >= 0)\r\n\t\t\t\t    *ID_Result3 = sprintf (\"%-12s\", *ID_Result3);\r\n\t    \t            if (strtok (&ftn, ID_Result4, delim) >= 0)\r\n\t\t\t\t    *ID_Result4 = sprintf (\"%-12s\", *ID_Result4);\r\n\t    \t            if (strtok (&ftn, ID_Result5, delim) >= 0)\r\n\t\t\t\t    *ID_Result5 = sprintf (\"%-12s\", *ID_Result5);\r\n\t    \t            if (strtok (&ftn, ID_Result6, delim) >= 0)\r\n\t\t\t\t    *ID_Result6 = sprintf (\"%-12s\", *ID_Result6);\r\n\t    \t            if (strtok (&ftn, ID_Result7, delim) >= 0)\r\n\t\t\t\t    *ID_Result7 = sprintf (\"%-12s\", *ID_Result7);\r\n\t\t\t}\r\n\t    \t    }\r\n\t    \t    else if (telname == \"RTN\")\r\n\t    \t    {\r\n\t    \t        err = csfRead (tel, &telname, &rtn);\r\n\t\t\terrDebug (16, sprintf (\"RTN: %s\", rtn));\r\n\t\t\t\t\t\t\t\tif (!err)\r\n\t\t\t\t\t\t\t\t\t*Rohteilenummer = rtn;\r\n\t    \t    }\r\n\t    \t    else if (telname == \"BGR\")\r\n\t    \t    {\r\n\t    \t        err = csfRead (tel, &telname, HWBgp, SWBgp);\r\n\t\t\terrDebug (17, sprintf (\"BGR: hw=%s sw=%s\", *HWBgp, *SWBgp));\r\n\t    \t    }\r\n\t    \t    else if (telname == \"PRG2\")\r\n\t    \t    {\r\n\t    \t        err = csfRead (tel, &telname, &noblk, &progstr);\r\n\t    \t        strM4Set (ProgL_String, 0, noblk);\r\n\t    \t        *ProgL_String = *ProgL_String + progstr;\r\n\t\t\terrDebug (18, sprintf (\"PRG2: data=%s\", hexstr (*ProgL_String)));\r\n \t\t// um abwaertzkompatibel zu bleiben hier der 'alte' Prog_String:\r\n\t    \t        strM2Set (Prog_String, 0, noblk);\r\n\t\t\t  len = binstrtoi(*Prog_String);\r\n\t\t\t  TmpString = midstr(*ProgL_String,4,-1);\r\n\t\t\t  while (len > 0) \r\n\t\t\t\t{\r\n\t\t\t\t*Prog_String = *Prog_String + midstr(TmpString,2,2) + midstr(TmpString,6,2) + midstr(TmpString,8,binstrtoi(midstr(TmpString,6,2)));\r\n\t\t\t\tTmpString = midstr(TmpString,8 + binstrtoi(midstr(TmpString,6,2)),-1);\r\n\t\t\t\tlen = len -1;\r\n\t\t\t\t}\r\n\t\t\terrDebug (18, sprintf (\"PRG:  data=%s\", hexstr (*Prog_String)));\r\n\t    \t    }\r\n\t    \t    else if (telname == \"COD\")\r\n\t    \t    {\r\n\t    \t        err = csfRead (tel, &telname, &codestr);\r\n\t    \t        *Codier_Art = 0;\r\n\t    \t        if (iCodeCnt == 0)\r\n\t    \t        {\r\n\t    \t            *Codierung_Result = ascstrtoi (codestr);\r\n\t\t\t    *LangCode_Result = itobinstr (*Codierung_Result);\r\n\t    \t        }\r\n\t    \t        iCodeCnt = iCodeCnt + 1;\r\n\t    \t        errDebug (19, sprintf (\"COD: data=%s\", codestr));\r\n\t    \t    }\r\n\t    \t    else if (telname == \"LOG\")\t    \t    {\r\n\t    \t    \terr = csfRead (tel, &telname, &iLogin);\r\n\t    \t    \tif (iLogCnt == 0)\r\n\t    \t            *Login1_Result = iLogin;\r\n\t    \t        else if (iLogCnt == 1)\r\n\t    \t            *Login2_Result = iLogin;\r\n\t\t\tiLogCnt = iLogCnt + 1;\r\n\t\t\terrDebug (20, sprintf (\"LOG: data=%d\", iLogin));\r\n\t    \t    }\r\n\t    \t    else if (telname == \"ANP\")\r\n\t    \t    {\r\n\t    \t    \terr = csfRead (tel, &telname, &iAnpKa, &iAnpWert);\r\n\t    \t        iAnpCnt = iAnpCnt + 1;\r\n\t    \t        strM2Set (Anpassung_String, 0, iAnpCnt);\r\n\t    \t        strM2Set (&anpstr, 0, iAnpKa);\r\n\t    \t        strM2Set (&anpstr, 2, iAnpWert);\r\n\t    \t    \t*Anpassung_String = *Anpassung_String + anpstr;\r\n\t\t\terrDebug (21, sprintf (\"ANP: K=%d W=%d\", iAnpKa, iAnpWert));\r\n\t    \t    }\r\n\t    \t    else if (telname == \"STG\")\r\n\t    \t    {\r\n\t    \t    \terr = csfRead (tel, &telname, &StgArt);\r\n\t    \t    \tif (iStgCnt == 0)\r\n\t    \t    \t    *Anzahl_Stg = StgArt % 10;\r\n\t    \t    \tiStgCnt = iStgCnt + 1;\r\n\t\t\terrDebug (22, sprintf (\"STG: data=%d\", StgArt));\r\n\t    \t    }\r\n\t    \t    else\r\n\t    \t\terrDebug (25, \"unhandled tel=\", tel);\r\n\t    \t}\r\n\t    }\r\n\t    csfrdClose (csf);\r\n\t}\r\n\tif (err)\r\n\t{\r\n\t    ErrString = \"FGT200\";\r\n\t}\r\n    }\r\n    else if (Version == 101 || Version == 102)\r\n    {\r\n    \tif (Version == 102)\r\n    \t{\r\n\t    errDebug (2, hexstr (CodeString));\r\n\t    xmlPathLen = CodeString [4]*265 + CodeString [5];\r\n\t    *XmlContainer\t= midstr (CodeString, 6, xmlPathLen);\r\n\t    codeLen =  CodeString[xmlPathLen + 6]*256 + CodeString[xmlPathLen + 7];\r\n\t    CodeString = \"\\h00000000\" + midstr (*Result, xmlPathLen + 8, -1);\r\n\t    // Codierwort ?er XML-Datei berechnen\r\n\t    if (*XmlContainer[0] != 0)\r\n\t    {\r\n\t\terr = _vwcodewExecuteEx (*XmlContainer, LangCode_Result, &sCodewordInfo, &iZahlenbasis);\r\n\t\terrDebug(1,sprintf(\"CWG: %s\",sCodewordInfo));\r\n\t\tif (iZahlenbasis != 1)\t// kurze Codierung\r\n\t\t{\t\r\n\t\t    *Codier_Art = 0;\r\n\t\t    errDebug (3, hexstr (*LangCode_Result));\r\n\t\t    *Codierung_Result = binstrtoi (*LangCode_Result);\r\n\t\t}\r\n\t\telse\t\t\t// lange Codierung\r\n\t\t{\r\n\t\t    *Codier_Art = 1;\r\n\t\t    *LangCode_Result = midstr (*LangCode_Result, 1, -1);\r\n\t\t    errDebug (4, hexstr (*LangCode_Result));\r\n\t\t}\r\n\t    }\r\n\t    if (err)\r\n\t\t*Codierung_Result = -1;\r\n\t}\r\n\r\n\t// Behandlung Teilenummern\r\n\tElementeAnzahl\t= binstrtoi(midstr(CodeString,4,2));\r\n\tTeilString\t\t= midstr(CodeString,6,12*ElementeAnzahl);\r\n\tCodeString\t\t= midstr(CodeString,12*ElementeAnzahl+6,strlen(CodeString));\r\n\terrDebug(1,sprintf(\"TeileNummern:%s\",TeilString));\r\n\tif  (ElementeAnzahl > 0)\r\n\t{\r\n\t    *ID_Result1       = midstr(TeilString,0,12);\r\n\t    *ID_Expression = *ID_Result1;\r\n\t}\r\n\tif  (ElementeAnzahl > 1)\r\n\t{\r\n\t    *ID_Result2       = midstr(TeilString,12,12);\r\n\t    *ID_Expression = *ID_Expression + \"+\" + *ID_Result2;\r\n\t}\r\n\tif  (ElementeAnzahl > 2)\r\n\t{\r\n\t    *ID_Result3       = midstr(TeilString,24,12);\r\n\t    *ID_Expression = *ID_Expression + \"+\" + *ID_Result3;\r\n\t}\r\n\tif  (ElementeAnzahl > 3)\r\n\t{\r\n\t    *ID_Result4       = midstr(TeilString,36,12);\r\n\t    *ID_Expression = *ID_Expression + \"+\" + *ID_Result4;\r\n\t}\r\n\tif  (ElementeAnzahl > 4)\r\n\t{\r\n\t    *ID_Result5       = midstr(TeilString,48,12);\r\n\t    *ID_Expression = *ID_Expression + \"+\" + *ID_Result5;\r\n\t}\r\n\tif  (ElementeAnzahl > 5)\r\n\t{\r\n\t    *ID_Result6       = midstr(TeilString,60,12);\r\n\t    *ID_Expression = *ID_Expression + \"+\" + *ID_Result6;\r\n\t}\r\n\tif  (ElementeAnzahl > 6)\r\n\t{\r\n\t    *ID_Result7       = midstr(TeilString,72,12);\r\n\t    *ID_Expression = *ID_Expression + \"+\" + *ID_Result7;\r\n\t}\r\n\t// Behandlung Codierung\r\n\tElementeAnzahl\t= binstrtoi(midstr(CodeString,0,2));\tTeilString\t\t= midstr(CodeString,2,12*ElementeAnzahl);\r\n\tCodeString\t\t= midstr(CodeString,12*ElementeAnzahl+2,strlen(CodeString));\r\n\tif  (ElementeAnzahl > 0 && *Codierung_Result == -1)\r\n\t{\r\n\t    *Codierung_Result = binstrtoi(midstr(TeilString,8,4));\r\n\t    *Codier_Art = 0;\r\n\t}\r\n\terrDebug(1,sprintf(\"Codierung:%s;%d\",hexstr(TeilString),*Codierung_Result));\r\n\r\n\t// Behandlung Login\r\n\tElementeAnzahl\t= binstrtoi(midstr(CodeString,0,2));\r\n\tTeilString\t\t= midstr(CodeString,2,2*ElementeAnzahl);\r\n\tCodeString\t\t= midstr(CodeString,2*ElementeAnzahl+2,strlen(CodeString));\r\n\tif  (ElementeAnzahl > 0)\r\n\t    *Login1_Result    = binstrtoi(midstr(TeilString,0,2));\r\n\tif  (ElementeAnzahl > 1)\r\n\t    *Login2_Result    = binstrtoi(midstr(TeilString,2,2));\r\n\terrDebug(1,sprintf(\"Login:%s;%d;%d\",hexstr(TeilString),*Login1_Result,*Login2_Result));\r\n\r\n\t// Behandlung STGArt\r\n\tElementeAnzahl\t= binstrtoi(midstr(CodeString,0,2));\r\n\tTeilString\t\t= midstr(CodeString,2,2*ElementeAnzahl);\r\n\tCodeString\t\t= midstr(CodeString,2*ElementeAnzahl+2,strlen(CodeString));\r\n\tif  (ElementeAnzahl > 0)\r\n\t{\r\n\t    StgArt \t\t  = binstrtoi(midstr(TeilString,2,2));\r\n\t    *Anzahl_Stg = StgArt - (StgArt / 10 * 10);\r\n\t}\r\n\t// Behandlung Anpassung\tElementeAnzahl\r\n\tElementeAnzahl\t= binstrtoi(midstr(CodeString,0,2));\r\n\tTeilString\t\t= midstr(CodeString,0,4*ElementeAnzahl+2);\r\n\tCodeString\t\t= midstr(CodeString,4*ElementeAnzahl+2,strlen(CodeString));\r\n\tif (ElementeAnzahl > 0)\r\n\t    *Anpassung_String = TeilString;\r\n\telse\r\n\t    *Anpassung_String = \"\";\r\n\t// Achtung bei Version 102 Struktur?derung an dieser Stelle (+ 16 Byte Baugruppe/Sorte)\r\n\tif (Version == 102)\r\n\t{\r\n\t    *HWBgp\t\t= hexstr (midstr(CodeString,0 ,8));\r\n\t    *SWBgp\t\t= hexstr (midstr(CodeString,8 ,16));\r\n\t    CodeString\t= midstr(CodeString,16 ,strlen(CodeString));\r\n\t}\r\n\t// Behandlung Programmierdaten\r\n\t*Prog_String      = CodeString;\r\n\tif ((strlen(*Prog_String) < 2) || ((*Prog_String[0] == 0) && (*Prog_String[1] == 0)))\r\n\t    *Prog_String = \"\";\r\n\terrDebug(1,sprintf(\"ProgDaten;%s\",hexstr(CodeString)));\r\n    }\r\n    else\r\n    {\r\n        // Abbruch bei falscher WinPfau Version\r\n\tErrString = sprintf(\"falsche Version %d (> 102)\", Version);\r\n\terr = NOK;\r\n    }\r\n}\r\nif (!err)\r\n{\r\n    *Auswahl_Ergebnis = sprintf(\"Version:%s LAS:%s\",VerString,LasString);\r\n    if (strlen (ErrString))\r\n\t*Auswahl_Ergebnis = *Auswahl_Ergebnis + \" \" + KommentarFehler + \":\" + ErrString;\r\n    *Result_Status    = OK;\r\n}\r\nelse\r\n{\r\n    *Auswahl_Ergebnis = sprintf(\"%s:%s\",KommentarFehler,ErrString);\t\r\n    *Result_Status = NOK;\r\n    errFatal (err, *Auswahl_Ergebnis);\r\n}\r\n_statSetAsciiResult (err, *Auswahl_Ergebnis, FUABBR);";}
     NodeCategory{"";}
     Info{"Dieser Baustein wertet das Codfile mit der entsprechenden STG_Nr (XX) aus.\r\n\r\nDabei werden die Files \"codefXX\",\"lXXtab\" und \"codverXX\" auf dem Pr\xFCfplatz im Directory \"skript\" ben\xF6tigt\".\r\nDiese Files werden auf ihre Richtigkeit und Zugeh\xF6hrigkeit \xFCberpr\xFCft. Sind die CRC-Pr\xFCfsummen i.O. und\r\nbesitzen alle drei Files die gleiche Versionsnummer, wird der entsprechende Satz durch \xDCberpr\xFCfung der\r\nLAS aus dem File \"lXXtab\" an Hand des Fahrzeugdatensatzes gesucht. Ist ein Satz g\xFCltig,\r\nwerden die fahrzeugabh\xE4nigen Daten aus dem File \"codefXX\" und die Freigabeversion dieses Satzes\r\naus dem File \"codverXX\" geladen.\r\n\r\nDie Bewertung dieses Bausteines OK, wenn alle oben genannten Bedingungen erf\xFCllt sind und damit ein f\xFCr diese\r\nFahrzeugausstattung passender Satz gefunden wurde. In allen anderen F\xE4llen ist die Bewertung NOK.\r\n\r\nIst die Bewertung OK, werden die gefundenen Daten unformatiert in der Variablen \"Result\" zur Verf\xFCgung\r\ngestellt. Anschlie\xDFend werden die Daten aufbereitet, in der Variablen \"ID-Result\" die Teilenummer(n) und der \r\nIndex des erwarteten Steuerger\xE4tes 12stellig und in der Variablen \"Codierung_Result\" die\r\nCodierung f\xFCr dieses Fahrzeug gespeichert. Die Codierung kann entweder in der Freigabetabelle, in einem\r\n XML-Container, oder in einem XML Container, der einen \"Codierwortgenerator\" ben\xF6tigt, enthalten sein. \r\nIn \"Login1_Result\" / \"Login2_Result\" werden Logins bereitgestellt (wenn vorhanden).\r\nIn \"Prog_String\" werden die zu programierenden Daten bereitgestellt (wenn vorhanden).\r\nDiese k\xF6nnen dann an das Element \"CodefileProgramm_Dummy\" \xFCbergeben werden\r\n\r\nDie Variable \"Auswahl_Ergebnis\" enth\xE4lt im NOK-Fall die Fehlermeldung im Klartext und im OK-Fall\r\ndie Versionsnummer der Freigabetabelle, die gefundene Satznummer und den entsprechende LAS.\r\nDiese Information wird auch in die Statistik geschrieben.\r\n\r\nDie Variable \"Result_Status\" kann f\xFCr Ablaufsteuerungen verwendet werden. Sobald der Baustein seine\r\nAnalyse beginnt wird sie auf -1 gesetzt. Ist die Analyse beendet sigalisiert eine 0 die G\xFCltigkeit der Daten.\r\nEine 1 zeigt, da\xDF w\xE4hrend der Analyse ein Fehler aufgetreten ist, oder das f\xFCr diese Fahrzeug keine\r\nDaten gefunden werden konnten.\r\nWerden Codefile-Informationen an verschiedenen Stellen des Ablaufes oder in verschiedenen Sequenzen\r\nben\xF6tigt, so kann man \xFCber die Variable \"Result_Status\" abfragen, ob die Codefile-Auswahl schon einmal\r\nerfolgt und g\xFCltig ist. So kann man wiederholte Codefile-Auswahl vermeiden. Auch ist eine Parallelisierung \r\naller Codefile-Auswertungen in einer Hintergrund-Task m\xF6glich. Voraussetzung f\xFCr die Verwendung an\r\nmehreren Stellen oder die Parallelisierung ist eine Initialisierung dieser Variablen auf -2 nach Anforderung \r\neines Fahrzeugdatensatzes.\r\nDie Syncronisatzion der Abl\xE4ufe kann hierbei mit \"Codefile_Warten\" oder Codefile_Warten_Statistik\" erfolgen.\r\n\r\nsz, 29.08.02\r\n\r\nErweietrung auf LangeCodierung.\r\nNun wird im Parameter \"Codier_Art\" angegeben ob es eine \"kurze\" Codierung wie bisher (Wert = 0) oder \r\neine Lange Codierung (Wert = 1) handelt. Bei Codier_Art = 1 wird der CodierString der langen Codierung in \r\ndem Parameter LangCode_Result \xFCbergeben; die Lange Codierung kann bis zu 250 Bytes beinhalten und mit den \r\nBausteinen \"VW2000_Codierung_Lang\" geschrieben und \"VW2000_Cod_Lang_Lesen_Bew\" gepr\xFCft werden. \r\n\r\nsz, 26.03.03\r\n\r\nErweiterung f\xFCr Freigabetabellen in Version 2.0 und Erweiterung f\xFCr ZDC 2.02.\r\nSofern in der Freigabetabelle ein Verweis auf einen ZDC V 2.02 enthalten ist, kann der WinPfau die Berechnung von \r\nCodierwort, Anpassung, Programmierdaten und Flashdaten nicht offline durchf\xFChren. Der Baustein liefert als Erweiterung\r\nneben dem Namen des Containers auch die Version des Containes zur\xFCck. Die Berechnung von Codierwort, \r\nAnpassung, Programmierung und Flashdaten erfolgt durch spezielle ZdcXxx Bausteine.\r\nF\xFCr Daten im \"alten\" WinPfau-Format <= V 102 werden die Parameter abw\xE4rtkompatibel aufgef\xFCllt.\r\nEin weiterer neuer Parameter ist \"ID_Expression\", der mit dem logischen Ausdruck der Fertigteilnummern gef\xFCllt wird.\r\n\r\ncm, 03.07.03\r\n\r\nErweiterung um den Parameter \"ProgL_String\"\r\nAb der WinPfau Version 9.2.0.3 wird in dem Parameter \"ProgL_String\" der Programmierstring im 4 Byte \r\nFormat erzeugt. Aufbau ist identisch zu dem Parameter  \"Prog_String\", jedoch Anzahl, L\xE4nge und Adresse \r\nsind jeweils 4 Byte Motorola codiert.\r\n\r\ncm, 13.08.03\r\n\r\nErzeugt der WinPfau CSF Codefiles gibt es kein Telegramm \"PRG\" mehr. Nur noch \"PRG2\"; \r\nnun wird die kurze Programmierung \"Prog_String\" mit sinnvollen Daten bef\xFCllt; damit ist der Baustein abw\xE4rtskompatibel.\r\nMit dieser Version wird nun \"Prog_String\" mit plausiblen Daten gef\xFCllt solange die START-ADR <= 2 Byte ist.\r\n\r\nsz, 03.09.03\r\n\r\nWeitere Fehler bei Umwandlung PRG2 nach PRG beseitigt.\r\n\r\njk 11.09.03\r\n\r\nBugfix zur Inkompatibilit\xE4t der Freigabetabelle *.txt mit mehr als 3 TNR (abschneiden der TNR 4 u. 5)\r\nDer Fehler tritt nur bei mehr als 3 TNR und CF20 bei FTabs im Format *.txt auf.\r\n\r\nsz  28.04.04\r\n\r\nBugfix zur Versionskennung der FTab und LAS-String in der Statistik\r\n(wurde ab Version 2.5.6 der mslext nicht mehr vollst\xE4ndig in der Statistik aufgenommen)\r\n\r\nsz  07.06.04\r\n\r\nBugfix zum Bugfix: im Fehlerfall wird jetzt nicht mehr abgebrochen, sondern wie fr\xFCher ein \r\nNOK in die Statistik geschrieben.\r\n\r\nsz  08.06.04 \r\n\r\nBugfix: fehlende Initialisierung des Parameters XmlVersion eingetragen\r\n\r\nsz  21.01.05 ";"Dieser Baustein wertet das Codfile mit der entsprechenden STG_Nr (XX) aus.\r\n\r\nDabei werden die Files \"codefXX\",\"lXXtab\" und \"codverXX\" auf dem Pr\xFCfplatz im Directory \"skript\" ben\xF6tigt\".\r\nDiese Files werden auf ihre Richtigkeit und Zugeh\xF6hrigkeit \xFCberpr\xFCft. Sind die CRC-Pr\xFCfsummen i.O. und\r\nbesitzen alle drei Files die gleiche Versionsnummer, wird der entsprechende Satz durch \xDCberpr\xFCfung der\r\nLAS aus dem File \"lXXtab\" an Hand des Fahrzeugdatensatzes gesucht. Ist ein Satz g\xFCltig,\r\nwerden die fahrzeugabh\xE4nigen Daten aus dem File \"codefXX\" und die Freigabeversion dieses Satzes\r\naus dem File \"codverXX\" geladen.\r\n\r\nDie Bewertung dieses Bausteines OK, wenn alle oben genannten Bedingungen erf\xFCllt sind und damit ein f\xFCr diese\r\nFahrzeugausstattung passender Satz gefunden wurde. In allen anderen F\xE4llen ist die Bewertung NOK.\r\n\r\nIst die Bewertung OK, werden die gefundenen Daten unformatiert in der Variablen \"Result\" zur Verf\xFCgung\r\ngestellt. Anschlie\xDFend werden die Daten aufbereitet, in der Variablen \"ID-Result\" die Teilenummer(n) und der \r\nIndex des erwarteten Steuerger\xE4tes 12stellig und in der Variablen \"Codierung_Result\" die\r\nCodierung f\xFCr dieses Fahrzeug gespeichert. Die Codierung kann entweder in der Freigabetabelle, in einem\r\n XML-Container, oder in einem XML Container, der einen \"Codierwortgenerator\" ben\xF6tigt, enthalten sein. In \r\n\"Prog_String\" werden die zu programierenden Daten bereitgestellt (wenn vorhanden).\r\nDiese k\xF6nnen dann an das Element \"CodefileProgramm_Dummy\" \xFCbergeben werden\r\n\r\nDie Variable \"Auswahl_Ergebnis\" enth\xE4lt im NOK-Fall die Fehlermeldung im Klartext und im OK-Fall\r\ndie Versionsnummer der Freigabetabelle, die gefundene Satznummer und den entsprechende LAS.\r\nDiese Information wird auch in die Statistik geschrieben.\r\n\r\nDie Variable \"Result_Status\" kann f\xFCr Ablaufsteuerungen verwendet werden. Sobald der Baustein seine\r\nAnalyse beginnt wird sie auf -1 gesetzt. Ist die Analyse beendet sigalisiert eine 0 die G\xFCltigkeit der Daten.\r\nEine 1 zeigt, da\xDF w\xE4hrend der Analyse ein Fehler aufgetreten ist, oder das f\xFCr diese Fahrzeug keine\r\nDaten gefunden werden konnten.\r\nWerden Codefile-Informationen an verschiedenen Stellen des Ablaufes oder in verschiedenen Sequenzen\r\nben\xF6tigt, so kann man \xFCber die Variable \"Result_Status\" abfragen, ob die Codefile-Auswahl schon einmal\r\nerfolgt und g\xFCltig ist. So kann man wiederholte Codefile-Auswahl vermeiden. Auch ist eine Parallelisierung \r\naller Codefile-Auswertungen in einer Hintergrund-Task m\xF6glich. Voraussetzung f\xFCr die Verwendung an\r\nmehreren Stellen oder die Parallelisierung ist eine Initialisierung dieser Variablen auf -2 nach Anforderung \r\neines Fahrzeugdatensatzes.\r\nDie Syncronisatzion der Abl\xE4ufe kann hierbei mit \"Codefile_Warten\" oder Codefile_Warten_Statistik\" erfolgen.\r\n\r\nsz, 29.08.02\r\n";}
     Rights{"Write";"Read";}
     VersionInfo{
      CurVersion{2;24;"nbmr";}
      Version{1;0;"AC";"- freigegeben -";"vw-admin";"24.03.2003 16:35:45";}
      Version{1;1;"AC";"- in Arbeit -";"vw-admin";"28.03.2003 10:07:03";}
      Version{1;2;"AC";"- in Arbeit -";"vw-admin";"28.03.2003 10:18:41";}
      Version{1;3;"AC";"- in Arbeit -";"vw-admin";"22.04.2003 17:22:18";}
      Version{1;4;"AC";"- in Arbeit -";"vw-admin";"20.08.2003 16:33:12";}
      Version{1;5;"AC";"- in Arbeit -";"vw-admin";"20.08.2003 16:34:16";}
      Version{1;6;"AC";"- in Arbeit -";"vw-admin";"20.08.2003 16:34:48";}
      Version{1;7;"AC";"- in Arbeit -";"vw-admin";"20.08.2003 16:35:49";}
      Version{1;8;"AC";"- in Arbeit -";"vw-admin";"20.08.2003 16:36:08";}
      Version{1;9;"AC";"- in Arbeit -";"vw-admin";"27.08.2003 16:54:03";}
      Version{1;10;"AC";"- in Arbeit -";"vw-admin";"28.08.2003 15:33:13";}
      Version{1;11;"AC";"- in Arbeit -";"vw-admin";"03.09.2003 15:00:46";}
      Version{1;12;"AC";"- in Arbeit -";"vw-admin";"03.09.2003 15:02:08";}
      Version{1;13;"AC";"- in Arbeit -";"vw-admin";"03.09.2003 15:04:31";}
      Version{1;14;"MOS";"- in Arbeit -";"dsa-admin";"11.09.2003 10:17:40";}
      Version{2;0;"AC";" - freigegeben - ";"vw-admin";"14.10.2003 11:04:44";}
      Version{2;1;"AC";"- in Arbeit -";"vw-admin";"14.10.2003 11:05:00";}
      Version{2;2;"AC";"- in Arbeit -";"vw-admin";"28.04.2004 15:57:29";}
      Version{2;3;"AC";"- in Arbeit -";"vw-admin";"28.04.2004 15:59:54";}
      Version{2;4;"AC";"- in Arbeit -";"vw-admin";"07.06.2004 08:07:33";}
      Version{2;5;"AC";"- in Arbeit -";"vw-admin";"07.06.2004 08:16:02";}
      Version{2;6;"AC";"- in Arbeit -";"vw-admin";"08.06.2004 15:50:33";}
      Version{2;7;"AC";"- in Arbeit -";"admin";"21.01.2005 15:11:55";}
      Version{2;8;"AC";"- in Arbeit -";"admin";"21.01.2005 15:12:38";}
      Version{2;9;"ZPH18";"[ Baustein importiert (ersetzt) ]";"admin";"15.08.2007 08:15:15";}
      Version{2;10;"svwcp2";"- in Arbeit -";"admin";"12.10.2007 18:36:23";}
      Version{2;11;"CP23A";"- in Arbeit -";"admin";"25.10.2007 11:40:21";}
      Version{2;12;"CP23A";"- in Arbeit -";"admin";"25.10.2007 12:37:22";}
      Version{2;13;"CP23A";"- in Arbeit -";"admin";"25.10.2007 12:38:53";}
      Version{2;14;"CP23A";"- in Arbeit -";"admin";"25.10.2007 12:40:10";}
      Version{2;15;"CP23A";"- in Arbeit -";"admin";"25.10.2007 12:42:33";}
      Version{2;16;"CP23A";"- in Arbeit -";"admin";"25.10.2007 12:45:02";}
      Version{2;17;"CP23A";"- in Arbeit -";"admin";"25.10.2007 12:47:28";}
      Version{2;18;"nbmr";"[ Baustein importiert (ersetzt) ]";"dsa";"18.01.2010 15:13:28";}
      Version{2;19;"svw";"- in Arbeit -";"dsa";"29.03.2010 11:25:24";}
      Version{2;20;"svw";"- in Arbeit -";"dsa";"29.03.2010 11:25:57";}
      Version{2;21;"svw";"- in Arbeit -";"dsa";"29.03.2010 11:28:01";}
      Version{2;22;"svw";"- in Arbeit -";"dsa";"29.03.2010 11:28:52";}
      Version{2;23;"svw";"- in Arbeit -";"dsa";"29.03.2010 11:30:25";}
      Version{2;24;"nbmr";"[ Baustein importiert (ersetzt) ]";"dsa";"05.05.2010 11:08:10";}}}}}}
 FunctionDef{
  Name{"VW_spezifische_Bibliothek";}
  LangName{"VW_spezifische_Bibliothek";"VW_specific_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"Sammlung von Bausteinen zur Kommunikation mit Steuergeraeten von VW.";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;2;"ZPH18";}
   Version{1;0;"AC";"- freigegeben -";"vw-admin";"04.03.2003 11:56:19";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"07.08.2006 13:58:14";}
   Version{1;2;"ZPH18";"[ Baustein importiert (ersetzt) ]";"admin";"14.08.2007 15:07:01";}}
  FunctionDef{
   Name{"VW_Codefileauswahl";}
   LangName{"VW_Codefileauswahl";"VW_Codefileauswahl";}
   CvsVerHis{}
   Type{1;}
   Icon{0;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Platzhalter f\xFCr Pr\xFCfschritte";"";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{0;1;"PAE";}
    Version{0;1;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"24.07.2006 17:06:13";}}
   FunctionDef{
    Name{"Codefile_Warten_Statistik";}
    LangName{"Codefile_Warten_Statistik";"Codefile_Warten_Statistik";}
    CvsVerHis{}
    Type{1;}
    Icon{0;}
    Properties{"Begin";}
    FormalParam{
     InputParam{"DialogHndl";
      LangName{"DialogHndl";"DialogHndl";}"DialogTyp";"DIALOG_LOKAL";
      LangDesc{"";"";}}
     InputParam{"Zeile";
      LangName{"Zeile";"Zeile";}"DialogLine";"CDialogZeile1";
      LangDesc{"";"";}}
     InputParam{"Text";
      LangName{"Text";"Text";}"TEXT";"CTextLeer";
      LangDesc{"";"";}}
     OutputParam{"Result_Status";
      LangName{"Result_Status";"Result_Status";}"Codefile_Result_Int";"Dummy_Status";
      LangDesc{"Status Auswahl (-1= l\xE4uft 0=OK 1=NOK)";"";}}
     OutputParam{"Auswahl_Ergebnis";
      LangName{"Auswahl_Ergebnis";"Auswahl_Ergebnis";}"Codefile_Result_Str";"Dummy_Auswahl";
      LangDesc{"Version/SatzNr/LAS";"";}}
     InputParam{"Timeout";
      LangName{"Timeout";"Timeout";}"Timeout";"CTime30";
      LangDesc{"Maximale Pr\xFCfzeit";"";}}}
    LocalVar{
     LocVarDef{"KommentarLaeuft";
      LangName{"KommentarLaeuft";"";}"Locvar";"TEXT";
      LangDesc{"";"";}
      LangText{"\"Auswahl laeuft\"";"\"\xD4\xCB\xD0\xD0\"";"\"running\"";}"Const";}
     LocVarDef{"KommentarPflegefehler";
      LangName{"KommentarPflegefehler";"KommentarPflegefehler";}"Locvar";"TEXT";
      LangDesc{"";"";}
      LangText{"\"Codefile Pflegefehler\"";"\"\xB1\xE0\xC2\xEB\xCE\xC4\xBC\xFE\xD4\xEC\xB3\xC9\xB2\xCE\xCA\xFD\xC9\xE8\xB6\xA8\xB4\xED\xCE\xF3\"";"\"Codefiles parametererror\"";}"Const";}
     LocVarDef{"KommentarTimeout";
      LangName{"KommentarTimeout";"";}"Locvar";"TEXT";
      LangDesc{"";"";}
      LangText{"\"Abbruch Timeout\"";"\"\xB3\xAC\xCA\xB1\xCD\xCB\xB3\xF6\"";"\"Abort timeout\"";}"Const";}}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"if (Zeile > 0)\r\n\t_dlgMultiSetLine (DialogHndl, Zeile, Text);\r\n\r\nint\ttstart;\r\n\r\ntstart = time ();\r\n\r\nwhile (*Result_Status < 0)\r\n\t{\r\n\tif (time () > tstart + Timeout)\r\n\t\t{\r\n\t\t*Result_Status = -3;\r\n\t\tbreak;\r\n\t\t}\r\n\r\n\tWait (0.1);\r\n\t}\r\n\r\nerr = NOK;\r\nswitch(*Result_Status)\r\n\t{\r\n\tcase -3 :\r\n\t\t{\r\n\t\t_statSetAsciiResult (NOK, KommentarTimeout, FUABBR);\r\n\t\tbreak;\r\n\t\t}\r\n\tcase -1 :\r\n\t\t{\r\n\t\t_statSetAsciiResult (NOK, KommentarLaeuft, FUABBR);\r\n\t\tbreak;\r\n\t\t}\r\n\tcase 1 :\r\n\t\t{\r\n\t\t_statSetAsciiResult (NOK, *Auswahl_Ergebnis, FUABBR);\r\n\t\tbreak;\r\n\t\t}\r\n\tcase 0 :\r\n\t\t{\r\n\t\t_statSetAsciiResult (OK, *Auswahl_Ergebnis, FOK);\r\n\t\terr = OK;\r\n\t\tbreak;\r\n\t\t}\r\n\tdefault:\r\n\t\t{\r\n\t\t_statSetAsciiResult (NOK, KommentarPflegefehler, FUABBR);\r\n\t\tbreak;\r\n\t\t}\r\n\t}";}
    NodeCategory{"";}
    Info{"Wartet auf Status 0 = OK oder 1 =  NOK der Codefileabarbeitung und sendet den g\xFCltigen Satz\r\nin die Statistik.";"";}
    Rights{"Write";"Read";}
    VersionInfo{
     CurVersion{1;1;"PAE";}
     Version{1;0;"AC";"- freigegeben -";"vw-admin";"05.03.2003 16:30:12";}
     Version{1;1;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"24.07.2006 17:06:13";}}}}}
 FunctionDef{
  Name{"VW_spezifische_Bibliothek";}
  LangName{"VW_spezifische_Bibliothek";"VW_specific_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"Sammlung von Bausteinen zur Kommunikation mit Steuergeraeten von VW.";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;2;"ZPH18";}
   Version{1;0;"AC";"- freigegeben -";"vw-admin";"04.03.2003 11:56:19";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"07.08.2006 13:58:14";}
   Version{1;2;"ZPH18";"[ Baustein importiert (ersetzt) ]";"admin";"14.08.2007 15:07:01";}}
  FunctionDef{
   Name{"VW_Codefileauswahl";}
   LangName{"VW_Codefileauswahl";"VW_Codefileauswahl";}
   CvsVerHis{}
   Type{1;}
   Icon{0;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Platzhalter f\xFCr Pr\xFCfschritte";"";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{0;1;"PAE";}
    Version{0;1;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"24.07.2006 17:06:13";}}
   FunctionDef{
    Name{"Pfau_9_2_0";}
    LangName{"Pfau_9_2_0";"";}
    CvsVerHis{}
    Type{1;}
    Icon{0;}
    Properties{"Begin";}
    FormalParam{}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"";}
    NodeCategory{"";}
    Info{"";"";}
    Rights{"Write";"Read";}
    VersionInfo{
     CurVersion{0;1;"PAE";}
     Version{0;1;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"24.07.2006 17:06:13";}}
    FunctionDef{
     Name{"ZdcOpen";}
     LangName{"ZdcOpen";"";}
     CvsVerHis{}
     Type{1;}
     Icon{0;}
     Properties{"Begin";}
     FormalParam{
      OutputParam{"ZdcHndl";
       LangName{"ZdcHndl";"ZdcHndl";}"ZDC_HNDL";"DZdcHndl";
       LangDesc{"Handle zu einem ZDC";"";}}
      InputParam{"XmlContainer";
       LangName{"XmlContainer";"XmlContainer";}"XMLFILE";"DummyContainer_Name";
       LangDesc{"Name der XML-Datei";"";}}
      InputParam{"XmlVersion";
       LangName{"XmlVersion";"XmlVersion";}"XMLVERSION";"DummyContainer_Version";
       LangDesc{"Version des XML-Datei z.B. 0151/0202/0203/0204/020401";"";}}
      InputParam{"DebugLevel";
       LangName{"DebugLevel";"DebugLevel";}"Level";"CLevel0";
       LangDesc{"Debug-Level";"";}}}
     LocalVar{}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     MSLCode{"err = 0;\r\nif (*ZdcHndl >= 0)\r\n    zdcClose (*ZdcHndl);\r\n*ZdcHndl = -1;\r\nif (XmlContainer[0] != 0 && (XmlVersion == \"0202\" || XmlVersion == \"0203\" || XmlVersion == \"0204\" || XmlVersion == \"0205\" || XmlVersion == \"020401\"))\r\n{\r\n    *ZdcHndl = zdcOpen (XmlContainer, DebugLevel);\r\n    if (*ZdcHndl < 0)\r\n\terr = errFatal (NOK, \"open zdc failed \", XmlContainer);\r\n}";}
     NodeCategory{"";}
     Info{"Baustein \xF6ffnet einen Zieldaten-Container (ZDC) in den Versionen 2.02, 2.03 2.04, 2.0401.\r\n\r\nNach erfolgreichem Aufruf wird das \xFCbergebene Handle mit einem g\xFCltigen Wert (Wert >= 0) gesetzt.\r\nAndernfalls wird der Parameter \"ZdcHndl\" auf -1 gesetzt.\r\n\r\nDer Baustein steht in engem Zusammenhang mit dem Baustein \"VW_Codefile_STG\", der die\r\nEingangsparameter \"XmlContainer\" und \"XmlVersion\" f\xFCr diesem Baustein liefert.\r\n\r\n09.01.06, sr: Update, \xF6ffnet jetzt auch ZDC Container 2.03\r\n21.05.07, sz: Update, \xF6ffnet jetzt auch ZDC Container 2.04 und 2.0401";"";}
     Rights{"Write";"Read";}
     VersionInfo{
      CurVersion{1;10;"cp32";}
      Version{0;1;"DSA";"- in Arbeit -";"admin";"03.07.2003 16:07:52";}
      Version{0;2;"DSA";"- in Arbeit -";"admin";"03.07.2003 16:08:40";}
      Version{0;3;"DSA";"- in Arbeit -";"admin";"03.07.2003 16:09:12";}
      Version{0;4;"DSA";"- in Arbeit -";"admin";"03.07.2003 16:09:33";}
      Version{0;5;"DSA";"- in Arbeit -";"admin";"03.07.2003 16:10:00";}
      Version{0;6;"DSA";"- in Arbeit -";"admin";"03.07.2003 16:11:12";}
      Version{0;7;"DSA";"- in Arbeit -";"admin";"03.07.2003 16:11:35";}
      Version{1;0;"DSA";"";"sr";"17.12.2004 14:12:19";}
      Version{1;1;"AAC";"- in Arbeit -";"sr";"09.01.2006 11:44:45";}
      Version{1;2;"AAC";"- in Arbeit -";"sr";"09.01.2006 11:45:04";}
      Version{1;3;"AAC";"- in Arbeit -";"sr";"09.01.2006 11:45:22";}
      Version{1;4;"AC";"- in Arbeit -";"dsa-admin";"20.01.2006 15:15:43";}
      Version{1;5;"PAE";"- in Arbeit -";"dsa-admin";"15.05.2007 16:46:56";}
      Version{1;6;"PAE";"- in Arbeit -";"dsa-admin";"15.05.2007 16:47:33";}
      Version{1;7;"PAE";"- in Arbeit -";"dsa-admin";"21.05.2007 14:00:11";}
      Version{1;8;"ZPH18";"[ Baustein importiert (ersetzt) ]";"admin";"14.08.2007 15:07:01";}
      Version{1;9;"FAW";"- in Arbeit -";"admin";"18.08.2007 12:32:21";}
      Version{1;10;"cp32";"- in Arbeit -";"admin";"16.01.2013 11:17:48";}}}}}}
 FunctionDef{
  Name{"VW_spezifische_Bibliothek";}
  LangName{"VW_spezifische_Bibliothek";"VW_specific_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"Sammlung von Bausteinen zur Kommunikation mit Steuergeraeten von VW.";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;2;"ZPH18";}
   Version{1;0;"AC";"- freigegeben -";"vw-admin";"04.03.2003 11:56:19";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"07.08.2006 13:58:14";}
   Version{1;2;"ZPH18";"[ Baustein importiert (ersetzt) ]";"admin";"14.08.2007 15:07:01";}}
  FunctionDef{
   Name{"VW_Codefileauswahl";}
   LangName{"VW_Codefileauswahl";"VW_Codefileauswahl";}
   CvsVerHis{}
   Type{1;}
   Icon{0;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Platzhalter f\xFCr Pr\xFCfschritte";"";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{0;1;"PAE";}
    Version{0;1;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"24.07.2006 17:06:13";}}
   FunctionDef{
    Name{"Pfau_9_2_0";}
    LangName{"Pfau_9_2_0";"";}
    CvsVerHis{}
    Type{1;}
    Icon{0;}
    Properties{"Begin";}
    FormalParam{}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"";}
    NodeCategory{"";}
    Info{"";"";}
    Rights{"Write";"Read";}
    VersionInfo{
     CurVersion{0;1;"PAE";}
     Version{0;1;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"24.07.2006 17:06:13";}}
    FunctionDef{
     Name{"ZdcCodierung";}
     LangName{"ZdcCodierung";"";}
     CvsVerHis{}
     Type{1;}
     Icon{0;}
     Properties{"Begin";}
     FormalParam{
      InputParam{"DialogHndl";
       LangName{"DialogHndl";"DialogHndl";}"DialogTyp";"DIALOG_LOKAL";
       LangDesc{"";"";}}
      InputParam{"Zeile";
       LangName{"Zeile";"Zeile";}"DialogLine";"CDialog_Keine_Anzeige";
       LangDesc{"";"";}}
      InputParam{"Text";
       LangName{"Text";"Text";}"TEXT";"CTextCodefileAuswahl";
       LangDesc{"";"";}}
      InputParam{"ZdcHndl";
       LangName{"ZdcHndl";"ZdcHndl";}"ZDC_HNDL";"DZdcHndl";
       LangDesc{"Handle zu einem ZDC";"";}}
      InputParam{"Modusteil";
       LangName{"Modusteil";"Modusteil";}"ZDC_MODUSTEIL";"CZDCModusAll";
       LangDesc{"Modusteil wird als Filter eingesetzt (mit Modusteil == \"\" wird der Filter ausgeschaltet) ";"";}}
      OutputParam{"Codierung_Result";
       LangName{"Codierung_Result";"Codierung_Result";}"Codefile_Result_Int";"Dummy_Codierung_Result";
       LangDesc{"Codierung";"";}}
      OutputParam{"LangCode_Result";
       LangName{"LangCode_Result";"LangCode_Result";}"Codefile_Result_Str";"Dummy_LongCode_Result";
       LangDesc{"Lange Codierung String";"";}}
      OutputParam{"Codier_Art";
       LangName{"Codier_Art";"Codier_Art";}"Codefile_Result_Int";"Dummy_Codier_Art";
       LangDesc{"Art der Codierung 0 = kurze / 1 = lange ";"";}}}
     LocalVar{
      LocVarDef{"KommentarNOK";
       LangName{"KommentarNOK";"KommentarNOK";}"Locvar";"TEXT";
       LangDesc{"";"";}
       LangText{"\"Codierung ungueltig\"";"\"\xB1\xE0\xC2\xEB\xCE\xDE\xD0\xA7\"";"\"Codierung ungueltig\"";}"Const";}}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     MSLCode{"string\tsInfo;\r\nint\tiZahlenbasis;\r\n\r\nerr = 0;\r\nif (ZdcHndl >= 0)\r\n{\r\n    if (Zeile > 0)\r\n        _dlgMultiSetLine (DialogHndl, Zeile, Text);\r\n\r\n    *Codierung_Result = -1;\r\n    *LangCode_Result=\"\";\r\n    zdcCollectSeekFirst (ZdcHndl);\r\n    err = zdcCodeword (ZdcHndl, Modusteil, \r\n\t\t\tLangCode_Result, &sInfo, &iZahlenbasis);\r\n    if (err)\r\n    {\r\n\terr = errFatal (NOK, \"zdc codeword failed\");\r\n\t_statSetAsciiResult (err, KommentarNOK, FUABBR);\r\n    }\r\n    if (!err)\r\n    {\r\n\terrDebug (2, sInfo);\r\n\tif (iZahlenbasis != 1)\t// kurze Codierung\r\n\t{\t\r\n\t    *Codier_Art = 0;\r\n\t    errDebug (3, hexstr (*LangCode_Result));\r\n\t    *Codierung_Result = binstrtoi (*LangCode_Result);\r\n\t}\r\n\telse\t// lange Codierung\r\n\t{\r\n\t    *Codier_Art = 1;\r\n\t    *LangCode_Result = midstr (*LangCode_Result, 1, -1);\r\n\t    errDebug (4, hexstr (*LangCode_Result));\r\n\t}\r\n    }\r\n    if (Zeile > 0)\r\n\t_dlgMultiTextRsltBmp (DialogHndl, Zeile, Text, err);\r\n}\r\nif (!err)\r\n    _statSetAsciiResult (err, sInfo, FOK);\r\n";}
     NodeCategory{"";}
     Info{"Dieser Baustein berechnet das Codierwort nach dem Zieldatencontainer (ZDC) V 2.02. (S)\r\n\r\nAls Parameter muss das \"ZdcHndl\" \xFCbergeben werden, dass mit dem Baustein \"ZdcOpen\" erzeugt wurde.\r\n\r\nDer Parameter \"Modusteil\" kann zur Filterung der Daten innerhalb des Containers verwendet werden. \r\nMit Modusteil gleich \"\" werden alle Tabellen mit dem Modus \"C\" im ZDC ausgewertet.\r\n\r\nIm Parameter \"Codierung_Art\" wird der Ergebnistyp zur\xFCck gemeldet:\r\n0: kurze Codierung (bis zu 31 Bit)\r\n1: lange Codierung (bis zu 250 Byte)\r\n-1: Codierung ung\xFCltig\r\n\r\nBei kurzer Codierung (Codierung_Art = 0) wird die Variable \"Codierung_Result\" mit dem Wert des Codierwortes gef\xFCllt.\r\nBei langer Codierung (Codierung_Art = 1) wird die Variable \"LangCode_Result\" mit der Codierung gef\xFCllt.\r\n\r\nDer Baustein berechnet nur die Codierung. Das Schreiben der Codierung erfolgt nicht durch diesen Baustein!\r\n\r\nDie Codierung des Stuerger\xE4ts kann \xFCber die Bausteine:\r\n- VW2000_Codieren\r\n- VW2000_Codieren_Lang\r\n- ...\r\nerfolgen.";"";}
     Rights{"Write";"Read";}
     VersionInfo{
      CurVersion{0;30;"PAE";}
      Version{0;1;"DSA";"- in Arbeit -";"admin";"16.06.2003 15:49:58";}
      Version{0;2;"DSA";"- in Arbeit -";"admin";"16.06.2003 15:50:33";}
      Version{0;3;"DSA";"- in Arbeit -";"admin";"16.06.2003 15:50:44";}
      Version{0;4;"DSA";"- in Arbeit -";"admin";"16.06.2003 15:57:20";}
      Version{0;5;"DSA";"- in Arbeit -";"admin";"16.06.2003 15:58:08";}
      Version{0;6;"DSA";"- in Arbeit -";"admin";"16.06.2003 15:58:31";}
      Version{0;7;"DSA";"- in Arbeit -";"admin";"16.06.2003 15:59:05";}
      Version{0;8;"DSA";"- in Arbeit -";"admin";"16.06.2003 15:59:11";}
      Version{0;9;"DSA";"- in Arbeit -";"admin";"16.06.2003 16:00:58";}
      Version{0;10;"DSA";"- in Arbeit -";"admin";"16.06.2003 16:01:54";}
      Version{0;11;"DSA";"- in Arbeit -";"admin";"16.06.2003 16:03:07";}
      Version{0;12;"DSA";"- in Arbeit -";"admin";"16.06.2003 16:04:20";}
      Version{0;13;"DSA";"- in Arbeit -";"admin";"16.06.2003 16:23:55";}
      Version{0;14;"DSA";"- in Arbeit -";"admin";"25.06.2003 19:27:49";}
      Version{0;15;"DSA";"- in Arbeit -";"admin";"25.06.2003 19:28:36";}
      Version{0;16;"DSA";"- in Arbeit -";"admin";"25.06.2003 19:28:57";}
      Version{0;17;"DSA";"- in Arbeit -";"admin";"03.07.2003 16:15:12";}
      Version{0;18;"DSA";"- in Arbeit -";"admin";"03.07.2003 16:15:59";}
      Version{0;19;"DSA";"- in Arbeit -";"admin";"03.07.2003 16:17:21";}
      Version{0;20;"DSA";"- in Arbeit -";"admin";"03.07.2003 16:17:43";}
      Version{0;21;"DSA";"- in Arbeit -";"admin";"03.07.2003 16:19:32";}
      Version{0;22;"DSA";"- in Arbeit -";"admin";"03.07.2003 16:25:28";}
      Version{0;23;"DSA";"- in Arbeit -";"admin";"03.07.2003 16:26:29";}
      Version{0;24;"DSA";"- in Arbeit -";"admin";"03.07.2003 16:27:56";}
      Version{0;25;"DSA";"- in Arbeit -";"admin";"03.07.2003 16:28:36";}
      Version{0;26;"DSA";"- in Arbeit -";"admin";"03.07.2003 17:50:12";}
      Version{0;27;"DSA";"- in Arbeit -";"admin";"03.07.2003 17:56:26";}
      Version{0;28;"DSA";"- in Arbeit -";"admin";"03.07.2003 17:57:24";}
      Version{0;29;"VW-WOL";"- in Arbeit -";"admin";"08.07.2003 17:05:50";}
      Version{0;30;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"24.07.2006 17:06:13";}}}}}}
 FunctionDef{
  Name{"VW_spezifische_Bibliothek";}
  LangName{"VW_spezifische_Bibliothek";"VW_specific_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"Sammlung von Bausteinen zur Kommunikation mit Steuergeraeten von VW.";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;2;"ZPH18";}
   Version{1;0;"AC";"- freigegeben -";"vw-admin";"04.03.2003 11:56:19";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"07.08.2006 13:58:14";}
   Version{1;2;"ZPH18";"[ Baustein importiert (ersetzt) ]";"admin";"14.08.2007 15:07:01";}}
  FunctionDef{
   Name{"VW_Codefileauswahl";}
   LangName{"VW_Codefileauswahl";"VW_Codefileauswahl";}
   CvsVerHis{}
   Type{1;}
   Icon{0;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Platzhalter f\xFCr Pr\xFCfschritte";"";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{0;1;"PAE";}
    Version{0;1;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"24.07.2006 17:06:13";}}
   FunctionDef{
    Name{"Pfau_9_2_0";}
    LangName{"Pfau_9_2_0";"";}
    CvsVerHis{}
    Type{1;}
    Icon{0;}
    Properties{"Begin";}
    FormalParam{}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"";}
    NodeCategory{"";}
    Info{"";"";}
    Rights{"Write";"Read";}
    VersionInfo{
     CurVersion{0;1;"PAE";}
     Version{0;1;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"24.07.2006 17:06:13";}}
    FunctionDef{
     Name{"Zdc203Anpassung";}
     LangName{"Zdc203Anpassung";"Zdc203Anpassung";}
     CvsVerHis{}
     Type{1;}
     Icon{0;}
     Properties{"Begin";}
     FormalParam{
      InputParam{"DialogHndl";
       LangName{"DialogHndl";"DialogHndl";}"DialogTyp";"DIALOG_LOKAL";
       LangDesc{"";"";}}
      InputParam{"Zeile";
       LangName{"Zeile";"Zeile";}"DialogLine";"CDialog_Keine_Anzeige";
       LangDesc{"";"";}}
      InputParam{"Text";
       LangName{"Text";"Text";}"TEXT";"CTextCodefileAuswahl";
       LangDesc{"";"";}}
      InputParam{"ZdcHndl";
       LangName{"ZdcHndl";"ZdcHndl";}"ZDC_HNDL";"DZdcHndl";
       LangDesc{"Handle zu einem ZDC";"";}}
      InputParam{"Modusteil";
       LangName{"Modusteil";"Modusteil";}"ZDC_MODUSTEIL";"CZDCModusAll";
       LangDesc{"Modusteil wird als Filter eingesetzt (mit Modusteil == \"\" wird der Filter ausgeschaltet) ";"";}}
      OutputParam{"Anpassung_String";
       LangName{"Anpassung_String";"Anpassung_String";}"Codefile_Result_Str";"Dummy_Anpassung_String";
       LangDesc{"zu programmierender String";"\"\"";}}}
     LocalVar{
      LocVarDef{"KommentarNOK";
       LangName{"KommentarNOK";"KommentarNOK";}"Locvar";"TEXT";
       LangDesc{"";"";}
       LangText{"\"Anpassung ungueltig\"";"\"Anpassung ungueltig\"";"\"Anpassung ungueltig\"";}"Const";}}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     MSLCode{"string\tsInfo, sData, buf;\r\nint     iAnz, iDataTyp;\r\nint\t\tiKanal, iAnpassung;\r\n\r\nerr = 0;\r\nif (ZdcHndl >= 0)\r\n{\r\n    if (Zeile > 0)\r\n        _dlgMultiSetLine (DialogHndl, Zeile, Text);\r\n\r\n    *Anpassung_String = \"\";\r\n    iAnz = 0;\r\n    strM4Set (Anpassung_String, 0, iAnz);\r\n    zdcCollectSeekFirst (ZdcHndl);\r\n    while (!err)\r\n    {\r\n\t    err = zdcCollect (ZdcHndl, \"A\", Modusteil, &sInfo, &iDataTyp);\r\n        if (err == -1)\r\n\t    {\r\n\t        err = 0;\r\n\t        break;\r\n\t    }\r\n\t    while (!err && (iDataTyp & 64 || iDataTyp & 128) )\r\n\t    {\r\n\t        err = zdcGetAdaptation (ZdcHndl, &iKanal, &sData);\r\n\t        if (err == -1)\r\n\t        {\r\n\t\t        err = 0;\r\n\t\t        break;\r\n\t        }\r\n\t        if (!err)\r\n    \t    {\r\n                buf = \"\";\r\n                strM4Set (&buf, 0, iKanal);\r\n                if( iDataTyp & 64 )\r\n                {\r\n                    /* Kurze Anpassung */\r\n        \t        iAnpassung = binstrtoi (sData);\r\n        \t        errDebug (0, sprintf (\"Kurze Anpassung: Kanal %#lx, Anp= %#lx\", iKanal, iAnpassung));\r\n                    strM4Set (&buf, 4, 2);          /* Laenge auf 2 Bytes setzen, da kurze Anpassung */\r\n                    strM2Set (&buf, 8, iAnpassung); /* 2 Bytes Anpasswert setzen */\r\n        \t        *Anpassung_String = *Anpassung_String + buf;\r\n        \t    }\r\n                else\r\n                {\r\n                    /* Lange Anpassung */\r\n        \t        errDebug (0, sprintf (\"Lange Anpassung: Kanal %#lx, Anp= '%s'\", iKanal, hexstr(sData)));\r\n                    strM4Set (&buf, 4, strlen(sData));   /* Laenge setzen fuer lange Anpassung */\r\n                    *Anpassung_String = *Anpassung_String + buf + sData;\r\n                }\r\n    \t        iAnz = iAnz + 1;\r\n    \t    }\r\n    \t}\r\n    }\r\n    if (!err)\r\n\t    strM4Set (Anpassung_String, 0, iAnz);\r\n    else\r\n\t    err = errFatal (NOK, \"zdc anpassung data error\");\r\n\r\n    if (Zeile > 0)\r\n\t    _dlgMultiTextRsltBmp (DialogHndl, Zeile, Text, err);\r\n}\r\nif (err || iAnz == 0)\r\n    *Anpassung_String = \"\";\r\nif (!err)\r\n    _statSetAsciiResult (err, sInfo + \" data=0h\" + midstr (hexstr(*Anpassung_String), 0, 64), FOK);\r\n//    _statSetAsciiResult (err, sInfo, FOK);\r\nelse\r\n    _statSetAsciiResult (err, KommentarNOK, FUABBR);\r\n";}
     NodeCategory{"";}
     Info{"Dieser Baustein berechnet die Anpassdaten nach dem Zieldatencontainer (ZDC) V 2.03. (S)\r\nZieldatencontainer der Version 2.02 k\xF6nnen mit diesem Baustein auch verarbeitet werden.\r\nEs gibt dann keine \"Lange Anpassung\".\r\n\r\nAls Parameter muss das \"ZdcHndl\" \xFCbergeben werden, dass mit dem Baustein \"ZdcOpen\" erzeugt wurde.\r\n\r\nDer Parameter \"Modusteil\" kann zur Filterung der Daten innerhalb des Containers verwendet werden. \r\nMit Modusteil gleich \"\" werden alle Tabellen mit dem Modus \"A\" im ZDC ausgewertet.\r\n\r\nDer Baustein liefert mit dem Parameter \"Anpassung_String\" die Anpassdaten im folgenden Format:\r\n\r\n4 Byte: Anzahl Anpassungen;\r\n    4 Byte: 1. Anpassungs-Kanal;\r\n    4 Byte: 1. Laenge n der einzelnen Anpassung; \r\n    n Byte: 1. Anpassungswert;\r\n\r\n    4 Byte: 2. Anpassungs-Kanal;\r\n    4 Byte: 2. Laenge m der einzelnen Anpassung; \r\n    m Byte: 2. Anpassungswert; ...\r\n\r\n\r\nBeispiel:\r\n\"\\h000000020000000100000002abcd00000005000000a00102030405060708090a\"\r\nAnzahl Anpassungen: 2\r\nKanal: 1 kurze Anpassung: 43981 (int)\r\nKanal: 5 lange Anpassung: 0102030405060708090A\r\n\r\nDer Baustein berechnet nur die Anpassdaten. Das Schreiben der Daten erfolgt nicht durch diesen Baustein!\r\n\r\n20.01.06, sr: erstellt";"";}
     Rights{"Write";"Read";}
     VersionInfo{
      CurVersion{3;1;"nbmr";}
      Version{0;1;"AAC";"- in Arbeit -";"sr";"09.01.2006 11:09:21";}
      Version{0;2;"AAC";"- in Arbeit -";"sr";"09.01.2006 11:12:31";}
      Version{0;3;"AAC";"- in Arbeit -";"sr";"09.01.2006 11:14:31";}
      Version{1;0;"AAC";"Erste Version.";"sr";"09.01.2006 11:14:55";}
      Version{1;1;"AAC";"Bugfix zu Position der Daten bei kurzer Anpassung";"sr";"09.01.2006 17:14:47";}
      Version{2;0;"AAC";"";"sr";"20.01.2006 15:13:10";}
      Version{2;1;"AAC";"- in Arbeit -";"sr";"20.01.2006 17:53:34";}
      Version{3;0;"AAC";"Bugfix. Wenn lange Anpassung\r\nnach kurzer Anpassung kam,\r\nwurden alte Daten der kurzen\r\nAnpassung mit in die lange\r\nAnpassung \xFCbernommen.";"sr";"20.01.2006 17:53:42";}
      Version{3;1;"nbmr";"[ Baustein importiert (neu) ]";"dsa";"03.12.2008 12:35:14";}}}}}}
 FunctionDef{
  Name{"VW_spezifische_Bibliothek";}
  LangName{"VW_spezifische_Bibliothek";"VW_specific_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"Sammlung von Bausteinen zur Kommunikation mit Steuergeraeten von VW.";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;2;"ZPH18";}
   Version{1;0;"AC";"- freigegeben -";"vw-admin";"04.03.2003 11:56:19";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"07.08.2006 13:58:14";}
   Version{1;2;"ZPH18";"[ Baustein importiert (ersetzt) ]";"admin";"14.08.2007 15:07:01";}}
  FunctionDef{
   Name{"VW_Codefileauswahl";}
   LangName{"VW_Codefileauswahl";"VW_Codefileauswahl";}
   CvsVerHis{}
   Type{1;}
   Icon{0;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Platzhalter f\xFCr Pr\xFCfschritte";"";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{0;1;"PAE";}
    Version{0;1;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"24.07.2006 17:06:13";}}
   FunctionDef{
    Name{"Pfau_9_2_0";}
    LangName{"Pfau_9_2_0";"";}
    CvsVerHis{}
    Type{1;}
    Icon{0;}
    Properties{"Begin";}
    FormalParam{}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"";}
    NodeCategory{"";}
    Info{"";"";}
    Rights{"Write";"Read";}
    VersionInfo{
     CurVersion{0;1;"PAE";}
     Version{0;1;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"24.07.2006 17:06:13";}}
    FunctionDef{
     Name{"ZdcProgrammierungL";}
     LangName{"ZdcProgrammierungL";"ZdcProgrammingLong";}
     CvsVerHis{}
     Type{1;}
     Icon{0;}
     Properties{"Begin";}
     FormalParam{
      InputParam{"DialogHndl";
       LangName{"DialogHndl";"DialogHndl";}"DialogTyp";"DIALOG_LOKAL";
       LangDesc{"Dialog handle";"Dialog handle";}}
      InputParam{"Zeile";
       LangName{"Zeile";"Zeile";}"DialogLine";"CDialog_Keine_Anzeige";
       LangDesc{"";"\"\"";}}
      InputParam{"Text";
       LangName{"Text";"Text";}"TEXT";"CTextCodefileAuswahl";
       LangDesc{"";"\"\"";}}
      InputParam{"ZdcHndl";
       LangName{"ZdcHndl";"ZdcHndl";}"ZDC_HNDL";"DZdcHndl";
       LangDesc{"Handle zu einem ZDC";"\"\"";}}
      InputParam{"Modusteil";
       LangName{"Modusteil";"Modusteil";}"ZDC_MODUSTEIL";"CZDCModusAll";
       LangDesc{"Modusteil wird als Filter eingesetzt (mit Modusteil == \"\" wird der Filter ausgeschaltet) ";"\"\"";}}
      OutputParam{"ProgL_String";
       LangName{"ProgL_String";"ProgL_String";}"Codefile_Result_Str";"Dummy_ProgL_String";
       LangDesc{"zu programmierender String im 4 Byte Adress-Format";"\"\"";}}}
     LocalVar{
      LocVarDef{"KommentarNOK";
       LangName{"KommentarNOK";"";}"Locvar";"TEXT";
       LangDesc{"";"";}
       LangText{"\"Programmierstring ungueltig\"";"\"\xB1\xE0\xB3\xCC\xD7\xD6\xB7\xFB\xB4\xAE\xCE\xDE\xD0\xA7\"";"\"Programming string unvalid\"";}"Const";}}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     MSLCode{"string\tsInfo, sData, buf;\r\nint         iAnz, iDataTyp;\r\nint\t\tlen;\r\nstring\tsRohteilenummer, sFertigteilenummer, sKanal, sDatenInternFormat;\r\nint\t\tiStartAdr, iUncompressedSize, iLoeschbereichStart, iLoeschbereichEnd;\r\nint\t\tiDatencheckStart, iDatencheckEnd, iDatencheckChecksum, iLength;\r\n\r\nerr = 0;\r\nif (ZdcHndl >= 0)\r\n{\r\n    if (Zeile > 0)\r\n        _dlgMultiSetLine (DialogHndl, Zeile, Text);\r\n\r\n    *ProgL_String = \"\";\r\n    iAnz = 0;\r\n    strM4Set (ProgL_String, 0, iAnz);\r\n    zdcCollectSeekFirst (ZdcHndl);\r\n    while (!err)\r\n    {\r\n\terr = zdcCollect (ZdcHndl, \"P\", Modusteil, &sInfo, &iDataTyp);\r\n      if (err == -1)\r\n\t{\r\n\t    err = 0;\r\n\t    break;\r\n\t}\r\n\twhile (!err && iDataTyp & 4)\r\n\t{\r\n\t    err = zdcGetDataInfo (ZdcHndl,\r\n\t\t     \t\t&sRohteilenummer,\r\n\t\t\t\t&sFertigteilenummer,\r\n     \t\t\t\t&sKanal,\r\n\t\t\t\t&sDatenInternFormat,\r\n     \t\t\t\t&iStartAdr,\r\n     \t\t\t\t&iUncompressedSize,\r\n     \t\t\t\t&iLoeschbereichStart,\r\n     \t\t\t\t&iLoeschbereichEnd,\r\n     \t\t\t\t&iDatencheckStart,\r\n     \t\t\t\t&iDatencheckEnd,\r\n     \t\t\t\t&iDatencheckChecksum,\r\n     \t\t\t\t&iLength);\r\n\t    if (err == -1)\r\n\t    {\r\n\t\terr = 0;\r\n\t\tbreak;\r\n\t    }\r\n\t    if (!err)\r\n\t    {\r\n\t\terr = zdcGetDataBlock (ZdcHndl, iLength + 1, &sData);\r\n\t\tlen = strlen (sData);\r\n\t\tbuf = \"\";\r\n    \t\tstrM4Set (&buf, 4, len);\r\n    \t\tstrM4Set (&buf, 0, iStartAdr);\r\n//\t\tbuf = buf + midstr (sData, 8, len);\r\n\t\tbuf = buf + sData;\r\n\t\t*ProgL_String = *ProgL_String + buf;\r\n\t\tiAnz = iAnz + 1;\r\n\t    }\r\n\t}\r\n\r\n\twhile (!err && iDataTyp & 16)\r\n\t{\r\n\t    err = zdcGetBuf (ZdcHndl, &iStartAdr, &sData);\r\n\t    if (err == -1)\r\n\t    {\r\n\t\terr = 0;\r\n\t\tbreak;\r\n\t    }\r\n\t    if (!err)\r\n\t    {\r\n\t\t    len = strlen (sData);\r\n\t\t    buf = \"\";\r\n    \t\t    strM4Set (&buf, 4, len);\r\n    \t\t    strM4Set (&buf, 0, iStartAdr);\r\n\t\t    buf = buf + sData;\r\n\t\t    *ProgL_String = *ProgL_String + buf;\r\n\t\t    iAnz = iAnz + 1;\r\n\t    }\r\n\t}\r\n    }\r\n    if (!err)\r\n\tstrM4Set (ProgL_String, 0, iAnz);\r\n    else\r\n\terr = errFatal (NOK, \"zdc programm data error\");\r\n\r\n    if (Zeile > 0)\r\n\t_dlgMultiTextRsltBmp (DialogHndl, Zeile, Text, err);\r\n}\r\nerrDebug (err, sprintf (\"progl string (%ld byte) 0h'%s'\", strlen (*ProgL_String), hexstr (midstr (*ProgL_String, 0, 100))));\r\nif (err || iAnz == 0)\r\n    *ProgL_String = \"\";\r\nif (!err)\r\n    _statSetAsciiResult (err, sInfo + \" data=0h\" + midstr (hexstr(*ProgL_String), 0, 64), FOK);\r\nelse\r\n    _statSetAsciiResult (err, KommentarNOK, FUABBR);";}
     NodeCategory{"";}
     Info{"Dieser Baustein berechnet die Programmierdaten nach dem Zieldatencontainer (ZDC) V 2.02. (S)\r\n\r\nAls Parameter muss das \"ZdcHndl\" \xFCbergeben werden, dass mit dem Baustein \"ZdcOpen\" erzeugt wurde.\r\n\r\nDer Parameter \"Modusteil\" kann zur Filterung der Daten innerhalb des Containers verwendet werden. \r\nMit Modusteil gleich \"\" werden alle Tabellen mit dem Modus \"P\" im ZDC ausgewertet.\r\n\r\nDer Baustein liefert mit dem Parameter \"ProgL_String\" die Programmierdaten im DSA internen Austauschformat\r\nf\xFCr die Bausteine:\r\n- CodefileProgrammLang_KWP2000\r\n- CodefileProgrammLang_KWP1281\r\n- CodefileProgrammLang_KWP2000_1_03\r\nAchtung:\r\nHier wird das 'neue' (lange) DSA interne Austauschformat f\xFCr Programmierdaten verwendet. \r\n\r\nDer Baustein berechnet nur die Programmierdaten. Das Schreiben der Programmierdaten erfolgt nicht \r\ndurch diesen Baustein!";"";}
     Rights{"Write";"Read";}
     VersionInfo{
      CurVersion{1;0;"AC";}
      Version{0;1;"AC";"- in Arbeit -";"vw-admin";"26.08.2003 15:35:09";}
      Version{0;2;"AC";"- in Arbeit -";"vw-admin";"26.08.2003 17:20:30";}
      Version{1;0;"AC";" - freigegeben - ";"vw-admin";"26.08.2003 17:20:33";}}}}}}
 FunctionDef{
  Name{"VW_spezifische_Bibliothek";}
  LangName{"VW_spezifische_Bibliothek";"VW_specific_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"Sammlung von Bausteinen zur Kommunikation mit Steuergeraeten von VW.";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;2;"ZPH18";}
   Version{1;0;"AC";"- freigegeben -";"vw-admin";"04.03.2003 11:56:19";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"07.08.2006 13:58:14";}
   Version{1;2;"ZPH18";"[ Baustein importiert (ersetzt) ]";"admin";"14.08.2007 15:07:01";}}
  FunctionDef{
   Name{"VW_Codefileauswahl";}
   LangName{"VW_Codefileauswahl";"VW_Codefileauswahl";}
   CvsVerHis{}
   Type{1;}
   Icon{0;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Platzhalter f\xFCr Pr\xFCfschritte";"";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{0;1;"PAE";}
    Version{0;1;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"24.07.2006 17:06:13";}}
   FunctionDef{
    Name{"Pfau_9_2_0";}
    LangName{"Pfau_9_2_0";"";}
    CvsVerHis{}
    Type{1;}
    Icon{0;}
    Properties{"Begin";}
    FormalParam{}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"";}
    NodeCategory{"";}
    Info{"";"";}
    Rights{"Write";"Read";}
    VersionInfo{
     CurVersion{0;1;"PAE";}
     Version{0;1;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"24.07.2006 17:06:13";}}
    FunctionDef{
     Name{"ZdcClose";}
     LangName{"ZdcClose";"ZdcClose";}
     CvsVerHis{}
     Type{1;}
     Icon{0;}
     Properties{"Begin";}
     FormalParam{
      OutputParam{"ZdcHndl";
       LangName{"ZdcHndl";"ZdcHndl";}"ZDC_HNDL";"DZdcHndl";
       LangDesc{"Handle zu einem ZDC";"\"\"";}}}
     LocalVar{}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     MSLCode{"err = 0;\r\nif (*ZdcHndl >= 0)\r\n    zdcClose (*ZdcHndl);\r\n*ZdcHndl = -1;";}
     NodeCategory{"";}
     Info{"Baustein schlie\xDFt einen Zieldaten-Container (ZDC) in der Version 2.02, der zuvor mit dem Baustein \r\n\"ZdcOpen\" ge\xF6ffnet wurde.";"";}
     Rights{"Write";"Read";}
     VersionInfo{
      CurVersion{0;1;"DSA";}
      Version{0;1;"DSA";"- in Arbeit -";"admin";"03.07.2003 16:12:23";}}}}}}
 FunctionDef{
  Name{"VW_spezifische_Bibliothek";}
  LangName{"VW_spezifische_Bibliothek";"VW_specific_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"Sammlung von Bausteinen zur Kommunikation mit Steuergeraeten von VW.";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;2;"ZPH18";}
   Version{1;0;"AC";"- freigegeben -";"vw-admin";"04.03.2003 11:56:19";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"07.08.2006 13:58:14";}
   Version{1;2;"ZPH18";"[ Baustein importiert (ersetzt) ]";"admin";"14.08.2007 15:07:01";}}
  FunctionDef{
   Name{"VW_STG_Verbindung_Param";}
   LangName{"VW_STG_Verbindung_Param";"VW_ECU_Connection_Param";}
   CvsVerHis{}
   Type{1;}
   Icon{1;}
   Properties{"Begin";}
   FormalParam{
    OutputParam{"STG_Hndl";
     LangName{"STG_Hndl";"STG_Hndl";}"VCIKANAL";"VCIKanal1";
     LangDesc{"VCI-Kanal";"VCI channel";}}
    InputParam{"DLG_Hndl";
     LangName{"DLG_Hndl";"DLG_Hndl";}"DialogTyp";"DIALOG_LOKAL";
     LangDesc{"Dialog handle";"Dialog handle";}}
    InputParam{"Zeile";
     LangName{"Zeile";"Zeile";}"DialogLine";"CDialogZeile1";
     LangDesc{"Ausgabezeile";"Output line";}}
    InputParam{"VCI_Type";
     LangName{"VCI_Type";"VCI_Type";}"VCITYP";"VCI_Typ_VCI5";
     LangDesc{"0 = VCI4; 1 = VCI5";"0 = VCI4; 1 = VCI5";}}
    InputParam{"VCI_Protokoll";
     LangName{"VCI_Protokoll";"VCI_Protokoll";}"VCI_Protokoll";"";
     LangDesc{"VW1281,VW2000,VW1281_TP16,VW2000_TP16,VW2000_TP20,UDS";"VW1281, VW2000, VW1281_TP16, VW2000_TP16, VW2000_TP20";}}
    InputParam{"Steuergeraet";
     LangName{"Steuergeraet";"ECU";}"ECU";"";
     LangDesc{"Steuergeraete Name";"Name of ECU";}}
    InputParam{"Timeout";
     LangName{"Timeout";"Timeout";}"Timeout";"CTimeout_00010";
     LangDesc{"Timeout-Zeit";"Timeout";}}
    InputParam{"Level";
     LangName{"Level";"Level";}"DebugLevel";"DLevel";
     LangDesc{"Debug-Level";"Debug-Level";}}
    OutputParam{"ParHndl";
     LangName{"ParHndl";"ParHndl";}"PAR_HNDL";"SemaCanTP20";
     LangDesc{"Synchronisationsvariable";"Synchronisation variable";}}}
   LocalVar{
    LocVarDef{"Kommentar1";
     LangName{"Kommentar1";"Kommentar1";}"Locvar";"TEXT";
     LangDesc{"";"";}
     LangText{"\"Reizen\"";"\"\xBA\xF4\xBD\xD0\"";"\"Wake up \"";}"Const";}
    LocVarDef{"Kommentar2";
     LangName{"Kommentar2";"Kommentar2";}"Locvar";"TEXT";
     LangDesc{"";"";}
     LangText{"\"kein gueltiger VCI-Typ\"";"\"\xCE\xDE\xD3\xD0\xD0\xA7\xB5\xC4VCI\xC0\xE0\xD0\xCD\"";"\"no valid VCI type\"";}"Const";}
    LocVarDef{"Kommentar3";
     LangName{"Kommentar3";"Kommentar3";}"Locvar";"TEXT";
     LangDesc{"";"";}
     LangText{"\"ungueltiges VCIOpen\"";"\"\xCE\xDE\xD0\xA7VCI\xBF\xAA\xC6\xF4\"";"\"invalid VCIOpen\"";}"Const";}
    LocVarDef{"Kommentar4";
     LangName{"Kommentar4";"Kommentar4";}"Locvar";"TEXT";
     LangDesc{"";"";}
     LangText{"\"ungueltiger ParamVal\"";"\"invalid ParamVal\"";"\"invalid ParamVal\"";}"Const";}}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"// **********************************************************\r\n//  mg - 01.07.04 Widerholungsschleife vergr?ert\r\n//  jk - 20.11.03 ParHndl geaendert\r\n// created by jk - 12.11.03\r\n//  21.09.04 sz - Kommentare aendern um Sektionen der vcidev.ini zu aktivieren\r\n//  26.10.04 sz - Erweiterung: lesen der unterstuetzten Dienste und Anhaengen an VCI-Handel\r\n//  01.06.05 sz - Erweiterung: schliessen eines schon ge?fneten VCI-Handel\r\n//  08.08.05 sz - Korrektur: NOK wenn unterstuetzte Funktionen lesen zu einem Kommunikationsabbruch fuehren\r\n//  13.09.05 sz - Korrektur: zu if (...) Zeile 65 fehlte die Klammer {}; V(ParHndl) wurde immer ausgefuehrt\r\n//  04.07.06 sz - Aenderung der Wartezeit bei der Parallel-Verriegelung vor das VCI-Init \r\n//  03.11.06 sz - Erweiterung bei nicht geschlossenem Handle, _vciAdapt (ab msl version 4!!)\r\n// ********************************************************** \r\n\r\nstring ParName, ParString;\r\nstring ValName, ValString;\r\nstring RecvTel;\r\nint\ti, ValInt;\r\nint\ttStart;\r\nint\t_err;\r\nint\tStatus;\r\n\r\nif ((VCI_Type < 0) || (VCI_Type > 1))\r\n{\r\n\t_statSetAsciiResult(NOK,Kommentar2,FSTGI);\r\n\terrFatal(NOK,Kommentar2 + \"VCITyp:\",VCI_Type);\r\n\treturn NOK;\r\n}\r\n\r\nif (Zeile > 0)\r\n\t_dlgMultiSetLine (DLG_Hndl, Zeile, Kommentar1 + Steuergeraet);\r\n\r\nif (*STG_Hndl >= 0)\r\n{\r\n\tif (_vciAdapt (*STG_Hndl) == OK)\r\n\t{\r\n\t        if (midstr (VCI_Protokoll,0,6) == \"VW1281\")\r\n\t                _vciDataExchange (*STG_Hndl, 0x06, 0x09, \"\", &RecvTel);\r\n\t        else\r\n\t        \t_vciDataExchange (*STG_Hndl, 0x82, 0xc2, \"\", &RecvTel);\r\n\t}\r\n\t_vciClose (STG_Hndl);\r\n}\r\n\r\ntStart = time();\r\n\r\ndo\r\n{\r\n\tif (VCI_Type == 0)\r\n\t\tParName = \"VCI4\";\r\n\tif (VCI_Type == 1)\r\n\t\tParName = \"VCI5\";\r\n\tParName = Steuergeraet + \"_\" + ParName + \"_\" + VCI_Protokoll;\t//L?ung mit Sektionen\r\n\r\n\terr = _vciOpen (STG_Hndl, ParName);\r\n\r\n\tif (err != OK)\r\n\t{\r\n\t\t_statSetAsciiResult(NOK,Kommentar3,FSTGI);\r\n\t\t_vciClose(STG_Hndl);\r\n\t\tif (Zeile > 0)\r\n\t\t\t_dlgMultiClearLine (DLG_Hndl, Zeile);\t\r\n\t\treturn NOK;\r\n\t}\r\n\t_vciSetDebugLevel (*STG_Hndl, Level);\r\n\tif ((VCI_Protokoll == \"VW2000_TP20\") || (VCI_Protokoll == \"VW1281_TP16\") || (VCI_Protokoll == \"VW2000_TP16\") || (VCI_Protokoll == \"UDS\")) \r\n        {\r\n\t\tP(ParHndl);\r\n                Wait (0.05);\r\n        }\r\n\terr = _vciInit (*STG_Hndl);\r\n\r\n\tif ((VCI_Protokoll == \"VW2000_TP20\") || (VCI_Protokoll == \"VW1281_TP16\") || (VCI_Protokoll == \"VW2000_TP16\") || (VCI_Protokoll == \"UDS\"))\r\n\t\tV(ParHndl);\r\n\r\n\tif (err != OK)\r\n\t{\r\n\t\t_vciClose(STG_Hndl);\r\n\t\tWait (0.2);\r\n\t}\r\n}while ((err != OK) && (time () < tStart + Timeout));\r\n\r\nif (err != OK)\r\n{\r\n\terr = NOK;\r\n\t_vciStatVciError (*STG_Hndl);\r\n\t_statSetResult (err, FSTGI);\r\n}\r\nelse\r\n\t_statSetResult (OK, FSTGI);\r\n\r\nif ((err == OK) && (midstr (VCI_Protokoll,0,6) == \"VW2000\"))\r\n{\r\n\t_err = _vciDataExchange (*STG_Hndl, 0x31, 0x71, \"\\xb8\\x00\\x00\", &RecvTel);\r\n\tif (_err != OK)\r\n\t{\r\n\t\tRecvTel = \"no Response\";\r\n\t\terr = _vciAdapt (*STG_Hndl);\r\n\t}\r\n\tvciExDtaWrite (*STG_Hndl, RecvTel);\r\n}\r\n\r\n\r\nif (Zeile > 0)\r\n\t_dlgMultiClearLine (DLG_Hndl, Zeile);\r\n";}
   NodeCategory{"";}
   Info{"VW_STG_Verbindung\r\n\r\nBaustein zum Oeffnen eines Steuergeraetekanals auf K- oder CAN-Leitung \r\n\r\nDieser Baustein liest eine Standard-Konfiguration zur STG-Kommunikation ein. Danach werden alle notwendigen Parameter\r\n in diesem Init-Datensatz ueberschrieben und der Kanal geoeffnet.\r\nAusserdem wird der Debug-Level fuer die VCI-Kommunikation gesetzt und fuer die Kommunikation TP2.0 auf VCI2,4,6 der\r\nParameter zur Entkopplung des Oeffnen des CAN-Kanals gegeben..\r\n\r\nDieser Baustein mu?vor Verwendung aller anderen VCI-Funktionen ausgef\xFChrt werden.\r\n\r\nParameter:\r\n\r\nSTG_Hndl: das VCI-Handle, das geoeffnet wird.\r\nDLG_Hndl: das Dialog-Handle, das geoeffnet wird.\r\nZeile: die ZeilenNr fuer die Ausgabe (<1 keine Ausgabe)\r\nVCI_Type: der in dem Geraet eingesetzter VCI-Typ  (VCI_Type = 0 : VCI4; VCI_Type = 1 : VCI5)\r\nProtokoll: das verwendete Protokoll fuer die VCI-Kommuniktion\r\nSteuergeraet: der Steuergeraete der Kommunikation\r\nTimeout: die Zeit, welche fuer das Anreizen verwendet wird\r\nLevel: Debuglevel der VCI-Kommunikation\r\nParHndl: Handel zum Enttkoppeln des gleichzeitigen Anreizens\r\n\r\n04.07.06 sz - Aenderung der Wartezeit bei der Parallel-Verriegelung vor das VCI-Init \r\n03.11.06 sz - Erweiterung bei nicht geschlossenem Handle, _vciAdapt (ab msl version 4!!)";"";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{3;21;"nbmr";}
    Version{1;0;"AC";" in Arbeit";"vw-admin";"22.02.2005 17:58:04";}
    Version{2;0;"PAE";"";"vw-admin";"01.06.2005 13:40:01";}
    Version{3;0;"AC";"Update VCI-Handleling";"dsa-admin";"06.11.2006 16:47:30";}
    Version{3;1;"CRE1A_OF";"- in Arbeit -";"admin";"12.01.2007 09:17:37";}
    Version{3;2;"CRE1A_OF";"- in Arbeit -";"admin";"12.01.2007 09:18:22";}
    Version{3;3;"CRE1A_OF";"- in Arbeit -";"admin";"12.01.2007 09:18:45";}
    Version{3;4;"CRE1A_OF";"- in Arbeit -";"admin";"12.01.2007 09:19:13";}
    Version{3;5;"CRE1A_OF";"- in Arbeit -";"admin";"12.01.2007 09:22:36";}
    Version{3;6;"CRE1A_OF";"- in Arbeit -";"admin";"12.01.2007 09:23:12";}
    Version{3;7;"CRE1A_OF";"- in Arbeit -";"admin";"12.01.2007 09:23:42";}
    Version{3;8;"CRE1A";"- in Arbeit -";"admin";"12.01.2007 10:59:46";}
    Version{3;9;"CRE1A";"- in Arbeit -";"admin";"12.01.2007 12:47:17";}
    Version{3;10;"CRE1A";"- in Arbeit -";"admin";"12.01.2007 14:42:34";}
    Version{3;11;"CRE1A";"- in Arbeit -";"admin";"12.01.2007 14:42:48";}
    Version{3;12;"CRE1A";"- in Arbeit -";"admin";"12.01.2007 14:43:19";}
    Version{3;13;"CRE1A";"- in Arbeit -";"admin";"12.01.2007 14:44:31";}
    Version{3;14;"CRE1A";"- in Arbeit -";"admin";"01.03.2007 11:05:05";}
    Version{3;15;"CRE1A";"- in Arbeit -";"admin";"01.03.2007 11:43:18";}
    Version{3;16;"CRE1A";"- in Arbeit -";"admin";"26.04.2007 17:04:27";}
    Version{3;17;"ZPH18";"[ Baustein importiert (ersetzt) ]";"admin";"15.08.2007 10:48:22";}
    Version{3;18;"FAW";"- in Arbeit -";"admin";"27.09.2007 13:39:13";}
    Version{3;19;"svwcp2";"- in Arbeit -";"admin";"11.10.2007 20:09:02";}
    Version{3;20;"CP23A";"- in Arbeit -";"admin";"07.11.2007 11:21:40";}
    Version{3;21;"nbmr";"[ Baustein importiert (ersetzt) ]";"dsa";"15.05.2009 15:07:58";}}}}
 FunctionDef{
  Name{"DSA_Bibliothek";}
  LangName{"DSA_Bibliothek";"DSA_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;1;"AC";}
   Version{1;0;"AC";"- freigegeben -";"dsa-admin";"04.03.2003 11:44:35";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"admin";"03.07.2006 10:17:25";}}
  FunctionDef{
   Name{"Zeitgeber";}
   LangName{"Zeitgeber";"Timer";}
   CvsVerHis{}
   Type{1;}
   Icon{0;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Sammlung von Bausteinen zur Zeit\xFCberwachung und zur Ausf\xFChrungsverz\xF6gerung.";"Collection of components used in relation to timeouts and\r\nprocessing delays.";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{0;1;"SVW";}
    Version{0;1;"SVW";"- in Arbeit -";"admin";"12.04.2004 21:35:52";}}
   FunctionDef{
    Name{"Warten";}
    LangName{"Warten";"Wait";}
    CvsVerHis{}
    Type{1;}
    Icon{0;}
    Properties{"Begin";}
    FormalParam{
     InputParam{"Timeout";
      LangName{"Timeout";"Timeout";}"Timeout";"CTime01";
      LangDesc{"Wartezeit in sek.";"Waiting time in sec.";}}}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"no";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"  // print (\"wait...\");\r\n  wait (Timeout+1);\r\n";}
    NodeCategory{"";}
    Info{"Baustein zum Warten einer bestimmten Zeit.\r\n\r\nDer Parameter \"Timeout\" gibt die Wartezeit in Sekunden an.\r\n";"Module to wait a defined time.\r\n\r\nThe parameter \"timout\" defines the waiting time in seconds.";}
    Rights{"Write";"Read";}
    VersionInfo{
     CurVersion{0;2;"CP3";}
     Version{0;1;"SVW";"- in Arbeit -";"admin";"30.09.2003 15:38:42";}
     Version{0;2;"CP3";"- in Arbeit -";"admin";"28.10.2003 03:30:31";}}}}}
 FunctionDef{
  Name{"VW_spezifische_Bibliothek";}
  LangName{"VW_spezifische_Bibliothek";"VW_specific_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"Sammlung von Bausteinen zur Kommunikation mit Steuergeraeten von VW.";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;2;"ZPH18";}
   Version{1;0;"AC";"- freigegeben -";"vw-admin";"04.03.2003 11:56:19";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"07.08.2006 13:58:14";}
   Version{1;2;"ZPH18";"[ Baustein importiert (ersetzt) ]";"admin";"14.08.2007 15:07:01";}}
  FunctionDef{
   Name{"VW2000_Dienste";}
   LangName{"VW2000_Dienste";"VW2000_Dienste";}
   CvsVerHis{}
   Type{1;}
   Icon{0;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Sammlung von Bausteinen zur Kommunikation mit Steuerger\xE4ten von VW mit dem Protokoll K2000";"";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{1;3;"PAE";}
    Version{1;0;"AC";"- freigegeben -";"vw-admin";"17.02.2003 15:37:21";}
    Version{1;1;"AC";"- in Arbeit -";"vw-admin";"28.08.2003 17:40:34";}
    Version{1;2;"AC";"- in Arbeit -";"dsa-admin";"08.06.2004 08:55:47";}
    Version{1;3;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"25.07.2006 08:36:16";}}
   FunctionDef{
    Name{"VW2000_Dienste_22";}
    LangName{"VW2000_Dienste_22";"VW2000_Services_22";}
    CvsVerHis{}
    Type{1;}
    Icon{0;}
    Properties{"Begin";}
    FormalParam{}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"";}
    NodeCategory{"";}
    Info{"SG-Identifikation mit Service 0x22.\r\nDiese sollen in Zukunft die STG - ID 0x1A (0x9b, 0x9a, 0x91, 0x86, ...) abloesen.";"Moduls read the ECU Id by using the KWP2000-Comand ReadByIdentifier (Requesttitel 0x22) ";}
    Rights{"Write";"Read";}
    VersionInfo{
     CurVersion{1;0;"PAE";}
     Version{0;1;"PAE";"- in Arbeit -";"vw-admin";"30.05.2005 14:08:48";}
     Version{0;2;"PAE";"- in Arbeit -";"vw-admin";"31.05.2005 11:13:39";}
     Version{1;0;"PAE";" Freigabe ";"vw-admin";"03.06.2005 15:53:13";}}
    FunctionDef{
     Name{"VW2000_ID_9b_Lesen_kompatibel_LID";}
     LangName{"VW2000_ID_9b_Lesen_kompatibel_LID";"VW2000_ID_9b_Read_kompatible_LID";}
     CvsVerHis{}
     Type{1;}
     Icon{1;}
     Properties{"Begin";}
     FormalParam{
      InputParam{"Hndl";
       LangName{"Hndl";"Hndl";}"VCIKANAL";"VCIKanal1";
       LangDesc{"VCI-Kanal";"";}}
      OutputParam{"ID_String";
       LangName{"ID_String";"ID_String";}"VW_Result_Tel";"VW_Stg_ID";
       LangDesc{"Steuergeraete-Identifikation";"";}}}
     LocalVar{}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     MSLCode{"#pragma using VW2000_Read_Service_22_up_to_8_LIDs\r\n#pragma using VW2000_Read_Service_22_anyone_LID // err = VW2000_Read_Service_22_anyone_LID(err, Hndl, LID, &ID_String);\r\n#pragma using VW2000_ID_Lesen // err = VW2000_ID_Lesen(err, Hndl, &ID_String);\r\n\r\nint\tCodeLen;\r\nstring \tServTel, telbuf, Codetable;\r\nstring\tECU_PartNo, ECU_swv, Codestring, ECU_WSC, JNumber, SystemName, LID7Result, LID8Result;\r\n\r\n*ID_String = \"\";\r\nvciExDtaRead (Hndl, &ServTel);\r\nif (0 > strstr (ServTel, \"\\x01\\x14\"))\t// Funktion unterstuetzt? \r\n{\r\n\terr = VW2000_ID_Lesen(err, Hndl, ID_String);\r\n}\r\nelse\r\n{\r\n\terr = VW2000_Read_Service_22_anyone_LID(err, Hndl, \"\\h0601\", &telbuf);\r\n\tif (!err)\r\n\t{\r\n\t\tCodeLen = telbuf [0];\r\n\t\terr = VW2000_Read_Service_22_up_to_8_LIDs(err, Hndl, \"\\hf187\", 11, &ECU_PartNo, \"\\hf189\", 4, &ECU_swv, \"\\h0600\", CodeLen, &Codestring, \"\\hf1a5\", 6, &ECU_WSC, \"\\hf1aa\", 5, &JNumber, \"\\hf197\", 13, &SystemName, \"\", 0, &LID7Result, \"\", 0, &LID8Result, ID_String);\r\n#ifdef DEBUGSG\r\n\t\terrDebug(0, \"Codelen = \",CodeLen);\r\n\t\terrDebug(err, \"ECU_PartNo: \",ECU_PartNo, \"hex: \", hexstr (ECU_PartNo));\r\n\t\terrDebug(err, \"ECU_swv: \",ECU_swv, \"hex: \", hexstr (ECU_swv));\r\n\t\terrDebug(err, \"Codestring: \",Codestring, \"hex: \", hexstr (Codestring));\r\n\t\terrDebug(err, \"ECU_WSC: \",ECU_WSC, \"hex: \", hexstr (ECU_WSC));\r\n\t\terrDebug(err, \"JNumber: \",JNumber, \"hex: \", hexstr (JNumber));\r\n\t\terrDebug(err, \"SystemName: \",SystemName, \"hex: \", hexstr (SystemName));\r\n#endif\r\n\t}\r\n\tif (!err)\r\n\t{\r\n\t\tif (CodeLen == 3)\r\n\t\t{\r\n\t\t\tCodetable = \"\\x03\";\r\n\t\t\tCodestring = midstr (Codestring, 1, 3);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tCodetable = \"\\x10\";\r\n\t\t\tCodestring = strset(0x00, 3);\r\n\t\t}\r\n\t\t*ID_String = \"\\x9b\" + ECU_PartNo + \" \" + ECU_swv + Codetable + Codestring + ECU_WSC + JNumber + strset (0x20, 1) + SystemName + strset (0x20, 1);\r\n#ifdef DEBUGSG\r\n\t\terrDebug(err, \"ID_String 9b: \",*ID_String, \"hex: \", hexstr (*ID_String));\r\n#endif\r\n\t\t_statSetStrResult (err, *ID_String, FSTGI);\r\n\t}\r\n}\r\n\r\n";}
     NodeCategory{"";}
     Info{"Modul lie\xDFt die Steuergeraete-Identifikation.\r\nDabei wird der KWP2000-Befehl ReadECUIdentification (Blocktitel 0x1a)\r\nmit dem Parameter ECU-Identification ( 0x9b) verwendet.\r\nUnterstuetzt das STG den Befehl ReadByIdentifier (Blocktitel 0x22) werden die RIDs \r\n F187, F189, 0600, F1A5, F1AA, F197 gelesen und die klassische ID zusammengebaut. Damit ist die Verwendung\r\nder bisherigen Bewertungsbausteine moeglich und ein fliessender Uebergang von 0x1A \r\nzu 0x22 moeglich.\r\n\r\nDie gelesene Identifikation wird immer vollstaendig in der Variablen ID-String abgespeichert.\r\n\r\nIn der Statistik wird der ID-String abgespeichert.\r\n\r\nDie Bewertung des Pr\xFCfschrittes ist immer OK, wenn das Lesen der ID vom Steuerger\xE4t erfolgreich\r\nwar.\r\n\r\n14.06.06, sz: erstellt\r\n21.06.06, sz: Bugfix: der WSC kann nicht ueber LID F198 gelesen werden sondern ueber LID F1A5.";"Modul reads the ECU Id.\r\nBy using the KWP2000-Comand ReadECUIdentification (Requesttitel 0x1a)\r\nwith parameter ECUidentification (0x9b).\r\nIf the ECU supports the command ReadByIdentifier (Requesttitel 0x22) the RIDs \r\nF187, F188, F189, 0600 will be read and the classic id will be built.  For that the existing \r\nevaluations could be used and a change from 0x1A to 0x22 is possible.\r\n\r\nThe id will be stored in the parameter ID-String.\r\n\r\nAlso in the statistiks will the id be stored.\r\n\r\nThe evaluatin of the module will be OK if the reading of the id was OK.\r\n\r\nsz, 31.05.05";}
     Rights{"Write";"Read";}
     VersionInfo{
      CurVersion{2;2;"ZPH18";}
      Version{0;1;"PAE";"- in Arbeit -";"vw-admin";"25.05.2005 14:50:16";}
      Version{0;2;"PAE";"- in Arbeit -";"vw-admin";"25.05.2005 14:59:45";}
      Version{0;3;"PAE";"- in Arbeit -";"vw-admin";"25.05.2005 15:44:10";}
      Version{0;4;"PAE";"- in Arbeit -";"vw-admin";"25.05.2005 15:47:48";}
      Version{0;5;"PAE";"- in Arbeit -";"vw-admin";"30.05.2005 16:47:53";}
      Version{0;6;"PAE";"- in Arbeit -";"vw-admin";"30.05.2005 16:59:51";}
      Version{0;7;"PAE";"- in Arbeit -";"vw-admin";"31.05.2005 10:09:34";}
      Version{0;8;"PAE";"- in Arbeit -";"vw-admin";"02.06.2005 14:55:09";}
      Version{0;9;"PAE";"- in Arbeit -";"vw-admin";"03.06.2005 09:23:38";}
      Version{0;10;"PAE";"- in Arbeit -";"vw-admin";"03.06.2005 09:24:49";}
      Version{0;11;"PAE";"- in Arbeit -";"vw-admin";"03.06.2005 09:25:01";}
      Version{0;12;"PAE";"- in Arbeit -";"vw-admin";"03.06.2005 13:36:06";}
      Version{1;0;"PAE";" Freigabe ";"vw-admin";"03.06.2005 15:53:21";}
      Version{1;1;"PAE";"- in Arbeit -";"vw-admin";"03.06.2005 15:54:08";}
      Version{1;2;"AC";"- in Arbeit -";"dsa-admin";"08.06.2006 16:09:24";}
      Version{1;3;"AC";"- in Arbeit -";"dsa-admin";"08.06.2006 16:26:28";}
      Version{1;4;"AC";"- in Arbeit -";"dsa-admin";"08.06.2006 16:26:46";}
      Version{1;5;"AC";"- in Arbeit -";"dsa-admin";"09.06.2006 16:09:04";}
      Version{1;6;"AC";"- in Arbeit -";"dsa-admin";"09.06.2006 16:16:18";}
      Version{1;7;"AC";"- in Arbeit -";"dsa-admin";"09.06.2006 16:29:24";}
      Version{1;8;"AC";"- in Arbeit -";"dsa-admin";"09.06.2006 16:44:15";}
      Version{1;9;"AC";"- in Arbeit -";"dsa-admin";"14.06.2006 11:27:05";}
      Version{1;10;"AC";"- in Arbeit -";"dsa-admin";"14.06.2006 11:30:10";}
      Version{1;11;"AC";"- in Arbeit -";"dsa-admin";"14.06.2006 15:26:18";}
      Version{2;0;"AC";" - Updated to LH 2006 -";"dsa-admin";"14.06.2006 15:47:32";}
      Version{2;1;"AC";"- in Arbeit -";"dsa-admin";"21.06.2006 12:43:03";}
      Version{2;2;"ZPH18";"[ Baustein importiert (neu) ]";"admin";"14.08.2007 15:07:02";}}}}}}
 FunctionDef{
  Name{"VW_spezifische_Bibliothek";}
  LangName{"VW_spezifische_Bibliothek";"VW_specific_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"Sammlung von Bausteinen zur Kommunikation mit Steuergeraeten von VW.";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;2;"ZPH18";}
   Version{1;0;"AC";"- freigegeben -";"vw-admin";"04.03.2003 11:56:19";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"07.08.2006 13:58:14";}
   Version{1;2;"ZPH18";"[ Baustein importiert (ersetzt) ]";"admin";"14.08.2007 15:07:01";}}
  FunctionDef{
   Name{"VW2000_Dienste";}
   LangName{"VW2000_Dienste";"VW2000_Dienste";}
   CvsVerHis{}
   Type{1;}
   Icon{0;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Sammlung von Bausteinen zur Kommunikation mit Steuerger\xE4ten von VW mit dem Protokoll K2000";"";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{1;3;"PAE";}
    Version{1;0;"AC";"- freigegeben -";"vw-admin";"17.02.2003 15:37:21";}
    Version{1;1;"AC";"- in Arbeit -";"vw-admin";"28.08.2003 17:40:34";}
    Version{1;2;"AC";"- in Arbeit -";"dsa-admin";"08.06.2004 08:55:47";}
    Version{1;3;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"25.07.2006 08:36:16";}}
   FunctionDef{
    Name{"VW2000_ID";}
    LangName{"VW2000_ID";"VW2000_ID";}
    CvsVerHis{}
    Type{1;}
    Icon{0;}
    Properties{"Begin";}
    FormalParam{}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"";}
    NodeCategory{"";}
    Info{"";"";}
    Rights{"Write";"Read";}
    VersionInfo{
     CurVersion{0;1;"PAE";}
     Version{0;1;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"24.07.2006 17:06:13";}}
    FunctionDef{
     Name{"VW2000_TNr";}
     LangName{"VW2000_TNr";"VW2000_TNr";}
     CvsVerHis{}
     Type{1;}
     Icon{1;}
     Properties{"Begin";}
     FormalParam{
      InputParam{"ID_Nummer";
       LangName{"ID_Nummer";"ID_Nummer";}"ID_Nummern";"erste_ID";
       LangDesc{"zu lesende ID";"\"\"";}}
      InputParam{"ID_String";
       LangName{"ID_String";"ID_String";}"VW_Result_Tel";"VW_Stg_ID";
       LangDesc{"gelesene STG-Identifikation";"\"\"";}}
      OutputParam{"Subsystem";
       LangName{"Subsystem";"Subsystem";}"VW_Subsystem";"LIN_Subsystem";
       LangDesc{"LIN-Bus-Subsystem";"\"\"";}}
      OutputParam{"Teilenummer";
       LangName{"Teilenummer";"Teilenummer";}"StgTNr";"DTNR";
       LangDesc{"gelesene Teilenummer";"\"\"";}}}
     LocalVar{}
     Condition{"ever";"ok";"";}
     Evaluation{"no";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     MSLCode{"err =  _vwK2000VWIdTNR (ID_String, ID_Nummer, Teilenummer);\r\n_vwK2000GetSubsystem(ID_String, ID_Nummer, Subsystem);\r\n\r\nif (err)\r\n    err = NOK;\r\n\r\n_statSetStrResult (err, *Teilenummer, FSTGI);\r\n\r\n";}
     NodeCategory{"";}
     Info{"Modul lie\xDFt nicht die Steuerger\xE4te-Identifikation aus dem Steuerger\xE4t, sondern nutzt die durch\r\neinen VW-Dienst VW2000_ID_Lesen in der  Variablen ID-String abgespeicherten Identifiktion.\r\n\r\nDie 12 Stellen VW/Audi-Teilenummer der gelesenen Identifikation werden in der Varablen\r\n\"Teilenummer\" gespeichert.\r\n\r\nDas LIN-Bus-Codierbyte wird dabei dem Subsystem \xFCbergeben.\r\n";"";}
     Rights{"Write";"Read";}
     VersionInfo{
      CurVersion{0;2;"AC";}
      Version{0;1;"AC";"- in Arbeit -";"admin";"11.02.2005 13:58:33";}
      Version{0;2;"AC";"- in Arbeit -";"admin";"11.02.2005 13:59:45";}}}}}}
 FunctionDef{
  Name{"VW_spezifische_Bibliothek";}
  LangName{"VW_spezifische_Bibliothek";"VW_specific_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"Sammlung von Bausteinen zur Kommunikation mit Steuergeraeten von VW.";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;2;"ZPH18";}
   Version{1;0;"AC";"- freigegeben -";"vw-admin";"04.03.2003 11:56:19";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"07.08.2006 13:58:14";}
   Version{1;2;"ZPH18";"[ Baustein importiert (ersetzt) ]";"admin";"14.08.2007 15:07:01";}}
  FunctionDef{
   Name{"VW_Codefileauswahl";}
   LangName{"VW_Codefileauswahl";"VW_Codefileauswahl";}
   CvsVerHis{}
   Type{1;}
   Icon{0;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Platzhalter f\xFCr Pr\xFCfschritte";"";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{0;1;"PAE";}
    Version{0;1;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"24.07.2006 17:06:13";}}
   FunctionDef{
    Name{"Pfau_9_2_0";}
    LangName{"Pfau_9_2_0";"";}
    CvsVerHis{}
    Type{1;}
    Icon{0;}
    Properties{"Begin";}
    FormalParam{}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"";}
    NodeCategory{"";}
    Info{"";"";}
    Rights{"Write";"Read";}
    VersionInfo{
     CurVersion{0;1;"PAE";}
     Version{0;1;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"24.07.2006 17:06:13";}}
    FunctionDef{
     Name{"ZdcFtnCheck";}
     LangName{"ZdcFtnCheck";"ZdcFtnCheck";}
     CvsVerHis{}
     Type{1;}
     Icon{0;}
     Properties{"Begin";}
     FormalParam{
      InputParam{"ID_Expression";
       LangName{"ID_Expression";"ID_Expression";}"Codefile_Result_Str";"Dummy_ID_Exp";
       LangDesc{"Logischer Ausdr\xFCck der IDs (FTN)";"\"\"";}}
      InputParam{"ID_Result";
       LangName{"ID_Result";"ID_Result";}"Codefile_Result_Str";"Dummy_ID_1_Result";
       LangDesc{"ID-String";"\"\"";}}}
     LocalVar{}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     MSLCode{"if (zdcFtnCheck (ID_Expression, ID_Result, 12))\r\n    err = OK;\r\nelse\r\n    err = NOK;\r\n_statSetAsciiResult (err, ID_Result, FMWNOK);\r\n_statSetValue (ID_Expression);";}
     NodeCategory{"";}
     Info{"Baustein zur Bewertung eines logischen VW-LAS Ausdrucks (s).\r\n\r\nMit dem Parameter \"ID_Expression\" wird der logische Ausdruck \xFCbergeben.\r\nDieser Wert wird mit dem Baustein \"VW_Codefile_STG_9_2_0\" geliefert.\r\n\r\nMit dem Parameter \"ID_Result\" wird der ID-String oder die Verkettung von ID-Strings \xFCbergeben.\r\nDie ID's m\xFCssen jeweils genau 12 Zeichen lang sein.\r\n\r\nDer Baustein liefert OK zur\xFCck, wenn der logische Ausdruck durch die ID's im Parameter \"ID_Result\" wahr wird, \r\nandernfalls NOK.\r\n\r\n\r\n";"";}
     Rights{"Write";"Read";}
     VersionInfo{
      CurVersion{0;2;"DSA";}
      Version{0;1;"DSA";"- in Arbeit -";"cm";"23.07.2003 18:36:24";}
      Version{0;2;"DSA";"- in Arbeit -";"cm";"23.07.2003 18:42:43";}}}}}}
 FunctionDef{
  Name{"VW_spezifische_Bibliothek";}
  LangName{"VW_spezifische_Bibliothek";"VW_specific_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"Sammlung von Bausteinen zur Kommunikation mit Steuergeraeten von VW.";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;2;"ZPH18";}
   Version{1;0;"AC";"- freigegeben -";"vw-admin";"04.03.2003 11:56:19";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"07.08.2006 13:58:14";}
   Version{1;2;"ZPH18";"[ Baustein importiert (ersetzt) ]";"admin";"14.08.2007 15:07:01";}}
  FunctionDef{
   Name{"VW2000_Dienste";}
   LangName{"VW2000_Dienste";"VW2000_Dienste";}
   CvsVerHis{}
   Type{1;}
   Icon{0;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Sammlung von Bausteinen zur Kommunikation mit Steuerger\xE4ten von VW mit dem Protokoll K2000";"";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{1;3;"PAE";}
    Version{1;0;"AC";"- freigegeben -";"vw-admin";"17.02.2003 15:37:21";}
    Version{1;1;"AC";"- in Arbeit -";"vw-admin";"28.08.2003 17:40:34";}
    Version{1;2;"AC";"- in Arbeit -";"dsa-admin";"08.06.2004 08:55:47";}
    Version{1;3;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"25.07.2006 08:36:16";}}
   FunctionDef{
    Name{"VW2000_ID";}
    LangName{"VW2000_ID";"VW2000_ID";}
    CvsVerHis{}
    Type{1;}
    Icon{0;}
    Properties{"Begin";}
    FormalParam{}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"";}
    NodeCategory{"";}
    Info{"";"";}
    Rights{"Write";"Read";}
    VersionInfo{
     CurVersion{0;1;"PAE";}
     Version{0;1;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"24.07.2006 17:06:13";}}
    FunctionDef{
     Name{"VW2000_Cod_Bew";}
     LangName{"VW2000_Cod_Bew";"VW2000_Code_Evaluate";}
     CvsVerHis{}
     Type{1;}
     Icon{1;}
     Properties{"Begin";}
     FormalParam{
      InputParam{"DlgHndl";
       LangName{"DlgHndl";"DlgHndl";}"DialogTyp";"DIALOG_LOKAL";
       LangDesc{"Dialog handle";"Dialog handle";}}
      InputParam{"ID_Nummer";
       LangName{"ID_Nummer";"ID_Nummer";}"ID_Nummern";"erste_ID";
       LangDesc{"zu lesende ID";"Part number to be read";}}
      InputParam{"Codierung";
       LangName{"Codierung";"Codierung";}"StgCodierung";"";
       LangDesc{"zu vergleichende Codierung";"\"\"";}}
      InputParam{"OK_Anzeige";
       LangName{"OK_Anzeige";"OK_Anzeige";}"ZUSTAND";"Nein";
       LangDesc{"Anzeige, wenn ID i.O.";"\"\"";}}
      InputParam{"AnzeigeZeit";
       LangName{"AnzeigeZeit";"AnzeigeZeit";}"Time";"CTime_1";
       LangDesc{"Anzeigezeit";"Display time";}}
      InputParam{"Subsystem";
       LangName{"Subsystem";"Subsystem";}"VW_Subsystem";"LIN_Subsystem";
       LangDesc{"LIN_Bus_Subsystem";"LIN-Bus-Subsystem";}}
      InputParam{"ID_String";
       LangName{"ID_String";"ID_String";}"VW_Result_Tel";"VW_Stg_ID";
       LangDesc{"gelesene STG-Identifikation";"ECU ID string";}}}
     LocalVar{
      LocVarDef{"Kommentar1";
       LangName{"Kommentar1";"";}"Locvar";"TEXT";
       LangDesc{"";"";}
       LangText{"\"Codierung bewerten\"";"\"\xB1\xE0\xC2\xEB\xC6\xC0\xB9\xC0\"";"\"Code evaluate\"";}"Const";}
      LocVarDef{"KommentarErg";
       LangName{"KommentarErg";"KommentarErg";}"Locvar";"TEXT";
       LangDesc{"";"";}
       LangText{"\"Cod\"";"\"\xB1\xE0\xC2\xEB\"";"\"Cod\"";}"Const";}
      LocVarDef{"KommentarStatNOK";
       LangName{"KommentarStatNOK";"";}"Locvar";"TEXT";
       LangDesc{"";"";}
       LangText{"\"keine kurze Codierung\"";"\"\xCE\xDE\xB6\xCC\xB1\xE0\xC2\xEB\"";"\"no short code\"";}"Const";}}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     MSLCode{"int       Cod;\r\nstring\tCodStr;\r\nint       cnt;\r\nint      OK_cnt;\r\nint       status;\r\nint       _err;\r\nstring telbuf;\r\nstring telName;\r\n\r\nif (AnzeigeZeit != 0)\r\n\t_dlgMultiSetLine (DlgHndl, 1, Kommentar1);\r\n\r\n_statSetValue (sprintf(\"%d\",Codierung));\r\n\r\nif (!((Subsystem == 0x03) || ((Subsystem & 0xf0) == 0x20)))\r\n\t{\r\n\t_statSetAsciiResult(NOK,sprintf(\"%s:%02lx\",KommentarStatNOK,Subsystem),FMWNOK);\r\n\t_dlgMultiClearLine (DlgHndl, 1);\r\n\treturn NOK;\r\n\t}\r\n\r\nerr =  _vwK2000VWIdCodierungLIN (ID_String, ID_Nummer, &Cod, &Subsystem);\r\n\r\nif (( err == OK ) && ( Cod != Codierung ))\r\n\terr = NOK;\r\n\r\nxtoy(Cod,&CodStr);\r\n_statSetAsciiResult(err,CodStr,FMWNOK);\r\n\r\nif (AnzeigeZeit == 0)\r\n\treturn(err);\r\n\r\nif ((err == OK) && (OK_Anzeige == 0))\r\n\treturn(err);\r\n\r\n_dlgMultiTextRsltBmp (DlgHndl,2,sprintf(\"%s %d\",KommentarErg,Cod),err);\r\n\r\n_err = _dlgRecvTel (DlgHndl, AnzeigeZeit, &telbuf );\r\n_dlgMultiSetButtons(DlgHndl,2);\t\r\nif (!_err)\r\n\tcsfRead(telbuf, &telName, &status);\r\n\r\n_dlgMultiClearLine (DlgHndl, 1);\r\n_dlgMultiClearLine (DlgHndl, 2);";}
     NodeCategory{"";}
     Info{"Modul lie\xDFt nicht die Steuerger\xE4te-Identifikation aus dem Steuerger\xE4t, sondern nutzt die durch\r\nden VW-Dienst VW2000_ID_Lesen in der  Variablen ID-String abgespeicherten Identifiktion.\r\n\r\nDer Befehl unterst\xFCtzt den Codierwert der unteren 23 Bit der Bytes 18..20 des ID-Strings.\r\nIst das Byte 17 ungeleich 03 oder 21, 22, 2x wird von einem STG ohne \"kurze\" Codierung \r\nausgegeganen und der R\xFCckgabewert ist 0.\r\nDer von STG gelesene Codierwert wird mit dem in der Variablen \"Codierung\" \xFCbergebenen \r\nCodierung verglichen.\r\n\r\nIn der Statistik wird die vom Steuerger\xE4t gelesene Codierung abgespeichert.\r\n\r\nDie Bewertung des Pr\xFCfschrittes ist immer OK, wenn die in der Variablen \"Codierung\" \xFCbergebene \r\nCodierung mit der Codierung des Steuerger\xE4tes \xFCbereinstimt.\r\n\r\nDurch Setzen des Parameters \"OK-Anzeige\" auf \"ja\" und der \xDCbergabe einer \"Anzeigezeit\"\r\ngr\xF6\xDFer 0 wird sowohl bei OK als auch bei NOK Bewertung des Pr\xFCfschrittes die Codierung\r\ndes Steuerger\xE4tes angezeigt. \r\nDurch Setzen des Parameters \"OK-Anzeige\" auf \"nein\" und der \xDCbergabe einer \"Anzeigezeit\"\r\ngr\xF6\xDFer 0 wird nur  bei NOK Bewertung des Pr\xFCfschrittes die Codierung angezeigt. \r\nDurch Setzen der \"Anzeigezeit\" auf 0 wird die Anzeige immer unterdr\xFCckt.\r\n\r\nDas LIN-Bus-Codierbyte wird vom STG in \"Subsystem\" \xFCbergeben.\r\n\r\n// sz, 23.04.03, Bugfix: NOK wenn Baustein nicht f\xFCr kurze Codierung verwendet wird.";"";}
     Rights{"Write";"Read";}
     VersionInfo{
      CurVersion{1;10;"nbmr";}
      Version{1;0;"AC";"- freigegeben -";"vw-admin";"24.03.2003 16:36:24";}
      Version{1;1;"AC";"- in Arbeit -";"dsa-admin";"23.04.2003 10:56:15";}
      Version{1;2;"AC";"- in Arbeit -";"dsa-admin";"23.04.2003 17:19:08";}
      Version{1;3;"MOS";"- in Arbeit -";"mosel-admin";"09.05.2003 15:41:20";}
      Version{1;4;"MOS";"- in Arbeit -";"mosel-admin";"15.05.2003 08:54:10";}
      Version{1;5;"SVW";"- in Arbeit -";"admin";"24.09.2003 13:00:15";}
      Version{1;6;"SVW";"- in Arbeit -";"admin";"24.09.2003 13:57:16";}
      Version{1;7;"SVW";"- in Arbeit -";"admin";"24.09.2003 14:23:11";}
      Version{1;8;"SVW";"- in Arbeit -";"admin";"24.09.2003 14:28:09";}
      Version{1;9;"CP3";"- in Arbeit -";"admin";"24.08.2006 09:45:21";}
      Version{1;10;"nbmr";"[ Baustein importiert (ersetzt) ]";"dsa";"14.05.2009 09:31:48";}}}}}}
 FunctionDef{
  Name{"VW_spezifische_Bibliothek";}
  LangName{"VW_spezifische_Bibliothek";"VW_specific_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"Sammlung von Bausteinen zur Kommunikation mit Steuergeraeten von VW.";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;2;"ZPH18";}
   Version{1;0;"AC";"- freigegeben -";"vw-admin";"04.03.2003 11:56:19";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"07.08.2006 13:58:14";}
   Version{1;2;"ZPH18";"[ Baustein importiert (ersetzt) ]";"admin";"14.08.2007 15:07:01";}}
  FunctionDef{
   Name{"VW2000_Dienste";}
   LangName{"VW2000_Dienste";"VW2000_Dienste";}
   CvsVerHis{}
   Type{1;}
   Icon{0;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Sammlung von Bausteinen zur Kommunikation mit Steuerger\xE4ten von VW mit dem Protokoll K2000";"";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{1;3;"PAE";}
    Version{1;0;"AC";"- freigegeben -";"vw-admin";"17.02.2003 15:37:21";}
    Version{1;1;"AC";"- in Arbeit -";"vw-admin";"28.08.2003 17:40:34";}
    Version{1;2;"AC";"- in Arbeit -";"dsa-admin";"08.06.2004 08:55:47";}
    Version{1;3;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"25.07.2006 08:36:16";}}
   FunctionDef{
    Name{"VW2000_sonstige_Funktionen";}
    LangName{"VW2000_sonstige_Funktionen";"";}
    CvsVerHis{}
    Type{1;}
    Icon{0;}
    Properties{"Begin";}
    FormalParam{}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"";}
    NodeCategory{"";}
    Info{"";"";}
    Rights{"Write";"Read";}
    VersionInfo{}
    FunctionDef{
     Name{"VW2000_Bewertung_unterstuetzter_Funktionen";}
     LangName{"VW2000_Bewertung_unterstuetzter_Funktionen";"VW2000_evaluate_supported_Functions";}
     CvsVerHis{}
     Type{1;}
     Icon{1;}
     Properties{"Begin";}
     FormalParam{
      InputParam{"Hndl";
       LangName{"Hndl";"Hndl";}"VCIKANAL";"VCIKanal1";
       LangDesc{"VCI-Kanal";"\"\"";}}
      InputParam{"BinOption";
       LangName{"BinOption";"BinOption";}"BinServices";"";
       LangDesc{"unterstuetzte Funktion im binaeren Format z.B. \"\\h0102\"";"";}}}
     LocalVar{}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     MSLCode{"string\tServTel;\r\n\r\nvciExDtaRead (Hndl, &ServTel);\r\nif (0 > strstr (ServTel, BinOption))\r\n{\r\n\terr = NOK;\r\n\t_statSetAsciiResult (err, hexstr (BinOption), FMWNOK);\r\n}\r\nelse\r\n{\r\n\terr = OK;\r\n\t_statSetAsciiResult (err, hexstr (BinOption), FOK);\r\n}\r\n";}
     NodeCategory{"";}
     Info{"Dieser Baustein liest keine Daten vom STG sondern prueft, ob eine Funktion \r\nvom STG als unterstuetzte Funktion angemeldet ist.\r\n\r\nDie Bewertung des Pr\xFCfschrittes ist OK, wenn die angefragte Funktion (im binaeren Format) unterst\xFCtzt wird.\r\n\r\nIn die Statistik wird die Bewertung des Pr\xFCfschrittes die angefragte Funktion gespeichert.";"";}
     Rights{"Write";"Read";}
     VersionInfo{
      CurVersion{1;1;"PAE";}
      Version{0;1;"AC";"- in Arbeit -";"vw-admin";"14.02.2005 15:48:37";}
      Version{0;2;"AC";"- in Arbeit -";"vw-admin";"14.02.2005 15:56:52";}
      Version{0;3;"PAE";"- in Arbeit -";"vw-admin";"02.06.2005 15:06:35";}
      Version{1;0;"PAE";" Freigabe ";"vw-admin";"06.06.2005 16:22:27";}
      Version{1;1;"PAE";"- in Arbeit -";"vw-admin";"07.06.2005 11:48:27";}}}}}}
 FunctionDef{
  Name{"VW_spezifische_Bibliothek";}
  LangName{"VW_spezifische_Bibliothek";"VW_specific_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"Sammlung von Bausteinen zur Kommunikation mit Steuergeraeten von VW.";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;2;"ZPH18";}
   Version{1;0;"AC";"- freigegeben -";"vw-admin";"04.03.2003 11:56:19";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"07.08.2006 13:58:14";}
   Version{1;2;"ZPH18";"[ Baustein importiert (ersetzt) ]";"admin";"14.08.2007 15:07:01";}}
  FunctionDef{
   Name{"VW2000_Dienste";}
   LangName{"VW2000_Dienste";"VW2000_Dienste";}
   CvsVerHis{}
   Type{1;}
   Icon{0;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Sammlung von Bausteinen zur Kommunikation mit Steuerger\xE4ten von VW mit dem Protokoll K2000";"";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{1;3;"PAE";}
    Version{1;0;"AC";"- freigegeben -";"vw-admin";"17.02.2003 15:37:21";}
    Version{1;1;"AC";"- in Arbeit -";"vw-admin";"28.08.2003 17:40:34";}
    Version{1;2;"AC";"- in Arbeit -";"dsa-admin";"08.06.2004 08:55:47";}
    Version{1;3;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"25.07.2006 08:36:16";}}
   FunctionDef{
    Name{"VW2000_ID";}
    LangName{"VW2000_ID";"VW2000_ID";}
    CvsVerHis{}
    Type{1;}
    Icon{0;}
    Properties{"Begin";}
    FormalParam{}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"";}
    NodeCategory{"";}
    Info{"";"";}
    Rights{"Write";"Read";}
    VersionInfo{
     CurVersion{0;1;"PAE";}
     Version{0;1;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"24.07.2006 17:06:13";}}
    FunctionDef{
     Name{"VW2000_Cod_Lang_Lesen_Bew";}
     LangName{"VW2000_Cod_Lang_Lesen_Bew_o_ID";"VW2000_Cod_Long_Read_Evaluate";}
     CvsVerHis{}
     Type{1;}
     Icon{1;}
     Properties{"Begin";}
     FormalParam{
      InputParam{"Hndl";
       LangName{"Hndl";"Hndl";}"VCIKANAL";"VCIKanal1";
       LangDesc{"VCI-Kanal";"VCI channel";}}
      InputParam{"DlgHndl";
       LangName{"DlgHndl";"DlgHndl";}"DialogTyp";"DIALOG_LOKAL";
       LangDesc{"Dialog handle";"Dialog handle";}}
      InputParam{"ID_Nummer";
       LangName{"ID_Nummer";"ID_Nummer";}"ID_Nummern";"erste_ID";
       LangDesc{"zu lesende ID";"Part number to be read";}}
      InputParam{"Codierung";
       LangName{"Codierung";"Codierung";}"STRING";"DLangCodierung";
       LangDesc{"zu vergleichende Codierung";"";}}
      InputParam{"OK_Anzeige";
       LangName{"OK_Anzeige";"OK_Anzeige";}"ZUSTAND";"Nein";
       LangDesc{"Anzeige, wenn ID i.O.";"Display OK state";}}
      InputParam{"AnzeigeZeit";
       LangName{"AnzeigeZeit";"AnzeigeZeit";}"Time";"CTime_1";
       LangDesc{"Anzeigezeit";"Display time";}}
      OutputParam{"Subsystem";
       LangName{"Subsystem";"Subsystem";}"VW_Subsystem";"LIN_Subsystem";
       LangDesc{"LIN-Bus-Subsystem";"LIN-Bus-Subsystem";}}
      InputParam{"ID_String";
       LangName{"ID_String";"ID_String";}"VW_Result_Tel";"VW_Stg_ID";
       LangDesc{"gelesene STG-Identifikation";"ECU ID string";}}}
     LocalVar{
      LocVarDef{"Kommentar1";
       LangName{"Kommentar1";"Kommentar1";}"Locvar";"TEXT";
       LangDesc{"";"";}
       LangText{"\"Codierung bewerten\"";"\"\xB1\xE0\xC2\xEB\xC6\xC0\xB9\xC0\"";"\"Evaluate coding information\"";}"Const";}
      LocVarDef{"KommentarStatNOK";
       LangName{"KommentarStatNOK";"KommentarStatNOK";}"Locvar";"TEXT";
       LangDesc{"";"";}
       LangText{"\"keine lange Codierung\"";"\"\xCE\xDE\xB3\xA4\xB1\xE0\xC2\xEB\"";"\"No long code\"";}"Const";}}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     MSLCode{"int       cnt;\r\nint      OK_cnt;\r\nint       status;\r\nint       _err;\r\nstring telbuf;\r\nstring telName;\r\nstring Cod;\r\n\r\nif (AnzeigeZeit != 0)\r\n\t_dlgMultiSetLine (DlgHndl, 1, Kommentar1);\r\n\r\nCodierung = hexstr (Codierung);\r\n\r\n_statSetValue (Codierung);\r\n\r\n\r\nerr =  _vwK2000GetLongCodeLIN (Hndl, ID_String, ID_Nummer, &Cod, Subsystem);\r\n\r\nif ((*Subsystem < 0x10) || ((*Subsystem & 0x20) == 0x20) || (*Subsystem > 0x3f)) \r\n\t{\r\n\t_statSetAsciiResult(NOK,sprintf(\"%s:%02lx\",KommentarStatNOK,*Subsystem),FMWNOK);\r\n\t_dlgMultiClearLine (DlgHndl, 1);\r\n\treturn NOK;\r\n\t}\r\n\r\nCod = hexstr (Cod);\r\n\r\nif (( err == OK ) && ( Cod != Codierung ))\r\n\terr = NOK;\r\n\r\n_statSetAsciiResult(err,Cod,FMWNOK);\r\n\r\nif (AnzeigeZeit == 0)\r\n\treturn(err);\r\n\r\nif ((err == OK) && (OK_Anzeige == 0))\r\n\treturn(err);\r\n\r\n_dlgMultiTextRsltBmp (DlgHndl,2,Cod,err);\r\n\r\n_err = _dlgRecvTel (DlgHndl, AnzeigeZeit, &telbuf );\r\n_dlgMultiSetButtons(DlgHndl,2);\t\r\nif (!_err)\r\n\tcsfRead(telbuf, &telName, &status);\r\n\r\n_dlgMultiClearLine (DlgHndl, 1);\r\n_dlgMultiClearLine (DlgHndl, 2);\r\n";}
     NodeCategory{"";}
     Info{"Modul lie\xDFt nicht die Steuerger\xE4te-Identifikation aus dem Steuerger\xE4t, sondern nutzt die durch\r\nden VW-Dienst VW2000_ID_Lesen in der  Variablen ID-String abgespeicherten Identifiktion.\r\n\r\nDer Befehl unterst\xFCtzt nur die LangCodierung nach KWP2000, da\xDF hei\xDFt es wird als Codierwert \r\ndie ECU-Configuration (KWP2000-Befehl ReadECUIdentification ( Blocktitel 0x1a)\r\nmit dem Parameter ECUconfiguration ( 0x9a)) verwendet.\r\nIst das Byte 17 ungeleich 10 oder 3x wird von einem STG ohne LangCodierung ausgegeganen \r\nund der R\xFCckgabewert ist 0.\r\nDer vom STG gelesene Codierwert wird mit dem in der Variablen \"Codierung\" \xFCbergebenen \r\nCodierung verglichen.\r\n\r\nIn der Statistik wird die vom Steuerger\xE4t gelesene Codierung abgespeichert.\r\n\r\nDie Bewertung des Pr\xFCfschrittes ist immer OK, wenn das Lesen der IDs vom Steuerger\xE4t erfolgreich\r\nwar, und die in der Variablen \"Codierung\" \xFCbergebenen Codierung mit der Codierung des Steuerger\xE4tes \r\n\xFCbereinstimmt.\r\n\r\nDurch Setzen des Parameters \"OK-Anzeige\" auf \"ja\" und der \xDCbergabe einer \"Anzeigezeit\"\r\ngr\xF6\xDFer 0 wird sowohl bei OK als auch bei NOK Bewertung des Pr\xFCfschrittes die Codierung\r\ndes Steuerger\xE4tes angezeigt. \r\nDurch Setzen des Parameters \"OK-Anzeige\" auf \"nein\" und der \xDCbergabe einer \"Anzeigezeit\"\r\ngr\xF6\xDFer 0 wird nur  bei NOK Bewertung des Pr\xFCfschrittes die Codierung angezeigt. \r\nDurch Setzen der \"Anzeigezeit\" auf 0 wird die Anzeige immer unterdr\xFCckt.\r\n\r\nDas LIN-Bus-Codierbyte wird dabei dem Subsystem \xFCbergeben.\r\n\r\n// sz, 23.04.03, Bugfix: NOK wenn Baustein nicht f\xFCr lange Codierung verwendet wird.";"";}
     Rights{"Write";"Read";}
     VersionInfo{
      CurVersion{0;5;"CP3";}
      Version{0;1;"AC";"- in Arbeit -";"vw-admin";"25.04.2003 12:46:24";}
      Version{0;2;"AC";"- in Arbeit -";"vw-admin";"25.04.2003 12:46:40";}
      Version{0;3;"AC";"- in Arbeit -";"vw-admin";"25.04.2003 12:47:02";}
      Version{0;4;"AC";"- in Arbeit -";"vw-admin";"25.04.2003 12:48:19";}
      Version{0;5;"CP3";"- in Arbeit -";"admin";"24.08.2006 09:45:02";}}}}}}
 FunctionDef{
  Name{"VW_spezifische_Bibliothek";}
  LangName{"VW_spezifische_Bibliothek";"VW_specific_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"Sammlung von Bausteinen zur Kommunikation mit Steuergeraeten von VW.";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;2;"ZPH18";}
   Version{1;0;"AC";"- freigegeben -";"vw-admin";"04.03.2003 11:56:19";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"07.08.2006 13:58:14";}
   Version{1;2;"ZPH18";"[ Baustein importiert (ersetzt) ]";"admin";"14.08.2007 15:07:01";}}
  FunctionDef{
   Name{"VW2000_Dienste";}
   LangName{"VW2000_Dienste";"VW2000_Dienste";}
   CvsVerHis{}
   Type{1;}
   Icon{0;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Sammlung von Bausteinen zur Kommunikation mit Steuerger\xE4ten von VW mit dem Protokoll K2000";"";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{1;3;"PAE";}
    Version{1;0;"AC";"- freigegeben -";"vw-admin";"17.02.2003 15:37:21";}
    Version{1;1;"AC";"- in Arbeit -";"vw-admin";"28.08.2003 17:40:34";}
    Version{1;2;"AC";"- in Arbeit -";"dsa-admin";"08.06.2004 08:55:47";}
    Version{1;3;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"25.07.2006 08:36:16";}}
   FunctionDef{
    Name{"VW2000_Dienste_22";}
    LangName{"VW2000_Dienste_22";"VW2000_Services_22";}
    CvsVerHis{}
    Type{1;}
    Icon{0;}
    Properties{"Begin";}
    FormalParam{}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"";}
    NodeCategory{"";}
    Info{"SG-Identifikation mit Service 0x22.\r\nDiese sollen in Zukunft die STG - ID 0x1A (0x9b, 0x9a, 0x91, 0x86, ...) abloesen.";"Moduls read the ECU Id by using the KWP2000-Comand ReadByIdentifier (Requesttitel 0x22) ";}
    Rights{"Write";"Read";}
    VersionInfo{
     CurVersion{1;0;"PAE";}
     Version{0;1;"PAE";"- in Arbeit -";"vw-admin";"30.05.2005 14:08:48";}
     Version{0;2;"PAE";"- in Arbeit -";"vw-admin";"31.05.2005 11:13:39";}
     Version{1;0;"PAE";" Freigabe ";"vw-admin";"03.06.2005 15:53:13";}}
    FunctionDef{
     Name{"VW2000_Read_Coding";}
     LangName{"VW2000_Read_Coding";"VW2000_Read_Coding";}
     CvsVerHis{}
     Type{1;}
     Icon{1;}
     Properties{"Begin";}
     FormalParam{
      InputParam{"Hndl";
       LangName{"Hndl";"Hndl";}"VCIKANAL";"VCIKanal1";
       LangDesc{"VCI-Kanal";"\"\"";}}
      OutputParam{"Codierung";
       LangName{"Codierung";"Codierung";}"Codefile_Result_Int";"Dummy_Codierung_Result";
       LangDesc{"";"\"\"";}}
      OutputParam{"CodierStr";
       LangName{"CodierStr";"CodierStr";}"Codefile_Result_Str";"Dummy_LongCode_Result";
       LangDesc{"Codierung String";"\"\"";}}
      OutputParam{"Codier_Art";
       LangName{"Codier_Art";"Codier_Art";}"Codefile_Result_Int";"Dummy_Codier_Art";
       LangDesc{"Art der Codierung 0 = kurze / 1 = lange ";"\"\"";}}}
     LocalVar{
      LocVarDef{"CKommentarECUwoCoding";
       LangName{"CKommentarECUwoCoding";"CKommentarECUwoCoding";}"Locvar";"TEXT";
       LangDesc{"";"";}
       LangText{"\"STG ohne Codierung\"";"\"Function not supported\"";"\"ECU not Coded\"";}"Const";}
      LocVarDef{"CKommentarFunktionNOK";
       LangName{"CKommentarFunktionNOK";"CKommentarFunktionNOK";}"Locvar";"TEXT";
       LangDesc{"";"";}
       LangText{"\"Funktion nicht unterstuetzt\"";"\"Function not supported\"";"\"Function not supported\"";}"Const";}}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     MSLCode{"int\tCodeLen;\r\nstring telbuf;\r\nstring ServTel;\r\n\r\nvciExDtaRead (Hndl, &ServTel);\r\nif (0 > strstr (ServTel, \"\\x01\\x14\"))\t// Funktion unterstuetzt? \r\n{\r\n\t_vciStatVciError (Hndl);\r\n\t_statSetStrResult (ABBR,CKommentarFunktionNOK, FSTGI);\r\n\treturn(ABBR);\r\n}\r\n\r\n\r\nerr = _vciDataExchange (Hndl, 0x22, 0x62, \"\\h0601\", &telbuf);\r\n\r\nif (err)\r\n{\r\n\t_vciStatVciError (Hndl);\r\n\t_statSetStrResult (ABBR,CKommentarECUwoCoding, FSTGI);\r\n\treturn(ABBR);\r\n}\r\n\r\nCodeLen = telbuf [2];\r\nerr = _vciDataExchange (Hndl, 0x22, 0x62, \"\\h0600\", &telbuf);\r\nif (err)\r\n{\r\n\t_vciStatVciError (Hndl);\r\n\t_statSetStrResult(err,telbuf,FSTGI);\r\n\treturn(ABBR);\r\n}\r\nif (CodeLen <= 4)\r\n{\r\n\t*Codierung = binstrtoi(midstr(telbuf, 2, CodeLen));\r\n\t*Codier_Art = 0;\r\n\t_statSetAsciiResult(err,sprintf(\"%d\",*Codierung),FMWNOK);\r\n}\r\nelse\r\n{\r\n\t*CodierStr = midstr(telbuf, 2, -1);\r\n\t*Codier_Art = 1;\r\n\t_statSetAsciiResult(err,hexstr (*CodierStr),FMWNOK);\r\n}\r\n\r\n\r\n\r\n";}
     NodeCategory{"";}
     Info{"SG-Identifikation mit Service 0x22; \r\nmit Local Identifier (LID) 0x0601, 0x0600:\r\nEs wird ueberprueft, ob die Diagnosefunktion unterstuetzt wird, dann werden die Services \r\nausgefuehrt. Zuerst mit LID 0x0601 die Laenge der Codierung gelesen.\r\nBei einem NACK vom STG wird von einem nicht Codierbaren STG ausgegangen und der \r\nBaustein mit NOK bewertet.\r\nBei einer positive Antwort wird mit LID 0x0600 die Codierung gelesen und bei einer \r\nCodierlaenge von 4 Byte der Parameter Codierung mit der Codierung als Integer befuellt \r\n(und die Codier_Art = 0 gesetzt). Damit ensprich diese Codierung der bisherigen \r\n\"kurzen 20/23 Bit-Cocierung\".\r\nIst die Codierlaenge groesser 4 wird von einer langen Codierung ausgegangen und die Codierung \r\nals Binaerstring in CodierStr abgelegt (und die Codier_Art = 1 gesetzt). \r\n\r\nCodierung:\r\nDie Laenge der Codierung ist bei Verwendung des Dienst $22 und $2E f\xFCr Codierung Lesen und \r\nSchreiben unter DataIdentifier 0x601 (VWTesterCodingInformation) in einem Byte (hex) \r\nauszugeben. Die L\xE4nge wird vor dem Lesen oder Schreiben der VWCodingValue \r\n(DataIdentifier 0x600) mit Dienst $22 abgefragt. Die L\xE4nge der Codierung ist f\xFCr das jeweilige \r\nSteuerger\xE4t von 0 bis 30 Byte festzulegen.\r\n\r\nsz, 30.05.05";"";}
     Rights{"Write";"Read";}
     VersionInfo{
      CurVersion{1;0;"PAE";}
      Version{0;1;"PAE";"- in Arbeit -";"vw-admin";"24.05.2005 14:57:34";}
      Version{0;2;"PAE";"- in Arbeit -";"vw-admin";"24.05.2005 14:58:55";}
      Version{0;3;"PAE";"- in Arbeit -";"vw-admin";"24.05.2005 14:59:20";}
      Version{0;4;"PAE";"- in Arbeit -";"vw-admin";"24.05.2005 15:00:38";}
      Version{0;5;"PAE";"- in Arbeit -";"vw-admin";"24.05.2005 15:13:56";}
      Version{0;6;"PAE";"- in Arbeit -";"vw-admin";"24.05.2005 15:39:40";}
      Version{0;7;"PAE";"- in Arbeit -";"vw-admin";"24.05.2005 16:03:20";}
      Version{0;8;"PAE";"- in Arbeit -";"vw-admin";"24.05.2005 16:12:01";}
      Version{0;9;"PAE";"- in Arbeit -";"vw-admin";"25.05.2005 09:28:48";}
      Version{0;10;"PAE";"- in Arbeit -";"vw-admin";"30.05.2005 15:41:02";}
      Version{0;11;"PAE";"- in Arbeit -";"vw-admin";"30.05.2005 15:50:44";}
      Version{0;12;"PAE";"- in Arbeit -";"vw-admin";"31.05.2005 11:13:05";}
      Version{0;13;"PAE";"- in Arbeit -";"vw-admin";"02.06.2005 15:01:58";}
      Version{0;14;"PAE";"- in Arbeit -";"vw-admin";"03.06.2005 12:53:09";}
      Version{0;15;"PAE";"- in Arbeit -";"admin";"03.06.2005 13:03:36";}
      Version{0;16;"PAE";"- in Arbeit -";"vw-admin";"03.06.2005 14:24:22";}
      Version{0;17;"PAE";"- in Arbeit -";"vw-admin";"03.06.2005 15:55:49";}
      Version{0;18;"PAE";"- in Arbeit -";"vw-admin";"03.06.2005 16:00:51";}
      Version{1;0;"PAE";" Freigabe ";"vw-admin";"03.06.2005 16:00:54";}}}}}}
 FunctionDef{
  Name{"Basis_Bibliothek";}
  LangName{"Basis_Bibliothek";"Base_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;0;"AC";}
   Version{1;0;"AC";"- freigegeben -";"dsa-admin";"04.03.2003 11:44:35";}}
  FunctionDef{
   Name{"Daten_Pruefungen";}
   LangName{"DatenPruefungen";"Data_Examination";}
   CvsVerHis{}
   Type{1;}
   Icon{0;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Sammlung von Pruef-Bausteinen";"";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{0;5;"PAE";}
    Version{0;1;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"24.07.2006 17:06:11";}
    Version{0;2;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"25.07.2006 08:26:55";}
    Version{0;3;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"25.07.2006 08:31:27";}
    Version{0;4;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"25.07.2006 08:35:23";}
    Version{0;5;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"25.07.2006 08:36:16";}}
   FunctionDef{
    Name{"StringExaminations";}
    LangName{"StringPrfg";"String_Examinations";}
    CvsVerHis{}
    Type{1;}
    Icon{1;}
    Properties{"Begin";}
    FormalParam{}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"";}
    NodeCategory{"";}
    Info{"";"";}
    Rights{"Write";"Read";}
    VersionInfo{}
    FunctionDef{
     Name{"StringVergleich";}
     LangName{"StringVergleich";"StringCompare";}
     CvsVerHis{}
     Type{1;}
     Icon{1;}
     Properties{"Begin";}
     FormalParam{
      InputParam{"SollString";
       LangName{"SollString";"SollString";}"STRING";"";
       LangDesc{"Referenz-String";"Set string";}}
      InputParam{"IstString";
       LangName{"IstString";"IstString";}"STRING";"";
       LangDesc{"zu testender String";"Actual string";}}}
     LocalVar{}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     MSLCode{"_statSetValue(SollString);\r\n\r\nif (IstString == SollString)\r\n  err = _statSetStrResult (OK, IstString, FOK);\r\nelse\r\n  err = _statSetStrResult (NOK, IstString, FMWNOK);";}
     NodeCategory{"";}
     Info{"Ueberprueft zwei Strings auf Gleichheit";"Component for the comparison of strings in order to establish\r\nwhether they are identical. (S)\r\nReturns \"OK\", if the actual string corresponds to the nominal\r\nstring.";}
     Rights{"Write";"Read";}
     VersionInfo{
      CurVersion{0;7;"SVW";}
      Version{0;1;"RHMPilot";"- in Arbeit -";"admin";"06.06.2002 16:13:30";}
      Version{0;2;"AC";"- in Arbeit -";"dsa-admin";"16.04.2003 13:16:45";}
      Version{0;3;"AC";"- in Arbeit -";"dsa-admin";"16.04.2003 13:16:51";}
      Version{0;4;"MOS";"- in Arbeit -";"dsa-admin";"30.04.2003 12:57:15";}
      Version{0;5;"CP3";"- in Arbeit -";"admin";"24.10.2003 00:33:17";}
      Version{0;6;"SVW";"- in Arbeit -";"admin";"12.04.2004 19:50:56";}
      Version{0;7;"SVW";"- in Arbeit -";"admin";"12.04.2004 21:01:22";}}}}}}
 FunctionDef{
  Name{"DSA_Bibliothek";}
  LangName{"DSA_Bibliothek";"DSA_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;1;"AC";}
   Version{1;0;"AC";"- freigegeben -";"dsa-admin";"04.03.2003 11:44:35";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"admin";"03.07.2006 10:17:25";}}
  FunctionDef{
   Name{"Daten_Bearbeitung";}
   LangName{"DatenBearbeitung";"Data_Manipulation";}
   CvsVerHis{}
   Type{1;}
   Icon{0;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Sammlung von Bausteinen zur Bearbeitung von Variablen.";"Data editing arises very frequently. Calculations must be carried out, character strings\r\nmust be copied or separated out, parameters must be initialised...";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{0;1;"SVW";}
    Version{0;1;"SVW";"- in Arbeit -";"admin";"12.04.2004 19:29:41";}}
   FunctionDef{
    Name{"IntegerData";}
    LangName{"IntegerData";"IntegerData";}
    CvsVerHis{}
    Type{1;}
    Icon{0;}
    Properties{"Begin";}
    FormalParam{}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"";}
    NodeCategory{"";}
    Info{"Sammlung von Bausteinen zur Bearbeitung von ganzen Zahlen.";"";}
    Rights{"Write";"Read";}
    VersionInfo{
     CurVersion{0;5;"PAE";}
     Version{0;1;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"24.07.2006 17:06:11";}
     Version{0;2;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"25.07.2006 08:26:54";}
     Version{0;3;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"25.07.2006 08:31:26";}
     Version{0;4;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"25.07.2006 08:35:22";}
     Version{0;5;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"25.07.2006 08:36:15";}}
    FunctionDef{
     Name{"IntVergleich";}
     LangName{"IntVergleich";"IntCompare";}
     CvsVerHis{}
     Type{1;}
     Icon{0;}
     Properties{"Begin";}
     FormalParam{
      InputParam{"Istwert";
       LangName{"Istwert";"Istwert";}"INT";"DInt";
       LangDesc{"Ist-Wert";"\"\"";}}
      InputParam{"Sollwert";
       LangName{"Sollwert";"Sollwert";}"INT";"";
       LangDesc{"Vergleichswert";"\"\"";}}}
     LocalVar{}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     MSLCode{"if (Istwert == Sollwert)\r\n  err = OK;\r\nelse\r\n  err = NOK;\r\n";}
     NodeCategory{"";}
     Info{"";"Component for the comparison of two integers in order to\r\nestablish whether they are identical. (S)\r\nReturns \"OK\", if the actual value corresponds to the nominal\r\nvalue.";}
     Rights{"Read";"Read";}
     VersionInfo{
      CurVersion{0;1;"SVW";}
      Version{0;1;"SVW";"- in Arbeit -";"admin";"12.04.2004 21:00:29";}}}}}}
 FunctionDef{
  Name{"VW_spezifische_Bibliothek";}
  LangName{"VW_spezifische_Bibliothek";"VW_specific_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"Sammlung von Bausteinen zur Kommunikation mit Steuergeraeten von VW.";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;2;"ZPH18";}
   Version{1;0;"AC";"- freigegeben -";"vw-admin";"04.03.2003 11:56:19";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"07.08.2006 13:58:14";}
   Version{1;2;"ZPH18";"[ Baustein importiert (ersetzt) ]";"admin";"14.08.2007 15:07:01";}}
  FunctionDef{
   Name{"VW2000_Dienste";}
   LangName{"VW2000_Dienste";"VW2000_Dienste";}
   CvsVerHis{}
   Type{1;}
   Icon{0;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Sammlung von Bausteinen zur Kommunikation mit Steuerger\xE4ten von VW mit dem Protokoll K2000";"";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{1;3;"PAE";}
    Version{1;0;"AC";"- freigegeben -";"vw-admin";"17.02.2003 15:37:21";}
    Version{1;1;"AC";"- in Arbeit -";"vw-admin";"28.08.2003 17:40:34";}
    Version{1;2;"AC";"- in Arbeit -";"dsa-admin";"08.06.2004 08:55:47";}
    Version{1;3;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"25.07.2006 08:36:16";}}
   FunctionDef{
    Name{"VW2000_Dienste_22";}
    LangName{"VW2000_Dienste_22";"VW2000_Services_22";}
    CvsVerHis{}
    Type{1;}
    Icon{0;}
    Properties{"Begin";}
    FormalParam{}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"";}
    NodeCategory{"";}
    Info{"SG-Identifikation mit Service 0x22.\r\nDiese sollen in Zukunft die STG - ID 0x1A (0x9b, 0x9a, 0x91, 0x86, ...) abloesen.";"Moduls read the ECU Id by using the KWP2000-Comand ReadByIdentifier (Requesttitel 0x22) ";}
    Rights{"Write";"Read";}
    VersionInfo{
     CurVersion{1;0;"PAE";}
     Version{0;1;"PAE";"- in Arbeit -";"vw-admin";"30.05.2005 14:08:48";}
     Version{0;2;"PAE";"- in Arbeit -";"vw-admin";"31.05.2005 11:13:39";}
     Version{1;0;"PAE";" Freigabe ";"vw-admin";"03.06.2005 15:53:13";}}
    FunctionDef{
     Name{"VW2000_ID_91_Lesen_kompatibel_LID";}
     LangName{"VW2000_ID_91_Lesen_kompatibel_LID";"VW2000_ID_91_Read_kompatibel_LID";}
     CvsVerHis{}
     Type{1;}
     Icon{1;}
     Properties{"Begin";}
     FormalParam{
      InputParam{"Hndl";
       LangName{"Hndl";"Hndl";}"VCIKANAL";"VCIKanal1";
       LangDesc{"VCI-Kanal";"";}}
      OutputParam{"ID_String";
       LangName{"ID_String";"ID_String";}"VW_Result_Tel";"VW_Stg_ID_91";
       LangDesc{"Steuerger\xE4te-Identifikation";"";}}}
     LocalVar{}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     MSLCode{"#pragma using VW2000_Read_Service_22_anyone_LID\r\n#pragma using VW2000_ID_91_HWID_Lesen // err = VW2000_ID_91_HWID_Lesen(err, Hndl, &ID_String);\r\n\r\nstring ServTel;\r\n\r\n*ID_String = \"\";\r\nvciExDtaRead (Hndl, &ServTel);\r\nif (0 > strstr (ServTel, \"\\x01\\x14\"))\t// Funktion unterstuetzt? \r\n{\r\n\terr = VW2000_ID_91_HWID_Lesen(err, Hndl, ID_String);\r\n}\r\nelse\r\n{\r\n\terr = VW2000_Read_Service_22_anyone_LID(err, Hndl, \"\\hf191\", ID_String);\r\n\tif (!err)\r\n\t{\r\n\t\t*ID_String = \"\\x91\" + midstr (itobinstr (strlen (*ID_String)+2), 3, 1) + *ID_String + \"\\h2020ff\";\r\n\t\t_statSetStrResult (err, *ID_String, FSTGI);\r\n#ifdef DEBUGSG\r\n\t\terrDebug(err, \"ID_String 91: \",*ID_String, \"hex: \", hexstr (*ID_String));\r\n#endif\r\n\t}\r\n}\r\n";}
     NodeCategory{"";}
     Info{"Modul lie\xDFt die Steuerger\xE4te-Identifikation.\r\nDabei wird der KWP2000-Befehl ReadECUIdentification ( Blocktitel 0x1a)\r\nmit dem Parameter ECUidentification ( 0x91) verwendet.\r\nUnterstuetzt das STG den Befehl ReadByIdentifier (Blocktitel 0x22) wird die RID \r\n F191, gelesen und die klassische ID zusammengebaut. Damit ist die Verwendung\r\nder bisherigen Bewertungsbausteine moeglich und ein fliessender Uebergang von 0x1A \r\nzu 0x22 moeglich.\r\n\r\nDie gelesene Identifikation wird vollstaendig in der Variablen ID-String abgespeichert.\r\n\r\nIn der Statistik wird der ID-String abgespeichert.\r\n\r\nDie Bewertung des Pr\xFCfschrittes ist immer OK, wenn das Lesen der ID vom Steuergeraet erfolgreich war.\r\n\r\n14.06.06, sz: erstellt";"Modul reads the ECU Id.\r\nBy using the KWP2000-Comand ReadECUIdentification (Requesttitel 0x1a)\r\nwith parameter ECUidentification (0x91).\r\nIf the ECU supports the command ReadByIdentifier (Requesttitel 0x22) the RID \r\nF191 will be read and the classic id will be built. (Including scaling offset). For that the existing \r\nevaluations could be used and a change from 0x1A to 0x22 is possible.\r\n\r\nThe id will be stored in the parameter ID-String.\r\n\r\nAlso in the statistiks will the id be stored.\r\n\r\nThe evaluatin of the module will be OK if the reading of the id was OK.\r\n\r\nsz, 31.05.05\r\n";}
     Rights{"Write";"Read";}
     VersionInfo{
      CurVersion{2;0;"AC";}
      Version{0;1;"PAE";"- in Arbeit -";"vw-admin";"25.05.2005 15:09:14";}
      Version{0;2;"PAE";"- in Arbeit -";"vw-admin";"25.05.2005 15:48:36";}
      Version{0;3;"PAE";"- in Arbeit -";"vw-admin";"30.05.2005 16:52:11";}
      Version{0;4;"PAE";"- in Arbeit -";"vw-admin";"31.05.2005 10:11:30";}
      Version{0;5;"PAE";"- in Arbeit -";"vw-admin";"02.06.2005 14:55:03";}
      Version{0;6;"PAE";"- in Arbeit -";"vw-admin";"03.06.2005 09:44:09";}
      Version{0;7;"PAE";"- in Arbeit -";"vw-admin";"03.06.2005 09:45:59";}
      Version{0;8;"PAE";"- in Arbeit -";"vw-admin";"03.06.2005 13:36:50";}
      Version{0;9;"PAE";"- in Arbeit -";"vw-admin";"03.06.2005 15:54:17";}
      Version{1;0;"PAE";" Freigabe ";"vw-admin";"03.06.2005 15:57:27";}
      Version{1;1;"AC";"- in Arbeit -";"dsa-admin";"08.06.2006 11:39:14";}
      Version{1;2;"AC";"- in Arbeit -";"dsa-admin";"08.06.2006 16:20:36";}
      Version{1;3;"AC";"- in Arbeit -";"dsa-admin";"08.06.2006 16:26:54";}
      Version{1;4;"AC";"- in Arbeit -";"dsa-admin";"09.06.2006 16:32:09";}
      Version{1;5;"AC";"- in Arbeit -";"dsa-admin";"14.06.2006 11:31:26";}
      Version{1;6;"AC";"- in Arbeit -";"dsa-admin";"14.06.2006 15:40:15";}
      Version{2;0;"AC";" - Updated to LH 2006 -";"dsa-admin";"14.06.2006 15:48:27";}}}}}}
 FunctionDef{
  Name{"VW_spezifische_Bibliothek";}
  LangName{"VW_spezifische_Bibliothek";"VW_specific_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"Sammlung von Bausteinen zur Kommunikation mit Steuergeraeten von VW.";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;2;"ZPH18";}
   Version{1;0;"AC";"- freigegeben -";"vw-admin";"04.03.2003 11:56:19";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"07.08.2006 13:58:14";}
   Version{1;2;"ZPH18";"[ Baustein importiert (ersetzt) ]";"admin";"14.08.2007 15:07:01";}}
  FunctionDef{
   Name{"VW2000_Dienste";}
   LangName{"VW2000_Dienste";"VW2000_Dienste";}
   CvsVerHis{}
   Type{1;}
   Icon{0;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Sammlung von Bausteinen zur Kommunikation mit Steuerger\xE4ten von VW mit dem Protokoll K2000";"";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{1;3;"PAE";}
    Version{1;0;"AC";"- freigegeben -";"vw-admin";"17.02.2003 15:37:21";}
    Version{1;1;"AC";"- in Arbeit -";"vw-admin";"28.08.2003 17:40:34";}
    Version{1;2;"AC";"- in Arbeit -";"dsa-admin";"08.06.2004 08:55:47";}
    Version{1;3;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"25.07.2006 08:36:16";}}
   FunctionDef{
    Name{"VW2000_erweiterte_IDs";}
    LangName{"VW2000_erweiterte_IDs";"VW2000_extended_IDs";}
    CvsVerHis{}
    Type{1;}
    Icon{0;}
    Properties{"Begin";}
    FormalParam{}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"";}
    NodeCategory{"";}
    Info{"";"";}
    Rights{"Write";"Read";}
    VersionInfo{
     CurVersion{0;1;"PAE";}
     Version{0;1;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"24.07.2006 17:06:13";}}
    FunctionDef{
     Name{"VW2000_ID_91_HWID_TNR";}
     LangName{"VW2000_ID_91_HWID_TNR";"VW2000_ID_91_HWID_TNR";}
     CvsVerHis{}
     Type{1;}
     Icon{1;}
     Properties{"Begin";}
     FormalParam{
      InputParam{"ID_String";
       LangName{"ID_String";"ID_String";}"VW_Result_Tel";"VW_Stg_ID_91";
       LangDesc{"gelesene STG-Identifikation";"\"\"";}}
      InputParam{"ID_Nummer";
       LangName{"ID_Nummer";"ID_Nummer";}"ID_Nummern";"erste_ID";
       LangDesc{"zu lesende ID";"\"\"";}}
      OutputParam{"Teilenummer";
       LangName{"Teilenummer";"Teilenummer";}"StgHWTNR";"DSTGHWIdString";
       LangDesc{"gelesene Teilenummer";"\"\"";}}}
     LocalVar{}
     Condition{"ever";"ok";"";}
     Evaluation{"no";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     MSLCode{"#pragma using VW2000_ID_Nummer // err = VW2000_ID_Nummer(err, ID_Nummer, ID_String, &ID_Result);\r\n\r\nstring\tID_Result;\r\n// ID_String = \"\\h910e3446303930353835324220202004323432ff910e34463039303931333143202020ff910e34463038333732323020202020ff\";\r\n*Teilenummer = \"\";\r\n\r\nerr = VW2000_ID_Nummer(err, ID_Nummer, ID_String, &ID_Result);\r\n\r\nif ((err == OK) && (strlen (ID_Result) > ID_Result[1]))\r\n{\r\n\t*Teilenummer = midstr (ID_Result, 2, ID_Result [1] - 1);\r\n\t*Teilenummer = sprintf (\"%-12s\", *Teilenummer);\r\n\terr = OK;\r\n}\r\nelse\r\n{\r\n\t*Teilenummer = strset (0x20, 12);\r\n\terr = NOK;\r\n}\r\n\r\n_statSetStrResult (err, *Teilenummer, FSTGI);";}
     NodeCategory{"";}
     Info{"Modul lie\xDFt nicht die Steuerger\xE4te-Identifikation aus dem Steuerger\xE4t, sondern nutzt die durch\r\nden VW-Dienst VW2000_ID_91_HWID_Lesen in der  Variablen ID-String abgespeicherten Identifiktion.\r\n\r\nDie 12 Stellen VW/Audi-Teilenummer der gelesenen Identifikation werden in der Varablen\r\n\"Teilenummer\" gespeichert.\r\n";"";}
     Rights{"Write";"Read";}
     VersionInfo{
      CurVersion{0;13;"PAE";}
      Version{0;1;"AC";"- in Arbeit -";"vw-admin";"14.02.2005 09:06:23";}
      Version{0;2;"AC";"- in Arbeit -";"vw-admin";"14.02.2005 09:07:54";}
      Version{0;3;"AC";"- in Arbeit -";"vw-admin";"14.02.2005 09:08:38";}
      Version{0;4;"AC";"- in Arbeit -";"vw-admin";"14.02.2005 09:08:45";}
      Version{0;5;"AC";"- in Arbeit -";"vw-admin";"17.02.2005 09:19:26";}
      Version{0;6;"AC";"- in Arbeit -";"vw-admin";"18.02.2005 11:59:37";}
      Version{0;7;"AC";"- in Arbeit -";"vw-admin";"02.03.2005 13:15:35";}
      Version{0;8;"AC";"- in Arbeit -";"vw-admin";"02.03.2005 13:15:53";}
      Version{0;9;"AC";"- in Arbeit -";"vw-admin";"02.03.2005 13:24:46";}
      Version{0;10;"AC";"- in Arbeit -";"vw-admin";"02.03.2005 13:40:50";}
      Version{0;11;"AC";"- in Arbeit -";"vw-admin";"02.03.2005 13:57:45";}
      Version{0;12;"AC";"- in Arbeit -";"vw-admin";"02.03.2005 14:14:00";}
      Version{0;13;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"24.07.2006 17:06:13";}}}}}}
 FunctionDef{
  Name{"VW_spezifische_Bibliothek";}
  LangName{"VW_spezifische_Bibliothek";"VW_specific_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"Sammlung von Bausteinen zur Kommunikation mit Steuergeraeten von VW.";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;2;"ZPH18";}
   Version{1;0;"AC";"- freigegeben -";"vw-admin";"04.03.2003 11:56:19";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"07.08.2006 13:58:14";}
   Version{1;2;"ZPH18";"[ Baustein importiert (ersetzt) ]";"admin";"14.08.2007 15:07:01";}}
  FunctionDef{
   Name{"VW2000_Dienste";}
   LangName{"VW2000_Dienste";"VW2000_Dienste";}
   CvsVerHis{}
   Type{1;}
   Icon{0;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Sammlung von Bausteinen zur Kommunikation mit Steuerger\xE4ten von VW mit dem Protokoll K2000";"";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{1;3;"PAE";}
    Version{1;0;"AC";"- freigegeben -";"vw-admin";"17.02.2003 15:37:21";}
    Version{1;1;"AC";"- in Arbeit -";"vw-admin";"28.08.2003 17:40:34";}
    Version{1;2;"AC";"- in Arbeit -";"dsa-admin";"08.06.2004 08:55:47";}
    Version{1;3;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"25.07.2006 08:36:16";}}
   FunctionDef{
    Name{"VW2000_BZD_Version2_1";}
    LangName{"VW2000_BZD_Version2_1";"";}
    CvsVerHis{}
    Type{1;}
    Icon{0;}
    Properties{"Begin";}
    FormalParam{}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"";}
    NodeCategory{"";}
    Info{"";"";}
    Rights{"Write";"Read";}
    VersionInfo{
     CurVersion{0;1;"ZPH18";}
     Version{0;1;"ZPH18";"[ Baustein importiert (neu) ]";"admin";"14.08.2007 15:13:55";}}
    FunctionDef{
     Name{"VW2000_BZD_BaugruppenTyp0";}
     LangName{"VW2000_BZD_BaugruppenTyp0";"VW2000_BZD_BaugruppenTyp0";}
     CvsVerHis{}
     Type{1;}
     Icon{1;}
     Properties{"Begin";}
     FormalParam{
      InputParam{"Hndl";
       LangName{"Hndl";"Hndl";}"VCIKANAL";"VCIKanal1";
       LangDesc{"VCI-Kanal";"VCI channel";}}
      InputParam{"DlgHndl";
       LangName{"DlgHndl";"DlgHndl";}"DialogTyp";"DIALOG_LOKAL";
       LangDesc{"Dialog handle";"Dialog handle";}}
      InputParam{"ID_Nummer";
       LangName{"ID_Nummer";"ID_Nummer";}"ID_Nummern";"erste_ID";
       LangDesc{"zu lesende ID";"ECU ID to be read";}}
      InputParam{"BaugruppenNr";
       LangName{"BaugruppenNr";"BaugruppenNr";}"BgrNr";"";
       LangDesc{"Nummer der Baugruppe";"No/Name of Baugruppe";}}
      InputParam{"ReadOption";
       LangName{"LeseOption";"ReadOption";}"INT";"CInt3";
       LangDesc{"1= ID 0x86 lesen; 2= MWB 80 lesen; 3=ID lesen bei NOK MWB lesen ";"1= ID 0x86 read; 2= MWB 80 read; 3=ID read if NOK MWB read ";}}
      InputParam{"EvalOK";
       LangName{"BewImmerOK";"EvalOK";}"Bool";"CLogFalsch";
       LangDesc{"setzt die Bewertung immer auf OK, auch wenn daten fehlen";"Set the evaluation always to OK, even if data are missing";}}
      OutputParam{"HerstellAender";
       LangName{"HerstellAender";"HerstellAender";}"Baugruppenstring";"DHerstellerAenderungsdatum";
       LangDesc{"";"ECU Manufacturer information";}}}
     LocalVar{}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     MSLCode{"#pragma using VW2000_Messwert // err = VW2000_Messwert(err, Hndl, LocalIdent, &RecvTel);\r\n#pragma using VW2000_ID_86_Lesen_kompatibel_LID // err = VW2000_ID_86_Lesen_kompatibel_LID(err, Hndl, &ID_String);\r\n#pragma using VW2000_ID_Nummer // err = VW2000_ID_Nummer(err, ID_Nummer, ID_String, &ID_String);\r\n\r\nstring\tID_86_String;\r\nstring\tRecvTel;\r\nstring\tTMP_String, var3;\r\nstring\tHerstellerKennzeichen = \"\";\r\nstring\tHerstellerDatum = \"\";\r\nstring\tHerstellerPruefstand = \"\";\r\nstring\tLaufendeNummer = \"\";\r\nstring \tbuffer;\r\n\r\nif (ReadOption & 1)\r\n{\r\n\terr = VW2000_ID_86_Lesen_kompatibel_LID(err, Hndl, &ID_86_String);\r\n\tif (!err)\r\n\t{\r\n\t\terr = VW2000_ID_Nummer(err, ID_Nummer, ID_86_String, &ID_86_String);\r\n\t\tif (!err)\r\n\t\t{\r\n\t\t\tif (strlen(ID_86_String) > ID_86_String [1])\r\n\t\t\t\tTMP_String = midstr (ID_86_String, ID_86_String[1] +1, -1);\r\n\t\t\terr = OK;\r\n\t\t\tif ((TMP_String[1] >= 7) && (strlen (TMP_String) > 7))\r\n\t\t\t\tHerstellerKennzeichen = midstr (TMP_String, 1, 7);\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\terr = ABBR;\r\n\t\t\t\tHerstellerKennzeichen = \"       \";\r\n\t\t\t}\t\r\n\t\t\tif ((err == OK) && (TMP_String[1] >= 15) && (strlen (TMP_String) > 15))\r\n\t\t\t{\r\n\t\t\t\tHerstellerDatum = midstr (TMP_String, 8, 2);\r\n\t\t\t\tHerstellerDatum = HerstellerDatum + midstr (TMP_String, 11, 2);\r\n\t\t\t\tHerstellerDatum = HerstellerDatum + midstr (TMP_String, 14, 2);\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\terr = ABBR;\r\n\t\t\t\tHerstellerDatum = \"      \";\r\n\t\t\t}\t\r\n\t\t\tif ((err == OK) && (TMP_String[1] >= 23) && (strlen (TMP_String) > 23))\r\n\t\t\t\t*HerstellAender = midstr (TMP_String, 16, 8);\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\terr = ABBR;\r\n\t\t\t\t*HerstellAender = \"        \";\r\n\t\t\t}\t\r\n\t\t\tif ((err == OK) && (TMP_String[1] >= 27) && (strlen (TMP_String) > 27))\r\n\t\t\t\tHerstellerPruefstand = midstr (TMP_String, 24, 4);\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\terr = ABBR;\r\n\t\t\t\tHerstellerPruefstand = \"    \";\r\n\t\t\t}\t\r\n\t\t\tif ((err == OK) && (TMP_String[1] >= 28) && (strlen (TMP_String) > 28))\r\n\t\t\t\tLaufendeNummer = midstr (TMP_String, 28, 4);\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\terr = ABBR;\r\n\t\t\t\tLaufendeNummer = \"    \";\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\nif (((ReadOption == 3) && (err != OK)) || (ReadOption == 2))\r\n{\r\n\terr = VW2000_Messwert(err, Hndl, 80, &RecvTel);\r\n\tif (!err)\r\n\t{\r\n\t\tif (strlen(RecvTel) > RecvTel [1])\r\n\t\t{\r\n\t\t\terr = vwdgText (&RecvTel, 0, &TMP_String);\r\n\t\t}\r\n\t\tTMP_String = TMP_String + \" \";\r\n\t\t//Werkskennzahl+Kennzeichnung 1.Variable\r\n\t\tif ((err == OK) && (strtok (&TMP_String, &HerstellerKennzeichen, \" \") >= 0))\r\n\t\t\tHerstellerKennzeichen = sprintf (\"%-7s\", HerstellerKennzeichen);\r\n\t\telse\r\n\t\t{\r\n\t\t\terr = ABBR;\r\n\t\t\tHerstellerKennzeichen = \"       \";\r\n\t\t}\r\n\t\t//Datum 2.Variable\r\n\t\tif ((err == OK) && (strtok (&TMP_String, &HerstellerDatum, \" \") >= 0))\r\n\t\t{\r\n\t\t\tHerstellerDatum = sprintf (\"%-8s\", HerstellerDatum);\r\n\t\t\tHerstellerDatum = midstr (HerstellerDatum, 0, 2) \r\n\t\t\t\t\t\t+ midstr (HerstellerDatum, 3, 2) + midstr (HerstellerDatum, 6, 2);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\terr = ABBR;\r\n\t\t\tHerstellerDatum = \"      \";\r\n\t\t}\t\r\n\t\t//HerstellAenderungsstand 3.Variable f\xFCr Baugruppentyp1!\r\n\t\tif ((err == OK) && (strtok (&TMP_String, HerstellAender, \" \") >= 0))\r\n\t\t\t*HerstellAender = sprintf (\"%-8s\", *HerstellAender);\r\n\t\telse\r\n\t\t{\r\n\t\t\terr = ABBR;\r\n\t\t\t*HerstellAender = \"        \";\r\n\t\t}\t\r\n\r\n\t\t//Pr\xFCfstand 4.Variable\r\n\t\tif ((err == OK) && (strtok (&TMP_String, &HerstellerPruefstand, \" \") >= 0))\r\n\t\t\tHerstellerPruefstand = sprintf (\"%-4s\", HerstellerPruefstand);\r\n\t\telse\r\n\t\t{\r\n\t\t\terr = ABBR;\r\n\t\t\tHerstellerPruefstand = \"    \";\r\n\t\t}\t\r\n\t\t//laufende Nummer 5.Variable\r\n\t\tif ((err == OK) && (strtok (&TMP_String, &LaufendeNummer, \" \") >= 0))\r\n\t\t\tLaufendeNummer = sprintf (\"%-4s\", LaufendeNummer);\r\n\t\telse\r\n\t\t{\r\n\t\t\terr = ABBR;\r\n\t\t\tLaufendeNummer = \"    \";\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n\r\ncsfWrite (&buffer, \"BAUTEIL\", BaugruppenNr, BaugruppenNr + HerstellerKennzeichen + \r\nHerstellerDatum + HerstellerPruefstand + LaufendeNummer + \"-\");\r\n#ifdef DEBUGID\r\nerrDebug (1, \"HerstellerKennzeichen: \",HerstellerKennzeichen );\r\nerrDebug (2, \"HerstellerDatum: \",HerstellerDatum );\r\nerrDebug (3, \"HerstellerPruefstand: \",HerstellerPruefstand );\r\nerrDebug (4, \"LaufendeNummer: \",LaufendeNummer );\r\nerrDebug (5, \"HerstellAender: \",*HerstellAender );\r\nerrDebug (err, \"Puffer: \", buffer);\r\n#endif\r\nif (EvalOK == 1)\r\n\terr = OK;\r\nif (err == OK)\r\n\t  _statSetAsciiResult (err, buffer, FOK);\r\nelse\r\n\t  {\r\n\t  err = NOK;\r\n\t  _statSetAsciiResult (err, buffer, FMWNOK);\r\n\t  }\r\n//ENDE\r\n";}
     NodeCategory{"";}
     Info{"BaugruppenTyp0\r\n\r\nBausteine ermittelt den \"BaugruppenTyp0\"; dazu wird die ID 0x86 bzw. MWB 80 gelesen\r\nund entsprechend der Doku aufbereitet. Da hier auch ein Datensatz zum BaugruppenTyp1 \r\nenthalten ist, wird dieser mit zur\xFCckgegeben zur Verarbeitung im Baustein \"BaugruppenTyp1\".\r\n\r\nIm Parameter \"BaugruppenNr\" wird die Baugruppen-Nummer (laut Baugruppenkatalog) eingetragen.\r\nWenn die ID 0x86 nicht gelesen werden kann wird der MWB 80 gelesen und zur Datenverarbeitung herangezogen.\r\n(mit \"LeseOption\" Wert=3)\r\nMit dem Parameter \"LeseOption\" kann gesteuert werden ob nur die ID 0x86 gelesen werden soll (Wert=1)\r\noder nur der MWB 80  (Wert= 2) gelesen werden soll (wenn bekannt ist, wo die Info im STG steht).\r\nMit dem Parameter \"BewImmerOK\" kann die Statistikbewertung des Bausteins immer auf OK gesetzt werden, \r\nauch wenn nicht alle Daten f\xFCr den BaugruppenTyp0 ermittelt werden konnten (werden dann mit Blanks aufgef\xFCllt).\r\n\r\nnach VW Spec.: \"Vorgaben zur Bildung von SG-Baugruppen_v2.1.doc\" ergibt sich folgendes:\r\nBaugruppentyp 0\r\nVariante 1:Hersteller und Seriennummer (25 Zeichen) mit Dienst 86\r\nByte\tBezeichnung\tDaten-Quelle\r\n1 - 3\tBaugruppen-Nummer\tBaugruppen-Katalog\r\n4 - 10\tHersteller-Kennzeichen\tDienst 86\tByte 17 - 23 1\r\n11 - 16\tHerstelldatum\tDienst 86\tByte 24, 25, 27, 28, 30, 31  \r\n17 - 20\tHersteller-Pr\xFCfstand\tDienst 86\tByte 40 - 43 1\r\n21 - 24\tlaufende Nummer\tDienst 86\tByte 44 - 47 1\r\n25\tPr\xFCfzeichen\twird bei VW durch F\xFCllzeichen \"-\" ersetzt\r\n\r\nVariante 2: Hersteller und Seriennummer (25 Zeichen) mit MWB 80\r\nByte\tBezeichnung\tDaten-Quelle\r\n1 - 3\tBaugruppen-Nummer\tBaugruppen-Katalog\r\n4 - 10\tHersteller-Kennzeichen\tMWB 80 \tByte 1 - 7 2\r\n11 - 16\tHerstelldatum\tMWB 80\tByte 9, 10, 12, 13, 15, 16 2\r\n17 - 20\tHersteller-Pr\xFCfstand\tMWB 80\tByte 27 - 30 2\r\n21 - 24\tlaufende Nummer\tMWB 80\tByte 32 - 35 2\r\n25\tPr\xFCfzeichen\twird bei VW durch F\xFCllzeichen \"-\" ersetzt\r\n\r\n\r\nsz: 20.12.05: Update:ID_Nummer beschreibt f\xFCr die ID 0x86 die ID-Nummer wenn es sich um eine Mehrfach ID\r\n handelt (ID_Nummer = 1: Master SG, ID_Nummer > 1: Slave SG).\r\nUeber den Praeprozessor \"DEBUGID\" koennen Debugmeldungen aktiviert werden.";"";}
     Rights{"Write";"Read";}
     VersionInfo{
      CurVersion{1;7;"CP23A";}
      Version{0;1;"AC";"- in Arbeit -";"vw-admin";"06.01.2005 11:46:59";}
      Version{0;2;"AC";"- in Arbeit -";"vw-admin";"06.01.2005 11:50:45";}
      Version{0;3;"AC";"- in Arbeit -";"vw-admin";"06.01.2005 16:31:40";}
      Version{0;4;"AC";"- in Arbeit -";"vw-admin";"06.01.2005 16:32:03";}
      Version{0;5;"AC";"- in Arbeit -";"vw-admin";"06.01.2005 16:32:18";}
      Version{0;6;"AC";"- in Arbeit -";"vw-admin";"06.01.2005 16:50:39";}
      Version{0;7;"AC";"- in Arbeit -";"vw-admin";"06.01.2005 16:51:23";}
      Version{0;8;"AC";"- in Arbeit -";"vw-admin";"06.01.2005 16:55:28";}
      Version{0;9;"AC";"- in Arbeit -";"vw-admin";"06.01.2005 16:59:18";}
      Version{0;10;"AC";"- in Arbeit -";"vw-admin";"06.01.2005 16:59:53";}
      Version{0;11;"AC";"- in Arbeit -";"vw-admin";"13.01.2005 10:08:14";}
      Version{0;12;"AC";"- in Arbeit -";"vw-admin";"13.01.2005 10:09:54";}
      Version{0;13;"AC";"- in Arbeit -";"vw-admin";"13.01.2005 16:58:40";}
      Version{0;14;"AC";"- in Arbeit -";"vw-admin";"13.01.2005 17:04:15";}
      Version{0;15;"AC";"- in Arbeit -";"vw-admin";"14.01.2005 09:07:10";}
      Version{0;16;"AC";"- in Arbeit -";"vw-admin";"14.01.2005 09:16:36";}
      Version{0;17;"AC";"- in Arbeit -";"vw-admin";"14.01.2005 09:38:09";}
      Version{0;18;"AC";"- in Arbeit -";"vw-admin";"14.01.2005 09:41:19";}
      Version{0;19;"AC";"- in Arbeit -";"vw-admin";"14.01.2005 10:13:57";}
      Version{0;20;"AC";"- in Arbeit -";"vw-admin";"14.01.2005 10:18:18";}
      Version{0;21;"AC";"- in Arbeit -";"vw-admin";"14.01.2005 10:46:39";}
      Version{0;22;"AC";"- in Arbeit -";"vw-admin";"14.01.2005 16:01:41";}
      Version{0;23;"AC";"- in Arbeit -";"vw-admin";"14.01.2005 16:07:51";}
      Version{0;24;"AC";"- in Arbeit -";"vw-admin";"14.01.2005 16:20:27";}
      Version{0;25;"AC";"- in Arbeit -";"vw-admin";"14.01.2005 16:21:39";}
      Version{0;26;"AC";"- in Arbeit -";"vw-admin";"20.01.2005 10:37:10";}
      Version{0;27;"AC";"- in Arbeit -";"vw-admin";"21.01.2005 15:27:05";}
      Version{0;28;"AC";"- in Arbeit -";"vw-admin";"21.01.2005 15:28:40";}
      Version{0;29;"AC";"- in Arbeit -";"vw-admin";"21.01.2005 15:31:54";}
      Version{0;30;"AC";"- in Arbeit -";"vw-admin";"21.01.2005 16:18:23";}
      Version{0;31;"AC";"- in Arbeit -";"vw-admin";"16.02.2005 08:46:52";}
      Version{1;0;"PAE";" Freigabe ";"vw-admin";"06.06.2005 15:58:12";}
      Version{1;1;"AC";"- in Arbeit -";"vw-admin";"20.12.2005 16:07:13";}
      Version{1;2;"AC";"- in Arbeit -";"vw-admin";"20.12.2005 16:07:27";}
      Version{1;3;"AC";"- in Arbeit -";"vw-admin";"20.12.2005 16:20:32";}
      Version{1;4;"AC";"- in Arbeit -";"dsa-admin";"11.07.2006 08:44:55";}
      Version{1;5;"ZPH18";"[ Baustein importiert (neu) ]";"admin";"14.08.2007 15:13:55";}
      Version{1;6;"CP23A";"- in Arbeit -";"admin";"30.10.2007 16:10:13";}
      Version{1;7;"CP23A";"- in Arbeit -";"admin";"30.10.2007 16:12:03";}}}}}}
 FunctionDef{
  Name{"VW_spezifische_Bibliothek";}
  LangName{"VW_spezifische_Bibliothek";"VW_specific_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"Sammlung von Bausteinen zur Kommunikation mit Steuergeraeten von VW.";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;2;"ZPH18";}
   Version{1;0;"AC";"- freigegeben -";"vw-admin";"04.03.2003 11:56:19";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"07.08.2006 13:58:14";}
   Version{1;2;"ZPH18";"[ Baustein importiert (ersetzt) ]";"admin";"14.08.2007 15:07:01";}}
  FunctionDef{
   Name{"VW2000_Dienste";}
   LangName{"VW2000_Dienste";"VW2000_Dienste";}
   CvsVerHis{}
   Type{1;}
   Icon{0;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Sammlung von Bausteinen zur Kommunikation mit Steuerger\xE4ten von VW mit dem Protokoll K2000";"";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{1;3;"PAE";}
    Version{1;0;"AC";"- freigegeben -";"vw-admin";"17.02.2003 15:37:21";}
    Version{1;1;"AC";"- in Arbeit -";"vw-admin";"28.08.2003 17:40:34";}
    Version{1;2;"AC";"- in Arbeit -";"dsa-admin";"08.06.2004 08:55:47";}
    Version{1;3;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"25.07.2006 08:36:16";}}
   FunctionDef{
    Name{"VW2000_BZD_Version2_1";}
    LangName{"VW2000_BZD_Version2_1";"";}
    CvsVerHis{}
    Type{1;}
    Icon{0;}
    Properties{"Begin";}
    FormalParam{}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"";}
    NodeCategory{"";}
    Info{"";"";}
    Rights{"Write";"Read";}
    VersionInfo{
     CurVersion{0;1;"ZPH18";}
     Version{0;1;"ZPH18";"[ Baustein importiert (neu) ]";"admin";"14.08.2007 15:13:55";}}
    FunctionDef{
     Name{"VW2000_BZD_BaugruppenTyp1";}
     LangName{"VW2000_BZD_BaugruppenTyp1";"VW2000_BZD_BaugruppenTyp1";}
     CvsVerHis{}
     Type{1;}
     Icon{1;}
     Properties{"Begin";}
     FormalParam{
      InputParam{"Hndl";
       LangName{"Hndl";"Hndl";}"VCIKANAL";"VCIKanal1";
       LangDesc{"VCI-Kanal";"VCI channel";}}
      InputParam{"DlgHndl";
       LangName{"DlgHndl";"DlgHndl";}"DialogTyp";"DIALOG_LOKAL";
       LangDesc{"Dialog handle";"Dialog handle";}}
      InputParam{"ID_Nummer";
       LangName{"ID_Nummer";"ID_Nummer";}"ID_Nummern";"erste_ID";
       LangDesc{"zu lesende ID";"ECU ID to be read";}}
      InputParam{"ID_String";
       LangName{"ID_String";"ID_String";}"VW_Result_Tel";"VW_Stg_ID";
       LangDesc{"gelesene STG-Identifikation";"ECU ID string";}}
      InputParam{"HerstellAender";
       LangName{"HerstellAender";"HerstellAender";}"Baugruppenstring";"DHerstellerAenderungsdatum";
       LangDesc{"";"ECU Manufacturer information";}}
      InputParam{"BaugruppenNr";
       LangName{"BaugruppenNr";"BaugruppenNr";}"BgrNr";"";
       LangDesc{"Nummer der Baugruppe";"No/Name of Baugruppe";}}
      InputParam{"EvalOK";
       LangName{"BewImmerOK";"EvalOK";}"Bool";"CLogFalsch";
       LangDesc{"setzt die Bewertung immer auf OK, auch wenn daten fehlen";"Set the evaluation always to OK, even if data are missing";}}}
     LocalVar{}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     MSLCode{"string\tTeilenummer = \"\";\r\nstring \tbuffer;\r\n\r\nif (strlen (ID_String) > 12)\r\n{\r\n\terr =  _vwK2000VWIdTNR (ID_String, ID_Nummer, &Teilenummer);\r\n\tif ((!err) && (strlen (HerstellAender) == 8))\r\n\t\terr = OK;\r\n\telse\r\n\t{\r\n\t\terr = NOK;\r\n\t\tTeilenummer = strset (0x20, 12);\r\n\t\tHerstellAender = strset (0x20, 8);\r\n\t}\r\n\t\r\n}\r\nelse err = NOK;\r\n\t\r\ncsfWrite (&buffer, \"BAUTEIL\", BaugruppenNr, BaugruppenNr + Teilenummer + HerstellAender);\r\n\r\nerrDebug (1, \"Teilenummer: \",Teilenummer );\r\nerrDebug (2, \"HerstellAender: \",HerstellAender );\r\n\r\nerrDebug (err, \"Puffer: \", buffer);\r\n\r\nif (EvalOK == 1)\r\n\terr = OK;\r\nif (err == OK)\r\n\t  _statSetAsciiResult (err, buffer, FOK);\r\nelse\r\n\t  {\r\n\t  err = NOK;\r\n\t  _statSetAsciiResult (err, buffer, FMWNOK);\r\n\t  }\r\n//ENDE";}
     NodeCategory{"";}
     Info{"Baugruppentyp 1\r\n\r\nBaustein ermittelt den \"BaugruppenTyp1\"; dazu mu?die ID 0x9B mit der ID-Nummer und die zuvor ermittelte Hersteller\xE4nderungsstand \r\n(HerstellAender) aus der ID 0x86 bzw. MWB 80 \xFCbergeben werden und entsprechend der Doku aufbereitet.\r\n\r\nIm Parameter \"BaugruppenNr\" wird die Baugruppen-Nummer (laut Baugruppenkatalog) eingetragen.\r\nMit dem Parameter \"BewImmerOK\" kann die Statistikbewertung des Bausteins immer auf OK gesetzt werden, \r\nauch wenn nicht alle Daten f\xFCr den BaugruppenTyp0 ermittelt werden konnten (werden dann mit Blanks aufgef\xFCllt).\r\n\r\nnach VW Spec.: \"Vorgaben zur Bildung von SG-Baugruppen_v2.1.doc\" ergibt sich folgendes:\r\nVariante 1: Teilenummer und -Version (23 Zeichen) mit Hersteller\xE4nderungsstand\r\nStellen\tBezeichnung\tDaten-Quelle\r\n1 - 3\tBaugruppen-Nummer\tBaugruppen-Katalog\r\n4 - 15\tTeilenummer \tDienst 9B\r\n\tByte 1 - 12 1\r\n16 - 23\tHersteller\xE4nderungsstand\tDienst 86\tByte 32 -39 1\r\n\r\nVariante 2: Teilenummer und -Version (23 Zeichen) mit Hersteller\xE4nderungsstand\r\nStellen\tBezeichnung\tDaten-Quelle\r\n1 - 3\tBaugruppen-Nummer\tBaugruppen-Katalog\r\n4 - 15\tTeilenummer \tDienst 9B\tByte 1 - 12 1\r\n16 - 23\tHersteller\xE4nderungsstand\tMWB 80\tByte 18 - 25 2\r\n";"";}
     Rights{"Write";"Read";}
     VersionInfo{
      CurVersion{1;4;"nbmr";}
      Version{0;1;"AC";"- in Arbeit -";"vw-admin";"14.01.2005 11:03:33";}
      Version{0;2;"AC";"- in Arbeit -";"vw-admin";"14.01.2005 11:04:48";}
      Version{0;3;"AC";"- in Arbeit -";"vw-admin";"14.01.2005 11:51:45";}
      Version{0;4;"AC";"- in Arbeit -";"vw-admin";"14.01.2005 16:02:25";}
      Version{0;5;"AC";"- in Arbeit -";"vw-admin";"14.01.2005 16:04:26";}
      Version{0;6;"AC";"- in Arbeit -";"vw-admin";"14.01.2005 16:12:17";}
      Version{0;7;"AC";"- in Arbeit -";"vw-admin";"14.01.2005 16:14:06";}
      Version{0;8;"AC";"- in Arbeit -";"vw-admin";"14.01.2005 16:22:06";}
      Version{0;9;"AC";"- in Arbeit -";"vw-admin";"02.03.2005 16:35:33";}
      Version{1;0;"PAE";" Freigabe ";"vw-admin";"06.06.2005 15:58:30";}
      Version{1;1;"ZPH18";"[ Baustein importiert (neu) ]";"admin";"14.08.2007 15:13:55";}
      Version{1;2;"CP23A";"- in Arbeit -";"admin";"30.10.2007 16:16:01";}
      Version{1;3;"CP23A";"- in Arbeit -";"admin";"30.10.2007 16:16:18";}
      Version{1;4;"nbmr";"[ Baustein importiert (ersetzt) ]";"dsa";"15.05.2009 15:38:03";}}}}}}
 FunctionDef{
  Name{"VW_spezifische_Bibliothek";}
  LangName{"VW_spezifische_Bibliothek";"VW_specific_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"Sammlung von Bausteinen zur Kommunikation mit Steuergeraeten von VW.";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;2;"ZPH18";}
   Version{1;0;"AC";"- freigegeben -";"vw-admin";"04.03.2003 11:56:19";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"07.08.2006 13:58:14";}
   Version{1;2;"ZPH18";"[ Baustein importiert (ersetzt) ]";"admin";"14.08.2007 15:07:01";}}
  FunctionDef{
   Name{"VW2000_Dienste";}
   LangName{"VW2000_Dienste";"VW2000_Dienste";}
   CvsVerHis{}
   Type{1;}
   Icon{0;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Sammlung von Bausteinen zur Kommunikation mit Steuerger\xE4ten von VW mit dem Protokoll K2000";"";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{1;3;"PAE";}
    Version{1;0;"AC";"- freigegeben -";"vw-admin";"17.02.2003 15:37:21";}
    Version{1;1;"AC";"- in Arbeit -";"vw-admin";"28.08.2003 17:40:34";}
    Version{1;2;"AC";"- in Arbeit -";"dsa-admin";"08.06.2004 08:55:47";}
    Version{1;3;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"25.07.2006 08:36:16";}}
   FunctionDef{
    Name{"VW2000_BZD_Version2_1";}
    LangName{"VW2000_BZD_Version2_1";"";}
    CvsVerHis{}
    Type{1;}
    Icon{0;}
    Properties{"Begin";}
    FormalParam{}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"";}
    NodeCategory{"";}
    Info{"";"";}
    Rights{"Write";"Read";}
    VersionInfo{
     CurVersion{0;1;"ZPH18";}
     Version{0;1;"ZPH18";"[ Baustein importiert (neu) ]";"admin";"14.08.2007 15:13:55";}}
    FunctionDef{
     Name{"VW2000_BZD_BaugruppenTyp2";}
     LangName{"VW2000_BZD_BaugruppenTyp2";"VW2000_BZD_BaugruppenTyp2";}
     CvsVerHis{}
     Type{1;}
     Icon{1;}
     Properties{"Begin";}
     FormalParam{
      InputParam{"Hndl";
       LangName{"Hndl";"Hndl";}"VCIKANAL";"VCIKanal1";
       LangDesc{"VCI-Kanal";"VCI channel";}}
      InputParam{"DlgHndl";
       LangName{"DlgHndl";"DlgHndl";}"DialogTyp";"DIALOG_LOKAL";
       LangDesc{"Dialog handle";"Dialog handle";}}
      InputParam{"ID_Nummer";
       LangName{"ID_Nummer";"ID_Nummer";}"ID_Nummern";"erste_ID";
       LangDesc{"zu lesende ID";"ECU ID to be read";}}
      InputParam{"ID_String";
       LangName{"ID_String";"ID_String";}"VW_Result_Tel";"VW_Stg_ID";
       LangDesc{"gelesene STG-Identifikation";"ECU ID string";}}
      InputParam{"HWIdString";
       LangName{"HWIdString";"HWIdString";}"StgHWTNR";"DSTGHWIdString";
       LangDesc{"";"ECU hardware ID string";}}
      InputParam{"BaugruppenNr";
       LangName{"BaugruppenNr";"BaugruppenNr";}"BgrNr";"";
       LangDesc{"Nummer der Baugruppe";"No/Name of Baugruppe";}}
      InputParam{"EvalOK";
       LangName{"BewImmerOK";"EvalOK";}"Bool";"CLogFalsch";
       LangDesc{"setzt die Bewertung immer auf OK, auch wenn daten fehlen";"Set the evaluation always to OK, even if data are missing";}}}
     LocalVar{}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     MSLCode{"string\tIdVersion = \"\";\r\nstring\tHWTeilenummer = \"\";\r\nstring \tbuffer;\r\n\r\nif (strlen (ID_String) > 16)\r\n{\r\n\terr = _vwK2000VWIdVersion(ID_String, ID_Nummer, &IdVersion);\r\n\tif ((!err) && (strlen (HWIdString) >= 12))\r\n\t{\r\n\t\tHWTeilenummer = midstr (HWIdString, 0, 12);\r\n\t\terr = OK;\r\n\t}\r\n\telse\r\n\t{\r\n\t\tHWTeilenummer = strset (0x20, 12);\r\n\t\tIdVersion = strset (0x20, 4);\r\n\t\terr = NOK;\r\n\t}\r\n\t\r\n}\r\nelse err = NOK;\r\n\t\r\ncsfWrite (&buffer, \"BAUTEIL\", BaugruppenNr, BaugruppenNr + HWTeilenummer + \"    \" + IdVersion);\r\n\r\nerrDebug (1, \"HWTeilenummer: \",HWTeilenummer );\r\nerrDebug (2, \"IdVersion: \",IdVersion );\r\n\r\nerrDebug (err, \"Puffer: \", buffer);\r\n\r\nif (EvalOK == 1)\r\n\terr = OK;\r\nif (err == OK)\r\n\t  _statSetAsciiResult (err, buffer, FOK);\r\nelse\r\n\t  {\r\n\t  err = NOK;\r\n\t  _statSetAsciiResult (err, buffer, FMWNOK);\r\n\t  }\r\n//ENDE";}
     NodeCategory{"";}
     Info{"Baugruppentyp 2 \r\n\r\nBaustein ermittelt den \"BaugruppenTyp2\"; dazu mu?die ID 0x9B mit der ID-Nummer und die HWTeilenummer (\"HWIdString\") aus der \r\nHardwareID 0x91 \xFCbergeben werden und entsprechend der Doku aufbereitet.\r\n\r\nIm Parameter \"BaugruppenNr\" wird die Baugruppen-Nummer (laut Baugruppenkatalog) eingetragen.\r\nMit dem Parameter \"BewImmerOK\" kann die Statistikbewertung des Bausteins immer auf OK gesetzt werden, \r\nauch wenn nicht alle Daten f\xFCr den BaugruppenTyp0 ermittelt werden konnten (werden dann mit Blanks aufgef\xFCllt).\r\n\r\nnach VW Spec.: \"Vorgaben zur Bildung von SG-Baugruppen_v2.1.doc\" ergibt sich folgendes:\r\nAnliefer-Teilenummer und Software-Version (23 Zeichen)\r\n\r\nStellen\tBezeichnung\tDaten-Quelle\r\n1  -3\tBaugruppen-Nummer\tBaugruppen-Katalog\r\n4 - 15\tAnliefer-Teilenummer\tDienst 91\tByte 2 - 13  \r\n16 - 19\tLeerzeichen\t\r\n20 - 23\tSoftware-Version\tDienst 9B\tByte 13 - 16 1\r\n";"";}
     Rights{"Write";"Read";}
     VersionInfo{
      CurVersion{1;4;"nbmr";}
      Version{0;1;"AC";"- in Arbeit -";"vw-admin";"14.01.2005 11:53:55";}
      Version{0;2;"AC";"- in Arbeit -";"vw-admin";"14.01.2005 11:59:36";}
      Version{0;3;"AC";"- in Arbeit -";"vw-admin";"14.01.2005 12:00:47";}
      Version{0;4;"AC";"- in Arbeit -";"vw-admin";"14.01.2005 16:02:48";}
      Version{0;5;"AC";"- in Arbeit -";"vw-admin";"14.01.2005 16:04:36";}
      Version{0;6;"AC";"- in Arbeit -";"vw-admin";"14.01.2005 16:13:52";}
      Version{0;7;"AC";"- in Arbeit -";"vw-admin";"14.01.2005 16:22:36";}
      Version{0;8;"AC";"- in Arbeit -";"vw-admin";"14.01.2005 16:23:17";}
      Version{0;9;"AC";"- in Arbeit -";"vw-admin";"02.03.2005 16:40:48";}
      Version{1;0;"PAE";" Freigabe ";"vw-admin";"06.06.2005 15:58:35";}
      Version{1;1;"ZPH18";"[ Baustein importiert (neu) ]";"admin";"14.08.2007 15:13:55";}
      Version{1;2;"CP23A";"- in Arbeit -";"admin";"30.10.2007 16:17:20";}
      Version{1;3;"CP23A";"- in Arbeit -";"admin";"30.10.2007 16:17:50";}
      Version{1;4;"nbmr";"[ Baustein importiert (ersetzt) ]";"dsa";"15.05.2009 15:07:58";}}}}}}
 FunctionDef{
  Name{"VW_spezifische_Bibliothek";}
  LangName{"VW_spezifische_Bibliothek";"VW_specific_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"Sammlung von Bausteinen zur Kommunikation mit Steuergeraeten von VW.";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;2;"ZPH18";}
   Version{1;0;"AC";"- freigegeben -";"vw-admin";"04.03.2003 11:56:19";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"07.08.2006 13:58:14";}
   Version{1;2;"ZPH18";"[ Baustein importiert (ersetzt) ]";"admin";"14.08.2007 15:07:01";}}
  FunctionDef{
   Name{"VW2000_Dienste";}
   LangName{"VW2000_Dienste";"VW2000_Dienste";}
   CvsVerHis{}
   Type{1;}
   Icon{0;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Sammlung von Bausteinen zur Kommunikation mit Steuerger\xE4ten von VW mit dem Protokoll K2000";"";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{1;3;"PAE";}
    Version{1;0;"AC";"- freigegeben -";"vw-admin";"17.02.2003 15:37:21";}
    Version{1;1;"AC";"- in Arbeit -";"vw-admin";"28.08.2003 17:40:34";}
    Version{1;2;"AC";"- in Arbeit -";"dsa-admin";"08.06.2004 08:55:47";}
    Version{1;3;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"25.07.2006 08:36:16";}}
   FunctionDef{
    Name{"VW2000_BZD_Version2_1";}
    LangName{"VW2000_BZD_Version2_1";"";}
    CvsVerHis{}
    Type{1;}
    Icon{0;}
    Properties{"Begin";}
    FormalParam{}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"";}
    NodeCategory{"";}
    Info{"";"";}
    Rights{"Write";"Read";}
    VersionInfo{
     CurVersion{0;1;"ZPH18";}
     Version{0;1;"ZPH18";"[ Baustein importiert (neu) ]";"admin";"14.08.2007 15:13:55";}}
    FunctionDef{
     Name{"VW2000_BZD_BaugruppenTyp3";}
     LangName{"VW2000_BZD_BaugruppenTyp3";"VW2000_BZD_BaugruppenTyp3";}
     CvsVerHis{}
     Type{1;}
     Icon{1;}
     Properties{"Begin";}
     FormalParam{
      InputParam{"DlgHndl";
       LangName{"DlgHndl";"DlgHndl";}"DialogTyp";"DIALOG_LOKAL";
       LangDesc{"Dialog handle";"Dialog handle";}}
      InputParam{"BaugruppenNr";
       LangName{"BaugruppenNr";"BaugruppenNr";}"BgrNr";"";
       LangDesc{"Nummer der Baugruppe";"No/Name of Baugruppe";}}
      InputParam{"HardwareSorte";
       LangName{"HardwareSorte";"HardwareSorte";}"Sorte";"";
       LangDesc{"Hardware Sorte aus dem Fahrzeugdaten-Telegramm";"Hardware key from vehicle data record";}}
      InputParam{"SoftwareSorte";
       LangName{"SoftwareSorte";"SoftwareSorte";}"Sorte";"";
       LangDesc{"Software Sorte aus dem Fahrzeugdaten-Telegramm";"Software key from vehicle data record";}}
      InputParam{"Fzd";
       LangName{"Fzd";"Fzd";}"FZD";"FZD";
       LangDesc{"Fahrzeugdaten";"Vehicle data";}}
      InputParam{"FzdPosition";
       LangName{"FzdPosition";"FzdPosition";}"INT";"CInt1000";
       LangDesc{"Position der Software-Baugruppe im Fzd-Telegramm";"Start position of HW / SW key in vehicle data record";}}}
     LocalVar{}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     MSLCode{"string\tbuffer;\r\nstring\tsTel, sSorte;\r\nint\tiCnt, iFound = 0;\r\nint\tSortLen, FzdLen;\r\nstring\tTmpStr,Test;\r\n\r\nFzdLen = strlen(Fzd);\r\nSortLen = strlen(HardwareSorte);\r\nif (SortLen == 3)\r\n\terr = OK;\r\nelse err = NOK;\r\n\r\nwhile ((err == OK) && (iFound == 0))\r\n{\r\n\tTmpStr = midstr (Fzd, FzdPosition + iCnt , SortLen);\r\n\tif (midstr (TmpStr, 0, SortLen) == HardwareSorte)\r\n\t{\r\n\t\tsSorte = midstr (Fzd, FzdPosition + iCnt + SortLen, 4);\r\n\t\tiFound = 1; // gefunden\r\n\t\terrDebug (0, \"HardwareSorte: \", HardwareSorte, sSorte);\r\n\t}\r\n\tiCnt = iCnt + 7;\r\n\tif (iCnt >= FzdLen)\r\n\t\tiFound = -1; //nicht gefunden\r\n}\r\nHardwareSorte = HardwareSorte + sSorte;\r\n\r\nif ((err == OK) && (iFound == 1))\r\n{\r\n\tiCnt = 0;\r\n\tiFound = 0;\r\n\tSortLen = strlen(SoftwareSorte);\r\n\tif (SortLen == 3 )\r\n\t\terr = OK;\r\n\telse err = NOK;\r\n\t\r\n\twhile ((err == OK) && (iFound == 0))\r\n\t{\r\n\t\tTmpStr = midstr (Fzd, FzdPosition + iCnt , SortLen);\r\n\t\tif (midstr (TmpStr, 0, SortLen) == SoftwareSorte)\r\n\t\t{\r\n\t\t\tsSorte = midstr (Fzd, FzdPosition + iCnt + SortLen, 4);\r\n\t\t\tiFound = 1; // gefunden\r\n\t\t\terrDebug (0, \"SoftwareSorte: \", SoftwareSorte, sSorte);\r\n\t\t}\r\n\t\tiCnt = iCnt + 7;\r\n\t\tif (iCnt >= FzdLen)\r\n\t\t\tiFound = -1; //nicht gefunden\r\n\t}\r\n\tSoftwareSorte = SoftwareSorte + sSorte;\r\n}\r\nif (err == NOK)\r\n\terr = errWarning (NOK, \"wrong length of parameter: \", HardwareSorte, SoftwareSorte);\r\nif (iFound == -1)\r\n\terr = errWarning (NOK, \"no entry found in data: \", HardwareSorte, SoftwareSorte);\r\nif (err == OK)\r\n\tcsfWrite (&buffer, \"BAUTEIL\", BaugruppenNr, BaugruppenNr + SoftwareSorte + HardwareSorte);\r\nelse\r\n\terr = NOK;\r\n_statSetAsciiResult (err, buffer, FMWNOK);\r\n\r\n\r\n\r\n\r\n";}
     NodeCategory{"";}
     Info{"Baugruppentyp 3\r\n\r\nBaustein ermittelt den \"BaugruppenTyp3\"; dazu mu?der FZD-Satz (Fzd), die Position der Baugruppen/Sorten-Codes (FzdPosition)\r\nund die jeweilige Hardware/Software - Baugruppe (HardwareSorte, SoftwareSorte) \xFCbergeben werden und daraus wird entsprechend \r\nder Doku der BaugruppenTyp aufbereitet.\r\n\r\nnach VW Spec.: \"Vorgaben zur Bildung von SG-Baugruppen_v2.1.doc\" ergibt sich folgendes:\r\nCodierung langes Codewort (Verweis auf die Zeile in der Freigabetabelle) 17 Zeichen\r\nByte\tBezeichnung\tDaten-Quelle\r\n1 - 3\tBaugruppen-Nummer\tBaugruppen-Katalog\r\n4 - 6\tHardware-Baugruppe\tSoll-Informationen von UPS aus Fahrzeugdatensatz\r\n7 - 10\tHardware Sortenschl\xFCssel\t\r\n11 - 13\tSoftware Baugruppe\t\r\n14 - 17\tSoftware Sortenschl\xFCssel\t\r\n\r\n\r\n07.03.05, sz:\r\nNach einer E-Mail von Herrn Witschi wurde die Reihenfolge von \r\nHard- und Software Baugruppe getauscht.\r\n";"";}
     Rights{"Write";"Read";}
     VersionInfo{
      CurVersion{1;3;"nbmr";}
      Version{0;1;"AC";"- in Arbeit -";"vw-admin";"14.01.2005 13:59:46";}
      Version{0;2;"AC";"- in Arbeit -";"vw-admin";"14.01.2005 14:02:12";}
      Version{0;3;"AC";"- in Arbeit -";"vw-admin";"14.01.2005 14:02:20";}
      Version{0;4;"AC";"- in Arbeit -";"vw-admin";"14.01.2005 14:04:04";}
      Version{0;5;"AC";"- in Arbeit -";"vw-admin";"14.01.2005 14:04:12";}
      Version{0;6;"AC";"- in Arbeit -";"vw-admin";"14.01.2005 14:35:06";}
      Version{0;7;"AC";"- in Arbeit -";"vw-admin";"14.01.2005 15:05:37";}
      Version{0;8;"AC";"- in Arbeit -";"vw-admin";"14.01.2005 15:11:06";}
      Version{0;9;"AC";"- in Arbeit -";"vw-admin";"14.01.2005 15:17:53";}
      Version{0;10;"AC";"- in Arbeit -";"vw-admin";"14.01.2005 16:03:04";}
      Version{0;11;"AC";"- in Arbeit -";"vw-admin";"14.01.2005 16:04:45";}
      Version{0;12;"AC";"- in Arbeit -";"vw-admin";"14.01.2005 16:15:16";}
      Version{0;13;"AC";"- in Arbeit -";"vw-admin";"14.01.2005 16:30:44";}
      Version{0;14;"AC";"- in Arbeit -";"vw-admin";"21.01.2005 16:10:44";}
      Version{0;15;"AC";"[ Baustein importiert (ersetzt) ]";"vw-admin";"07.03.2005 10:05:50";}
      Version{0;16;"AC";"- in Arbeit -";"vw-admin";"07.03.2005 10:08:11";}
      Version{1;0;"PAE";" Freigabe ";"vw-admin";"06.06.2005 15:58:41";}
      Version{1;1;"ZPH18";"[ Baustein importiert (neu) ]";"admin";"14.08.2007 15:13:55";}
      Version{1;2;"CP23A";"- in Arbeit -";"admin";"30.10.2007 16:19:51";}
      Version{1;3;"nbmr";"[ Baustein importiert (ersetzt) ]";"dsa";"15.05.2009 15:07:58";}}}}}}
 FunctionDef{
  Name{"VW_spezifische_Bibliothek";}
  LangName{"VW_spezifische_Bibliothek";"VW_specific_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"Sammlung von Bausteinen zur Kommunikation mit Steuergeraeten von VW.";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;2;"ZPH18";}
   Version{1;0;"AC";"- freigegeben -";"vw-admin";"04.03.2003 11:56:19";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"07.08.2006 13:58:14";}
   Version{1;2;"ZPH18";"[ Baustein importiert (ersetzt) ]";"admin";"14.08.2007 15:07:01";}}
  FunctionDef{
   Name{"VW2000_Dienste";}
   LangName{"VW2000_Dienste";"VW2000_Dienste";}
   CvsVerHis{}
   Type{1;}
   Icon{0;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Sammlung von Bausteinen zur Kommunikation mit Steuerger\xE4ten von VW mit dem Protokoll K2000";"";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{1;3;"PAE";}
    Version{1;0;"AC";"- freigegeben -";"vw-admin";"17.02.2003 15:37:21";}
    Version{1;1;"AC";"- in Arbeit -";"vw-admin";"28.08.2003 17:40:34";}
    Version{1;2;"AC";"- in Arbeit -";"dsa-admin";"08.06.2004 08:55:47";}
    Version{1;3;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"25.07.2006 08:36:16";}}
   FunctionDef{
    Name{"VW2000_FSP";}
    LangName{"VW2000_FSP";"VW2000_DTC";}
    CvsVerHis{}
    Type{1;}
    Icon{0;}
    Properties{"Begin";}
    FormalParam{}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"";}
    NodeCategory{"";}
    Info{"";"";}
    Rights{"Write";"Read";}
    VersionInfo{}
    FunctionDef{
     Name{"VW2000_FSP_Lesen_Anzahl";}
     LangName{"VW2000_FSP_Lesen_Anzahl";"VW2000_DTC_Read_Quantity";}
     CvsVerHis{}
     Type{1;}
     Icon{1;}
     Properties{"Begin";}
     FormalParam{
      InputParam{"Hndl";
       LangName{"Hndl";"Hndl";}"VCIKANAL";"VCIKanal1";
       LangDesc{"VCI-Kanal";"VCI channel";}}
      OutputParam{"Anzahl_Fehler";
       LangName{"Anzahl_Fehler";"Anzahl_Fehler";}"INT";"DInt";
       LangDesc{"Anzahl der vorhanden Fehler";"";}}
      OutputParam{"FSP_String";
       LangName{"FSP_String";"FSP_String";}"VW_Result_Tel";"VW_FSP_Result";
       LangDesc{"Fehlerspeicher-Telegramm";"";}}
      OutputParam{"FSP_Lesen_Code";
       LangName{"FSP_Lesen_Code";"FSP_Lesen_Code";}"VW_Codes";"VW_Codes_FSP_Lesen";
       LangDesc{"";"";}}}
     LocalVar{}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     MSLCode{"int\ti;\r\nstring\terrTel;\r\nstring ServTel;\r\n\r\nvciExDtaRead (Hndl, &ServTel);\r\n\r\n*FSP_Lesen_Code = 2;\r\n// \"altes\" Format \r\nif (0 > strstr (ServTel, \"\\x01\\x18\"))\r\n\t{\r\n\terr = _vciDataExchange (Hndl, 0x18, 0x58, \"\\x02\\xff\\x00\", FSP_String);\r\n\tif (err != OK)\t\t// abwaertskompatibel! wenn keine Info im Handel\r\n\t\t{\r\n\t\terr = _vciDataExchange (Hndl, 0x18, 0x58, \"\\x00\\xff\\x00\", FSP_String);\r\n\t\t*FSP_Lesen_Code = 0;\r\n\t\t}\r\n\t}\r\nelse\t\t// SAE Hex-Format\r\n\t{\r\n\terr = _vciDataExchange (Hndl, 0x18, 0x58, \"\\x00\\xff\\x00\", FSP_String);\r\n\t*FSP_Lesen_Code = 0;\r\n\t}\r\nif (err)\r\n\t{\r\n\t_vciStatVciError (Hndl);\r\n\t_statSetStrResult (ABBR, *FSP_String, FSTGE);\r\n\t*FSP_Lesen_Code = -1;\r\n\t}\r\nelse\r\n\t{\r\n\t*Anzahl_Fehler = *FSP_String[0];\r\n        if (*Anzahl_Fehler > 0)\r\n                err = NOK;\r\n        _statSetFloatResult (err, *Anzahl_Fehler * 1.0, FMWNOK);\r\n\t}";}
     NodeCategory{"";}
     Info{"Dieses Modul lie\xDFt den Fehlerspeicher eines Steuerger\xE4tes.\r\nEs wertet zun\xE4chst die unterst\xFCtzten Funktionen aus.\r\nDabei wird der KWP2000-Befehl readDiagnosticInfomation ( Blocktitel 0x18)\r\nmit dem Parameter allGroups (0x02 0xff 0x00) verwendet.\r\nWenn Funktion 0x0118 unterst\xFCtzt wird, wird zum lesen der SAE-Codes in neueren STG mit Parameter 0x00 0xff 0x00 gelesen.\r\nWie und ob gelesen werden konnte wird in dem Parameter FSP_Lesen_Code zur\xFCckgegeben.\r\n\r\nDer gelesene Fehlerspeicherinhalt wird immer in der Variablen \"FSP-String\" zur weiteren\r\nBearbeitung abgespeichert.\r\n\r\nBewertet und in die Statistik geschrieben wird die Anzahl, der im Steuerger\xE4t vorhanden\r\nFehler. Eine Filterung wird hierbei nicht vorgenommen.\r\n\r\nDie Bewertung diese Pr\xFCfschrittes is \"OK\", wenn der Steuerger\xE4tebefehl erfolgreich \r\nausgef\xFChrt werden konnte und kein Fehler vorhandenen ist.\r\nDie Bewertung diese Pr\xFCfschrittes is \"NOK\", wenn der Steuerger\xE4tebefehl erfolgreich \r\nausgef\xFChrt werden konnte und mindestens ein Fehler vorhandenen ist.\r\nDie Bewertung diese Pr\xFCfschrittes is \"ABBR\", wenn der Steuerger\xE4tebefehl nicht\r\nerfolgreich ausgef\xFChrt werden konnte.\r\n";"";}
     Rights{"Write";"Read";}
     VersionInfo{
      CurVersion{2;0;"AC";}
      Version{1;0;"AC";"- freigegeben -";"vw-admin";"04.03.2003 13:37:09";}
      Version{1;1;"x";"- in Arbeit -";"vw-admin";"25.08.2004 13:43:32";}
      Version{1;2;"x";"- in Arbeit -";"vw-admin";"25.08.2004 13:43:47";}
      Version{1;3;"AC";"- in Arbeit -";"vw-admin";"26.08.2004 10:19:54";}
      Version{1;4;"AC";"- in Arbeit -";"vw-admin";"01.12.2004 12:12:33";}
      Version{1;5;"AC";"- in Arbeit -";"vw-admin";"02.12.2004 15:24:07";}
      Version{1;6;"AC";"- in Arbeit -";"vw-admin";"02.12.2004 15:30:13";}
      Version{2;0;"AC";" - freigegeben - ";"vw-admin";"02.12.2004 15:36:55";}}}}}}
 FunctionDef{
  Name{"VW_spezifische_Bibliothek";}
  LangName{"VW_spezifische_Bibliothek";"VW_specific_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"Sammlung von Bausteinen zur Kommunikation mit Steuergeraeten von VW.";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;2;"ZPH18";}
   Version{1;0;"AC";"- freigegeben -";"vw-admin";"04.03.2003 11:56:19";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"07.08.2006 13:58:14";}
   Version{1;2;"ZPH18";"[ Baustein importiert (ersetzt) ]";"admin";"14.08.2007 15:07:01";}}
  FunctionDef{
   Name{"VW2000_Dienste";}
   LangName{"VW2000_Dienste";"VW2000_Dienste";}
   CvsVerHis{}
   Type{1;}
   Icon{0;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Sammlung von Bausteinen zur Kommunikation mit Steuerger\xE4ten von VW mit dem Protokoll K2000";"";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{1;3;"PAE";}
    Version{1;0;"AC";"- freigegeben -";"vw-admin";"17.02.2003 15:37:21";}
    Version{1;1;"AC";"- in Arbeit -";"vw-admin";"28.08.2003 17:40:34";}
    Version{1;2;"AC";"- in Arbeit -";"dsa-admin";"08.06.2004 08:55:47";}
    Version{1;3;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"25.07.2006 08:36:16";}}
   FunctionDef{
    Name{"VW2000_FSP";}
    LangName{"VW2000_FSP";"VW2000_DTC";}
    CvsVerHis{}
    Type{1;}
    Icon{0;}
    Properties{"Begin";}
    FormalParam{}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"";}
    NodeCategory{"";}
    Info{"";"";}
    Rights{"Write";"Read";}
    VersionInfo{}
    FunctionDef{
     Name{"VW2000_FSP_Bewerten_Fehler";}
     LangName{"VW2000_FSP_Bewerten_Fehler";"VW2000_DTC_Evaluate_ErrorCodes";}
     CvsVerHis{}
     Type{1;}
     Icon{1;}
     Properties{"Begin";}
     FormalParam{
      InputParam{"Hndl";
       LangName{"Hndl";"Hndl";}"VCIKANAL";"VCIKanal1";
       LangDesc{"VCI-Kanal";"VCI channel";}}
      InputParam{"DlgHndl";
       LangName{"DlgHndl";"DlgHndl";}"DialogTyp";"DIALOG_LOKAL";
       LangDesc{"Dialog handle";"Dialog handle";}}
      InputParam{"Zeile";
       LangName{"Zeile";"Zeile";}"DialogLine";"CDialogZeile1";
       LangDesc{"Ausgabezeile";"Output line";}}
      InputParam{"OK_Anzeige";
       LangName{"OK_Anzeige";"OK_Anzeige";}"ZUSTAND";"Nein";
       LangDesc{"Anzeige, wenn ID i.O.";"";}}
      InputParam{"AnzeigeZeit";
       LangName{"AnzeigeZeit";"AnzeigeZeit";}"Time";"CTime_0";
       LangDesc{"Anzeigezeit";"Display time";}}
      InputParam{"FSP_String";
       LangName{"FSP_String";"FSP_String";}"VW_Result_Tel";"VW_FSP_Result";
       LangDesc{"Fehlerspeicher-Telegramm";"";}}
      InputParam{"FSP_Lesen_Code";
       LangName{"FSP_Lesen_Code";"FSP_Lesen_Code";}"VW_Codes";"VW_Codes_FSP_Lesen";
       LangDesc{"";"";}}}
     LocalVar{
      LocVarDef{"Kommentar1";
       LangName{"Kommentar1";"Kommentar1";}"Locvar";"TEXT";
       LangDesc{"";"";}
       LangText{"\"FSP lesen\"";"\"\xB6\xC1\xB9\xCA\xD5\xCF\xC2\xEB\"";"\"DTC read\"";}"Const";}
      LocVarDef{"KommentarAbbruch";
       LangName{"KommentarAbbruch";"";}"Locvar";"TEXT";
       LangDesc{"";"";}
       LangText{"\"Abbruch FSP lesen\"";"\"\xB6\xC1\xB9\xCA\xD5\xCF\xC2\xEB\xB7\xC5\xC6\xFA\"";"\"Abort read DTC\"";}"Const";}}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     MSLCode{"string\terrStr, telBuf, Fehlerquelle, Fehlerart, txtFQ,txtFA;\r\nstring\terrText;\r\nstring  statText;\r\nint\ti, l;\r\nint\tcsfhndl;\r\nint\tAusgabeliste;\r\nstring\ttelbuf;\r\nstring  eingabe;\r\n\r\nif ((FSP_Lesen_Code != 0) && (FSP_Lesen_Code != 2))\r\n\t{\r\n\t_statSetAsciiResult (ABBR, KommentarAbbruch, FSTGE);\t\r\n\treturn ABBR;\r\n\t}\r\n\r\nif (Zeile > 0)\r\n\t_dlgMultiSetLine (DlgHndl, Zeile, Kommentar1);\r\n\r\n\r\n// errList Generieren\r\n\r\ncsfhndl\t\t= csfwrOpen (&statText, \"FSP\");\r\nerrText= \"\";\r\n\r\nAusgabeliste\t= listCreate (10, 5);\r\n\r\nerrText = \"\";\r\n\r\ni = 1;\r\nl = strlen (FSP_String);\r\nwhile (i < l)\r\n{\r\n\terrStr = midstr (FSP_String, i, 3);\r\n\r\n\tif (strlen(errStr) < 3)\r\n\t\tbreak;\r\n\r\n\tFehlerquelle = sprintf (\"%04lx\", errStr [0]*256 + errStr [1]);\r\n\tFehlerart = sprintf (\"%02lx\", errStr [2]);\r\n\r\n\tif (FSP_Lesen_Code == 2)\r\n\t\ttxtFQ = vciErrorText (Hndl, \"DQ\" + Fehlerquelle);\r\n\telse \r\n\t\ttxtFQ = vciErrorText (Hndl, \"FCP\" + Fehlerquelle);\r\n\r\n\ttxtFA = vciErrorText (Hndl, \"FA\" + Fehlerart);\r\n\r\n\tif ((errStr[2] & 0x0f) == 0x00 )\r\n\t\t{\r\n\t\tFehlerart = \"\";\r\n\t\ttxtFA = \"\";\r\n\t\t}\r\n\r\n\tif (txtFQ == \"\")\r\n\t\ttxtFQ=Fehlerquelle;\r\n\tif (txtFA == \"\")\r\n\t\ttxtFA=Fehlerart;\r\n\r\n        csfWrite (&telBuf, \"Error\",Fehlerquelle,Fehlerart,txtFQ+\":\"+txtFA);\r\n        if (csfhndl >= 0)\r\n\t        csfwrAddTel (csfhndl, telBuf);\r\n\r\n\r\n\tif (Ausgabeliste >= 0)\r\n\t\t{\r\n\t\tlistAppend (Ausgabeliste,txtFQ);\r\n\t\terrText = errText + txtFQ + \"\\x0a\\x0d\";\r\n\t\tif (txtFA != \"\")\r\n\t\t\t{\r\n\t\t\tlistAppend (Ausgabeliste,txtFA);\r\n\t\t\terrText = errText + txtFA + \"\\x0a\\x0d\";\r\n\t\t\t}\r\n\t\t}\r\n\r\n\ti = i + 3;\r\n}\r\nif (csfhndl >= 0)\r\n\tcsfwrClose (csfhndl);\r\n\r\nif (listSize(Ausgabeliste) > 0)\r\n\terr = NOK;\r\nelse\r\n\terr = OK;\r\n\r\n\r\nif ((AnzeigeZeit > 0 ) && (OK_Anzeige != 0 ))\r\n\tif (err == NOK)\r\n\t\t_dlgInputList (DlgHndl,\"\",Kommentar1,Ausgabeliste,AnzeigeZeit,&eingabe);\r\n\telse\r\n\t\t{\r\n\t\t_dlgMultiTextRsltBmp (DlgHndl,1,Kommentar1,err);\r\n\t\t_dlgRecvTel (DlgHndl, AnzeigeZeit, &telbuf );\t\t\r\n\t\t_dlgMultiSetButtons(DlgHndl,3);\t\r\n\t\t}\r\n\r\n_statSetAsciiResult (err, statText, FSTGE);\t\r\n\r\nif (Ausgabeliste >= 0)\r\n\tlistDestroy (Ausgabeliste);\r\n\r\nif (Zeile > 0)\r\n\t_dlgMultiClearLine (DlgHndl, Zeile);\r\n";}
     NodeCategory{"";}
     Info{"Dieses Modul lie\xDFt nicht den Fehlerspeicher eines Steuerger\xE4tes. Es wertet nur die in der\r\nVariablen gespeicherten Fehler aus. Es kann somit, die mit dem Modul VW2000_FSP_Lesen_Anzahl \r\ngelesene oder die mit dem Modul VW_FSP_Filter bearbeitete Fehlerspeicherinformation ausgewertet\r\nwerden.\r\nWie und ob der FSP gelesen werden konnte wird in dem Parameter FSP_Lesen_Code vom lesenden Baustein \r\n(VW2000_FSP_Lesen_Anzahl) \xFCbergeben. F\xFCr SAE-Codes wird in der vw_err.txt ein Prefix \"FCP\" erwartet.\r\n\r\nEs werden die vorhanden Fehercodes bewertet und in die Statistik geschrieben. \r\nEine Filterung wird hierbei nicht vorgenommen.\r\n\r\nDie Bewertung diese Pr\xFCfschrittes is \"OK\", wenn der Steuerger\xE4tebefehl erfolgreich \r\nausgef\xFChrt werden konnte und kein Fehler vorhandenen ist.\r\n\r\nWenn eine \"Anzeigezeit\" gr\xF6\xDFer 0 \xFCbergeben wird, wird im Fehlerfall dem Werker eine Liste\r\nmit den gelesenen Fehler angezeigt. Im \"OK\"-Fall wird f\xFCr diese Zeite die Bewertung\r\nVisualisiert.";"";}
     Rights{"Write";"Read";}
     VersionInfo{
      CurVersion{2;1;"CP3";}
      Version{1;0;"AC";"- freigegeben -";"vw-admin";"24.03.2003 16:37:15";}
      Version{1;1;"bru";"- in Arbeit -";"vw-admin";"04.04.2003 15:35:36";}
      Version{1;2;"x";"- in Arbeit -";"vw-admin";"25.08.2004 13:44:19";}
      Version{1;3;"x";"- in Arbeit -";"vw-admin";"25.08.2004 13:44:37";}
      Version{1;4;"x";"- in Arbeit -";"vw-admin";"25.08.2004 13:55:48";}
      Version{1;5;"AC";"- in Arbeit -";"vw-admin";"26.08.2004 10:23:11";}
      Version{2;0;"AC";" - freigegeben - ";"vw-admin";"02.12.2004 15:37:24";}
      Version{2;1;"CP3";"- in Arbeit -";"admin";"24.08.2006 09:43:13";}}}}}}
 FunctionDef{
  Name{"VW_spezifische_Bibliothek";}
  LangName{"VW_spezifische_Bibliothek";"VW_specific_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"Sammlung von Bausteinen zur Kommunikation mit Steuergeraeten von VW.";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;2;"ZPH18";}
   Version{1;0;"AC";"- freigegeben -";"vw-admin";"04.03.2003 11:56:19";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"07.08.2006 13:58:14";}
   Version{1;2;"ZPH18";"[ Baustein importiert (ersetzt) ]";"admin";"14.08.2007 15:07:01";}}
  FunctionDef{
   Name{"VW2000_Dienste";}
   LangName{"VW2000_Dienste";"VW2000_Dienste";}
   CvsVerHis{}
   Type{1;}
   Icon{0;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Sammlung von Bausteinen zur Kommunikation mit Steuerger\xE4ten von VW mit dem Protokoll K2000";"";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{1;3;"PAE";}
    Version{1;0;"AC";"- freigegeben -";"vw-admin";"17.02.2003 15:37:21";}
    Version{1;1;"AC";"- in Arbeit -";"vw-admin";"28.08.2003 17:40:34";}
    Version{1;2;"AC";"- in Arbeit -";"dsa-admin";"08.06.2004 08:55:47";}
    Version{1;3;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"25.07.2006 08:36:16";}}
   FunctionDef{
    Name{"VW2000_STG_Verbindungsaufbau";}
    LangName{"VW2000_STG_Verbindungsaufbau";"VW2000_ECU_Connection";}
    CvsVerHis{}
    Type{1;}
    Icon{0;}
    Properties{"Begin";}
    FormalParam{}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"";}
    NodeCategory{"";}
    Info{"Platzhalter f\xFCr Pr\xFCfschritte";"";}
    Rights{"Write";"Read";}
    VersionInfo{}
    FunctionDef{
     Name{"VW2000_STG_Ende";}
     LangName{"VW2000_STG_Ende";"VW2000_STG_Ende";}
     CvsVerHis{}
     Type{1;}
     Icon{1;}
     Properties{"Begin";}
     FormalParam{
      OutputParam{"Hndl";
       LangName{"Hndl";"Hndl";}"VCIKANAL";"VCIKanal1";
       LangDesc{"VCI-Kanal";"";}}}
     LocalVar{}
     Condition{"ever";"ok";"";}
     Evaluation{"no";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     MSLCode{"string RecvTel;\r\n\r\nerr = _vciDataExchange (*Hndl, 0x82, 0xc2, \"\", &RecvTel);\r\nif (err)\r\n\t{\r\n\t_vciStatVciError (*Hndl);\r\n\treturn(err);\r\n\t}\r\nelse\r\n\t_statSetResult (err, FOK);\r\n\r\n_vciClose (Hndl);\r\n";}
     NodeCategory{"";}
     Info{"Mit diesem Modul wird die Kommunikation zu einem Steuerger\xE4t beendet. Dieser Befehl ist\r\nimmer nach dem letzten Befehl f\xFCr ein Steuerger\xE4t zu senden bzw. bevor die Z\xFCndung\r\nausgeschaltet wird. \r\n\r\nDie Bewertung des Pr\xFCfschrittes ist \"OK\", wenn die Verbindung erfolgreich beendet werden\r\nkonnte.\r\n\r\nIn die Statistik wird nur ein \"OK\" bzw. \"NOK\" in Abh\xE4nigkeit von der Berwertung geschrieben.\r\n\r\n";"";}
     Rights{"Write";"Read";}
     VersionInfo{
      CurVersion{1;1;"PAE";}
      Version{1;0;"AC";"- freigegeben -";"vw-admin";"27.02.2003 10:44:10";}
      Version{1;1;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"25.07.2006 08:36:16";}}}}}}
 FunctionDef{
  Name{"Werk_Spezifische_Bibliothek";}
  LangName{"Werk_Spezifische_Bibliothek";"Customer_specific_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"Import-Ablage\r\n";"";}
  Rights{"Write";"Read";}
  VersionInfo{}
  FunctionDef{
   Name{"Bibo_Mosel";}
   LangName{"Bibo_Mosel";"Library_Mosel";}
   CvsVerHis{}
   Type{1;}
   Icon{0;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Import-Ablage\r\n";"";}
   Rights{"Write";"Read";}
   VersionInfo{}
   FunctionDef{
    Name{"otherNeu";}
    LangName{"otherNeu";"otherNew";}
    CvsVerHis{}
    Type{1;}
    Icon{0;}
    Properties{"Begin";}
    FormalParam{}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"";}
    NodeCategory{"";}
    Info{"Strukturelement";"This branch of the library is used for temporary files from\r\nnew or imported library modules. It is a pure structuring\r\nlevel.";}
    Rights{"Write";"Read";}
    VersionInfo{}
    FunctionDef{
     Name{"Neu_309394";}
     LangName{"Neu_309394";"New_309394";}
     CvsVerHis{}
     Type{1;}
     Icon{0;}
     Properties{"Begin";}
     FormalParam{}
     LocalVar{}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     MSLCode{"";}
     NodeCategory{"";}
     Info{"Strukturelement";"structure element";}
     Rights{"Write";"Read";}
     VersionInfo{
      CurVersion{0;3;"CRE1";}
      Version{0;1;"CRE1";"- in Arbeit -";"admin";"16.09.2004 12:14:41";}
      Version{0;2;"CRE1";"- in Arbeit -";"admin";"02.11.2005 11:02:40";}
      Version{0;3;"CRE1";"- in Arbeit -";"admin";"02.11.2005 11:03:14";}}}}}}
 FunctionDef{
  Name{"DSA_Bibliothek";}
  LangName{"DSA_Bibliothek";"DSA_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;1;"AC";}
   Version{1;0;"AC";"- freigegeben -";"dsa-admin";"04.03.2003 11:44:35";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"admin";"03.07.2006 10:17:25";}}
  FunctionDef{
   Name{"StatistikElemente";}
   LangName{"StatistikElemente";"StatisticElements";}
   CvsVerHis{}
   Type{1;}
   Icon{1;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Sammlung von Bausteinen zur Statistikdatengenerierung";"Collection of components relating to the generation of\r\nstatistical data.\r\n\r\nIt only makes sense to execute test sequences if there is some way of storing the results.\r\nThat is why PRODIS-OFFICE has built-in functions to gather and generate result data.\r\nOn the other hand, not all modules supply results which are relevant to the test sequence.\r\nFor example, a module which scans a measurement from a control unit should generate result data,\r\nbut a module which simply increases a loop counter should not provide such data.\r\nIt is the job of the person creating the test sequence to determine which modules generate result data.\r\nThe following sub-chapter addresses further aspects of result data generation.\r\n\r\n\r\nSome special modules must be included in the test sequence if any result data are to be generated.\r\nResult data are also known as \"statistical data\", since such data are used to generate statistical\r\nevaluations regarding the number of OK and NOK tests, or regarding the measurements ascertained.\r\n\r\n\r\nIt is also necessary that the DTM function be active, and that a valid communication handle exists\r\nfor the communication between the test sequence and the DTM.\r\nDuring execution of the StatisticResult module, the result data record is transferred to the DTM\r\nfor transmission to the host computer.";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{0;4;"SVW";}
    Version{0;1;"SVW";"- in Arbeit -";"admin";"12.04.2004 19:57:30";}
    Version{0;2;"SVW";"- in Arbeit -";"admin";"12.04.2004 19:58:34";}
    Version{0;3;"SVW";"- in Arbeit -";"admin";"12.04.2004 20:03:39";}
    Version{0;4;"SVW";"- in Arbeit -";"admin";"12.04.2004 21:43:02";}}
   FunctionDef{
    Name{"StatSetAsciiResult_293306";}
    LangName{"StatSetAsciiResult_293306";"StatSetAsciiResult";}
    CvsVerHis{}
    Type{1;}
    Icon{1;}
    Properties{"Begin";}
    FormalParam{
     InputParam{"Error";
      LangName{"Error";"";}"ERROR";"";
      LangDesc{"Fehler fuer Statistikeintrag";"";}}
     InputParam{"StringWert";
      LangName{"StringWert";"";}"STRING";"DString";
      LangDesc{"";"";}}}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"if (Error == OK)\r\n  _statSetAsciiResult (Error, StringWert, FOK);\r\nelse\r\n  _statSetAsciiResult (Error, StringWert, FMWNOK);\r\n";}
    NodeCategory{"";}
    Info{"Baustein zum Schreiben von OK oder NOK in die Statistik. (S)";"";}
    Rights{"Write";"Read";}
    VersionInfo{
     CurVersion{0;2;"CRE1A";}
     Version{0;1;"PAE";"[ Baustein importiert (neu) ]";"dsa-admin";"24.07.2006 17:06:12";}
     Version{0;2;"CRE1A";"[ Baustein importiert (neu) ]";"admin";"21.01.2007 15:39:29";}}}}}
 FunctionDef{
  Name{"VW_spezifische_Bibliothek";}
  LangName{"VW_spezifische_Bibliothek";"VW_specific_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"Sammlung von Bausteinen zur Kommunikation mit Steuergeraeten von VW.";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;2;"ZPH18";}
   Version{1;0;"AC";"- freigegeben -";"vw-admin";"04.03.2003 11:56:19";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"07.08.2006 13:58:14";}
   Version{1;2;"ZPH18";"[ Baustein importiert (ersetzt) ]";"admin";"14.08.2007 15:07:01";}}
  FunctionDef{
   Name{"VW_Codefileauswahl";}
   LangName{"VW_Codefileauswahl";"VW_Codefileauswahl";}
   CvsVerHis{}
   Type{1;}
   Icon{0;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Platzhalter f\xFCr Pr\xFCfschritte";"";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{0;1;"PAE";}
    Version{0;1;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"24.07.2006 17:06:13";}}
   FunctionDef{
    Name{"Pfau_9_2_0";}
    LangName{"Pfau_9_2_0";"";}
    CvsVerHis{}
    Type{1;}
    Icon{0;}
    Properties{"Begin";}
    FormalParam{}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"";}
    NodeCategory{"";}
    Info{"";"";}
    Rights{"Write";"Read";}
    VersionInfo{
     CurVersion{0;1;"PAE";}
     Version{0;1;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"24.07.2006 17:06:13";}}
    FunctionDef{
     Name{"ZdcOpen_309411";}
     LangName{"ZdcOpen_309411";"ZdcOpen_309411";}
     CvsVerHis{}
     Type{1;}
     Icon{0;}
     Properties{"Begin";}
     FormalParam{
      OutputParam{"ZdcHndl";
       LangName{"ZdcHndl";"ZdcHndl";}"ZDC_HNDL";"DZdcHndl";
       LangDesc{"ZDC Handle";"ZDC Handle";}}
      InputParam{"XmlContainer";
       LangName{"XmlContainer";"XmlContainer";}"XMLFILE";"Dummy_Container_Name";
       LangDesc{"Name der XML-Datei";"XML Container name";}}
      InputParam{"XmlVersion";
       LangName{"XmlVersion";"XmlVersion";}"XMLVERSION";"Dummy_Container_Version";
       LangDesc{"Version des XML-Datei z.B. 0151/0202/0203";"XML Container version e.g. 0151/0202/0203/0204";}}
      InputParam{"DebugLevel";
       LangName{"DebugLevel";"DebugLevel";}"DebugLevel";"CInt_DebugLevel_00";
       LangDesc{"Debug Level";"Set debug level";}}}
     LocalVar{}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     MSLCode{"err = 0;\r\nif (*ZdcHndl >= 0)\r\n    zdcClose (*ZdcHndl);\r\n*ZdcHndl = -1;\r\nif (XmlContainer[0] != 0 && (XmlVersion == \"0202\" || XmlVersion == \"0203\" || XmlVersion == \"0204\" || XmlVersion == \"020401\" || XmlVersion == \"0205\"))\r\n{\r\n    *ZdcHndl = zdcOpen (XmlContainer, DebugLevel);\r\n    if (*ZdcHndl < 0)\r\n\terr = errFatal (NOK, \"open zdc failed \", XmlContainer);\r\n    else\r\n\terr = OK;\r\n}\r\nelse\r\n    err = errFatal (NOK, \"open zdc failed / wrong version \", XmlContainer, \" \", XmlVersion);\r\n_statSetAsciiResult (err, \"open zdc\", FUABBR);";}
     NodeCategory{"";}
     Info{"Baustein \xF6ffnet einen Zieldaten-Container (ZDC) in der Version 2.02 oder 2.03.\r\n\r\nNach erfolgreichem Aufruf wird das \xFCbergebene Handle mit einem g\xFCltigen Wert (Wert >= 0) gesetzt.\r\nAndernfalls wird der Parameter \"ZdcHndl\" auf -1 gesetzt.\r\n\r\nDer Baustein steht in engem Zusammenhang mit dem Baustein \"VW_Codefile_STG\", der die\r\nEingangsparameter \"XmlContainer\" und \"XmlVersion\" f\xFCr diesem Baustein liefert.\r\n\r\n09.01.06, sr: Update, \xF6ffnet jetzt auch ZDC Container 2.03";"";}
     Rights{"Write";"Read";}
     VersionInfo{
      CurVersion{1;17;"CP41A";}
      Version{0;1;"DSA";"- in Arbeit -";"admin";"03.07.2003 16:07:52";}
      Version{0;2;"DSA";"- in Arbeit -";"admin";"03.07.2003 16:08:40";}
      Version{0;3;"DSA";"- in Arbeit -";"admin";"03.07.2003 16:09:12";}
      Version{0;4;"DSA";"- in Arbeit -";"admin";"03.07.2003 16:09:33";}
      Version{0;5;"DSA";"- in Arbeit -";"admin";"03.07.2003 16:10:00";}
      Version{0;6;"DSA";"- in Arbeit -";"admin";"03.07.2003 16:11:12";}
      Version{0;7;"DSA";"- in Arbeit -";"admin";"03.07.2003 16:11:35";}
      Version{1;0;"DSA";"";"sr";"17.12.2004 14:12:19";}
      Version{1;1;"AAC";"- in Arbeit -";"sr";"09.01.2006 11:44:45";}
      Version{1;2;"AAC";"- in Arbeit -";"sr";"09.01.2006 11:45:04";}
      Version{1;3;"AAC";"- in Arbeit -";"sr";"09.01.2006 11:45:22";}
      Version{1;4;"AC";"- in Arbeit -";"dsa-admin";"20.01.2006 15:15:43";}
      Version{1;5;"CRE1";"- in Arbeit -";"admin";"21.02.2006 12:11:50";}
      Version{1;6;"CRE1";"- in Arbeit -";"admin";"21.02.2006 12:12:07";}
      Version{1;7;"CRE1";"- in Arbeit -";"admin";"24.08.2006 17:51:21";}
      Version{1;8;"CRE1A";"- in Arbeit -";"admin";"07.06.2007 11:57:24";}
      Version{1;9;"CRE2A";"- in Arbeit -";"admin";"18.08.2008 10:51:48";}
      Version{1;10;"CRE2A";"- in Arbeit -";"admin";"18.08.2008 10:52:04";}
      Version{1;11;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"23.10.2008 14:08:10";}
      Version{1;12;"PAE";"- in Arbeit -";"dsa-admin";"08.01.2009 09:37:57";}
      Version{1;13;"PAE";"- in Arbeit -";"dsa-admin";"08.01.2009 10:06:14";}
      Version{1;14;"PAE";"- in Arbeit -";"dsa-admin";"08.01.2009 10:08:14";}
      Version{1;15;"CP41A";"- in Arbeit -";"admin";"08.07.2010 10:27:16";}
      Version{1;16;"CP41A";"- in Arbeit -";"admin";"29.07.2010 01:38:09";}
      Version{1;17;"CP41A";"- in Arbeit -";"admin";"19.08.2010 15:24:43";}}}}}}
 FunctionDef{
  Name{"VW_spezifische_Bibliothek";}
  LangName{"VW_spezifische_Bibliothek";"VW_specific_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"Sammlung von Bausteinen zur Kommunikation mit Steuergeraeten von VW.";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;2;"ZPH18";}
   Version{1;0;"AC";"- freigegeben -";"vw-admin";"04.03.2003 11:56:19";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"07.08.2006 13:58:14";}
   Version{1;2;"ZPH18";"[ Baustein importiert (ersetzt) ]";"admin";"14.08.2007 15:07:01";}}
  FunctionDef{
   Name{"VW_Codefileauswahl";}
   LangName{"VW_Codefileauswahl";"VW_Codefileauswahl";}
   CvsVerHis{}
   Type{1;}
   Icon{0;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Platzhalter f\xFCr Pr\xFCfschritte";"";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{0;1;"PAE";}
    Version{0;1;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"24.07.2006 17:06:13";}}
   FunctionDef{
    Name{"Pfau_9_2_0";}
    LangName{"Pfau_9_2_0";"";}
    CvsVerHis{}
    Type{1;}
    Icon{0;}
    Properties{"Begin";}
    FormalParam{}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"";}
    NodeCategory{"";}
    Info{"";"";}
    Rights{"Write";"Read";}
    VersionInfo{
     CurVersion{0;1;"PAE";}
     Version{0;1;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"24.07.2006 17:06:13";}}
    FunctionDef{
     Name{"ZdcAnpassung_309414";}
     LangName{"ZdcAnpassung_309414";"ZdcAdaptation";}
     CvsVerHis{}
     Type{1;}
     Icon{0;}
     Properties{"Begin";}
     FormalParam{
      InputParam{"DialogHndl";
       LangName{"DialogHndl";"DialogHndl";}"DialogTyp";"DIALOG_LOKAL";
       LangDesc{"Dialog handle";"Dialog handle";}}
      InputParam{"Zeile";
       LangName{"Zeile";"Zeile";}"DialogLine";"CDialog_Keine_Anzeige";
       LangDesc{"";"Output line";}}
      InputParam{"Text";
       LangName{"Text";"Text";}"TEXT";"CText_Info_Codefile_Selection";
       LangDesc{"";"Output text";}}
      InputParam{"ZdcHndl";
       LangName{"ZdcHndl";"ZdcHndl";}"ZDC_HNDL";"DZdcHndl";
       LangDesc{"Handle zu einem ZDC";"ZDC Handle";}}
      InputParam{"Modusteil";
       LangName{"Modusteil";"Modusteil";}"ZDC_MODUSTEIL";"CStr_ZDC_Modus_All";
       LangDesc{"Modusteil wird als Filter eingesetzt (mit Modusteil == \"\" wird der Filter ausgeschaltet) ";"Mode filter";}}
      OutputParam{"Anpassung_String";
       LangName{"Anpassung_String";"Anpassung_String";}"Codefile_Result_Str";"Dummy_Anpassung_String";
       LangDesc{"Anpassungs String";"Adaptation string";}}}
     LocalVar{
      LocVarDef{"KommentarNOK";
       LangName{"KommentarNOK";"KommentarNOK";}"Locvar";"TEXT";
       LangDesc{"";"";}
       LangText{"\"Anpassung ungueltig\"";"\"\xC6\xA5\xC5\xE4\xCE\xDE\xD0\xA7\"";"\"Adaptation unvalid\"";}"Const";}}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     MSLCode{"//sr 14.06.04: Bugfix: iDataTyp ist im Fall der Anpassung 64 und nicht 16. Erst Verwendbar ab mslext.dll Version 2.7.\r\n\r\nstring\tsInfo, sData, buf;\r\nint         iAnz, iDataTyp;\r\nint\t\ti, len, iAdr, iKanal, iAnpassung;\r\n\r\nerr = 0;\r\nif (ZdcHndl >= 0)\r\n{\r\n    if (Zeile > 0)\r\n        _dlgMultiSetLine (DialogHndl, Zeile, Text);\r\n\r\n    *Anpassung_String = \"\";\r\n    iAnz = 0;\r\n    strM2Set (Anpassung_String, 0, iAnz);\r\n    zdcCollectSeekFirst (ZdcHndl);\r\n    while (!err)\r\n    {\r\n\terr = zdcCollect (ZdcHndl, \"A\", Modusteil, &sInfo, &iDataTyp);\r\n      if (err == -1)\r\n\t{\r\n\t    err = 0;\r\n\t    break;\r\n\t}\r\n\twhile (!err && iDataTyp & 64)\r\n\t{\r\n\t    err = zdcGetAdaptation (ZdcHndl, &iKanal, &sData);\r\n\t    if (err == -1)\r\n\t    {\r\n\t\terr = 0;\r\n\t\tbreak;\r\n\t    }\r\n\t    if (!err)\r\n\t    {\r\n\t        iAnpassung = binstrtoi (sData);\r\n\t        errDebug (0, sprintf (\"Anpassung: Kanal %#lx, Anp= %#lx\", iKanal, iAnpassung));\r\n    \t        strM2Set (&buf, 0, iKanal);\r\n    \t        strM2Set (&buf, 2, iAnpassung);\r\n\t        *Anpassung_String = *Anpassung_String + buf;\r\n\t        iAnz = iAnz + 1;\r\n\t        i = i + 1;\r\n\t    }\r\n\t}\r\n    }\r\n    if (!err)\r\n\tstrM2Set (Anpassung_String, 0, iAnz);\r\n    else\r\n\terr = errFatal (NOK, \"zdc anpassung data error\");\r\n\r\n    if (Zeile > 0)\r\n\t_dlgMultiTextRsltBmp (DialogHndl, Zeile, Text, err);\r\n}\r\nif (err || iAnz == 0)\r\n    *Anpassung_String = \"\";\r\nif (!err)\r\n    _statSetAsciiResult (err, sInfo + \" data=0h\" + midstr (hexstr(*Anpassung_String), 0, 64), FOK);\r\n//    _statSetAsciiResult (err, sInfo, FOK);\r\nelse\r\n    _statSetAsciiResult (err, KommentarNOK, FUABBR);\r\n";}
     NodeCategory{"";}
     Info{"Dieser Baustein berechnet die Anpassdaten nach dem Zieldatencontainer (ZDC) V 2.02. (S)\r\n\r\nAls Parameter muss das \"ZdcHndl\" \xFCbergeben werden, dass mit dem Baustein \"ZdcOpen\" erzeugt wurde.\r\n\r\nDer Parameter \"Modusteil\" kann zur Filterung der Daten innerhalb des Containers verwendet werden. \r\nMit Modusteil gleich \"\" werden alle Tabellen mit dem Modus \"A\" im ZDC ausgewertet.\r\n\r\nDer Baustein liefert mit dem Parameter \"Anpassung_String\" die Anpassdaten im DSA internen Austauschformat\r\nf\xFCr die Bausteine:\r\n- CodefileAnpassung_KWP2000\r\n- CodefileAnpassung_KWP1281\r\nAchtung:\r\nDas DSA interne Austauschformat f\xFCr diese Bausteine l\xE4sst nur die kurze Anpassung zu. \r\nDie kurze Anpassung besteht aus 2 Byte Anpasskanal und 2 Byte Anpassung.\r\n\r\nDer Baustein berechnet nur die Anpassdaten. Das Schreiben der Daten erfolgt nicht durch diesen Baustein!\r\n\r\n//sr 14.06.04: Bugfix: iDataTyp ist im Fall der Anpassung 64 und nicht 16. Erst Verwendbar ab mslext.dll Version 2.7.\r\n";"";}
     Rights{"Write";"Read";}
     VersionInfo{
      CurVersion{1;14;"CP41A_Te";}
      Version{0;1;"DSA";"- in Arbeit -";"admin";"20.06.2003 17:57:21";}
      Version{0;2;"DSA";"- in Arbeit -";"admin";"03.07.2003 18:00:51";}
      Version{0;3;"DSA";"- in Arbeit -";"admin";"03.07.2003 18:02:50";}
      Version{0;4;"VW-WOL";"- in Arbeit -";"admin";"08.07.2003 15:25:58";}
      Version{0;5;"VW-WOL";"- in Arbeit -";"admin";"10.07.2003 09:47:41";}
      Version{0;6;"VW-WOL";"- in Arbeit -";"admin";"10.07.2003 09:57:48";}
      Version{0;7;"VW-WOL";"- in Arbeit -";"admin";"10.07.2003 10:00:51";}
      Version{0;8;"VW-WOL";"- in Arbeit -";"admin";"10.07.2003 10:04:52";}
      Version{0;9;"VW-WOL";"- in Arbeit -";"admin";"10.07.2003 10:05:54";}
      Version{0;10;"DSAAC";"- in Arbeit -";"sr";"25.02.2004 16:09:27";}
      Version{1;0;"DSAAC";"An \xC4nderungen in MSL-Lib (fctzdc) angepasst.";"sr";"25.02.2004 16:12:34";}
      Version{1;1;"DSA";"Bugfix: iDataTyp ist im Fall der Anpassung 64 und nicht 16";"sr";"14.06.2004 15:26:44";}
      Version{1;2;"AC";"- in Arbeit -";"vw-admin";"15.06.2004 08:39:04";}
      Version{1;3;"PAE";"[ Baustein importiert (ersetzt) ]";"vw-admin";"15.07.2005 10:53:39";}
      Version{1;4;"AC";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"30.11.2005 12:00:17";}
      Version{1;5;"CRE1";"- in Arbeit -";"admin";"21.02.2006 12:15:51";}
      Version{1;6;"CRE1";"- in Arbeit -";"admin";"21.02.2006 12:29:43";}
      Version{1;7;"CRE1";"- in Arbeit -";"admin";"21.02.2006 12:39:31";}
      Version{1;8;"CRE1";"- in Arbeit -";"admin";"21.02.2006 12:43:43";}
      Version{1;9;"CRE1";"- in Arbeit -";"admin";"21.02.2006 12:47:08";}
      Version{1;10;"CRE1";"- in Arbeit -";"admin";"21.02.2006 13:23:38";}
      Version{1;11;"CRE1";"- in Arbeit -";"admin";"10.08.2006 15:17:57";}
      Version{1;12;"CRE1A";"- in Arbeit -";"admin";"07.06.2007 17:56:55";}
      Version{1;13;"CRE2A";"- in Arbeit -";"admin";"01.07.2008 15:19:21";}
      Version{1;14;"CP41A_Te";"- in Arbeit -";"admin";"04.04.2010 19:47:28";}}}}}}
 FunctionDef{
  Name{"VW_spezifische_Bibliothek";}
  LangName{"VW_spezifische_Bibliothek";"VW_specific_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"Sammlung von Bausteinen zur Kommunikation mit Steuergeraeten von VW.";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;2;"ZPH18";}
   Version{1;0;"AC";"- freigegeben -";"vw-admin";"04.03.2003 11:56:19";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"07.08.2006 13:58:14";}
   Version{1;2;"ZPH18";"[ Baustein importiert (ersetzt) ]";"admin";"14.08.2007 15:07:01";}}
  FunctionDef{
   Name{"VW_Codefileauswahl";}
   LangName{"VW_Codefileauswahl";"VW_Codefileauswahl";}
   CvsVerHis{}
   Type{1;}
   Icon{0;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Platzhalter f\xFCr Pr\xFCfschritte";"";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{0;1;"PAE";}
    Version{0;1;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"24.07.2006 17:06:13";}}
   FunctionDef{
    Name{"Pfau_9_2_0";}
    LangName{"Pfau_9_2_0";"";}
    CvsVerHis{}
    Type{1;}
    Icon{0;}
    Properties{"Begin";}
    FormalParam{}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"";}
    NodeCategory{"";}
    Info{"";"";}
    Rights{"Write";"Read";}
    VersionInfo{
     CurVersion{0;1;"PAE";}
     Version{0;1;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"24.07.2006 17:06:13";}}
    FunctionDef{
     Name{"ZdcKalibrierungL_309417";}
     LangName{"ZdcKalibrierungL_309417";"ZdcKalibrierungL_309417";}
     CvsVerHis{}
     Type{1;}
     Icon{0;}
     Properties{"Begin";}
     FormalParam{
      InputParam{"DialogHndl";
       LangName{"DialogHndl";"DialogHndl";}"DialogTyp";"DIALOG_LOKAL";
       LangDesc{"";"";}}
      InputParam{"Zeile";
       LangName{"Zeile";"Zeile";}"DialogLine";"CDialog_Keine_Anzeige";
       LangDesc{"";"";}}
      InputParam{"Text";
       LangName{"Text";"Text";}"TEXT";"CText_Info_Codefile_Selection";
       LangDesc{"";"";}}
      InputParam{"ZdcHndl";
       LangName{"ZdcHndl";"ZdcHndl";}"ZDC_HNDL";"DZdcHndl";
       LangDesc{"Handle zu einem ZDC";"";}}
      InputParam{"Modusteil";
       LangName{"Modusteil";"Modusteil";}"ZDC_MODUSTEIL";"CStr_ZDC_Modus_All";
       LangDesc{"Modusteil wird als Filter eingesetzt (mit Modusteil == \"\" wird der Filter ausgeschaltet) ";"Modusteil wird als Filter eingesetzt (mit Modusteil == \"\" wird der Filter ausgeschaltet) ";}}
      OutputParam{"KalibL_String";
       LangName{"KalibL_String";"KalibL_String";}"Codefile_Result_Str";"Dummy_ProgL_String";
       LangDesc{"zu programmierender String im 4 Byte Adress-Kalibrier-Format";"";}}}
     LocalVar{
      LocVarDef{"KommentarNOK";
       LangName{"KommentarNOK";"KommentarNOK";}"Locvar";"TEXT";
       LangDesc{"";"";}
       LangText{"\"Programmierstring ungueltig\"";"\"\xB1\xE0\xB3\xCC\xD7\xD6\xB7\xFB\xB4\xAE\xCE\xDE\xD0\xA7\"";"\"Programming string unvalid\"";}"Const";}}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     MSLCode{"string sInfo, sData, buf;\r\nint    iAnz, iDataTyp;\r\nint    len;\r\nstring sRohteilenummer, sFertigteilenummer, sKanal, sDatenInternFormat;\r\nint    iStartAdr, iUncompressedSize, iLoeschbereichStart, iLoeschbereichEnd;\r\nint    iDatencheckStart, iDatencheckEnd, iDatencheckChecksum, iLength;\r\nint    ServiceID;\r\nint    RecordDataID;\r\n\r\nerr = 0;\r\nif (ZdcHndl >= 0)\r\n{\r\n    if (Zeile > 0)\r\n        _dlgMultiSetLine (DialogHndl, Zeile, Text);\r\n\r\n    *KalibL_String = \"\";\r\n    ServiceID    = 0;\r\n    RecordDataID = 0;\r\n    iAnz = 0;\r\n    strM4Set (KalibL_String, 0, iAnz);\r\n\r\n    zdcCollectSeekFirst (ZdcHndl);\r\n    while (!err)\r\n    {\r\n        err = zdcCollect (ZdcHndl, \"K\", Modusteil, &sInfo, &iDataTyp);\r\n        if (err == -1)\r\n        {\r\n            err  = 0;\r\n            break;\r\n        }\r\n        if( !err )\r\n        {\r\n            err = zdcGetCalibration(ZdcHndl, &ServiceID, &RecordDataID);\r\n        }\r\n        while (!err && iDataTyp & 4)\r\n        {\r\n            err = zdcGetDataInfo (ZdcHndl,\r\n                                  &sRohteilenummer,\r\n                                  &sFertigteilenummer,\r\n                                  &sKanal,\r\n                                  &sDatenInternFormat,\r\n                                  &iStartAdr,\r\n                                  &iUncompressedSize,\r\n                                  &iLoeschbereichStart,\r\n                                  &iLoeschbereichEnd,\r\n                                  &iDatencheckStart,\r\n                                  &iDatencheckEnd,\r\n                                  &iDatencheckChecksum,\r\n                                  &iLength);\r\n            if (err == -1)\r\n            {\r\n                err = 0;\r\n                break;\r\n            }\r\n            if (!err)\r\n            {\r\n                err = zdcGetDataBlock (ZdcHndl, iLength + 1, &sData);\r\n                len = strlen (sData);\r\n                buf = \"\";\r\n                strM4Set (&buf, 0, ServiceID);\r\n                strM4Set (&buf, 4, RecordDataID);\r\n                strM4Set (&buf, 8, len);\r\n                buf = buf + sData;\r\n                *KalibL_String = *KalibL_String + buf;\r\n                iAnz = iAnz + 1;\r\n            }\r\n        }\r\n\r\n        while (!err && iDataTyp & 16)\r\n        {\r\n            err = zdcGetBuf (ZdcHndl, &iStartAdr, &sData);\r\n            if (err == -1)\r\n            {\r\n                err = 0;\r\n                break;\r\n            }\r\n            if (!err)\r\n            {\r\n                len = strlen (sData);\r\n                buf = \"\";\r\n                strM4Set (&buf, 0, ServiceID);\r\n                strM4Set (&buf, 4, RecordDataID);\r\n                strM4Set (&buf, 8, len);\r\n                buf = buf + sData;\r\n                *KalibL_String = *KalibL_String + buf;\r\n                iAnz = iAnz + 1;\r\n            }\r\n        }\r\n    }\r\n    if (!err)\r\n        strM4Set (KalibL_String, 0, iAnz);\r\n    else\r\n        err = errFatal (NOK, \"zdc calibration data error\");\r\n\r\n    if (Zeile > 0)\r\n        _dlgMultiTextRsltBmp (DialogHndl, Zeile, Text, err);\r\n}\r\n\r\nerrDebug (err, sprintf (\"kalibl string (%ld byte) 0h'%s'\",\r\n          strlen (*KalibL_String), hexstr (midstr (*KalibL_String, 0, 100))));\r\n          \r\nif (err || iAnz == 0)\r\n    *KalibL_String = \"\";\r\n    \r\nif (!err)\r\n    _statSetAsciiResult (err, sInfo + \" data=0h\" + midstr (hexstr(*KalibL_String), 0, 64), FOK);\r\nelse\r\n    _statSetAsciiResult (err, KommentarNOK, FUABBR);";}
     NodeCategory{"";}
     Info{"Dieser Baustein berechnet die Kalibrierdaten nach dem Zieldatencontainer (ZDC) V 2.04. (S)\r\n\r\nAls Parameter muss das \"ZdcHndl\" \xFCbergeben werden, dass mit dem Baustein \"ZdcOpen\" erzeugt wurde.\r\n\r\nDer Parameter \"Modusteil\" kann zur Filterung der Daten innerhalb des Containers verwendet werden. \r\nMit Modusteil gleich \"\" werden alle Tabellen mit dem Modus \"K\" im ZDC ausgewertet.\r\n\r\n\r\nDer Baustein liefert mit dem Parameter \"KalibL_String\" die Kalibrierdaten im DSA internen Austauschformat\r\nf\xFCr Kalibrierdaten mit 4 Byte Adresse.\r\n\r\nDer Baustein berechnet nur die Kalibrierdaten. Das Schreiben der Daten erfolgt nicht \r\ndurch diesen Baustein!\r\n\r\n\r\nDas Format des KalibL_String ist wie folgt aufgebaut:\r\n\r\n4 Byte: Anzahl Kalibrierungen;\r\n    4 Byte: 1. ServiceID (z.B. 0000002E f\xFCr Dienst 2E);\r\n    4 Byte: 1. RecordDataID (entspricht vom Sinn her einer Adresse. Z.B. 00000530);\r\n    4 Byte: 1. Laenge n der einzelnen Kalibrierung; \r\n    n Byte: 1. Kalibrierdaten;\r\n\r\n    4 Byte: 2. ServiceID;\r\n    4 Byte: 2. RecordDataID;\r\n    4 Byte: 2. Laenge m der einzelnen Kalibrierung; \r\n    m Byte: 2. Kalibrierdaten;\r\n\r\n    ...\r\n\r\n";"";}
     Rights{"Write";"Read";}
     VersionInfo{
      CurVersion{3;3;"CP41A_Te";}
      Version{0;1;"AAC";"- in Arbeit -";"sr";"30.06.2006 10:30:53";}
      Version{0;2;"AAC";"- in Arbeit -";"sr";"30.06.2006 10:35:24";}
      Version{0;3;"AAC";"- in Arbeit -";"sr";"30.06.2006 11:14:20";}
      Version{0;4;"AAC";"- in Arbeit -";"sr";"30.06.2006 11:38:45";}
      Version{0;5;"AAC";"- in Arbeit -";"sr";"30.06.2006 11:46:32";}
      Version{0;6;"AAC";"- in Arbeit -";"sr";"30.06.2006 11:52:36";}
      Version{0;7;"AAC";"- in Arbeit -";"sr";"30.06.2006 11:53:02";}
      Version{0;8;"AAC";"- in Arbeit -";"sr";"30.06.2006 11:57:01";}
      Version{0;9;"AAC";"- in Arbeit -";"sr";"30.06.2006 11:59:21";}
      Version{1;0;"AAC";"Erste Version";"sr";"30.06.2006 11:59:31";}
      Version{1;1;"AAC";"- in Arbeit -";"sr";"04.07.2006 09:47:39";}
      Version{1;2;"AAC";"- in Arbeit -";"sr";"04.07.2006 09:47:52";}
      Version{1;3;"AAC";"- in Arbeit -";"sr";"04.07.2006 09:48:35";}
      Version{1;4;"AAC";"- in Arbeit -";"sr";"04.07.2006 09:49:06";}
      Version{1;5;"AAC";"- in Arbeit -";"sr";"04.07.2006 09:50:13";}
      Version{1;6;"AAC";"- in Arbeit -";"sr";"04.07.2006 09:52:22";}
      Version{1;7;"AAC";"- in Arbeit -";"sr";"04.07.2006 09:56:13";}
      Version{1;8;"AAC";"- in Arbeit -";"sr";"04.07.2006 09:57:44";}
      Version{1;9;"AAC";"- in Arbeit -";"sr";"04.07.2006 10:01:18";}
      Version{1;10;"AAC";"- in Arbeit -";"sr";"04.07.2006 10:02:28";}
      Version{1;11;"AAC";"- in Arbeit -";"sr";"04.07.2006 10:25:43";}
      Version{1;12;"AAC";"- in Arbeit -";"sr";"04.07.2006 10:26:19";}
      Version{1;13;"AAC";"- in Arbeit -";"sr";"04.07.2006 10:31:01";}
      Version{1;14;"AAC";"- in Arbeit -";"sr";"04.07.2006 10:31:24";}
      Version{2;0;"AAC";"Schnittstelle wurde umgestellt. Jetzt werden wieder alle Tabellen auf einmal ausgelesen und ein Bin\xE4rstring mit allen Daten erzeugt. Das Format des Bin\xE4rstrings wurde f\xFCr ServiceID und RecordDataID erweitert.";"sr";"04.07.2006 10:50:12";}
      Version{2;1;"AAC";"- in Arbeit -";"sr";"04.07.2006 11:48:00";}
      Version{3;0;"AAC";"DialogTyp_Muell durch DialogTyp ersetzt.";"sr";"04.07.2006 11:48:04";}
      Version{3;1;"CRE2A";"- in Arbeit -";"admin";"31.10.2009 13:07:07";}
      Version{3;2;"CRE2A";"- in Arbeit -";"admin";"19.01.2010 10:32:13";}
      Version{3;3;"CP41A_Te";"- in Arbeit -";"admin";"04.04.2010 19:48:45";}}}}}}
 FunctionDef{
  Name{"DSA_Bibliothek";}
  LangName{"DSA_Bibliothek";"DSA_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;1;"AC";}
   Version{1;0;"AC";"- freigegeben -";"dsa-admin";"04.03.2003 11:44:35";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"admin";"03.07.2006 10:17:25";}}
  FunctionDef{
   Name{"BenutzerSchnittstellen";}
   LangName{"BenutzerSchnittstellen";"UserInterface";}
   CvsVerHis{}
   Type{1;}
   Icon{2;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Sammlung von Bausteinen zur Benutzerschnittstelle";"Collection of components relating to the user interface.";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{1;2;"SVW";}
    Version{1;0;"AC";"- freigegeben -";"dsa-admin";"04.03.2003 11:34:14";}
    Version{1;1;"SVW";"- in Arbeit -";"admin";"12.04.2004 19:08:29";}
    Version{1;2;"SVW";"- in Arbeit -";"admin";"12.04.2004 21:13:06";}}
   FunctionDef{
    Name{"Debug";}
    LangName{"Debug";"Debug";}
    CvsVerHis{}
    Type{1;}
    Icon{0;}
    Properties{"Begin";}
    FormalParam{}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"";}
    NodeCategory{"";}
    Info{"Sammlung von Bausteinen zur Ein- Ausgabe von Debug-Informationen";"The Debug functions have no effect on the test sequence.\r\nThey also generate no text output which is visible in the foreground.\r\nTheir \"background activity\" consists of writing status information in a window or a file,\r\nin order to track potential problems in the test sequence.";}
    Rights{"Write";"Read";}
    VersionInfo{
     CurVersion{0;1;"SVW";}
     Version{0;1;"SVW";"- in Arbeit -";"admin";"12.04.2004 19:14:08";}}
    FunctionDef{
     Name{"ErrDebugInfoStr";}
     LangName{"ErrDebugInfoStr";"ErrDebugInfoStr";}
     CvsVerHis{}
     Type{1;}
     Icon{2;}
     Properties{"Begin";}
     FormalParam{
      InputParam{"num";
       LangName{"num";"num";}"INT";"CNullPosition";
       LangDesc{"";"";}}
      InputParam{"str";
       LangName{"str";"str";}"STRING";"";
       LangDesc{"";"";}}
      InputParam{"Info";
       LangName{"Info";"Info";}"STRING";"";
       LangDesc{"";"";}}}
     LocalVar{}
     Condition{"ever";"ok";"";}
     Evaluation{"no";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     MSLCode{"  errDebug (num, sprintf(\"%s : %s\",Info,str));";}
     NodeCategory{"";}
     Info{"Debug-Ausgabe einer Zeichenkette";"Debug-Ausgabe einer Zeichenkette";}
     Rights{"Write";"Read";}
     VersionInfo{
      CurVersion{1;3;"nbmr";}
      Version{0;1;"RHMPil";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"24.02.2005 07:54:19";}
      Version{0;2;"RHMPil";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"26.02.2005 15:05:18";}
      Version{1;0;"PAE";" Freigabe ";"vw-admin";"08.06.2005 14:30:05";}
      Version{1;1;"MOS";"[ Baustein importiert (ersetzt) ]";"jk";"06.10.2008 15:39:56";}
      Version{1;2;"nbpj2";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"03.08.2009 09:43:57";}
      Version{1;3;"nbmr";"[ Baustein importiert (ersetzt) ]";"dsa";"05.05.2010 12:54:12";}}}}}}
 FunctionDef{
  Name{"VW_spezifische_Bibliothek";}
  LangName{"VW_spezifische_Bibliothek";"VW_specific_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"Sammlung von Bausteinen zur Kommunikation mit Steuergeraeten von VW.";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;2;"ZPH18";}
   Version{1;0;"AC";"- freigegeben -";"vw-admin";"04.03.2003 11:56:19";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"07.08.2006 13:58:14";}
   Version{1;2;"ZPH18";"[ Baustein importiert (ersetzt) ]";"admin";"14.08.2007 15:07:01";}}
  FunctionDef{
   Name{"VW_Codefileauswahl";}
   LangName{"VW_Codefileauswahl";"VW_Codefileauswahl";}
   CvsVerHis{}
   Type{1;}
   Icon{0;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Platzhalter f\xFCr Pr\xFCfschritte";"";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{0;1;"PAE";}
    Version{0;1;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"24.07.2006 17:06:13";}}
   FunctionDef{
    Name{"Pfau_9_2_0";}
    LangName{"Pfau_9_2_0";"";}
    CvsVerHis{}
    Type{1;}
    Icon{0;}
    Properties{"Begin";}
    FormalParam{}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"";}
    NodeCategory{"";}
    Info{"";"";}
    Rights{"Write";"Read";}
    VersionInfo{
     CurVersion{0;1;"PAE";}
     Version{0;1;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"24.07.2006 17:06:13";}}
    FunctionDef{
     Name{"ZdcClose_309422";}
     LangName{"ZdcClose_309422";"ZdcClose_309422";}
     CvsVerHis{}
     Type{1;}
     Icon{0;}
     Properties{"Begin";}
     FormalParam{
      OutputParam{"ZdcHndl";
       LangName{"ZdcHndl";"ZdcHndl";}"ZDC_HNDL";"DZdcHndl";
       LangDesc{"Handle zu einem ZDC";"ZDC Handle";}}}
     LocalVar{}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     MSLCode{"err = 0;\r\nif (*ZdcHndl >= 0)\r\n    zdcClose (*ZdcHndl);\r\n*ZdcHndl = -1;";}
     NodeCategory{"";}
     Info{"Baustein schlie\xDFt einen Zieldaten-Container (ZDC) in der Version 2.02, der zuvor mit dem Baustein \r\n\"ZdcOpen\" ge\xF6ffnet wurde.";"";}
     Rights{"Write";"Read";}
     VersionInfo{
      CurVersion{0;2;"CRE1";}
      Version{0;1;"DSA";"- in Arbeit -";"admin";"03.07.2003 16:12:23";}
      Version{0;2;"CRE1";"- in Arbeit -";"admin";"21.02.2006 12:13:11";}}}}}}
 FunctionDef{
  Name{"VW_spezifische_Bibliothek";}
  LangName{"VW_spezifische_Bibliothek";"VW_specific_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"Sammlung von Bausteinen zur Kommunikation mit Steuergeraeten von VW.";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;2;"ZPH18";}
   Version{1;0;"AC";"- freigegeben -";"vw-admin";"04.03.2003 11:56:19";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"07.08.2006 13:58:14";}
   Version{1;2;"ZPH18";"[ Baustein importiert (ersetzt) ]";"admin";"14.08.2007 15:07:01";}}
  FunctionDef{
   Name{"VW2000_Dienste";}
   LangName{"VW2000_Dienste";"VW2000_Dienste";}
   CvsVerHis{}
   Type{1;}
   Icon{0;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Sammlung von Bausteinen zur Kommunikation mit Steuerger\xE4ten von VW mit dem Protokoll K2000";"";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{1;3;"PAE";}
    Version{1;0;"AC";"- freigegeben -";"vw-admin";"17.02.2003 15:37:21";}
    Version{1;1;"AC";"- in Arbeit -";"vw-admin";"28.08.2003 17:40:34";}
    Version{1;2;"AC";"- in Arbeit -";"dsa-admin";"08.06.2004 08:55:47";}
    Version{1;3;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"25.07.2006 08:36:16";}}
   FunctionDef{
    Name{"VW2000_Dienste_22";}
    LangName{"VW2000_Dienste_22";"VW2000_Services_22";}
    CvsVerHis{}
    Type{1;}
    Icon{0;}
    Properties{"Begin";}
    FormalParam{}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"";}
    NodeCategory{"";}
    Info{"SG-Identifikation mit Service 0x22.\r\nDiese sollen in Zukunft die STG - ID 0x1A (0x9b, 0x9a, 0x91, 0x86, ...) abloesen.";"Moduls read the ECU Id by using the KWP2000-Comand ReadByIdentifier (Requesttitel 0x22) ";}
    Rights{"Write";"Read";}
    VersionInfo{
     CurVersion{1;0;"PAE";}
     Version{0;1;"PAE";"- in Arbeit -";"vw-admin";"30.05.2005 14:08:48";}
     Version{0;2;"PAE";"- in Arbeit -";"vw-admin";"31.05.2005 11:13:39";}
     Version{1;0;"PAE";" Freigabe ";"vw-admin";"03.06.2005 15:53:13";}}
    FunctionDef{
     Name{"VW2000_ReadDataByLocalId_ASCII_String";}
     LangName{"VW2000_ReadDataByLocalId_ASCII_String";"VW2000_Read_DataByLocalId_ASCII_String";}
     CvsVerHis{}
     Type{1;}
     Icon{1;}
     Properties{"Begin";}
     FormalParam{
      InputParam{"Hndl";
       LangName{"Hndl";"Hndl";}"VCIKANAL";"VCIKanal1";
       LangDesc{"VCI-Kanal";"VCI channel";}}
      InputParam{"LID";
       LangName{"LID";"LID";}"VW_Send_LID_ASCII_String";"";
       LangDesc{"local Identifier (Ergbnis ASCII-String)";"";}}
      OutputParam{"ASCII_String";
       LangName{"ASCII_String";"ASCII_String";}"VW_ASCII_String";"DVW_ASCII_String";
       LangDesc{"Ergebnis-Daten";"";}}
      OutputParam{"RecvTel";
       LangName{"RecvTel";"RecvTel";}"VW_Result_Tel";"DLID";
       LangDesc{"Steuergeraete-Telegramm";"";}}}
     LocalVar{
      LocVarDef{"CKommentarFunktionNOK";
       LangName{"CKommentarFunktionNOK";"CKommentarFunktionNOK";}"Locvar";"TEXT";
       LangDesc{"";"";}
       LangText{"\"Funktion nicht unterstuetzt\"";"\"\xB9\xA6\xC4\xDC\xB2\xBB\xD6\xA7\xB3\xD6\"";"\"Function not supported\"";}"Const";}}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     MSLCode{"#pragma using VW2000_Read_Service_22_allgemein // err = VW2000_Read_Service_22_allgemein(err, Hndl, LID, &RecvTel);\r\n\r\n*RecvTel = \"\";\r\n*ASCII_String = \"\";\r\n\r\nif ((LID < 0) || (LID > 0xffff))\r\n\t{\r\n\terr = ABBR;\r\n\t_statSetAsciiResult(ABBR, CKommentarFunktionNOK, FSTGI);\r\n\treturn err;\r\n\t}\r\n\r\nerr = VW2000_Read_Service_22_allgemein(err, Hndl, midstr(itobinstr(LID),2,2), RecvTel);\r\n\r\nif (err == OK)\r\n\t{\r\n\t*ASCII_String = midstr(*RecvTel,2,-1);\r\n\t_statSetAsciiResult(err, *ASCII_String, FOK);\r\n\t}\r\n";}
     NodeCategory{"";}
     Info{"SG-Identifikation mit Service 0x22; \r\nmit Local Identifier (LID), der im Parameter LID uebergeben wird.:\r\nEs wird ueberprueft, ob die Diagnosefunktion unterstuetzt wird, dann wird der Service ausgefuehrt.\r\nDer Parameter RecvTel liefert den kompletten Wert der STG-Antwort zur\xFCck und\r\nder Parameter ASCII_String den eigentlichen gelesenen Wert.\r\nDer Baustein liefert ein OK wenn die LID gelesen werden konnte.\r\nDer Baustein liefert ein ABBR wenn die Diagnosefunktion nicht unterst\xFCtzt wird.\r\nDer Baustein liefert ein NOK wenn die LID nicht gelesen werden konnte.\r\n\r\njk, 29.12.05";"Modul reads the ECU Id by using the KWP2000-Comand ReadByIdentifier (Requesttitel 0x22) \r\nthe RID will be given in the parameter LID.\r\nIt will be testet if the service is supported, than the service will be executed.\r\nThe parameter ID_String contains the ECU answer without the LID. Length n Byte (see spec.)\r\nThe evaluatin of the module will be OK if the reading of the RID was OK.\r\n\r\nsz, 31.05.05";}
     Rights{"Write";"Read";}
     VersionInfo{
      CurVersion{0;21;"CP41A_Te";}
      Version{0;1;"ING";"- in Arbeit -";"dsa-admin";"23.12.2005 08:55:16";}
      Version{0;2;"ING";"- in Arbeit -";"dsa-admin";"23.12.2005 08:56:08";}
      Version{0;3;"ING";"- in Arbeit -";"dsa-admin";"23.12.2005 08:57:03";}
      Version{0;4;"ING";"- in Arbeit -";"dsa-admin";"23.12.2005 08:59:01";}
      Version{0;5;"ING";"- in Arbeit -";"dsa-admin";"23.12.2005 09:37:06";}
      Version{0;6;"ING";"- in Arbeit -";"dsa-admin";"23.12.2005 09:40:12";}
      Version{0;7;"ING";"- in Arbeit -";"dsa-admin";"23.12.2005 09:46:51";}
      Version{0;8;"ING";"- in Arbeit -";"dsa-admin";"23.12.2005 10:06:14";}
      Version{0;9;"ING";"- in Arbeit -";"dsa-admin";"23.12.2005 10:08:15";}
      Version{0;10;"ING";"- in Arbeit -";"dsa-admin";"27.12.2005 15:43:56";}
      Version{0;11;"ING";"- in Arbeit -";"dsa-admin";"28.12.2005 15:51:45";}
      Version{0;12;"ING";"- in Arbeit -";"dsa-admin";"29.12.2005 08:29:40";}
      Version{0;13;"ING";"- in Arbeit -";"dsa-admin";"29.12.2005 09:03:47";}
      Version{0;14;"ING";"- in Arbeit -";"dsa-admin";"29.12.2005 09:04:55";}
      Version{0;15;"ING";"- in Arbeit -";"dsa-admin";"29.12.2005 09:07:26";}
      Version{0;16;"ING";"- in Arbeit -";"dsa-admin";"29.12.2005 09:09:05";}
      Version{0;17;"ING";"- in Arbeit -";"dsa-admin";"29.12.2005 09:10:00";}
      Version{0;18;"ING";"- in Arbeit -";"dsa-admin";"29.12.2005 09:31:59";}
      Version{0;19;"ING";"- in Arbeit -";"dsa-admin";"29.12.2005 09:34:33";}
      Version{0;20;"ING";"- in Arbeit -";"beckermi";"16.01.2006 18:58:11";}
      Version{0;21;"CP41A_Te";"- in Arbeit -";"admin";"07.04.2010 17:43:46";}}}}}}
 FunctionDef{
  Name{"DSA_Bibliothek";}
  LangName{"DSA_Bibliothek";"DSA_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;1;"AC";}
   Version{1;0;"AC";"- freigegeben -";"dsa-admin";"04.03.2003 11:44:35";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"admin";"03.07.2006 10:17:25";}}
  FunctionDef{
   Name{"Daten_Bearbeitung";}
   LangName{"DatenBearbeitung";"Data_Manipulation";}
   CvsVerHis{}
   Type{1;}
   Icon{0;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Sammlung von Bausteinen zur Bearbeitung von Variablen.";"Data editing arises very frequently. Calculations must be carried out, character strings\r\nmust be copied or separated out, parameters must be initialised...";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{0;1;"SVW";}
    Version{0;1;"SVW";"- in Arbeit -";"admin";"12.04.2004 19:29:41";}}
   FunctionDef{
    Name{"StringData";}
    LangName{"StringData";"StringData";}
    CvsVerHis{}
    Type{1;}
    Icon{0;}
    Properties{"Begin";}
    FormalParam{}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"";}
    NodeCategory{"";}
    Info{"Sammlung von Bausteinen zur Bearbeitung von Zeichenketten.";"Collection of components for the editing of strings.";}
    Rights{"Write";"Read";}
    VersionInfo{
     CurVersion{0;11;"PAE";}
     Version{0;1;"RHMPil";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"22.05.2005 09:03:00";}
     Version{0;2;"RHMPil";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"22.05.2005 09:47:40";}
     Version{0;3;"RHMPil";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"22.05.2005 10:48:41";}
     Version{0;4;"RHMPil";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"22.05.2005 10:55:51";}
     Version{0;5;"RHMPil";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"19.09.2005 12:16:30";}
     Version{0;6;"RHMPil";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"25.10.2005 13:09:20";}
     Version{0;7;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"24.07.2006 17:06:12";}
     Version{0;8;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"25.07.2006 08:26:55";}
     Version{0;9;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"25.07.2006 08:31:26";}
     Version{0;10;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"25.07.2006 08:35:22";}
     Version{0;11;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"25.07.2006 08:36:15";}}
    FunctionDef{
     Name{"StringFunktionen";}
     LangName{"StringFunktionen";"StringFunction";}
     CvsVerHis{}
     Type{1;}
     Icon{0;}
     Properties{"Begin";}
     FormalParam{}
     LocalVar{}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     MSLCode{"";}
     NodeCategory{"";}
     Info{"";"";}
     Rights{"Write";"Read";}
     VersionInfo{}
     FunctionDef{
      Name{"StringAdd";}
      LangName{"StringAdd";"StringAdd";}
      CvsVerHis{}
      Type{1;}
      Icon{0;}
      Properties{"Begin";}
      FormalParam{
       InputParam{"String1";
        LangName{"String1";"String1";}"STRING";"DString";
        LangDesc{"";"";}}
       InputParam{"String2";
        LangName{"String2";"String2";}"STRING";"DString";
        LangDesc{"";"";}}
       OutputParam{"DestString";
        LangName{"DestString";"DestString";}"STRING";"DString";
        LangDesc{"";"";}}}
      LocalVar{}
      Condition{"ever";"ok";"";}
      Evaluation{"direct";"never";
       ActionCond{"";}}
      Extra{"teststep";}
      MSLCode{"*DestString = String1 + String2;\r\n";}
      NodeCategory{"";}
      Info{"Baustein zur Verkettung von Zeichenketten.\r\n\r\nDestString = String1 + String2";"Component for the linking of strings.\r\n\r\nDestString = String1 + String2\r\n";}
      Rights{"Write";"Read";}
      VersionInfo{
       CurVersion{0;1;"RHMPil";}
       Version{0;1;"RHMPil";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"24.02.2005 07:54:14";}}}}}}}
 FunctionDef{
  Name{"VW_spezifische_Bibliothek";}
  LangName{"VW_spezifische_Bibliothek";"VW_specific_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"Sammlung von Bausteinen zur Kommunikation mit Steuergeraeten von VW.";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;2;"ZPH18";}
   Version{1;0;"AC";"- freigegeben -";"vw-admin";"04.03.2003 11:56:19";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"07.08.2006 13:58:14";}
   Version{1;2;"ZPH18";"[ Baustein importiert (ersetzt) ]";"admin";"14.08.2007 15:07:01";}}
  FunctionDef{
   Name{"VW_Codefileauswahl";}
   LangName{"VW_Codefileauswahl";"VW_Codefileauswahl";}
   CvsVerHis{}
   Type{1;}
   Icon{0;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Platzhalter f\xFCr Pr\xFCfschritte";"";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{0;1;"PAE";}
    Version{0;1;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"24.07.2006 17:06:13";}}
   FunctionDef{
    Name{"Pfau_9_2_0";}
    LangName{"Pfau_9_2_0";"";}
    CvsVerHis{}
    Type{1;}
    Icon{0;}
    Properties{"Begin";}
    FormalParam{}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"";}
    NodeCategory{"";}
    Info{"";"";}
    Rights{"Write";"Read";}
    VersionInfo{
     CurVersion{0;1;"PAE";}
     Version{0;1;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"24.07.2006 17:06:13";}}
    FunctionDef{
     Name{"ZdcFtnCheck_309433";}
     LangName{"ZdcFtnCheck_309433";"ZdcFtnCheck_309433";}
     CvsVerHis{}
     Type{1;}
     Icon{0;}
     Properties{"Begin";}
     FormalParam{
      InputParam{"ID_Expression";
       LangName{"ID_Expression";"ID_Expression";}"Codefile_Result_Str";"Dummy_ID_Expression_Result";
       LangDesc{"Logischer Ausdr\xFCck der IDs (FTN)";"Logical ID term (FTN)";}}
      InputParam{"ID_Result";
       LangName{"ID_Result";"ID_Result";}"Codefile_Result_Str";"Dummy_ID_1_Result";
       LangDesc{"ID-String";"ID String";}}}
     LocalVar{}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     MSLCode{"if (zdcFtnCheck (ID_Expression, ID_Result, 12))\r\n    err = OK;\r\nelse\r\n    err = NOK;\r\n_statSetAsciiResult (err, ID_Result, FMWNOK);\r\n_statSetValue (ID_Expression);";}
     NodeCategory{"";}
     Info{"Baustein zur Bewertung eines logischen VW-LAS Ausdrucks (s).\r\n\r\nMit dem Parameter \"ID_Expression\" wird der logische Ausdruck \xFCbergeben.\r\nDieser Wert wird mit dem Baustein \"VW_Codefile_STG_9_2_0\" geliefert.\r\n\r\nMit dem Parameter \"ID_Result\" wird der ID-String oder die Verkettung von ID-Strings \xFCbergeben.\r\nDie ID's m\xFCssen jeweils genau 12 Zeichen lang sein.\r\n\r\nDer Baustein liefert OK zur\xFCck, wenn der logische Ausdruck durch die ID's im Parameter \"ID_Result\" wahr wird, \r\nandernfalls NOK.\r\n\r\n\r\n";"";}
     Rights{"Write";"Read";}
     VersionInfo{
      CurVersion{1;1;"CRE1";}
      Version{0;1;"DSA";"- in Arbeit -";"cm";"23.07.2003 18:36:24";}
      Version{0;2;"DSA";"- in Arbeit -";"cm";"23.07.2003 18:42:43";}
      Version{1;0;"PAE";"Freigabe";"vw-admin";"06.06.2005 15:54:37";}
      Version{1;1;"CRE1";"- in Arbeit -";"admin";"21.02.2006 13:26:51";}}}}}}
 FunctionDef{
  Name{"DSA_Bibliothek";}
  LangName{"DSA_Bibliothek";"DSA_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;1;"AC";}
   Version{1;0;"AC";"- freigegeben -";"dsa-admin";"04.03.2003 11:44:35";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"admin";"03.07.2006 10:17:25";}}
  FunctionDef{
   Name{"StatistikElemente";}
   LangName{"StatistikElemente";"StatisticElements";}
   CvsVerHis{}
   Type{1;}
   Icon{1;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Sammlung von Bausteinen zur Statistikdatengenerierung";"Collection of components relating to the generation of\r\nstatistical data.\r\n\r\nIt only makes sense to execute test sequences if there is some way of storing the results.\r\nThat is why PRODIS-OFFICE has built-in functions to gather and generate result data.\r\nOn the other hand, not all modules supply results which are relevant to the test sequence.\r\nFor example, a module which scans a measurement from a control unit should generate result data,\r\nbut a module which simply increases a loop counter should not provide such data.\r\nIt is the job of the person creating the test sequence to determine which modules generate result data.\r\nThe following sub-chapter addresses further aspects of result data generation.\r\n\r\n\r\nSome special modules must be included in the test sequence if any result data are to be generated.\r\nResult data are also known as \"statistical data\", since such data are used to generate statistical\r\nevaluations regarding the number of OK and NOK tests, or regarding the measurements ascertained.\r\n\r\n\r\nIt is also necessary that the DTM function be active, and that a valid communication handle exists\r\nfor the communication between the test sequence and the DTM.\r\nDuring execution of the StatisticResult module, the result data record is transferred to the DTM\r\nfor transmission to the host computer.";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{0;4;"SVW";}
    Version{0;1;"SVW";"- in Arbeit -";"admin";"12.04.2004 19:57:30";}
    Version{0;2;"SVW";"- in Arbeit -";"admin";"12.04.2004 19:58:34";}
    Version{0;3;"SVW";"- in Arbeit -";"admin";"12.04.2004 20:03:39";}
    Version{0;4;"SVW";"- in Arbeit -";"admin";"12.04.2004 21:43:02";}}
   FunctionDef{
    Name{"Statistics_utils";}
    LangName{"Statistics_utils";"Statistics_utils";}
    CvsVerHis{}
    Type{1;}
    Icon{0;}
    Properties{"Begin";}
    FormalParam{}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"";}
    NodeCategory{"";}
    Info{"";"";}
    Rights{"Write";"Read";}
    VersionInfo{
     CurVersion{0;1;"nbmr";}
     Version{0;1;"nbmr";"[ Baustein importiert (neu) ]";"dsa";"05.05.2010 12:49:26";}}
    FunctionDef{
     Name{"StatistikText_NOK";}
     LangName{"StatistikText_NOK";"StatisticText_NOK";}
     CvsVerHis{}
     Type{1;}
     Icon{4;}
     Properties{"Begin";}
     FormalParam{
      InputParam{"Text1";
       LangName{"Text1";"Text1";}"TEXT";"";
       LangDesc{"Statistik Eintrag";"Statistic entry";}}}
     LocalVar{}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     MSLCode{"int _err;\r\nif (err == OK)\r\n\t_err = _statSetAsciiResult(OK, Text1, FOK);\r\nelse\r\n\t_err = _statSetAsciiResult(NOK, Text1, FMWNOK);\r\n";}
     NodeCategory{"";}
     Info{"";"Schreibt einen text in die Statistik.\r\nDie Bewertung dieses Statistikeintrages haengt von dem zuvor erzeugten Error ab. \r\nBei err == NOK - NOK Statistik.";}
     Rights{"Read";"Read";}
     VersionInfo{
      CurVersion{0;2;"CRE2A";}
      Version{0;1;"RHM";"- in Arbeit -";"admin";"27.08.2002 10:14:44";}
      Version{0;2;"CRE2A";"- in Arbeit -";"admin";"23.02.2009 10:40:26";}}}}}}
 FunctionDef{
  Name{"DSA_Bibliothek";}
  LangName{"DSA_Bibliothek";"DSA_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;1;"AC";}
   Version{1;0;"AC";"- freigegeben -";"dsa-admin";"04.03.2003 11:44:35";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"admin";"03.07.2006 10:17:25";}}
  FunctionDef{
   Name{"BenutzerSchnittstellen";}
   LangName{"BenutzerSchnittstellen";"UserInterface";}
   CvsVerHis{}
   Type{1;}
   Icon{2;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Sammlung von Bausteinen zur Benutzerschnittstelle";"Collection of components relating to the user interface.";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{1;2;"SVW";}
    Version{1;0;"AC";"- freigegeben -";"dsa-admin";"04.03.2003 11:34:14";}
    Version{1;1;"SVW";"- in Arbeit -";"admin";"12.04.2004 19:08:29";}
    Version{1;2;"SVW";"- in Arbeit -";"admin";"12.04.2004 21:13:06";}}
   FunctionDef{
    Name{"MultiDisplay";}
    LangName{"MultiDisplay";"MultiDisplay";}
    CvsVerHis{}
    Type{1;}
    Icon{0;}
    Properties{"Begin";}
    FormalParam{}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"";}
    NodeCategory{"";}
    Info{"Sammlung von Bausteinen der Benutzerschnittstelle zur zeilenorientierten Ausgabe (Multi-Display)";"The MultiDisplay functions operate somewhat differently from the MsgBox, ListBox, and Input functions.\r\nThese are displayed when called up, and are then hidden as soon as the user activates \"OK\" or \"Abort\".\r\nThe \"Multifunctional dialogue box\" is always shown (although it may be temporarily obscured, for example\r\nby a \"MsgBox\"). It has four lines which can be selected independently of one another.\r\nEach line may display a text, or a text and a Bitmap graphic, or a scale and a brief text.";}
    Rights{"Write";"Read";}
    VersionInfo{
     CurVersion{0;3;"SVW";}
     Version{0;1;"AC";"- in Arbeit -";"admin";"13.02.2003 14:26:51";}
     Version{0;2;"AC";"- in Arbeit -";"admin";"13.02.2003 14:26:59";}
     Version{0;3;"SVW";"- in Arbeit -";"admin";"12.04.2004 19:15:06";}}
    FunctionDef{
     Name{"DlgMultiLineSet";}
     LangName{"DlgMultiLineSet";"DlgMultiLineSet";}
     CvsVerHis{}
     Type{1;}
     Icon{2;}
     Properties{"Begin";}
     FormalParam{
      InputParam{"DialogHndl";
       LangName{"DialogHndl";"DialogHndl";}"DialogTyp";"DIALOG_LOKAL";
       LangDesc{"Dialog handle";"Dialog handle";}}
      InputParam{"Zeile";
       LangName{"Zeile";"Zeile";}"DialogLine";"CDialogZeile1";
       LangDesc{"Ausgabezeile";"Output line";}}
      InputParam{"Text";
       LangName{"Text";"Text";}"TEXT";"CTextLeer";
       LangDesc{"Ausgabetext";"Output text";}}}
     LocalVar{}
     Condition{"ever";"ok";"";}
     Evaluation{"no";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     MSLCode{"_dlgMultiSetLine (DialogHndl, Zeile, Text);\r\n";}
     NodeCategory{"";}
     Info{"Bausteinen zum Setzen einer Zeile des Multi-Dialogs";"Component used to define a line of the multi-dialog.";}
     Rights{"Write";"Read";}
     VersionInfo{
      CurVersion{0;3;"SVW";}
      Version{0;1;"AC";"- in Arbeit -";"admin";"13.02.2003 14:27:15";}
      Version{0;2;"SVW";"- in Arbeit -";"admin";"12.04.2004 16:25:35";}
      Version{0;3;"SVW";"- in Arbeit -";"admin";"12.04.2004 21:15:36";}}}}}}
 FunctionDef{
  Name{"VW_spezifische_Bibliothek";}
  LangName{"VW_spezifische_Bibliothek";"VW_specific_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"Sammlung von Bausteinen zur Kommunikation mit Steuergeraeten von VW.";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;2;"ZPH18";}
   Version{1;0;"AC";"- freigegeben -";"vw-admin";"04.03.2003 11:56:19";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"07.08.2006 13:58:14";}
   Version{1;2;"ZPH18";"[ Baustein importiert (ersetzt) ]";"admin";"14.08.2007 15:07:01";}}
  FunctionDef{
   Name{"VW2000_Dienste";}
   LangName{"VW2000_Dienste";"VW2000_Dienste";}
   CvsVerHis{}
   Type{1;}
   Icon{0;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Sammlung von Bausteinen zur Kommunikation mit Steuerger\xE4ten von VW mit dem Protokoll K2000";"";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{1;3;"PAE";}
    Version{1;0;"AC";"- freigegeben -";"vw-admin";"17.02.2003 15:37:21";}
    Version{1;1;"AC";"- in Arbeit -";"vw-admin";"28.08.2003 17:40:34";}
    Version{1;2;"AC";"- in Arbeit -";"dsa-admin";"08.06.2004 08:55:47";}
    Version{1;3;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"25.07.2006 08:36:16";}}
   FunctionDef{
    Name{"VW2000_Dienste_22";}
    LangName{"VW2000_Dienste_22";"VW2000_Services_22";}
    CvsVerHis{}
    Type{1;}
    Icon{0;}
    Properties{"Begin";}
    FormalParam{}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"";}
    NodeCategory{"";}
    Info{"SG-Identifikation mit Service 0x22.\r\nDiese sollen in Zukunft die STG - ID 0x1A (0x9b, 0x9a, 0x91, 0x86, ...) abloesen.";"Moduls read the ECU Id by using the KWP2000-Comand ReadByIdentifier (Requesttitel 0x22) ";}
    Rights{"Write";"Read";}
    VersionInfo{
     CurVersion{1;0;"PAE";}
     Version{0;1;"PAE";"- in Arbeit -";"vw-admin";"30.05.2005 14:08:48";}
     Version{0;2;"PAE";"- in Arbeit -";"vw-admin";"31.05.2005 11:13:39";}
     Version{1;0;"PAE";" Freigabe ";"vw-admin";"03.06.2005 15:53:13";}}
    FunctionDef{
     Name{"VW2000_Read_Service_22_anyone_LID_309439";}
     LangName{"VW2000_Lese_Dienst_22_eine_LID_309439";"VW2000_Read_Service_22_anyone_LID_309439";}
     CvsVerHis{}
     Type{1;}
     Icon{1;}
     Properties{"Begin";}
     FormalParam{
      InputParam{"Hndl";
       LangName{"Hndl";"Hndl";}"VCIKANAL";"VCIKanal1";
       LangDesc{"VCI-Kanal";"VCI channel";}}
      InputParam{"LID";
       LangName{"LID";"LID";}"VCISendTel";"";
       LangDesc{"Local Identifier (Bin-String)";"LID Local Identifier (Bin-String)";}}
      OutputParam{"ID_String";
       LangName{"ID_String";"ID_String";}"VW_Result_Tel";"DLID";
       LangDesc{"";"ECU ID string";}}}
     LocalVar{
      LocVarDef{"CKommentarFunktionNOK";
       LangName{"CKommentarFunktionNOK";"CKommentarFunktionNOK";}"Locvar";"TEXT";
       LangDesc{"";"";}
       LangText{"\"Funktion nicht unterstuetzt\"";"\"\xB9\xA6\xC4\xDC\xB2\xBB\xD6\xA7\xB3\xD6\"";"\"Function not supported\"";}"Const";}}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     MSLCode{"string ServTel;\r\n\r\nvciExDtaRead (Hndl, &ServTel);\r\nif (0 > strstr (ServTel, \"\\x01\\x14\"))\t// Funktion unterstuetzt? \r\n{\r\n\t_vciStatVciError (Hndl);\r\n\t_statSetAsciiResult (ABBR,CKommentarFunktionNOK, FSTGI);\r\n\treturn(ABBR);\r\n}\r\nif (strlen(LID) != 2)\r\n{\r\n\t_statSetAsciiResult (ABBR,CKommentarFunktionNOK, FSTGI);\r\n\treturn(ABBR);\r\n}\r\nerr = _vciDataExchange (Hndl, 0x22, 0x62, LID, ID_String);\r\n\r\nif (err)\r\n{\r\n\t_vciStatVciError (Hndl);\r\n\terr = _statSetStrResult (NOK, *ID_String, FSTGI);\r\n}\r\nif (!err)\r\n{\r\n\t_statSetStrResult (err, *ID_String, FOK);\r\n\t*ID_String = midstr (*ID_String, 2, -1);\r\n}\r\n\r\n\r\n";}
     NodeCategory{"";}
     Info{"SG-Identifikation mit Service 0x22; \r\nmit Local Identifier (LID), der im Parameter LID uebergeben wird.:\r\nEs wird ueberprueft, ob die Diagnosefunktion unterstuetzt wird, dann wird der Service ausgefuehrt.\r\nDer Parameter ID_String liefert den Wert zurueck. Laenge n Byte (nach Spec.).\r\nDer Baustein liefert ein OK wenn die LID gelesen werden konnte.\r\n\r\n14.06.06, sz: erstellt";"Modul reads the ECU Id by using the KWP2000-Comand ReadByIdentifier (Requesttitel 0x22) \r\nthe RID will be given in the parameter LID.\r\nIt will be testet if the service is supported, than the service will be executed.\r\nThe parameter ID_String contains the ECU answer without the LID. Length n Byte (see spec.)\r\nThe evaluatin of the module will be OK if the reading of the RID was OK.\r\n\r\nsz, 31.05.05";}
     Rights{"Write";"Read";}
     VersionInfo{
      CurVersion{2;5;"CP41A_Te";}
      Version{0;1;"PAE";"- in Arbeit -";"vw-admin";"25.05.2005 08:39:30";}
      Version{0;2;"PAE";"- in Arbeit -";"vw-admin";"25.05.2005 08:40:57";}
      Version{0;3;"PAE";"- in Arbeit -";"vw-admin";"25.05.2005 08:41:11";}
      Version{0;4;"PAE";"- in Arbeit -";"vw-admin";"25.05.2005 08:43:32";}
      Version{0;5;"PAE";"- in Arbeit -";"vw-admin";"30.05.2005 16:38:02";}
      Version{0;6;"PAE";"- in Arbeit -";"vw-admin";"31.05.2005 10:26:57";}
      Version{0;7;"PAE";"- in Arbeit -";"vw-admin";"02.06.2005 15:02:24";}
      Version{0;8;"PAE";"- in Arbeit -";"vw-admin";"03.06.2005 15:54:21";}
      Version{1;0;"PAE";" Freigabe ";"vw-admin";"03.06.2005 15:57:37";}
      Version{1;1;"AC";"- in Arbeit -";"dsa-admin";"14.12.2005 11:20:03";}
      Version{1;2;"AC";"- in Arbeit -";"dsa-admin";"01.02.2006 16:49:47";}
      Version{1;3;"AC";"- in Arbeit -";"dsa-admin";"12.06.2006 08:54:57";}
      Version{1;4;"AC";"- in Arbeit -";"dsa-admin";"14.06.2006 14:45:53";}
      Version{1;5;"AC";"- in Arbeit -";"dsa-admin";"14.06.2006 15:40:22";}
      Version{2;0;"AC";" - Updated to LH 2006 -";"dsa-admin";"14.06.2006 15:48:35";}
      Version{2;1;"CRE1A";"- in Arbeit -";"admin";"23.11.2007 11:56:40";}
      Version{2;2;"CRE1A";"- in Arbeit -";"admin";"23.11.2007 12:00:23";}
      Version{2;3;"CRE1A";"- in Arbeit -";"admin";"23.11.2007 12:13:34";}
      Version{2;4;"CRE2A";"- in Arbeit -";"admin";"02.07.2008 09:57:29";}
      Version{2;5;"CP41A_Te";"- in Arbeit -";"admin";"07.04.2010 17:41:22";}}}}}}
 FunctionDef{
  Name{"VW_spezifische_Bibliothek";}
  LangName{"VW_spezifische_Bibliothek";"VW_specific_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"Sammlung von Bausteinen zur Kommunikation mit Steuergeraeten von VW.";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;2;"ZPH18";}
   Version{1;0;"AC";"- freigegeben -";"vw-admin";"04.03.2003 11:56:19";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"07.08.2006 13:58:14";}
   Version{1;2;"ZPH18";"[ Baustein importiert (ersetzt) ]";"admin";"14.08.2007 15:07:01";}}
  FunctionDef{
   Name{"VW_Codefileauswahl";}
   LangName{"VW_Codefileauswahl";"VW_Codefileauswahl";}
   CvsVerHis{}
   Type{1;}
   Icon{0;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Platzhalter f\xFCr Pr\xFCfschritte";"";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{0;1;"PAE";}
    Version{0;1;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"24.07.2006 17:06:13";}}
   FunctionDef{
    Name{"Pfau_9_2_0";}
    LangName{"Pfau_9_2_0";"";}
    CvsVerHis{}
    Type{1;}
    Icon{0;}
    Properties{"Begin";}
    FormalParam{}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"";}
    NodeCategory{"";}
    Info{"";"";}
    Rights{"Write";"Read";}
    VersionInfo{
     CurVersion{0;1;"PAE";}
     Version{0;1;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"24.07.2006 17:06:13";}}
    FunctionDef{
     Name{"ZDCKalibrierung_Bewerten_old";}
     LangName{"ZDCKalibrierung_Bewerten_old";"ZdcKalib_Evaluate_old";}
     CvsVerHis{}
     Type{1;}
     Icon{1;}
     Properties{"Begin";}
     FormalParam{
      InputParam{"SollString";
       LangName{"SollString";"SollString";}"Codefile_Result_Str";"";
       LangDesc{"Referenz-String";"";}}
      InputParam{"IstString";
       LangName{"IstString";"IstString";}"STRING";"";
       LangDesc{"zu testender String";"";}}
      InputParam{"SearchString";
       LangName{"SearchString";"SearchString";}"VW_Konfiguration_String";"";
       LangDesc{"Suchstring";"";}}}
     LocalVar{}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     MSLCode{"// dp 30.06.08 Konfigration bewerten (ZDC 0204)\r\n// sz 06.03.09 Debug per Preprocessor\r\nint Pos , IntLaengeCodierung;\r\nstring StringLaengeCodierung , StringCodierung;\r\n\r\nPos = strstr(SollString, SearchString);\r\nif (Pos < 0)\r\n{\t\r\n    err = NOK;\r\n    _statSetAsciiResult (NOK, \"Searchstring not available\", FUABBR);\r\n#ifdef DEBUGZDC\r\n    errDebug (1, \"Searchstring not available in SollString!\");\r\n#endif\r\n    return NOK;\r\n}\r\nif (err == OK)\r\n{\r\n#ifdef DEBUGZDC\r\n   errDebug (1,sprintf(\"%s:%d\",\"Position of Searchstring\",Pos));\r\n#endif\r\n   Pos = Pos + 5;\r\n   StringLaengeCodierung = midstr (SollString, Pos, 1);\r\n#ifdef DEBUGZDC\r\n   errDebug (1, \"SollString: \", hexstr (SollString));\r\n   errDebug (1, sprintf(\"%s : %s\",\"Length of Kalib\",StringLaengeCodierung));\r\n#endif\r\n   IntLaengeCodierung = binstrtoi(StringLaengeCodierung);\r\n   Pos = Pos + 1;\r\n   StringCodierung = midstr (SollString, Pos, IntLaengeCodierung);\r\n   StringCodierung = hexstr ( StringCodierung );\r\n   IstString = hexstr ( IstString );\r\n#ifdef DEBUGZDC\r\n   errDebug (1, sprintf(\"%s : %s\",\"Soll Kalib\",StringCodierung));\r\n   errDebug (1, sprintf(\"%s : %s\",\"Ist Kalib\",IstString));\r\n#endif\r\n   _statSetValue(StringCodierung);\r\n   if (IstString == StringCodierung)\r\n     err = _statSetStrResult (OK, IstString, FOK);\r\n   else\r\n     err = _statSetStrResult (NOK, IstString, FMWNOK);\r\n}";}
     NodeCategory{"";}
     Info{"Dieser Baustein \xFCberpr\xFCft einen Wert aus dem Kalibrierstring mit der Antwort des Steuerger\xE4tes auf Gleichheit. (Ab ZDC 0204 mit Modus K)\r\n\r\nSollString: R\xFCckgabewert des Bausteins \"ZDCKalibrierungL\"\r\nIstString: Result String des ECU\r\nSearchString: Suchkriterium innerhalb des Kalibrierstrings. Als Suchkriterium ist nur der Identifier vorgesehen (z.B. \"\\h0600\" )\r\n\r\nBaustein liefert der Statistik den Soll und Istwert.\r\n\r\n// sz 06.03.09 Debug per Preprocessor";"";}
     Rights{"Write";"Read";}
     VersionInfo{
      CurVersion{0;19;"PAE";}
      Version{0;1;"ZPH18";"- in Arbeit -";"admin";"02.07.2008 09:15:40";}
      Version{0;2;"ZPH18";"- in Arbeit -";"admin";"02.07.2008 09:16:13";}
      Version{0;3;"ZPH18";"- in Arbeit -";"admin";"02.07.2008 09:22:08";}
      Version{0;4;"ZPH18";"- in Arbeit -";"admin";"02.07.2008 09:23:10";}
      Version{0;5;"ZPH18";"- in Arbeit -";"admin";"02.07.2008 09:25:11";}
      Version{0;6;"ZPH18";"- in Arbeit -";"admin";"02.07.2008 09:32:58";}
      Version{0;7;"ZPH18";"- in Arbeit -";"admin";"02.07.2008 09:42:11";}
      Version{0;8;"ZPH18";"- in Arbeit -";"admin";"02.07.2008 09:44:24";}
      Version{0;9;"ZPH18";"- in Arbeit -";"admin";"02.07.2008 09:45:21";}
      Version{0;10;"ZPH18";"- in Arbeit -";"admin";"02.07.2008 10:23:50";}
      Version{0;11;"ZPH18";"- in Arbeit -";"admin";"02.07.2008 13:07:38";}
      Version{0;12;"ZPH18";"- in Arbeit -";"admin";"03.07.2008 10:42:24";}
      Version{0;13;"ZPH18";"- in Arbeit -";"admin";"03.07.2008 10:42:46";}
      Version{0;14;"ZPH18";"- in Arbeit -";"admin";"03.07.2008 10:44:37";}
      Version{0;15;"ZPH18";"- in Arbeit -";"admin";"03.07.2008 12:54:05";}
      Version{0;16;"ZPH18";"- in Arbeit -";"admin";"03.07.2008 13:20:38";}
      Version{0;17;"ZPH18";"- in Arbeit -";"admin";"03.07.2008 13:21:55";}
      Version{0;18;"PAE";"[ Baustein importiert (neu) ]";"dsa-admin";"18.12.2008 17:14:06";}
      Version{0;19;"PAE";"- in Arbeit -";"dsa-admin";"06.03.2009 08:45:07";}}}}}}
 FunctionDef{
  Name{"VW_spezifische_Bibliothek";}
  LangName{"VW_spezifische_Bibliothek";"VW_specific_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"Sammlung von Bausteinen zur Kommunikation mit Steuergeraeten von VW.";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;2;"ZPH18";}
   Version{1;0;"AC";"- freigegeben -";"vw-admin";"04.03.2003 11:56:19";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"07.08.2006 13:58:14";}
   Version{1;2;"ZPH18";"[ Baustein importiert (ersetzt) ]";"admin";"14.08.2007 15:07:01";}}
  FunctionDef{
   Name{"VW2000_Dienste";}
   LangName{"VW2000_Dienste";"VW2000_Dienste";}
   CvsVerHis{}
   Type{1;}
   Icon{0;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Sammlung von Bausteinen zur Kommunikation mit Steuerger\xE4ten von VW mit dem Protokoll K2000";"";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{1;3;"PAE";}
    Version{1;0;"AC";"- freigegeben -";"vw-admin";"17.02.2003 15:37:21";}
    Version{1;1;"AC";"- in Arbeit -";"vw-admin";"28.08.2003 17:40:34";}
    Version{1;2;"AC";"- in Arbeit -";"dsa-admin";"08.06.2004 08:55:47";}
    Version{1;3;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"25.07.2006 08:36:16";}}
   FunctionDef{
    Name{"VW2000_FSP";}
    LangName{"VW2000_FSP";"VW2000_DTC";}
    CvsVerHis{}
    Type{1;}
    Icon{0;}
    Properties{"Begin";}
    FormalParam{}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"";}
    NodeCategory{"";}
    Info{"";"";}
    Rights{"Write";"Read";}
    VersionInfo{}
    FunctionDef{
     Name{"VW2000_FSP_Filter";}
     LangName{"VW2000_FSP_Filter";"VW2000_DTC_Filter";}
     CvsVerHis{}
     Type{1;}
     Icon{1;}
     Properties{"Begin";}
     FormalParam{
      OutputParam{"FSP_String";
       LangName{"FSP_String";"FSP_String";}"VW_Result_Tel";"VW_FSP_Result";
       LangDesc{"Fehlerspeicher-Telegramm";"";}}
      InputParam{"FSP_Filter";
       LangName{"FSP_Filter";"FSP_Filter";}"VW_Fehler_Filter";"";
       LangDesc{"";"";}}}
     LocalVar{}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     MSLCode{"string\terrStr;\r\nstring\terrText;\r\nstring\tiFSP_Filter;\r\nstring\tTmp_FSP_String;\r\nint\ti;\r\nint\tPos;\r\nint\tsize;\r\nint\tk;\r\n\r\n\r\niFSP_Filter = FSP_Filter+\";\";\r\nwhile (1)\r\n\t{\r\n\tPos = strstr(iFSP_Filter,\";;\");\r\n\tif (Pos < 0) \r\n\t\tbreak;\r\n\tiFSP_Filter = midstr(iFSP_Filter,0,Pos) + midstr(iFSP_Filter,Pos+1,strlen(FSP_Filter));\r\n\t}\r\n\r\nif (midstr(iFSP_Filter,0,1) == \";\")\r\n\tiFSP_Filter = midstr(iFSP_Filter,1,strlen(iFSP_Filter));\r\n\r\nwhile (strlen(iFSP_Filter) > 0)\r\n\t{\r\n\t\r\n\terrText = midstr(iFSP_Filter,0,strstr(iFSP_Filter,\";\"));\r\n\r\n\tiFSP_Filter = midstr(iFSP_Filter,strstr(iFSP_Filter,\";\")+1,strlen(iFSP_Filter));\r\n\r\nif (strlen(errText) == 4)\r\n\terrStr = midstr(itobinstr(hexstrtoi(errText)),2,2);\r\nif (strlen(errText) == 6)\r\n\terrStr = midstr(itobinstr(hexstrtoi(errText)),1,3);\r\n\r\n\tTmp_FSP_String = hexstr(*FSP_String);\r\n\tTmp_FSP_String = midstr (Tmp_FSP_String, 1, -1); \r\n\tPos = strstr(Tmp_FSP_String,hexstr(errStr));\r\nerrDebug(1,sprintf(\"%s;%s;%d\",hexstr(*FSP_String),hexstr(errStr),Pos));\r\n\twhile (((Pos - 1 ) % 6) == 0)\r\n\t\t{\r\n\t\tPos = (Pos / 2) + 1;\r\n            *FSP_String = midstr(*FSP_String,0,Pos) + midstr (*FSP_String,Pos+3,strlen(*FSP_String));\r\n            strbyteset(FSP_String, 0 , *FSP_String[0] - 1);\r\n\t\tTmp_FSP_String = hexstr(*FSP_String);\r\n\t\tTmp_FSP_String = midstr (Tmp_FSP_String, 1, -1); \r\n\t\tPos = strstr(Tmp_FSP_String,hexstr(errStr));\r\nerrDebug(2,sprintf(\"%s;%s;%d\",hexstr(*FSP_String),hexstr(errStr),Pos));\r\n      \t}\r\n\r\n\t}\r\n";}
     NodeCategory{"";}
     Info{"Dieses Modul filtert aus einem durch den VW-Dienst VW2000_FSP_Lesen_Anzahl \r\ngelesenen Fehlerspeicherinhalt erlaubte Fehler heraus. \r\nDer somit gewonnene neu Fehlerspeicherinhalt kann anschlie\xDFend\r\nmit dem VW-Diensten VW2000_FSP_Bewerten_Anzahl oder VW2000_FSP_Bewerten_Fehler\r\nausgewertet und in die Statistik geschrieben werden.\r\n\r\nDie erlaubten Fehler m\xFCssen in der Variablen FSP_Filter in folgendem Format \xFCbergeben\r\nwerden:\r\n\"aaaabb\"     oder \"aaaabb;ccccdd ...\"\r\nwobei aaaa  =  1. erlaubter Fehlerort\r\n              bb  =  1. erlaubte Fehlerart\r\n          cccc  =  2. erlaubter Fehlerort\r\n              dd  =  2. erlaubte Fehlerart\r\nDie einzelnen Fehlerorte bzw. -arten sind hexadezimal mit den Zeichen \"0..9,a..f\" zu\r\ndefinieren und mit Smikolon zu trennen.\r\n\r\nDieses Modul erzeugt keine Statistik und ver\xE4ndert die vorhergehende Bewertung nicht.";"";}
     Rights{"Write";"Read";}
     VersionInfo{
      CurVersion{1;1;"AC";}
      Version{1;0;"AC";"- freigegeben -";"vw-admin";"04.03.2003 13:47:16";}
      Version{1;1;"AC";"- in Arbeit -";"vw-admin";"19.08.2003 16:03:58";}}}}}}
 FunctionDef{
  Name{"VW_spezifische_Bibliothek";}
  LangName{"VW_spezifische_Bibliothek";"VW_specific_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"Sammlung von Bausteinen zur Kommunikation mit Steuergeraeten von VW.";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;2;"ZPH18";}
   Version{1;0;"AC";"- freigegeben -";"vw-admin";"04.03.2003 11:56:19";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"07.08.2006 13:58:14";}
   Version{1;2;"ZPH18";"[ Baustein importiert (ersetzt) ]";"admin";"14.08.2007 15:07:01";}}
  FunctionDef{
   Name{"VW2000_Dienste";}
   LangName{"VW2000_Dienste";"VW2000_Dienste";}
   CvsVerHis{}
   Type{1;}
   Icon{0;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Sammlung von Bausteinen zur Kommunikation mit Steuerger\xE4ten von VW mit dem Protokoll K2000";"";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{1;3;"PAE";}
    Version{1;0;"AC";"- freigegeben -";"vw-admin";"17.02.2003 15:37:21";}
    Version{1;1;"AC";"- in Arbeit -";"vw-admin";"28.08.2003 17:40:34";}
    Version{1;2;"AC";"- in Arbeit -";"dsa-admin";"08.06.2004 08:55:47";}
    Version{1;3;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"25.07.2006 08:36:16";}}
   FunctionDef{
    Name{"VW2000_STG_Verbindungsaufbau";}
    LangName{"VW2000_STG_Verbindungsaufbau";"VW2000_ECU_Connection";}
    CvsVerHis{}
    Type{1;}
    Icon{0;}
    Properties{"Begin";}
    FormalParam{}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"";}
    NodeCategory{"";}
    Info{"Platzhalter f\xFCr Pr\xFCfschritte";"";}
    Rights{"Write";"Read";}
    VersionInfo{}
    FunctionDef{
     Name{"VW2000_STG_Ende_309457";}
     LangName{"VW2000_STG_Ende_309457";"VW2000_ECU_Disconnect";}
     CvsVerHis{}
     Type{1;}
     Icon{1;}
     Properties{"Begin";}
     FormalParam{
      OutputParam{"Hndl";
       LangName{"Hndl";"Hndl";}"VCIKANAL";"VCIKanal1";
       LangDesc{"VCI-Kanal";"VCI channel";}}}
     LocalVar{}
     Condition{"ever";"ok";"";}
     Evaluation{"no";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     MSLCode{"string RecvTel;\r\nif (*Hndl >= 0)\r\n{\r\n\tif (_vciAdapt (*Hndl) == OK)\r\n\t{\r\n\t\terr = _vciDataExchange (*Hndl, 0x82, 0xc2, \"\", &RecvTel);\r\n\t\tif (err)\r\n\t\t{\r\n\t\t\t_vciStatVciError (*Hndl);\r\n\t\t\t_statSetResult (err, FSTGI);\r\n\t\t}\r\n\t\telse\r\n\t\t\t_statSetResult (err, FOK);\r\n\t}\r\n\t_vciClose (Hndl);\r\n}\r\nelse\r\n\terrDebug(0, \"Element 'VW2000_STG_Ende' not used\");\r\n\r\n";}
     NodeCategory{"";}
     Info{"Mit diesem Modul wird die Kommunikation zu einem Steuerger\xE4t beendet. Dieser Befehl ist\r\nimmer nach dem letzten Befehl f\xFCr ein Steuerger\xE4t zu senden bzw. bevor die Z\xFCndung\r\nausgeschaltet wird. \r\n\r\nDie Bewertung des Pr\xFCfschrittes ist \"OK\", wenn die Verbindung erfolgreich beendet werden\r\nkonnte.\r\n\r\nIn die Statistik wird nur ein \"OK\" bzw. \"NOK\" in Abh\xE4nigkeit von der Berwertung geschrieben.\r\n\r\n03.11.06, sz: Update: der Befehl Stop Communication wird nur noch gesendet, wenn das VCI-Handle noch g\xFCltig ist, und eine \r\n                                    Kommunikation zum SG besteht (_vciAdapt). Sonst wird nur das Handle geschlossen. \r\n                                    Einsetzbar ab MSL Version 4.";"";}
     Rights{"Write";"Read";}
     VersionInfo{
      CurVersion{2;1;"CRE1A_OF";}
      Version{1;0;"AC";"- freigegeben -";"vw-admin";"27.02.2003 10:44:10";}
      Version{2;0;"AC";"Update VCI-Handleling";"dsa-admin";"06.11.2006 16:45:13";}
      Version{2;1;"CRE1A_OF";"- in Arbeit -";"admin";"12.01.2007 09:32:33";}}}}}}
 FunctionDef{
  Name{"DSA_Bibliothek";}
  LangName{"DSA_Bibliothek";"DSA_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;1;"AC";}
   Version{1;0;"AC";"- freigegeben -";"dsa-admin";"04.03.2003 11:44:35";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"admin";"03.07.2006 10:17:25";}}
  FunctionDef{
   Name{"Daten_Bearbeitung";}
   LangName{"DatenBearbeitung";"Data_Manipulation";}
   CvsVerHis{}
   Type{1;}
   Icon{0;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Sammlung von Bausteinen zur Bearbeitung von Variablen.";"Data editing arises very frequently. Calculations must be carried out, character strings\r\nmust be copied or separated out, parameters must be initialised...";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{0;1;"SVW";}
    Version{0;1;"SVW";"- in Arbeit -";"admin";"12.04.2004 19:29:41";}}
   FunctionDef{
    Name{"FloatTest";}
    LangName{"FloatTest";"FloatTest";}
    CvsVerHis{}
    Type{1;}
    Icon{0;}
    Properties{"Begin";}
    FormalParam{}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"";}
    NodeCategory{"";}
    Info{"Sammlung von Bausteinen zur Bearbeitung von Zahlen.";"";}
    Rights{"Write";"Read";}
    VersionInfo{}
    FunctionDef{
     Name{"FloatDifferenz";}
     LangName{"FloatDifferenz";"FloatDifference";}
     CvsVerHis{}
     Type{1;}
     Icon{0;}
     Properties{"Begin";}
     FormalParam{
      InputParam{"Src1Float";
       LangName{"Src1Float";"Src1Float";}"FLOAT";"";
       LangDesc{"Source1Float";"";}}
      InputParam{"Src2Float";
       LangName{"Src2Float";"Src2Float";}"FLOAT";"";
       LangDesc{"Source2Float";"";}}
      OutputParam{"DesFloat";
       LangName{"DesFloat";"DesFloat";}"FLOAT";"";
       LangDesc{"Destination Float";"";}}}
     LocalVar{}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     MSLCode{"  *DesFloat = Src1Float-Src2Float;\r\n";}
     NodeCategory{"";}
     Info{"Baustein zum Bilden der Differenz zwischen zwei Flie\xDFkommazahlen (Float).";"";}
     Rights{"Write";"Read";}
     VersionInfo{}}}}}
 FunctionDef{
  Name{"Basis_Bibliothek";}
  LangName{"Basis_Bibliothek";"Base_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;0;"AC";}
   Version{1;0;"AC";"- freigegeben -";"dsa-admin";"04.03.2003 11:44:35";}}
  FunctionDef{
   Name{"Daten_Pruefungen";}
   LangName{"DatenPruefungen";"Data_Examination";}
   CvsVerHis{}
   Type{1;}
   Icon{0;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Sammlung von Pruef-Bausteinen";"";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{0;5;"PAE";}
    Version{0;1;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"24.07.2006 17:06:11";}
    Version{0;2;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"25.07.2006 08:26:55";}
    Version{0;3;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"25.07.2006 08:31:27";}
    Version{0;4;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"25.07.2006 08:35:23";}
    Version{0;5;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"25.07.2006 08:36:16";}}
   FunctionDef{
    Name{"FloatNeu";}
    LangName{"FloatPrfg";"Float_Examinations";}
    CvsVerHis{}
    Type{1;}
    Icon{1;}
    Properties{"Begin";}
    FormalParam{}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"";}
    NodeCategory{"";}
    Info{"";"";}
    Rights{"Write";"Read";}
    VersionInfo{}
    FunctionDef{
     Name{"FToleranzPrfng";}
     LangName{"FToleranzPrfng";"FloatToleranceCheck";}
     CvsVerHis{}
     Type{1;}
     Icon{1;}
     Properties{"End";}
     FormalParam{
      InputParam{"Istwert";
       LangName{"Istwert";"Istwert";}"FLOAT";"";
       LangDesc{"Istwert";"";}}
      InputParam{"Utg";
       LangName{"Utg";"Utg";}"FLOAT";"";
       LangDesc{"untere Grenze";"";}}
      InputParam{"Otg";
       LangName{"Otg";"Otg";}"FLOAT";"";
       LangDesc{"obere Grenze";"";}}}
     LocalVar{}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     MSLCode{"_statSetRange (sprintf(\"%f\",Utg), sprintf(\"%f\",Otg));\r\nif (Istwert > Otg)\r\n  err = _statSetFloatResult (NOK, Istwert, FMWGT);\r\nelse if (Istwert < Utg)\r\n  err = _statSetFloatResult (NOK, Istwert, FMWLT);\r\nelse\r\n  err = _statSetFloatResult (OK, Istwert, FOK);\r\n";}
     NodeCategory{"";}
     Info{"Baustein zur Toleranzbandpr\xFCfung. (S)\r\n\r\nBewertung ist OK, wenn der Istwert innerhalb der Toleranzgrenzen von Utg und Otg liegt.";"Component for the tolerance range test. (S)\r\nReturns \"OK\", if the actual value is within the defined tolerance\r\nrange from \"Utg\" to \"Otg\".";}
     Rights{"Write";"Read";}
     VersionInfo{
      CurVersion{0;3;"SVW";}
      Version{0;1;"BRU4A";"- in Arbeit -";"dsa";"14.05.2003 10:16:00";}
      Version{0;2;"SVW";"- in Arbeit -";"admin";"12.04.2004 19:54:27";}
      Version{0;3;"SVW";"- in Arbeit -";"admin";"12.04.2004 21:02:47";}}}}}}
 FunctionDef{
  Name{"DSA_Bibliothek";}
  LangName{"DSA_Bibliothek";"DSA_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;1;"AC";}
   Version{1;0;"AC";"- freigegeben -";"dsa-admin";"04.03.2003 11:44:35";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"admin";"03.07.2006 10:17:25";}}
  FunctionDef{
   Name{"BenutzerSchnittstellen";}
   LangName{"BenutzerSchnittstellen";"UserInterface";}
   CvsVerHis{}
   Type{1;}
   Icon{2;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Sammlung von Bausteinen zur Benutzerschnittstelle";"Collection of components relating to the user interface.";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{1;2;"SVW";}
    Version{1;0;"AC";"- freigegeben -";"dsa-admin";"04.03.2003 11:34:14";}
    Version{1;1;"SVW";"- in Arbeit -";"admin";"12.04.2004 19:08:29";}
    Version{1;2;"SVW";"- in Arbeit -";"admin";"12.04.2004 21:13:06";}}
   FunctionDef{
    Name{"DlgExit";}
    LangName{"DlgExit";"DlgExit";}
    CvsVerHis{}
    Type{1;}
    Icon{2;}
    Properties{"Begin";}
    FormalParam{
     InputParam{"DialogHndl";
      LangName{"DialogHndl";"DialogHndl";}"DialogTyp";"DIALOG_LOKAL";
      LangDesc{"Dialog handle";"Dialog handle";}}}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"  err = _dlgExit (DialogHndl);";}
    NodeCategory{"";}
    Info{"Baustein zur Deinitialisierung der Benutzerschnittstelle";"Deinitialises the communication handle";}
    Rights{"Write";"Read";}
    VersionInfo{
     CurVersion{0;1;"SVW";}
     Version{0;1;"SVW";"- in Arbeit -";"admin";"12.04.2004 16:21:22";}}}}}
 FunctionDef{
  Name{"VW_spezifische_Bibliothek";}
  LangName{"VW_spezifische_Bibliothek";"VW_specific_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"Sammlung von Bausteinen zur Kommunikation mit Steuergeraeten von VW.";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;2;"ZPH18";}
   Version{1;0;"AC";"- freigegeben -";"vw-admin";"04.03.2003 11:56:19";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"07.08.2006 13:58:14";}
   Version{1;2;"ZPH18";"[ Baustein importiert (ersetzt) ]";"admin";"14.08.2007 15:07:01";}}
  FunctionDef{
   Name{"VW2000_Dienste";}
   LangName{"VW2000_Dienste";"VW2000_Dienste";}
   CvsVerHis{}
   Type{1;}
   Icon{0;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Sammlung von Bausteinen zur Kommunikation mit Steuerger\xE4ten von VW mit dem Protokoll K2000";"";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{1;3;"PAE";}
    Version{1;0;"AC";"- freigegeben -";"vw-admin";"17.02.2003 15:37:21";}
    Version{1;1;"AC";"- in Arbeit -";"vw-admin";"28.08.2003 17:40:34";}
    Version{1;2;"AC";"- in Arbeit -";"dsa-admin";"08.06.2004 08:55:47";}
    Version{1;3;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"25.07.2006 08:36:16";}}
   FunctionDef{
    Name{"VW2000_erweiterte_IDs";}
    LangName{"VW2000_erweiterte_IDs";"VW2000_extended_IDs";}
    CvsVerHis{}
    Type{1;}
    Icon{0;}
    Properties{"Begin";}
    FormalParam{}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"";}
    NodeCategory{"";}
    Info{"";"";}
    Rights{"Write";"Read";}
    VersionInfo{
     CurVersion{0;1;"PAE";}
     Version{0;1;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"24.07.2006 17:06:13";}}
    FunctionDef{
     Name{"VW2000_ID_86_Lesen";}
     LangName{"VW2000_ID_86_Lesen";"VW2000_ID_86_Lesen";}
     CvsVerHis{}
     Type{1;}
     Icon{1;}
     Properties{"Begin";}
     FormalParam{
      InputParam{"Hndl";
       LangName{"Hndl";"Hndl";}"VCIKANAL";"VCIKanal1";
       LangDesc{"VCI-Kanal";"VCI channel";}}
      OutputParam{"ID_String";
       LangName{"ID_String";"ID_String";}"VW_Result_Tel";"VW_Stg_ID_86";
       LangDesc{"Steuerger\xE4te-Identifikation";"";}}}
     LocalVar{}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     MSLCode{"err = _vciDataExchange (Hndl, 0x1a, 0x5a, \"\\x86\", ID_String);\r\n\r\nif (err)\r\n\t{\r\n\t_vciStatVciError (Hndl);\r\n\terr = NOK;\r\n\t}\r\n\r\n_statSetStrResult (err, *ID_String, FSTGI);\r\n";}
     NodeCategory{"";}
     Info{"Modul lie\xDFt die Steuerger\xE4te-Identifikation.\r\nDabei wird der KWP2000-Befehl ReadECUIdentification ( Blocktitel 0x1a)\r\nmit dem Parameter ECUidentification ( 0x86) verwendet.\r\n\r\nDie gelesene Identifikation wird immer vollst\xE4ndig in der Variablen ID-String abgespeichert und\r\nkann somit sp\xE4ter mit den VW-Diensten VW2000_ID_86_Daten ausgewertet bzw. weiter verarbeitet werden.\r\n\r\nIn der Statistik wird der nicht konvertierte ID-String abgespeichert.\r\n\r\nDie Bewertung des Pr\xFCfschrittes ist immer OK, wenn das Lesen der ID vom Steuerger\xE4t erfolgreich war.\r\n\r\n";"";}
     Rights{"Write";"Read";}
     VersionInfo{
      CurVersion{0;4;"PAE";}
      Version{0;1;"AC";"- in Arbeit -";"vw-admin";"06.01.2005 11:33:01";}
      Version{0;2;"AC";"- in Arbeit -";"vw-admin";"11.02.2005 13:14:06";}
      Version{0;3;"AC";"- in Arbeit -";"vw-admin";"11.02.2005 13:42:25";}
      Version{0;4;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"24.07.2006 17:06:13";}}}}}}
 FunctionDef{
  Name{"VW_spezifische_Bibliothek";}
  LangName{"VW_spezifische_Bibliothek";"VW_specific_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"Sammlung von Bausteinen zur Kommunikation mit Steuergeraeten von VW.";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;2;"ZPH18";}
   Version{1;0;"AC";"- freigegeben -";"vw-admin";"04.03.2003 11:56:19";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"07.08.2006 13:58:14";}
   Version{1;2;"ZPH18";"[ Baustein importiert (ersetzt) ]";"admin";"14.08.2007 15:07:01";}}
  FunctionDef{
   Name{"VW2000_Dienste";}
   LangName{"VW2000_Dienste";"VW2000_Dienste";}
   CvsVerHis{}
   Type{1;}
   Icon{0;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Sammlung von Bausteinen zur Kommunikation mit Steuerger\xE4ten von VW mit dem Protokoll K2000";"";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{1;3;"PAE";}
    Version{1;0;"AC";"- freigegeben -";"vw-admin";"17.02.2003 15:37:21";}
    Version{1;1;"AC";"- in Arbeit -";"vw-admin";"28.08.2003 17:40:34";}
    Version{1;2;"AC";"- in Arbeit -";"dsa-admin";"08.06.2004 08:55:47";}
    Version{1;3;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"25.07.2006 08:36:16";}}
   FunctionDef{
    Name{"VW2000_erweiterte_IDs";}
    LangName{"VW2000_erweiterte_IDs";"VW2000_extended_IDs";}
    CvsVerHis{}
    Type{1;}
    Icon{0;}
    Properties{"Begin";}
    FormalParam{}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"";}
    NodeCategory{"";}
    Info{"";"";}
    Rights{"Write";"Read";}
    VersionInfo{
     CurVersion{0;1;"PAE";}
     Version{0;1;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"24.07.2006 17:06:13";}}
    FunctionDef{
     Name{"VW2000_ID_91_HWID_Lesen";}
     LangName{"VW2000_ID_91_HWID_Lesen";"VW2000_ID_91_HWID_Lesen";}
     CvsVerHis{}
     Type{1;}
     Icon{1;}
     Properties{"Begin";}
     FormalParam{
      InputParam{"Hndl";
       LangName{"Hndl";"Hndl";}"VCIKANAL";"VCIKanal1";
       LangDesc{"VCI-Kanal";"";}}
      OutputParam{"ID_String";
       LangName{"ID_String";"ID_String";}"VW_Result_Tel";"VW_Stg_ID_91";
       LangDesc{"Steuerger\xE4te-Identifikation";"";}}}
     LocalVar{
      LocVarDef{"Kommentar1";
       LangName{"Kommentar1";"Kommentar1";}"Locvar";"TEXT";
       LangDesc{"";"";}
       LangText{"\"HW-Teilenummer bewerten\"";"\"HW-Partnumber evaluate\"";"\"HW-Partnumber evaluate\"";}"Const";}
      LocVarDef{"KommentarErg";
       LangName{"KommentarErg";"KommentarErg";}"Locvar";"TEXT";
       LangDesc{"";"";}
       LangText{"\"HW-TNR\"";"\"HW-TNR\"";"\"HW-PartNo\"";}"Const";}}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     MSLCode{"err = _vciDataExchange (Hndl, 0x1a, 0x5a, \"\\x91\", ID_String);\r\n\r\nif (err)\r\n\t{\r\n\t_vciStatVciError (Hndl);\r\n\terr = NOK;\r\n\t}\r\n\r\n_statSetStrResult (err, *ID_String, FSTGI);\r\n";}
     NodeCategory{"";}
     Info{"Modul lie\xDFt die Steuerger\xE4te-Identifikation.\r\nDabei wird der KWP2000-Befehl ReadECUIdentification ( Blocktitel 0x1a)\r\nmit dem Parameter ECUidentification ( 0x91) verwendet.\r\n\r\nDie gelesene Identifikation wird immer vollst\xE4ndig in der Variablen ID-String abgespeichert.\r\n\r\nIn der Statistik wird immer der unkonvertierte ID-String abgespeichert.\r\n\r\nDie Bewertung des Pr\xFCfschrittes ist immer OK, wenn das Lesen der ID vom Steuerger\xE4t erfolgreich\r\nwar.\r\n\r\n";"";}
     Rights{"Write";"Read";}
     VersionInfo{
      CurVersion{0;2;"PAE";}
      Version{0;1;"AC";"- in Arbeit -";"vw-admin";"14.02.2005 08:59:44";}
      Version{0;2;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"24.07.2006 17:06:13";}}}}}}
 FunctionDef{
  Name{"VW_spezifische_Bibliothek";}
  LangName{"VW_spezifische_Bibliothek";"VW_specific_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"Sammlung von Bausteinen zur Kommunikation mit Steuergeraeten von VW.";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;2;"ZPH18";}
   Version{1;0;"AC";"- freigegeben -";"vw-admin";"04.03.2003 11:56:19";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"07.08.2006 13:58:14";}
   Version{1;2;"ZPH18";"[ Baustein importiert (ersetzt) ]";"admin";"14.08.2007 15:07:01";}}
  FunctionDef{
   Name{"VW2000_Dienste";}
   LangName{"VW2000_Dienste";"VW2000_Dienste";}
   CvsVerHis{}
   Type{1;}
   Icon{0;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Sammlung von Bausteinen zur Kommunikation mit Steuerger\xE4ten von VW mit dem Protokoll K2000";"";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{1;3;"PAE";}
    Version{1;0;"AC";"- freigegeben -";"vw-admin";"17.02.2003 15:37:21";}
    Version{1;1;"AC";"- in Arbeit -";"vw-admin";"28.08.2003 17:40:34";}
    Version{1;2;"AC";"- in Arbeit -";"dsa-admin";"08.06.2004 08:55:47";}
    Version{1;3;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"25.07.2006 08:36:16";}}
   FunctionDef{
    Name{"VW2000_erweiterte_IDs";}
    LangName{"VW2000_erweiterte_IDs";"VW2000_extended_IDs";}
    CvsVerHis{}
    Type{1;}
    Icon{0;}
    Properties{"Begin";}
    FormalParam{}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"";}
    NodeCategory{"";}
    Info{"";"";}
    Rights{"Write";"Read";}
    VersionInfo{
     CurVersion{0;1;"PAE";}
     Version{0;1;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"24.07.2006 17:06:13";}}
    FunctionDef{
     Name{"VW2000_ID_Nummer";}
     LangName{"VW2000_ID_Nummer";"";}
     CvsVerHis{}
     Type{1;}
     Icon{0;}
     Properties{"Begin";}
     FormalParam{
      InputParam{"ID_Nummer";
       LangName{"ID_Nummer";"ID_Nummer";}"ID_Nummern";"erste_ID";
       LangDesc{"zu lesende ID";"\"\"";}}
      InputParam{"ID_String";
       LangName{"ID_String";"ID_String";}"VW_Result_Tel";"VW_Stg_ID";
       LangDesc{"gelesene STG-Identifikation";"\"\"";}}
      OutputParam{"ID_Result";
       LangName{"ID_Result";"ID_Result";}"VW_Result_Tel";"VW_Stg_Teil_ID";
       LangDesc{"ausgeschnittene ID";"";}}}
     LocalVar{}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     MSLCode{"int Counter, ScalOffset, ID_Start, ID_Len;\r\nstring ID_String_Rest;\r\n\r\n*ID_Result = \"\";\r\nID_String_Rest = ID_String;\r\nCounter = 1;\r\nID_Start = 0;\r\nerr = NOK;\r\nwhile ((Counter <= ID_Nummer) && (strlen (ID_String) > ID_Start))\r\n{\r\n#ifdef DEBUGID\r\n\t\terrDebug (0, \"ID_Nummer: \", Counter);\r\n#endif\r\n\tScalOffset = 1;\r\n\tID_Len = 0;\r\n\twhile (((ScalOffset != 0xff) && (ScalOffset != 0x00)) && (strlen (ID_String_Rest) >= ScalOffset))\r\n\t{\r\n\t\tID_String_Rest = midstr(ID_String_Rest, ScalOffset, -1);\r\n\t\tID_Len = ID_Len + ScalOffset;\r\n#ifdef DEBUGID\r\n\t\t\terrDebug (0, \"ID_Len= \", ID_Len, \" ScalOffset= \", ScalOffset, \" ID_String_Rest= \", hexstr (ID_String_Rest));\r\n#endif\r\n\t\tScalOffset = ID_String_Rest[0];\r\n\t}\r\n\tif (ScalOffset == 0xff)\r\n\t\tID_String_Rest = midstr(ID_String_Rest, 1, -1);\r\n\t*ID_Result = midstr (ID_String, ID_Start, ID_Len) + \"\\xff\";\r\n#ifdef DEBUGID\r\n\t\terrDebug (err, \"Zwischenergebnis ID_Result: \", hexstr (*ID_Result) );\r\n#endif\r\n\tif ((strlen (*ID_Result) > 1) && (ID_Nummer == Counter))\r\n\t\terr = OK;\r\n\telse\r\n\t\terr = NOK;\r\n\tCounter = Counter + 1;\r\n\tID_Start = ID_Start + ID_Len + 1; \r\n}\r\n#ifdef DEBUGID\r\n\terrDebug (0, \"Error= \", err);\r\n#endif";}
     NodeCategory{"";}
     Info{"Zum Trennen mehrerer IDs, die aneinandergereiht bei einer STG-Antwort enthalten sind.\r\nDer Baustein funktioniert, wenn durch ScalingOffset die einzelnen IDs mit \"0xff\" getrennt sind.\r\nDie ID_Nummer gibt an, an welcher Position in der STG Antwort die ID gefunden wird.\r\nPosition 1 ist das Master-STG und Positionen 2 bis n sind die Slave-STG.\r\nsz: 20.12.05: Bugfix:\r\nDer Baustein funktioniert nicht wenn die Scalingoffset falsch sind; aber nun auch wenn 0xff in den Daten vorkommt.\r\nMit dem Praeprozessor \"DEBUGID\" kann ein errDebug eingeschaltet werden.\r\n";"";}
     Rights{"Write";"Read";}
     VersionInfo{
      CurVersion{1;1;"PAE";}
      Version{0;1;"AC";"- in Arbeit -";"vw-admin";"02.03.2005 10:33:36";}
      Version{0;2;"AC";"- in Arbeit -";"vw-admin";"02.03.2005 10:34:01";}
      Version{0;3;"AC";"- in Arbeit -";"vw-admin";"02.03.2005 10:34:11";}
      Version{0;4;"AC";"- in Arbeit -";"vw-admin";"02.03.2005 10:34:51";}
      Version{0;5;"AC";"- in Arbeit -";"vw-admin";"02.03.2005 10:36:48";}
      Version{0;6;"AC";"- in Arbeit -";"vw-admin";"02.03.2005 10:37:16";}
      Version{0;7;"AC";"- in Arbeit -";"vw-admin";"02.03.2005 10:38:29";}
      Version{0;8;"AC";"- in Arbeit -";"vw-admin";"02.03.2005 10:39:16";}
      Version{0;9;"AC";"- in Arbeit -";"vw-admin";"02.03.2005 11:27:47";}
      Version{0;10;"AC";"- in Arbeit -";"vw-admin";"02.03.2005 11:30:03";}
      Version{0;11;"AC";"- in Arbeit -";"vw-admin";"02.03.2005 13:41:15";}
      Version{0;12;"AC";"- in Arbeit -";"vw-admin";"02.03.2005 13:59:31";}
      Version{0;13;"AC";"- in Arbeit -";"vw-admin";"02.03.2005 14:15:01";}
      Version{0;14;"AC";"- in Arbeit -";"vw-admin";"02.03.2005 14:22:05";}
      Version{1;0;"PAE";" Freigabe ";"vw-admin";"06.06.2005 16:21:55";}
      Version{1;1;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"24.07.2006 17:06:13";}}}}}}
 FunctionDef{
  Name{"VW_spezifische_Bibliothek";}
  LangName{"VW_spezifische_Bibliothek";"VW_specific_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"Sammlung von Bausteinen zur Kommunikation mit Steuergeraeten von VW.";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;2;"ZPH18";}
   Version{1;0;"AC";"- freigegeben -";"vw-admin";"04.03.2003 11:56:19";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"07.08.2006 13:58:14";}
   Version{1;2;"ZPH18";"[ Baustein importiert (ersetzt) ]";"admin";"14.08.2007 15:07:01";}}
  FunctionDef{
   Name{"VW2000_Dienste";}
   LangName{"VW2000_Dienste";"VW2000_Dienste";}
   CvsVerHis{}
   Type{1;}
   Icon{0;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Sammlung von Bausteinen zur Kommunikation mit Steuerger\xE4ten von VW mit dem Protokoll K2000";"";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{1;3;"PAE";}
    Version{1;0;"AC";"- freigegeben -";"vw-admin";"17.02.2003 15:37:21";}
    Version{1;1;"AC";"- in Arbeit -";"vw-admin";"28.08.2003 17:40:34";}
    Version{1;2;"AC";"- in Arbeit -";"dsa-admin";"08.06.2004 08:55:47";}
    Version{1;3;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"25.07.2006 08:36:16";}}
   FunctionDef{
    Name{"VW2000_ID";}
    LangName{"VW2000_ID";"VW2000_ID";}
    CvsVerHis{}
    Type{1;}
    Icon{0;}
    Properties{"Begin";}
    FormalParam{}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"";}
    NodeCategory{"";}
    Info{"";"";}
    Rights{"Write";"Read";}
    VersionInfo{
     CurVersion{0;1;"PAE";}
     Version{0;1;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"24.07.2006 17:06:13";}}
    FunctionDef{
     Name{"VW2000_ID_Lesen";}
     LangName{"VW2000_ID_Lesen";"VW2000_ID_Read";}
     CvsVerHis{}
     Type{1;}
     Icon{1;}
     Properties{"Begin";}
     FormalParam{
      InputParam{"Hndl";
       LangName{"Hndl";"Hndl";}"VCIKANAL";"VCIKanal1";
       LangDesc{"VCI-Kanal";"VCI channel";}}
      OutputParam{"ID_String";
       LangName{"ID_String";"ID_String";}"VW_Result_Tel";"VW_Stg_ID";
       LangDesc{"Steuerger\xE4te-Identifikation";"ECU ID string";}}}
     LocalVar{}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     MSLCode{"err = _vciDataExchange (Hndl, 0x1a, 0x5a, \"\\x9b\", ID_String);\r\n\r\nif (err)\r\n\t{\r\n\t_vciStatVciError (Hndl);\r\n\terr = NOK;\r\n\t}\r\n\r\n_statSetStrResult (err, *ID_String, FSTGI);\r\n";}
     NodeCategory{"";}
     Info{"Modul lie\xDFt die Steuerger\xE4te-Identifikation.\r\nDabei wird der KWP2000-Befehl ReadECUIdentification ( Blocktitel 0x1a)\r\nmit dem Parameter ECUidentification ( 0x9b) verwendet.\r\n\r\nDie gelesene Identifikation wird immer vollst\xE4ndig in der Variablen ID-String abgespeichert und\r\nsomit sp\xE4ter mit den VW-Diensten VW2000_ID_Bew,VW2000_TNr_Bew,VW2000-Cod_Bew,\r\nVW2000_Tnr_Cod_Bew, VW2000_ID_Pos_Bew, VW2000_Vers_Speichern)\r\nausgewertet bzw. weiter verarbeitet werden.\r\n\r\nIn der Statistik wird immer der konvertierte ID-String ( entsprechend VAG1551/1552 ) abgespeichert.\r\nDabei wird die Importeursnummer und die Ger\xE4tenummer nicht in der Konvertierung ber\xFCcksichtigt\r\n\r\nDie Bewertung des Pr\xFCfschrittes ist immer OK, wenn das Lesen der ID vom Steuerger\xE4t erfolgreich\r\nwar.\r\n\r\n";"";}
     Rights{"Write";"Read";}
     VersionInfo{
      CurVersion{1;1;"SVW";}
      Version{1;0;"AC";"- freigegeben -";"vw-admin";"04.03.2003 13:00:46";}
      Version{1;1;"SVW";"- in Arbeit -";"admin";"30.09.2003 13:16:10";}}}}}}
 FunctionDef{
  Name{"VW_spezifische_Bibliothek";}
  LangName{"VW_spezifische_Bibliothek";"VW_specific_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"Sammlung von Bausteinen zur Kommunikation mit Steuergeraeten von VW.";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;2;"ZPH18";}
   Version{1;0;"AC";"- freigegeben -";"vw-admin";"04.03.2003 11:56:19";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"07.08.2006 13:58:14";}
   Version{1;2;"ZPH18";"[ Baustein importiert (ersetzt) ]";"admin";"14.08.2007 15:07:01";}}
  FunctionDef{
   Name{"VW2000_Dienste";}
   LangName{"VW2000_Dienste";"VW2000_Dienste";}
   CvsVerHis{}
   Type{1;}
   Icon{0;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Sammlung von Bausteinen zur Kommunikation mit Steuerger\xE4ten von VW mit dem Protokoll K2000";"";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{1;3;"PAE";}
    Version{1;0;"AC";"- freigegeben -";"vw-admin";"17.02.2003 15:37:21";}
    Version{1;1;"AC";"- in Arbeit -";"vw-admin";"28.08.2003 17:40:34";}
    Version{1;2;"AC";"- in Arbeit -";"dsa-admin";"08.06.2004 08:55:47";}
    Version{1;3;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"25.07.2006 08:36:16";}}
   FunctionDef{
    Name{"VW2000_Dienste_22";}
    LangName{"VW2000_Dienste_22";"VW2000_Services_22";}
    CvsVerHis{}
    Type{1;}
    Icon{0;}
    Properties{"Begin";}
    FormalParam{}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"";}
    NodeCategory{"";}
    Info{"SG-Identifikation mit Service 0x22.\r\nDiese sollen in Zukunft die STG - ID 0x1A (0x9b, 0x9a, 0x91, 0x86, ...) abloesen.";"Moduls read the ECU Id by using the KWP2000-Comand ReadByIdentifier (Requesttitel 0x22) ";}
    Rights{"Write";"Read";}
    VersionInfo{
     CurVersion{1;0;"PAE";}
     Version{0;1;"PAE";"- in Arbeit -";"vw-admin";"30.05.2005 14:08:48";}
     Version{0;2;"PAE";"- in Arbeit -";"vw-admin";"31.05.2005 11:13:39";}
     Version{1;0;"PAE";" Freigabe ";"vw-admin";"03.06.2005 15:53:13";}}
    FunctionDef{
     Name{"VW2000_Read_Service_22_allgemein";}
     LangName{"VW2000_Read_Service_22_allgemein";"VW2000_Read_Service_22_general";}
     CvsVerHis{}
     Type{1;}
     Icon{1;}
     Properties{"Begin";}
     FormalParam{
      InputParam{"Hndl";
       LangName{"Hndl";"Hndl";}"VCIKANAL";"VCIKanal1";
       LangDesc{"VCI-Kanal";"VCI channel";}}
      InputParam{"LID";
       LangName{"LID";"LID";}"VCISendTel";"";
       LangDesc{"local Identifier (Bin-String)";"";}}
      OutputParam{"RecvTel";
       LangName{"RecvTel";"RecvTel";}"VW_Result_Tel";"DLID";
       LangDesc{"";"";}}}
     LocalVar{
      LocVarDef{"CKommentarFunktionNOK";
       LangName{"CKommentarFunktionNOK";"CKommentarFunktionNOK";}"Locvar";"TEXT";
       LangDesc{"";"";}
       LangText{"\"Funktion nicht unterstuetzt\"";"\"\xB9\xA6\xC4\xDC\xB2\xBB\xD6\xA7\xB3\xD6\"";"\"Function not supported\"";}"Const";}}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     MSLCode{"string ServTel;\r\n\r\n*RecvTel = \"\";\r\n\r\nvciExDtaRead (Hndl, &ServTel);\r\nif (0 > strstr (ServTel, \"\\x01\\x14\"))\t// Funktion unterstuetzt? \r\n{\r\n\t_statSetStrResult (ABBR,CKommentarFunktionNOK, FSTGI);\r\n\t// return(ABBR);\r\n}\r\n\r\nif (strlen(LID) != 2)\r\n\t{\r\n\t_statSetStrResult (ABBR,CKommentarFunktionNOK, FSTGI);\r\n\treturn(ABBR);\r\n\t}\r\n\r\nerr = _vciDataExchange (Hndl, 0x22, 0x62, LID, RecvTel);\r\n\r\nif (err)\r\n{\r\n\t_vciStatVciError (Hndl);\r\n\terr = NOK;\r\n}\r\n\r\n_statSetStrResult (err, *RecvTel, FSTGI);\r\n";}
     NodeCategory{"";}
     Info{"SG-Identifikation mit Service 0x22; \r\nmit Local Identifier (LID), der im Parameter LID uebergeben wird.:\r\nEs wird ueberprueft, ob die Diagnosefunktion unterstuetzt wird, dann wird der Service ausgefuehrt.\r\nDer Parameter RecvTel liefert den kompletten Wert zurueck der STG_Antwort zur\xFCck.\r\nDer Baustein liefert ein OK wenn die LID gelesen werden konnte.\r\nDer Baustein liefert ein ABBR wenn die Diagnosefunktion nicht unterst\xFCtzt wird.\r\nDer Baustein liefert ein NOK wenn die LID nicht gelesen werden konnte.\r\n\r\njk, 29.12.05";"Modul reads the ECU Id by using the KWP2000-Comand ReadByIdentifier (Requesttitel 0x22) \r\nthe RID will be given in the parameter LID.\r\nIt will be testet if the service is supported, than the service will be executed.\r\nThe parameter ID_String contains the ECU answer without the LID. Length n Byte (see spec.)\r\nThe evaluatin of the module will be OK if the reading of the RID was OK.\r\n\r\nsz, 31.05.05";}
     Rights{"Write";"Read";}
     VersionInfo{
      CurVersion{0;7;"CP41A_Te";}
      Version{0;1;"ING";"- in Arbeit -";"dsa-admin";"22.12.2005 10:19:22";}
      Version{0;2;"ING";"- in Arbeit -";"dsa-admin";"29.12.2005 08:30:21";}
      Version{0;3;"ING";"- in Arbeit -";"dsa-admin";"29.12.2005 09:14:11";}
      Version{0;4;"ING";"- in Arbeit -";"dsa-admin";"29.12.2005 09:14:36";}
      Version{0;5;"ING";"- in Arbeit -";"dsa-admin";"29.12.2005 09:29:28";}
      Version{0;6;"ING";"- in Arbeit -";"na";"05.04.2006 15:01:57";}
      Version{0;7;"CP41A_Te";"- in Arbeit -";"admin";"07.04.2010 17:43:53";}}}}}}
 FunctionDef{
  Name{"VW_spezifische_Bibliothek";}
  LangName{"VW_spezifische_Bibliothek";"VW_specific_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"Sammlung von Bausteinen zur Kommunikation mit Steuergeraeten von VW.";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;2;"ZPH18";}
   Version{1;0;"AC";"- freigegeben -";"vw-admin";"04.03.2003 11:56:19";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"07.08.2006 13:58:14";}
   Version{1;2;"ZPH18";"[ Baustein importiert (ersetzt) ]";"admin";"14.08.2007 15:07:01";}}
  FunctionDef{
   Name{"VW2000_Dienste";}
   LangName{"VW2000_Dienste";"VW2000_Dienste";}
   CvsVerHis{}
   Type{1;}
   Icon{0;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Sammlung von Bausteinen zur Kommunikation mit Steuerger\xE4ten von VW mit dem Protokoll K2000";"";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{1;3;"PAE";}
    Version{1;0;"AC";"- freigegeben -";"vw-admin";"17.02.2003 15:37:21";}
    Version{1;1;"AC";"- in Arbeit -";"vw-admin";"28.08.2003 17:40:34";}
    Version{1;2;"AC";"- in Arbeit -";"dsa-admin";"08.06.2004 08:55:47";}
    Version{1;3;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"25.07.2006 08:36:16";}}
   FunctionDef{
    Name{"VW2000_Messwert";}
    LangName{"VW2000_Messwert";"VW2000_Measuring_value";}
    CvsVerHis{}
    Type{1;}
    Icon{1;}
    Properties{"Begin";}
    FormalParam{
     InputParam{"Hndl";
      LangName{"Hndl";"Hndl";}"VCIKANAL";"VCIKanal1";
      LangDesc{"VCI-Kanal";"VCI channel";}}
     InputParam{"LocalIdent";
      LangName{"LocalIdent";"LocalIdent";}"VW_Anzeigegruppe";"";
      LangDesc{"Local Identifier 1..255";"Local Identifier 1..255";}}
     OutputParam{"RecvTel";
      LangName{"RecvTel";"RecvTel";}"VCIResult";"DVciResult";
      LangDesc{"VCI-Ergebnis";"VCI Result";}}}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"string LocalID;\r\n\r\n*RecvTel = \"\";\r\n\r\nif (LocalIdent > 127)\r\n\tLocalID = midstr(itobinstr (LocalIdent - 127), 3, 1);\r\nelse\r\n\tLocalID = midstr(itobinstr (LocalIdent), 3, 1);\r\n\r\nerr = _vciDataExchange (Hndl, 0x21, 0x61, LocalID, RecvTel);\r\nif ( err != OK )\r\n\t{\r\n\t_vciStatVciError (Hndl);\r\n\t_statSetStrResult (NOK,*RecvTel, FSTGI);\r\n\treturn(NOK);\r\n\t}\r\n\r\n_statSetStrResult(err,*RecvTel,FOK);\r\n\r\n*RecvTel = midstr(*RecvTel, 1, -1);\r\n\r\nif (LocalIdent > 127)\r\n\t{\r\n\tif (*RecvTel[0] == 95)\r\n\t\tvwdgCut (RecvTel, 1, RecvTel);\r\n\telse\r\n\t\tvwdgCut (RecvTel, 4, RecvTel);\r\n\t}";}
    NodeCategory{"";}
    Info{"Dieser Baustein lie\xDFt einen Me\xDFwerteblock aus dem Steuerger\xE4t aus.\r\nDabei wird der KWP2000-Befehl readDataByLocalIdentifyer ( Blocktitel 0x21)\r\nmit dem Parameter \"LocalIdent\" verwendet.\r\n\r\nNach Lastenheft sind nur 127 MW-Bl\xF6cke definiert; daf\xFCr aber 8 Messwerte pro MW-Block.\r\nDa einige STG-Specs aber immer noch mit MW-Bl\xF6cken > 127 arbeiten, werden in diesem Baustein \r\ndie dem Lastenheft konformen Umrechnungen durchgef\xFChrt.\r\nD. h. \r\nMWB 1..127: 4 bis 8 Messwerte (wie der alte Baustein);\r\nbei MWB 128..255 werden MWB 1..127 angefragt und die ersten 4 MW herausgeschnitten.\r\nD. h.\r\nMWB 128..255 1 bis 4 Messwerte (nach STG Spec)\r\nAusnahme: bei Formel 95 (Langtext) im ersten Messwert wird nur dieser herausgeschnitten, da er laut \r\nSpec den Platz der ersten 4 Messwerte belegt.\r\n\r\nDie Bewertung des Pr\xFCfschrittes ist immer OK, wenn der STG-Befehl erfolgreich ausgef\xFChrt werden konnte.\r\n\r\nDie Antwort des STG wird ohne MW-Block-Nr in der Variablen \"RecvTel\" gespeichert.\r\n\r\nIn die Statistik wird die vollst\xE4ndige Antwort des STG gespeichert.\r\n\r\nsz, 21.10.2003";"";}
    Rights{"Write";"Read";}
    VersionInfo{
     CurVersion{1;8;"CP3";}
     Version{1;0;"AC";"- freigegeben -";"vw-admin";"27.02.2003 13:25:28";}
     Version{1;1;"MOS";"- in Arbeit -";"mosel-admin";"30.04.2003 10:52:23";}
     Version{1;2;"MOS";"- in Arbeit -";"mosel-admin";"30.04.2003 10:52:34";}
     Version{1;3;"MOS";"- in Arbeit -";"dsa-admin";"30.04.2003 13:13:07";}
     Version{1;4;"MOS";"- in Arbeit -";"mosel-admin";"04.08.2003 13:16:07";}
     Version{1;5;"MOS";"- in Arbeit -";"mosel-admin";"04.08.2003 15:04:55";}
     Version{1;6;"AC";"- in Arbeit -";"vw-admin";"21.10.2003 11:38:12";}
     Version{1;7;"CP3";"- in Arbeit -";"admin";"22.10.2003 00:55:48";}
     Version{1;8;"CP3";"- in Arbeit -";"admin";"22.10.2003 01:11:02";}}}}}
 FunctionDef{
  Name{"VW_spezifische_Bibliothek";}
  LangName{"VW_spezifische_Bibliothek";"VW_specific_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"Sammlung von Bausteinen zur Kommunikation mit Steuergeraeten von VW.";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;2;"ZPH18";}
   Version{1;0;"AC";"- freigegeben -";"vw-admin";"04.03.2003 11:56:19";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"07.08.2006 13:58:14";}
   Version{1;2;"ZPH18";"[ Baustein importiert (ersetzt) ]";"admin";"14.08.2007 15:07:01";}}
  FunctionDef{
   Name{"VW2000_Dienste";}
   LangName{"VW2000_Dienste";"VW2000_Dienste";}
   CvsVerHis{}
   Type{1;}
   Icon{0;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Sammlung von Bausteinen zur Kommunikation mit Steuerger\xE4ten von VW mit dem Protokoll K2000";"";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{1;3;"PAE";}
    Version{1;0;"AC";"- freigegeben -";"vw-admin";"17.02.2003 15:37:21";}
    Version{1;1;"AC";"- in Arbeit -";"vw-admin";"28.08.2003 17:40:34";}
    Version{1;2;"AC";"- in Arbeit -";"dsa-admin";"08.06.2004 08:55:47";}
    Version{1;3;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"25.07.2006 08:36:16";}}
   FunctionDef{
    Name{"VW2000_Dienste_22";}
    LangName{"VW2000_Dienste_22";"VW2000_Services_22";}
    CvsVerHis{}
    Type{1;}
    Icon{0;}
    Properties{"Begin";}
    FormalParam{}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"";}
    NodeCategory{"";}
    Info{"SG-Identifikation mit Service 0x22.\r\nDiese sollen in Zukunft die STG - ID 0x1A (0x9b, 0x9a, 0x91, 0x86, ...) abloesen.";"Moduls read the ECU Id by using the KWP2000-Comand ReadByIdentifier (Requesttitel 0x22) ";}
    Rights{"Write";"Read";}
    VersionInfo{
     CurVersion{1;0;"PAE";}
     Version{0;1;"PAE";"- in Arbeit -";"vw-admin";"30.05.2005 14:08:48";}
     Version{0;2;"PAE";"- in Arbeit -";"vw-admin";"31.05.2005 11:13:39";}
     Version{1;0;"PAE";" Freigabe ";"vw-admin";"03.06.2005 15:53:13";}}
    FunctionDef{
     Name{"VW2000_Read_Service_22_anyone_LID";}
     LangName{"VW2000_Lese_Dienst_22_eine_LID";"VW2000_Read_Service_22_anyone_LID";}
     CvsVerHis{}
     Type{1;}
     Icon{1;}
     Properties{"Begin";}
     FormalParam{
      InputParam{"Hndl";
       LangName{"Hndl";"Hndl";}"VCIKANAL";"VCIKanal1";
       LangDesc{"VCI-Kanal";"VCI channel";}}
      InputParam{"LID";
       LangName{"LID";"LID";}"VCISendTel";"";
       LangDesc{"local Identifier (Bin-String)";"";}}
      OutputParam{"ID_String";
       LangName{"ID_String";"ID_String";}"VW_Result_Tel";"DLID";
       LangDesc{"";"";}}}
     LocalVar{
      LocVarDef{"CKommentarFunktionNOK";
       LangName{"CKommentarFunktionNOK";"CKommentarFunktionNOK";}"Locvar";"TEXT";
       LangDesc{"";"";}
       LangText{"\"Funktion nicht unterstuetzt\"";"\"\xB9\xA6\xC4\xDC\xB2\xBB\xD6\xA7\xB3\xD6\"";"\"function not supported\"";}"Const";}}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     MSLCode{"string ServTel;\r\n\r\nvciExDtaRead (Hndl, &ServTel);\r\nif (0 > strstr (ServTel, \"\\x01\\x14\"))\t// Funktion unterstuetzt? \r\n{\r\n\t_vciStatVciError (Hndl);\r\n\t_statSetAsciiResult (ABBR,CKommentarFunktionNOK, FSTGI);\r\n\treturn(ABBR);\r\n}\r\nif (strlen(LID) != 2)\r\n{\r\n\t_statSetAsciiResult (ABBR,CKommentarFunktionNOK, FSTGI);\r\n\treturn(ABBR);\r\n}\r\nerr = _vciDataExchange (Hndl, 0x22, 0x62, LID, ID_String);\r\n\r\nif (err)\r\n{\r\n\t_vciStatVciError (Hndl);\r\n\terr = _statSetStrResult (NOK, *ID_String, FSTGI);\r\n}\r\nif (!err)\r\n{\r\n\t_statSetStrResult (err, *ID_String, FOK);\r\n\t*ID_String = midstr (*ID_String, 2, -1);\r\n}\r\n\r\n\r\n";}
     NodeCategory{"";}
     Info{"SG-Identifikation mit Service 0x22; \r\nmit Local Identifier (LID), der im Parameter LID uebergeben wird.:\r\nEs wird ueberprueft, ob die Diagnosefunktion unterstuetzt wird, dann wird der Service ausgefuehrt.\r\nDer Parameter ID_String liefert den Wert zurueck. Laenge n Byte (nach Spec.).\r\nDer Baustein liefert ein OK wenn die LID gelesen werden konnte.\r\n\r\n14.06.06, sz: erstellt";"Modul reads the ECU Id by using the KWP2000-Comand ReadByIdentifier (Requesttitel 0x22) \r\nthe RID will be given in the parameter LID.\r\nIt will be testet if the service is supported, than the service will be executed.\r\nThe parameter ID_String contains the ECU answer without the LID. Length n Byte (see spec.)\r\nThe evaluatin of the module will be OK if the reading of the RID was OK.\r\n\r\nsz, 31.05.05";}
     Rights{"Write";"Read";}
     VersionInfo{
      CurVersion{2;2;"nbmr";}
      Version{0;1;"PAE";"- in Arbeit -";"vw-admin";"25.05.2005 08:39:30";}
      Version{0;2;"PAE";"- in Arbeit -";"vw-admin";"25.05.2005 08:40:57";}
      Version{0;3;"PAE";"- in Arbeit -";"vw-admin";"25.05.2005 08:41:11";}
      Version{0;4;"PAE";"- in Arbeit -";"vw-admin";"25.05.2005 08:43:32";}
      Version{0;5;"PAE";"- in Arbeit -";"vw-admin";"30.05.2005 16:38:02";}
      Version{0;6;"PAE";"- in Arbeit -";"vw-admin";"31.05.2005 10:26:57";}
      Version{0;7;"PAE";"- in Arbeit -";"vw-admin";"02.06.2005 15:02:24";}
      Version{0;8;"PAE";"- in Arbeit -";"vw-admin";"03.06.2005 15:54:21";}
      Version{1;0;"PAE";" Freigabe ";"vw-admin";"03.06.2005 15:57:37";}
      Version{1;1;"AC";"- in Arbeit -";"dsa-admin";"14.12.2005 11:20:03";}
      Version{1;2;"AC";"- in Arbeit -";"dsa-admin";"01.02.2006 16:49:47";}
      Version{1;3;"AC";"- in Arbeit -";"dsa-admin";"12.06.2006 08:54:57";}
      Version{1;4;"AC";"- in Arbeit -";"dsa-admin";"14.06.2006 14:45:53";}
      Version{1;5;"AC";"- in Arbeit -";"dsa-admin";"14.06.2006 15:40:22";}
      Version{2;0;"AC";" - Updated to LH 2006 -";"dsa-admin";"14.06.2006 15:48:35";}
      Version{2;1;"CP3";"- in Arbeit -";"admin";"24.10.2007 11:28:16";}
      Version{2;2;"nbmr";"[ Baustein importiert (ersetzt) ]";"dsa";"14.05.2009 09:30:30";}}}}}}
 FunctionDef{
  Name{"VW_spezifische_Bibliothek";}
  LangName{"VW_spezifische_Bibliothek";"VW_specific_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"Sammlung von Bausteinen zur Kommunikation mit Steuergeraeten von VW.";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;2;"ZPH18";}
   Version{1;0;"AC";"- freigegeben -";"vw-admin";"04.03.2003 11:56:19";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"07.08.2006 13:58:14";}
   Version{1;2;"ZPH18";"[ Baustein importiert (ersetzt) ]";"admin";"14.08.2007 15:07:01";}}
  FunctionDef{
   Name{"VW2000_Dienste";}
   LangName{"VW2000_Dienste";"VW2000_Dienste";}
   CvsVerHis{}
   Type{1;}
   Icon{0;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Sammlung von Bausteinen zur Kommunikation mit Steuerger\xE4ten von VW mit dem Protokoll K2000";"";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{1;3;"PAE";}
    Version{1;0;"AC";"- freigegeben -";"vw-admin";"17.02.2003 15:37:21";}
    Version{1;1;"AC";"- in Arbeit -";"vw-admin";"28.08.2003 17:40:34";}
    Version{1;2;"AC";"- in Arbeit -";"dsa-admin";"08.06.2004 08:55:47";}
    Version{1;3;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"25.07.2006 08:36:16";}}
   FunctionDef{
    Name{"VW2000_Dienste_22";}
    LangName{"VW2000_Dienste_22";"VW2000_Services_22";}
    CvsVerHis{}
    Type{1;}
    Icon{0;}
    Properties{"Begin";}
    FormalParam{}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"";}
    NodeCategory{"";}
    Info{"SG-Identifikation mit Service 0x22.\r\nDiese sollen in Zukunft die STG - ID 0x1A (0x9b, 0x9a, 0x91, 0x86, ...) abloesen.";"Moduls read the ECU Id by using the KWP2000-Comand ReadByIdentifier (Requesttitel 0x22) ";}
    Rights{"Write";"Read";}
    VersionInfo{
     CurVersion{1;0;"PAE";}
     Version{0;1;"PAE";"- in Arbeit -";"vw-admin";"30.05.2005 14:08:48";}
     Version{0;2;"PAE";"- in Arbeit -";"vw-admin";"31.05.2005 11:13:39";}
     Version{1;0;"PAE";" Freigabe ";"vw-admin";"03.06.2005 15:53:13";}}
    FunctionDef{
     Name{"VW2000_ID_86_Lesen_kompatibel_LID";}
     LangName{"VW2000_ID_86_Lesen_kompatibel_LID";"VW2000_ID_86_read_kompatibel_LID";}
     CvsVerHis{}
     Type{1;}
     Icon{1;}
     Properties{"Begin";}
     FormalParam{
      InputParam{"Hndl";
       LangName{"Hndl";"Hndl";}"VCIKANAL";"VCIKanal1";
       LangDesc{"VCI-Kanal";"VCI channel";}}
      OutputParam{"ID_String";
       LangName{"ID_String";"ID_String";}"VW_Result_Tel";"VW_Stg_ID_86";
       LangDesc{"Steuerger\xE4te-Identifikation";"";}}}
     LocalVar{}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     MSLCode{"#pragma using VW2000_Read_Service_22_up_to_8_LIDs\r\n#pragma using VW2000_ID_86_Lesen // err = VW2000_ID_86_Lesen(err, Hndl, &ID_String);\r\n\r\nstring ServTel;\r\nstring\tECUHkzDate, ECUTestNo;\r\nstring\tFAZITIdent, ECUProdChgNo, ECUSerialNo, LID4Result, LID5Result, LID6Result, LID7Result, LID8Result;\r\n\r\n*ID_String = \"\";\r\nvciExDtaRead (Hndl, &ServTel);\r\nif (0 > strstr (ServTel, \"\\x01\\x14\"))\t// Funktion unterstuetzt? \r\n{\r\n\terr = VW2000_ID_86_Lesen(err, Hndl, ID_String);\r\n}\r\nelse\r\n{\r\n\terr = VW2000_Read_Service_22_up_to_8_LIDs(err, Hndl, \"\\hf17c\", 23, &FAZITIdent, \"\\hf17e\", 8, &ECUProdChgNo, \"\\hf18c\", 14, &ECUSerialNo, \"\", 0, &LID4Result, \"\", 0, &LID5Result, \"\", 0, &LID6Result, \"\", 0, &LID7Result, \"\", 0, &LID8Result, ID_String);\r\n\tif (!err)\r\n\t{\r\n\t\tECUHkzDate = midstr (FAZITIdent, 0, 15);\r\n\t\tECUTestNo = midstr (FAZITIdent, 15, 8);\r\n\t\t*ID_String = \"\\x86\" + \"\\x0f\" + ECUSerialNo + \"\\x20\" + ECUHkzDate + ECUProdChgNo + ECUTestNo + \"\\xff\";\r\n\t\t_statSetStrResult (err, *ID_String, FSTGI);\r\n#ifdef DEBUGSG\r\n\t\terrDebug(err, \"FAZITIdent: \",FAZITIdent, \"hex: \", hexstr (FAZITIdent));\r\n\t\terrDebug(err, \"ECUHkzDate: \",ECUHkzDate, \"hex: \", hexstr (ECUHkzDate));\r\n\t\terrDebug(err, \"ECUTestNo: \",ECUTestNo, \"hex: \", hexstr (ECUTestNo));\r\n\t\terrDebug(err, \"ECUProdChgNo: \",ECUProdChgNo, \"hex: \", hexstr (ECUProdChgNo));\r\n\t\terrDebug(err, \"ECUSerialNo: \",ECUSerialNo, \"hex: \", hexstr (ECUSerialNo));\r\n\t\terrDebug(err, \"ID_String 86: \",*ID_String, \"hex: \", hexstr (*ID_String));\r\n#endif\r\n\t}\r\n}\r\n";}
     NodeCategory{"";}
     Info{"Modul lie\xDFt die Steuerger\xE4te-Identifikation.\r\nDabei wird der KWP2000-Befehl ReadECUIdentification ( Blocktitel 0x1a)\r\nmit dem Parameter ECUidentification ( 0x86) verwendet.\r\nUnterstuetzt das STG den Befehl ReadByIdentifier (Blocktitel 0x22) werden die RIDs \r\n F17C, F17E, F18C, gelesen und die klassische ID zusammengebaut. Damit ist die Verwendung\r\nder bisherigen Bewertungsbausteine moeglich und ein fliessender Uebergang von 0x1A \r\nzu 0x22 moeglich.\r\n\r\nDie gelesene Identifikation wird immer vollstaendig in der Variablen ID-String abgespeichert.\r\n\r\nIn der Statistik wird der ID-String abgespeichert.\r\n\r\nDie Bewertung des Pr\xFCfschrittes ist immer OK, wenn das Lesen der ID vom Steuerger\xE4t erfolgreich war.\r\n\r\n14.06.06, sz: erstellt";"Modul reads the ECU Id.\r\nBy using the KWP2000-Comand ReadECUIdentification (Requesttitel 0x1a)\r\nwith parameter ECUidentification (0x86).\r\nIf the ECU supports the command ReadByIdentifier (Requesttitel 0x22) the RIDs \r\n F17C, F17E, F18C will be read and the classic id will be built.  For that the existing \r\nevaluations could be used and a change from 0x1A to 0x22 is possible.\r\n\r\nThe id will be stored in the parameter ID-String.\r\n\r\nAlso in the statistiks will the id be stored.\r\n\r\nThe evaluatin of the module will be OK if the reading of the id was OK.\r\n\r\nsz, 31.05.05\r\n";}
     Rights{"Write";"Read";}
     VersionInfo{
      CurVersion{2;0;"AC";}
      Version{0;1;"PAE";"- in Arbeit -";"vw-admin";"25.05.2005 15:43:33";}
      Version{0;2;"PAE";"- in Arbeit -";"vw-admin";"30.05.2005 16:50:32";}
      Version{0;3;"PAE";"- in Arbeit -";"vw-admin";"31.05.2005 10:09:17";}
      Version{0;4;"PAE";"- in Arbeit -";"vw-admin";"02.06.2005 14:54:46";}
      Version{0;5;"PAE";"- in Arbeit -";"vw-admin";"03.06.2005 09:25:30";}
      Version{0;6;"PAE";"- in Arbeit -";"vw-admin";"03.06.2005 09:28:19";}
      Version{0;7;"PAE";"- in Arbeit -";"vw-admin";"03.06.2005 13:36:29";}
      Version{1;0;"PAE";" Freigabe ";"vw-admin";"03.06.2005 15:53:30";}
      Version{1;1;"PAE";"- in Arbeit -";"vw-admin";"03.06.2005 15:54:12";}
      Version{1;2;"AC";"- in Arbeit -";"dsa-admin";"08.06.2006 16:18:32";}
      Version{1;3;"AC";"- in Arbeit -";"dsa-admin";"08.06.2006 16:26:38";}
      Version{1;4;"AC";"- in Arbeit -";"dsa-admin";"09.06.2006 16:29:14";}
      Version{1;5;"AC";"- in Arbeit -";"dsa-admin";"14.06.2006 11:29:59";}
      Version{1;6;"AC";"- in Arbeit -";"dsa-admin";"14.06.2006 15:39:53";}
      Version{2;0;"AC";" - Updated to LH 2006 -";"dsa-admin";"14.06.2006 15:48:22";}}}}}}
 FunctionDef{
  Name{"VW_spezifische_Bibliothek";}
  LangName{"VW_spezifische_Bibliothek";"VW_specific_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"Sammlung von Bausteinen zur Kommunikation mit Steuergeraeten von VW.";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;2;"ZPH18";}
   Version{1;0;"AC";"- freigegeben -";"vw-admin";"04.03.2003 11:56:19";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"07.08.2006 13:58:14";}
   Version{1;2;"ZPH18";"[ Baustein importiert (ersetzt) ]";"admin";"14.08.2007 15:07:01";}}
  FunctionDef{
   Name{"VW2000_Dienste";}
   LangName{"VW2000_Dienste";"VW2000_Dienste";}
   CvsVerHis{}
   Type{1;}
   Icon{0;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Sammlung von Bausteinen zur Kommunikation mit Steuerger\xE4ten von VW mit dem Protokoll K2000";"";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{1;3;"PAE";}
    Version{1;0;"AC";"- freigegeben -";"vw-admin";"17.02.2003 15:37:21";}
    Version{1;1;"AC";"- in Arbeit -";"vw-admin";"28.08.2003 17:40:34";}
    Version{1;2;"AC";"- in Arbeit -";"dsa-admin";"08.06.2004 08:55:47";}
    Version{1;3;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"25.07.2006 08:36:16";}}
   FunctionDef{
    Name{"VW2000_Dienste_22";}
    LangName{"VW2000_Dienste_22";"VW2000_Services_22";}
    CvsVerHis{}
    Type{1;}
    Icon{0;}
    Properties{"Begin";}
    FormalParam{}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"";}
    NodeCategory{"";}
    Info{"SG-Identifikation mit Service 0x22.\r\nDiese sollen in Zukunft die STG - ID 0x1A (0x9b, 0x9a, 0x91, 0x86, ...) abloesen.";"Moduls read the ECU Id by using the KWP2000-Comand ReadByIdentifier (Requesttitel 0x22) ";}
    Rights{"Write";"Read";}
    VersionInfo{
     CurVersion{1;0;"PAE";}
     Version{0;1;"PAE";"- in Arbeit -";"vw-admin";"30.05.2005 14:08:48";}
     Version{0;2;"PAE";"- in Arbeit -";"vw-admin";"31.05.2005 11:13:39";}
     Version{1;0;"PAE";" Freigabe ";"vw-admin";"03.06.2005 15:53:13";}}
    FunctionDef{
     Name{"VW2000_Read_Service_22_up_to_8_LIDs";}
     LangName{"VW2000_Lese_Dienst_22_bis_zu_8_LIDs";"VW2000_Read_Service_22_up_to_8_LIDs";}
     CvsVerHis{}
     Type{1;}
     Icon{1;}
     Properties{"Begin";}
     FormalParam{
      InputParam{"Hndl";
       LangName{"Hndl";"Hndl";}"VCIKANAL";"VCIKanal1";
       LangDesc{"VCI-Kanal";"VCI channel";}}
      InputParam{"LID1";
       LangName{"LID1";"LID1";}"VCISendTel";"CVciSTelNull";
       LangDesc{"local Identifier (Bin-String)";"";}}
      InputParam{"LID1Len";
       LangName{"LID1Len";"LID1Len";}"INT";"CInt0";
       LangDesc{"Laenge der Antwort";"";}}
      OutputParam{"LID1Result";
       LangName{"LID1Result";"LID1Result";}"VCIResult";"DLID1Result";
       LangDesc{"LID Antwort";"";}}
      InputParam{"LID2";
       LangName{"LID2";"LID2";}"VCISendTel";"CVciSTelNull";
       LangDesc{"local Identifier (Bin-String)";"";}}
      InputParam{"LID2Len";
       LangName{"LID2Len";"LID2Len";}"INT";"CInt0";
       LangDesc{"Laenge der Antwort";"";}}
      OutputParam{"LID2Result";
       LangName{"LID2Result";"LID2Result";}"VCIResult";"DLIDResult2";
       LangDesc{"LID Antwort";"";}}
      InputParam{"LID3";
       LangName{"LID3";"LID3";}"VCISendTel";"CVciSTelNull";
       LangDesc{"local Identifier (Bin-String)";"";}}
      InputParam{"LID3Len";
       LangName{"LID3Len";"LID3Len";}"INT";"CInt0";
       LangDesc{"Laenge der Antwort";"";}}
      OutputParam{"LID3Result";
       LangName{"LID3Result";"LID3Result";}"VCIResult";"DLID3Result";
       LangDesc{"LID Antwort";"";}}
      InputParam{"LID4";
       LangName{"LID4";"LID4";}"VCISendTel";"CVciSTelNull";
       LangDesc{"local Identifier (Bin-String)";"";}}
      InputParam{"LID4Len";
       LangName{"LID4Len";"LID4Len";}"INT";"CInt0";
       LangDesc{"Laenge der Antwort";"";}}
      OutputParam{"LID4Result";
       LangName{"LID4Result";"LID4Result";}"VCIResult";"DLID4Result";
       LangDesc{"LID Antwort";"";}}
      InputParam{"LID5";
       LangName{"LID5";"LID5";}"VCISendTel";"CVciSTelNull";
       LangDesc{"local Identifier (Bin-String)";"";}}
      InputParam{"LID5Len";
       LangName{"LID5Len";"LID5Len";}"INT";"CInt0";
       LangDesc{"Laenge der Antwort";"";}}
      OutputParam{"LID5Result";
       LangName{"LID5Result";"LID5Result";}"VCIResult";"DLID5Result";
       LangDesc{"LID Antwort";"";}}
      InputParam{"LID6";
       LangName{"LID6";"LID6";}"VCISendTel";"CVciSTelNull";
       LangDesc{"local Identifier (Bin-String)";"";}}
      InputParam{"LID6Len";
       LangName{"LID6Len";"LID6Len";}"INT";"CInt0";
       LangDesc{"Laenge der Antwort";"";}}
      OutputParam{"LID6Result";
       LangName{"LID6Result";"LID6Result";}"VCIResult";"DLID6Result";
       LangDesc{"LID Antwort";"";}}
      InputParam{"LID7";
       LangName{"LID7";"LID7";}"VCISendTel";"CVciSTelNull";
       LangDesc{"local Identifier (Bin-String)";"";}}
      InputParam{"LID7Len";
       LangName{"LID7Len";"LID7Len";}"INT";"CInt0";
       LangDesc{"Laenge der Antwort";"";}}
      OutputParam{"LID7Result";
       LangName{"LID7Result";"LID7Result";}"VCIResult";"DLID7Result";
       LangDesc{"LID Antwort";"";}}
      InputParam{"LID8";
       LangName{"LID8";"LID8";}"VCISendTel";"CVciSTelNull";
       LangDesc{"local Identifier (Bin-String)";"";}}
      InputParam{"LID8Len";
       LangName{"LID8Len";"LID8Len";}"INT";"CInt0";
       LangDesc{"Laenge der Antwort";"";}}
      OutputParam{"LID8Result";
       LangName{"LID8Result";"LID8Result";}"VCIResult";"DLID8Result";
       LangDesc{"LID Antwort";"";}}
      OutputParam{"ID_String";
       LangName{"ID_String";"ID_String";}"VW_Result_Tel";"DLID";
       LangDesc{"";"";}}}
     LocalVar{
      LocVarDef{"CKommentarFunktionNOK";
       LangName{"CKommentarFunktionNOK";"CKommentarFunktionNOK";}"Locvar";"TEXT";
       LangDesc{"";"";}
       LangText{"\"Funktion nicht unterstuetzt\"";"\"\xB9\xA6\xC4\xDC\xB2\xBB\xD6\xA7\xB3\xD6\"";"\"function not supported\"";}"Const";}}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     MSLCode{"string ServTel;\r\nstring TmpStr;\r\nvciExDtaRead (Hndl, &ServTel);\r\nif (0 > strstr (ServTel, \"\\x01\\x14\"))\t// Funktion unterstuetzt? \r\n{\r\n\t_vciStatVciError (Hndl);\r\n\t_statSetAsciiResult (ABBR,CKommentarFunktionNOK, FSTGI);\r\n\treturn(ABBR);\r\n}\r\n\r\n\r\nerr = _vciDataExchange (Hndl, 0x22, 0x62, LID1+LID2+LID3+LID4+LID5+LID6+LID7+LID8, ID_String);\r\n\r\nif (err)\r\n{\r\n\t_vciStatVciError (Hndl);\r\n\terr = NOK;\r\n}\r\nelse\r\n{\r\n        TmpStr = *ID_String;\r\n\tif ((strlen (LID1) > 0)\t&& (LID1Len > 0))\r\n\t\tif (strstr (*ID_String, LID1) == 0)\r\n\t\t{\r\n\t\t\t*LID1Result = midstr (*ID_String, strlen (LID1), LID1Len);\r\n\t\t\t*ID_String = midstr (*ID_String, LID1Len + strlen (LID1), -1);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\terr = NOK;\r\n\t\t\t*LID1Result = \"\";\r\n\t\t}\r\n\tif ((strlen (LID2) > 0)\t&& (LID2Len > 0))\r\n\t\tif (strstr (*ID_String, LID2) == 0)\r\n\t\t{\r\n\t\t\t*LID2Result = midstr (*ID_String, strlen (LID2), LID2Len);\r\n\t\t\t*ID_String = midstr (*ID_String, LID2Len + strlen (LID2), -1);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\terr = NOK;\r\n\t\t\t*LID2Result = \"\";\r\n\t\t}\r\n\tif ((strlen (LID3) > 0)\t&& (LID3Len > 0))\r\n\t\tif (strstr (*ID_String, LID3) == 0)\r\n\t\t{\r\n\t\t\t*LID3Result = midstr (*ID_String, strlen (LID3), LID3Len);\r\n\t\t\t*ID_String = midstr (*ID_String, LID3Len + strlen (LID3), -1);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\terr = NOK;\r\n\t\t\t*LID3Result = \"\";\r\n\t\t}\r\n\tif ((strlen (LID4) > 0)\t&& (LID4Len > 0))\r\n\t\tif (strstr (*ID_String, LID4) == 0)\r\n\t\t{\r\n\t\t\t*LID4Result = midstr (*ID_String, strlen (LID4), LID4Len);\r\n\t\t\t*ID_String = midstr (*ID_String, LID4Len + strlen (LID4), -1);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\terr = NOK;\r\n\t\t\t*LID4Result = \"\";\r\n\t\t}\r\n\tif ((strlen (LID5) > 0)\t&& (LID5Len > 0))\r\n\t\tif (strstr (*ID_String, LID5) == 0)\r\n\t\t{\r\n\t\t\t*LID5Result = midstr (*ID_String, strlen (LID5), LID5Len);\r\n\t\t\t*ID_String = midstr (*ID_String, LID5Len + strlen (LID5), -1);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\terr = NOK;\r\n\t\t\t*LID5Result = \"\";\r\n\t\t}\r\n\tif ((strlen (LID6) > 0)\t&& (LID6Len > 0))\r\n\t\tif (strstr (*ID_String, LID6) == 0)\r\n\t\t{\r\n\t\t\t*LID6Result = midstr (*ID_String, strlen (LID6), LID6Len);\r\n\t\t\t*ID_String = midstr (*ID_String, LID6Len + strlen (LID6), -1);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\terr = NOK;\r\n\t\t\t*LID6Result = \"\";\r\n\t\t}\r\n\tif ((strlen (LID7) > 0)\t&& (LID7Len > 0))\r\n\t\tif (strstr (*ID_String, LID7) == 0)\r\n\t\t{\r\n\t\t\t*LID7Result = midstr (*ID_String, strlen (LID7), LID7Len);\r\n\t\t\t*ID_String = midstr (*ID_String, LID7Len + strlen (LID7), -1);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\terr = NOK;\r\n\t\t\t*LID7Result = \"\";\r\n\t\t}\r\n\tif ((strlen (LID8) > 0)\t&& (LID8Len > 0))\r\n\t\tif (strstr (*ID_String, LID8) == 0)\r\n\t\t{\r\n\t\t\t*LID8Result = midstr (*ID_String, strlen (LID8), LID8Len);\r\n\t\t\t*ID_String = midstr (*ID_String, LID8Len + strlen (LID8), -1);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\terr = NOK;\r\n\t\t\t*LID8Result = \"\";\r\n\t\t}\r\n}\r\n_statSetStrResult (err, TmpStr, FSTGI);\r\n\r\n\r\n";}
     NodeCategory{"";}
     Info{"SG-Identifikation mit Service 0x22; \r\nmit Local Identifier (LID), der im Parameter LID uebergeben wird.\r\nEs koennen max. 8 LIDs gleichzeitig angefragt werden (LID1, LID2, ..., LID8)\r\nEs wird ueberprueft, ob die Diagnosefunktion unterstuetzt wird, dann wird der Service ausgefuehrt.\r\nDer Parameter LID1_Result, LID2_Reslt, ..., LID8_Result liefert die Werte zurueck. \r\nEs muessen die Laenge in Bytes angegeben werden, damit eine korrekte zuordnung der LIDs zu \r\nden Daten erfolgen kann. (nach Spec.).\r\nDer Baustein liefert ein OK wenn alle LIDs gelesen und zugeordnet werden konnten.\r\n\r\n14.06.06, sz: erstellt";"Modul reads the ECU Id by using the KWP2000-Comand ReadByIdentifier (Requesttitel 0x22) \r\nthe RID will be given in the parameter LID.\r\n8 LIDs could be asked for in one request (LID1, LID2, ..., LID8).\r\nIt will be testet if the service is supported, than the service will be executed.\r\nThe parameter LID1_Result, LID2_Reslt, ..., LID8_Result contain the ECU answer without the LID. \r\nIn the parameters LID1Len, LID2Len, ..., LID8Len  the length of the LIDs have to be specified for \r\nthe correct correspondence to the LIDs\r\nThe evaluatin of the module will be OK if the reading of all RIDs were OK.\r\n\r\nsz, 31.05.05";}
     Rights{"Write";"Read";}
     VersionInfo{
      CurVersion{2;0;"AC";}
      Version{0;1;"PAE";"- in Arbeit -";"vw-admin";"25.05.2005 09:17:55";}
      Version{0;2;"PAE";"- in Arbeit -";"vw-admin";"25.05.2005 09:26:08";}
      Version{0;3;"PAE";"- in Arbeit -";"vw-admin";"25.05.2005 10:52:09";}
      Version{0;4;"PAE";"- in Arbeit -";"vw-admin";"25.05.2005 10:52:55";}
      Version{0;5;"PAE";"- in Arbeit -";"vw-admin";"25.05.2005 12:01:33";}
      Version{0;6;"PAE";"- in Arbeit -";"vw-admin";"30.05.2005 16:41:25";}
      Version{0;7;"PAE";"- in Arbeit -";"vw-admin";"31.05.2005 10:33:43";}
      Version{0;8;"PAE";"- in Arbeit -";"vw-admin";"02.06.2005 15:02:30";}
      Version{0;9;"PAE";"- in Arbeit -";"vw-admin";"03.06.2005 09:46:55";}
      Version{0;10;"PAE";"- in Arbeit -";"vw-admin";"03.06.2005 15:54:27";}
      Version{1;0;"PAE";" Freigabe ";"vw-admin";"03.06.2005 15:57:44";}
      Version{1;1;"AC";"- in Arbeit -";"dsa-admin";"14.06.2006 13:47:25";}
      Version{1;2;"AC";"- in Arbeit -";"dsa-admin";"14.06.2006 14:46:19";}
      Version{1;3;"AC";"- in Arbeit -";"dsa-admin";"14.06.2006 15:40:25";}
      Version{2;0;"AC";" - Updated to LH 2006 -";"dsa-admin";"14.06.2006 15:48:40";}}}}}}}
Sequence{
 FunctionDef{
  Name{"SeqRoot";}
  LangName{"sk316_gateway_test_Main";"sk316_gateway_test_Main";}
  Type{3;}
  Icon{5;}
  Properties{}
  ActualParam{}
  Condition{"ever";"ok";"";}
  Evaluation{"no";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  NodeCategory{"";}
  Info{"sequence root for task sk316_gateway_test";"sequence root for task sk316_gateway_test";}
  Rights{"Write";"Read";}
  VersionInfo{}
  Class{"sk316_gateway_test_LibMain";}
  FunctionDef{
   Name{"Neu.9691";}
   LangName{"Infofeld.9691";"Infofield.9691";}
   Type{2;}
   Icon{0;}
   Properties{}
   ActualParam{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   NodeCategory{"";}
   Info{"Import-Ablage\r\n";"";}
   Rights{"Write";"Read";}
   VersionInfo{}
   Class{"Neu";}}
  FunctionDef{
   Name{"PBL_Test_Gateway_STG.9692";}
   LangName{"PBL_Test_Gateway_STG.9692";"TBL_Test_Gateway_ECU.9692";}
   Type{2;}
   Icon{0;}
   Properties{}
   ActualParam{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"testblock";"119";"45";"";"CPblText_Gateway_test";"";"ON";"ON";"";}
   NodeCategory{"";}
   Info{"";"";}
   Rights{"Write";"Read";}
   VersionInfo{}
   Class{"Neu";}
   FunctionDef{
    Name{"Dialogs_inits.9693";}
    LangName{"Dialogs_inits.9693";"General_inits.9693";}
    Type{2;}
    Icon{0;}
    Properties{}
    ActualParam{}
    Condition{"ever";"progcond";"AUTOPRF == 0";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    NodeCategory{"";}
    Info{"";"";}
    Rights{"Write";"Read";}
    VersionInfo{}
    Class{"Neu";}
    FunctionDef{
     Name{"IntAssign.9694";}
     LangName{"IntAssign.9694";"IntAssign.9694";}
     Type{2;}
     Icon{0;}
     Properties{}
     ActualParam{"DLevel_0";"Symbol";"ConstVar22415";"Const";}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     NodeCategory{"";}
     Info{"Baustein zum Setzen einer Integer Variable.";"";}
     Rights{"Write";"Read";}
     VersionInfo{}
     Class{"IntAssign";}}
    FunctionDef{
     Name{"ZeitLesen.9695";}
     LangName{"ZeitLesen.9695";"Read_Time.9695";}
     Type{2;}
     Icon{0;}
     Properties{}
     ActualParam{"DTimeF";"Symbol";}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     NodeCategory{"";}
     Info{"";"Element to read the time. \r\n\r\nThe actual time will be returned as Float.";}
     Rights{"Write";"Read";}
     VersionInfo{}
     Class{"ZeitLesen";}}
    FunctionDef{
     Name{"DlgInit.9696";}
     LangName{"DlgInit.9696";"DlgInit.9696";}
     Type{2;}
     Icon{2;}
     Properties{}
     ActualParam{"DIALOG_LOKAL";"Symbol";}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     NodeCategory{"";}
     Info{"Baustein zur Initialisierung der Benutzerschnittstelle";"";}
     Rights{"Write";"Read";}
     VersionInfo{}
     Class{"DlgInit";}}
    FunctionDef{
     Name{"DlgMultiInit.9697";}
     LangName{"DlgMultiInit.9697";"DlgMultiInit.9697";}
     Type{2;}
     Icon{2;}
     Properties{}
     ActualParam{"DIALOG_LOKAL";"Symbol";"CTextCodierungGateway";"Symbol";"CDialogS_NON";"Symbol";}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     NodeCategory{"";}
     Info{"Bausteinen zur Initialisierung der Anzeigeeinheit.";"";}
     Rights{"Write";"Read";}
     VersionInfo{}
     Class{"DlgMultiInit";}}}
   FunctionDef{
    Name{"Test_PBL_Motor.9698";}
    LangName{"Test_PBL_Gateway.9698";"ECU_Handling.9698";}
    Type{2;}
    Icon{0;}
    Properties{}
    ActualParam{}
    Condition{"LAS";"LAS_Codefile_ZV";"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    NodeCategory{"";}
    Info{"";"";}
    Rights{"Write";"Read";}
    VersionInfo{}
    Class{"Neu";}
    FunctionDef{
     Name{"StatSetAsciiResult.9699";}
     LangName{"StatSetAsciiResult.9699";"StatSetAsciiResult.9699";}
     Type{2;}
     Icon{1;}
     Properties{}
     ActualParam{"NOK";"Symbol";"CText_TestBlockIncomplete";"Symbol";}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"resultblock";"461";"";"CText_TestBlockComplete";"\"\"";"\"\"";"";0;"";"";"\"\"";"SN";"";}
     NodeCategory{"";}
     Info{"Baustein zum Schreiben von OK oder NOK in die Statistik. (S)";"";}
     Rights{"Write";"Read";}
     VersionInfo{}
     Class{"StatSetAsciiResult";}}
    FunctionDef{
     Name{"Neu.9700";}
     LangName{"Codefile_AuswertenGateway.9700";"Codefile_selection.9700";}
     Type{2;}
     Icon{0;}
     Properties{}
     ActualParam{}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     NodeCategory{"";}
     Info{"Import-Ablage\r\n";"";}
     Rights{"Write";"Read";}
     VersionInfo{}
     Class{"Neu";}
     FunctionDef{
      Name{"IWertVergleich.9701";}
      LangName{"Auswahl_erfolgt_Gateway.9701";"Selection_done.9701";}
      Type{2;}
      Icon{1;}
      Properties{}
      ActualParam{"Gateway_Status";"Symbol";"ConstVar22417";"Const";}
      Condition{"ever";"ok";"";}
      Evaluation{"direct";"never";
       ActionCond{"";}}
      Extra{"teststep";}
      NodeCategory{"";}
      Info{"Baustein zum Vergleich von zwei ganzen Zahlen auf Gleichheit. (S)";"Element to compare, whether value1 is equal to value2 or not";}
      Rights{"Write";"Read";}
      VersionInfo{}
      Class{"IWertVergleich";}}
     FunctionDef{
      Name{"VW_Codefile_STG.9702";}
      LangName{"VW_Codefile_STG.9702";"VW_Codefile_ECU.9702";}
      Type{2;}
      Icon{0;}
      Properties{}
      ActualParam{"DIALOG_LOKAL";"Symbol";"CDialogZeile1";"Symbol";"CTextCodefile_Gateway";"Symbol";"Gateway";"Symbol";"Gateway_ID_Result";"Symbol";"Dummy_ID_2_Result";"Symbol";"Dummy_ID_3_Result";"Symbol";"Dummy_ID_4_Result";"Symbol";"Dummy_ID_5_Result";"Symbol";"Dummy_ID_6_Result";"Symbol";"Dummy_ID_7_Result";"Symbol";"Gateway_Codierung_Result";"Symbol";"Gateway_LongCode_Result";"Symbol";"Gateway_Codier_Art";"Symbol";"Dummy_Login_1";"Symbol";"Dummy_Login_2";"Symbol";"Dummy_Anzahl_Stg";"Symbol";"Gateway_Anpassung_String";"Symbol";"Gateway_Prog_String";"Symbol";"Gateway_ProgL_String";"Symbol";"Gateway_Status";"Symbol";"Gateway_Result";"Symbol";"Gateway_Auswahl";"Symbol";"GatewayContainer_Name";"Symbol";"GatewayContainer_Version";"Symbol";"Gateway_ID_Exp";"Symbol";"Dummy_HWBgp";"Symbol";"Dummy_SWBgp";"Symbol";"Dummy_Rohteilenummer";"Symbol";}
      Condition{"when";"ok";"";}
      Evaluation{"direct";"never";
       ActionCond{"";}}
      Extra{"teststep";}
      NodeCategory{"";}
      Info{"Dieser Baustein wertet das Codfile mit der entsprechenden STG_Nr (XX) aus.\r\n\r\nDabei werden die Files \"codefXX\",\"lXXtab\" und \"codverXX\" auf dem Pr\xFCfplatz im Directory \"skript\" ben\xF6tigt\".\r\nDiese Files werden auf ihre Richtigkeit und Zugeh\xF6hrigkeit \xFCberpr\xFCft. Sind die CRC-Pr\xFCfsummen i.O. und\r\nbesitzen alle drei Files die gleiche Versionsnummer, wird der entsprechende Satz durch \xDCberpr\xFCfung der\r\nLAS aus dem File \"lXXtab\" an Hand des Fahrzeugdatensatzes gesucht. Ist ein Satz g\xFCltig,\r\nwerden die fahrzeugabh\xE4nigen Daten aus dem File \"codefXX\" und die Freigabeversion dieses Satzes\r\naus dem File \"codverXX\" geladen.\r\n\r\nDie Bewertung dieses Bausteines OK, wenn alle oben genannten Bedingungen erf\xFCllt sind und damit ein f\xFCr diese\r\nFahrzeugausstattung passender Satz gefunden wurde. In allen anderen F\xE4llen ist die Bewertung NOK.\r\n\r\nIst die Bewertung OK, werden die gefundenen Daten unformatiert in der Variablen \"Result\" zur Verf\xFCgung\r\ngestellt. Anschlie\xDFend werden die Daten aufbereitet, in der Variablen \"ID-Result\" die Teilenummer(n) und der \r\nIndex des erwarteten Steuerger\xE4tes 12stellig und in der Variablen \"Codierung_Result\" die\r\nCodierung f\xFCr dieses Fahrzeug gespeichert. Die Codierung kann entweder in der Freigabetabelle, in einem\r\n XML-Container, oder in einem XML Container, der einen \"Codierwortgenerator\" ben\xF6tigt, enthalten sein. In \r\n\"Prog_String\" werden die zu programierenden Daten bereitgestellt (wenn vorhanden).\r\nDiese k\xF6nnen dann an das Element \"CodefileProgramm_Dummy\" \xFCbergeben werden\r\n\r\nDie Variable \"Auswahl_Ergebnis\" enth\xE4lt im NOK-Fall die Fehlermeldung im Klartext und im OK-Fall\r\ndie Versionsnummer der Freigabetabelle, die gefundene Satznummer und den entsprechende LAS.\r\nDiese Information wird auch in die Statistik geschrieben.\r\n\r\nDie Variable \"Result_Status\" kann f\xFCr Ablaufsteuerungen verwendet werden. Sobald der Baustein seine\r\nAnalyse beginnt wird sie auf -1 gesetzt. Ist die Analyse beendet sigalisiert eine 0 die G\xFCltigkeit der Daten.\r\nEine 1 zeigt, da?w\xE4hrend der Analyse ein Fehler aufgetreten ist, oder das f\xFCr diese Fahrzeug keine\r\nDaten gefunden werden konnten.\r\nWerden Codefile-Informationen an verschiedenen Stellen des Ablaufes oder in verschiedenen Sequenzen\r\nben\xF6tigt, so kann man \xFCber die Variable \"Result_Status\" abfragen, ob die Codefile-Auswahl schon einmal\r\nerfolgt und g\xFCltig ist. So kann man wiederholte Codefile-Auswahl vermeiden. Auch ist eine Parallelisierung \r\naller Codefile-Auswertungen in einer Hintergrund-Task m\xF6glich. Voraussetzung f\xFCr die Verwendung an\r\nmehreren Stellen oder die Parallelisierung ist eine Initialisierung dieser Variablen auf -2 nach Anforderung \r\neines Fahrzeugdatensatzes.\r\nDie Syncronisatzion der Abl\xE4ufe kann hierbei mit \"Codefile_Warten\" oder Codefile_Warten_Statistik\" erfolgen.\r\n\r\nsz, 29.08.02\r\n";"";}
      Rights{"Write";"Read";}
      VersionInfo{}
      Class{"VW_Codefile_STG";}}
     FunctionDef{
      Name{"Codefile_Warten_Statistik.9703";}
      LangName{"Codefile_Warten_Statistik.9703";"Codefile_Wait_Statistic.9703";}
      Type{2;}
      Icon{0;}
      Properties{}
      ActualParam{"DIALOG_LOKAL";"Symbol";"CDialogZeile1";"Symbol";"CTextCodefile_Gateway";"Symbol";"Gateway_Status";"Symbol";"Gateway_Auswahl";"Symbol";"CTime30";"Symbol";}
      Condition{"ever";"ok";"";}
      Evaluation{"direct";"never";
       ActionCond{"";}}
      Extra{"resultblock";"2426";"";"CStatTxtCodefileGateway_24412";"\"\"";"\"\"";"";0;"";"";"\"\"";"\"SN\"";"";}
      NodeCategory{"";}
      Info{"Platzhalter f\xFCr Pr\xFCfschritte";"";}
      Rights{"Write";"Read";}
      VersionInfo{}
      Class{"Codefile_Warten_Statistik";}}}
    FunctionDef{
     Name{"ZDC_202_Processing.9704";}
     LangName{"ZDC_202_Processing.9704";"ZDC_202_Processing.9704";}
     Type{2;}
     Icon{0;}
     Properties{}
     ActualParam{}
     Condition{"when";"progcond";"  GatewayContainer_Version==\"0202\"\r\n||GatewayContainer_Version==\"0203\"\r\n||GatewayContainer_Version==\"0204\"\r\n||GatewayContainer_Version==\"020401\"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     NodeCategory{"";}
     Info{"Struckturbaustein";"Structure element";}
     Rights{"Write";"Read";}
     VersionInfo{}
     Class{"Neu";}
     FunctionDef{
      Name{"ZdcOpen.9705";}
      LangName{"ZdcOpen.9705";"ZdcOpen.9705";}
      Type{2;}
      Icon{0;}
      Properties{}
      ActualParam{"DZdcHndl";"Symbol";"GatewayContainer_Name";"Symbol";"GatewayContainer_Version";"Symbol";"CLevel3";"Symbol";}
      Condition{"ever";"ok";"";}
      Evaluation{"direct";"never";
       ActionCond{"";}}
      Extra{"teststep";}
      NodeCategory{"";}
      Info{"Baustein \xF6ffnet einen Zieldaten-Container (ZDC) in der Version 2.02.\r\n\r\nNach erfolgreichem Aufruf wird das \xFCbergebene Handle mit einem g\xFCltigen Wert (Wert >= 0) gesetzt.\r\nAndernfalls wird der Parameter \"ZdcHndl\" auf -1 gesetzt.\r\n\r\nDer Baustein steht in engem Zusammenhang mit dem Baustein \"VW_Codefile_STG_9_2_0\", der die\r\nEingangsparameter \"XmlContainer\" und \"XmlVersion\" f\xFCr diesem Baustein liefert.\r\n";"";}
      Rights{"Write";"Read";}
      VersionInfo{}
      Class{"ZdcOpen";}}
     FunctionDef{
      Name{"ZdcCodierung.9706";}
      LangName{"ZdcCodierung.9706";"ZdcCoding.9706";}
      Type{2;}
      Icon{0;}
      Properties{}
      ActualParam{"DIALOG_LOKAL";"Symbol";"CDialog_Keine_Anzeige";"Symbol";"CTextCodefileAuswahl";"Symbol";"DZdcHndl";"Symbol";"CZDCModusAll";"Symbol";"Gateway_Codierung_Result";"Symbol";"Gateway_LongCode_Result";"Symbol";"Gateway_Codier_Art";"Symbol";}
      Condition{"ever";"ok";"";}
      Evaluation{"direct";"never";
       ActionCond{"";}}
      Extra{"resultblock";"2485";"";"CStat_ZDC_Codierung_vw_2000";"\"\"";"\"\"";"";0;"";"";"\"\"";"SN";"";}
      NodeCategory{"";}
      Info{"Dieser Baustein berechnet das Codierwort nach dem Zieldatencontainer (ZDC) V 2.02. (S)\r\n\r\nAls Parameter muss das \"ZdcHndl\" \xFCbergeben werden, dass mit dem Baustein \"ZdcOpen\" erzeugt wurde.\r\n\r\nDer Parameter \"Modusteil\" kann zur Filterung der Daten innerhalb des Containers verwendet werden. \r\nMit Modusteil gleich \"\" werden alle Tabellen mit dem Modus \"C\" im ZDC ausgewertet.\r\n\r\nIm Parameter \"Codierung_Art\" wird der Ergebnistyp zur\xFCck gemeldet:\r\n0: kurze Codierung (bis zu 31 Bit)\r\n1: lange Codierung (bis zu 250 Byte)\r\n-1: Codierung ung\xFCltig\r\n\r\nBei kurzer Codierung (Codierung_Art = 0) wird die Variable \"Codierung_Result\" mit dem Wert des Codierwortes gef\xFCllt.\r\nBei langer Codierung (Codierung_Art = 1) wird die Variable \"LangCode_Result\" mit der Codierung gef\xFCllt.\r\n\r\nDer Baustein berechnet nur die Codierung. Das Schreiben der Codierung erfolgt nicht durch diesen Baustein!\r\n\r\nDie Codierung des Stuerger\xE4ts kann \xFCber die Bausteine:\r\n- VW2000_Codieren\r\n- VW2000_Codieren_Lang\r\n- ...\r\nerfolgen.";"";}
      Rights{"Write";"Read";}
      VersionInfo{}
      Class{"ZdcCodierung";}}
     FunctionDef{
      Name{"Zdc203Anpassung.9707";}
      LangName{"Zdc203Anpassung.9707";"Zdc203Anpassung.9707";}
      Type{2;}
      Icon{0;}
      Properties{}
      ActualParam{"DIALOG_LOKAL";"Symbol";"CDialog_Keine_Anzeige";"Symbol";"CTextCodefileAuswahl";"Symbol";"DZdcHndl";"Symbol";"CZDCModusAll";"Symbol";"Gateway_Anpassung_String";"Symbol";}
      Condition{"ever";"ok";"";}
      Evaluation{"direct";"never";
       ActionCond{"";}}
      Extra{"resultblock";"2477";"";"CStat_ZDC_Anpasung_2000";"\"\"";"\"\"";"";0;"";"";"\"\"";"SN";"";}
      NodeCategory{"";}
      Info{"Dieser Baustein berechnet die Anpassdaten nach dem Zieldatencontainer (ZDC) V 2.03. (S)\r\nZieldatencontainer der Version 2.02 k\xF6nnen mit diesem Baustein auch verarbeitet werden.\r\nEs gibt dann keine \"Lange Anpassung\".\r\n\r\nAls Parameter muss das \"ZdcHndl\" \xFCbergeben werden, dass mit dem Baustein \"ZdcOpen\" erzeugt wurde.\r\n\r\nDer Parameter \"Modusteil\" kann zur Filterung der Daten innerhalb des Containers verwendet werden. \r\nMit Modusteil gleich \"\" werden alle Tabellen mit dem Modus \"A\" im ZDC ausgewertet.\r\n\r\nDer Baustein liefert mit dem Parameter \"Anpassung_String\" die Anpassdaten im folgenden Format:\r\n\r\n4 Byte: Anzahl Anpassungen;\r\n    4 Byte: 1. Anpassungs-Kanal;\r\n    4 Byte: 1. Laenge n der einzelnen Anpassung; \r\n    n Byte: 1. Anpassungswert;\r\n\r\n    4 Byte: 2. Anpassungs-Kanal;\r\n    4 Byte: 2. Laenge m der einzelnen Anpassung; \r\n    m Byte: 2. Anpassungswert; ...\r\n\r\n\r\nBeispiel:\r\n\"\\h000000020000000100000002abcd00000005000000a00102030405060708090a\"\r\nAnzahl Anpassungen: 2\r\nKanal: 1 kurze Anpassung: 43981 (int)\r\nKanal: 5 lange Anpassung: 0102030405060708090A\r\n\r\nDer Baustein berechnet nur die Anpassdaten. Das Schreiben der Daten erfolgt nicht durch diesen Baustein!\r\n\r\n20.01.06, sr: erstellt";"";}
      Rights{"Write";"Read";}
      VersionInfo{}
      Class{"Zdc203Anpassung";}}
     FunctionDef{
      Name{"ZdcProgrammierungL.9708";}
      LangName{"ZdcProgrammierungL.9708";"ZdcProgrammingLong.9708";}
      Type{2;}
      Icon{0;}
      Properties{}
      ActualParam{"DIALOG_LOKAL";"Symbol";"CDialog_Keine_Anzeige";"Symbol";"CTextCodefileAuswahl";"Symbol";"DZdcHndl";"Symbol";"CZDCModusAll";"Symbol";"Gateway_ProgL_String";"Symbol";}
      Condition{"ever";"ok";"";}
      Evaluation{"direct";"never";
       ActionCond{"";}}
      Extra{"resultblock";"2487";"";"CStat_ZDC_ProgramL_2000";"\"\"";"\"\"";"";0;"";"";"\"\"";"SN";"";}
      NodeCategory{"";}
      Info{"Dieser Baustein berechnet die Programmierdaten nach dem Zieldatencontainer (ZDC) V 2.02. (S)\r\n\r\nAls Parameter muss das \"ZdcHndl\" \xFCbergeben werden, dass mit dem Baustein \"ZdcOpen\" erzeugt wurde.\r\n\r\nDer Parameter \"Modusteil\" kann zur Filterung der Daten innerhalb des Containers verwendet werden. \r\nMit Modusteil gleich \"\" werden alle Tabellen mit dem Modus \"P\" im ZDC ausgewertet.\r\n\r\nDer Baustein liefert mit dem Parameter \"ProgL_String\" die Programmierdaten im DSA internen Austauschformat\r\nf\xFCr die Bausteine:\r\n- CodefileProgrammLang_KWP2000\r\n- CodefileProgrammLang_KWP1281\r\n- CodefileProgrammLang_KWP2000_1_03\r\nAchtung:\r\nHier wird das 'neue' (lange) DSA interne Austauschformat f\xFCr Programmierdaten verwendet. \r\n\r\nDer Baustein berechnet nur die Programmierdaten. Das Schreiben der Programmierdaten erfolgt nicht \r\ndurch diesen Baustein!";"";}
      Rights{"Write";"Read";}
      VersionInfo{}
      Class{"ZdcProgrammierungL";}}
     FunctionDef{
      Name{"ZdcClose.9709";}
      LangName{"ZdcClose.9709";"ZdcClose.9709";}
      Type{2;}
      Icon{0;}
      Properties{}
      ActualParam{"DZdcHndl";"Symbol";}
      Condition{"ever";"ok";"";}
      Evaluation{"direct";"never";
       ActionCond{"";}}
      Extra{"teststep";}
      NodeCategory{"";}
      Info{"Baustein schlie\xDFt einen Zieldaten-Container (ZDC) in der Version 2.02, der zuvor mit dem Baustein \r\n\"ZdcOpen\" ge\xF6ffnet wurde.";"";}
      Rights{"Write";"Read";}
      VersionInfo{}
      Class{"ZdcClose";}}}
    FunctionDef{
     Name{"VCI_Inits.9710";}
     LangName{"VCI_Inits.9710";"VCI_Inits.9710";}
     Type{2;}
     Icon{0;}
     Properties{}
     ActualParam{}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"break";
      ActionCond{"";"nok";}}
     Extra{"teststep";}
     NodeCategory{"";}
     Info{"";"";}
     Rights{"Write";"Read";}
     VersionInfo{}
     Class{"Neu";}
     FunctionDef{
      Name{"VW_STG_Verbindung_Param.9711";}
      LangName{"VW_STG_Verbindung_Param.9711";"VW_ECU_Connection_Param.9711";}
      Type{2;}
      Icon{1;}
      Properties{}
      ActualParam{"VCIKanal1";"Symbol";"DIALOG_LOKAL";"Symbol";"CDialogZeile1";"Symbol";"VCI_Typ_VCI5";"Symbol";"Prokoll_KWP2000_TP20";"Symbol";"ECU_Gateway";"Symbol";"CTimeout_00010";"Symbol";"DLevel";"Symbol";"SemaCanTP20";"Symbol";}
      Condition{"ever";"ok";"";}
      Evaluation{"direct";"never";
       ActionCond{"";}}
      Extra{"resultblock";"2427";"";"CStatKommunikationGateway_24413";"\"\"";"\"\"";"";0;"";"";"\"\"";"SN";"";}
      NodeCategory{"";}
      Info{"VW_STG_Verbindung\r\n\r\nBaustein zum Oeffnen eines Steuergeraetekanals auf K- oder CAN-Leitung \r\n\r\nDieser Baustein liest eine Standard-Konfiguration zur STG-Kommunikation ein. Danach werden alle notwendigen Parameter\r\n in diesem Init-Datensatz ueberschrieben und der Kanal geoeffnet.\r\nAusserdem wird der Debug-Level fuer die VCI-Kommunikation gesetzt und fuer die Kommunikation TP2.0 auf VCI2,4,6 der\r\nParameter zur Entkopplung des Oeffnen des CAN-Kanals gegeben..\r\n\r\nDieser Baustein mu\xDF vor Verwendung aller anderen VCI-Funktionen ausgef\xFChrt werden.\r\n\r\nParameter:\r\n\r\nSTG_Hndl: das VCI-Handle, das geoeffnet wird.\r\nDLG_Hndl: das Dialog-Handle, das geoeffnet wird.\r\nZeile: die ZeilenNr fuer die Ausgabe (<1 keine Ausgabe)\r\nVCI_Type: der in dem Geraet eingesetzter VCI-Typ  (VCI_Type = 0 : VCI4; VCI_Type = 1 : VCI5)\r\nProtokoll: das verwendete Protokoll fuer die VCI-Kommuniktion\r\nSteuergeraet: der Steuergeraete der Kommunikation\r\nTimeout: die Zeit, welche fuer das Anreizen verwendet wird\r\nLevel: Debuglevel der VCI-Kommunikation\r\nParHndl: Handel zum Enttkoppeln des gleichzeitigen Anreizens\r\n\r\n04.07.06 sz - Aenderung der Wartezeit bei der Parallel-Verriegelung vor das VCI-Init \r\n03.11.06 sz - Erweiterung bei nicht geschlossenem Handle, _vciAdapt (ab msl version 4!!)";"";}
      Rights{"Write";"Read";}
      VersionInfo{}
      Class{"VW_STG_Verbindung_Param";}}
     FunctionDef{
      Name{"No_ECU_Communication.9712";}
      LangName{"Keine_Verbindung_STG.9712";"No_ECU_Communication.9712";}
      Type{2;}
      Icon{0;}
      Properties{}
      ActualParam{}
      Condition{"when";"nok";"";}
      Evaluation{"direct";"never";
       ActionCond{"";}}
      Extra{"teststep";}
      NodeCategory{"";}
      Info{"";"";}
      Rights{"Write";"Read";}
      VersionInfo{}
      Class{"Neu";}
      FunctionDef{
       Name{"Warten.9713";}
       LangName{"Warten.9713";"Wait.9713";}
       Type{2;}
       Icon{0;}
       Properties{}
       ActualParam{"CTime01";"Symbol";}
       Condition{"ever";"ok";"";}
       Evaluation{"no";"never";
        ActionCond{"";}}
       Extra{"teststep";}
       NodeCategory{"";}
       Info{"Baustein zum Warten einer bestimmten Zeit.\r\n\r\nDer Parameter \"Timeout\" gibt die Wartezeit in Sekunden an.\r\n";"";}
       Rights{"Write";"Read";}
       VersionInfo{}
       Class{"Warten";}}
      FunctionDef{
       Name{"VW_STG_Verbindung_Param.9714";}
       LangName{"VW_STG_Verbindung_Param.9714";"VW_ECU_Connection_Param.9714";}
       Type{2;}
       Icon{1;}
       Properties{}
       ActualParam{"VCIKanal1";"Symbol";"DIALOG_LOKAL";"Symbol";"CDialogZeile1";"Symbol";"VCI_Typ_VCI5";"Symbol";"Prokoll_KWP2000_TP20";"Symbol";"ECU_Gateway";"Symbol";"CTimeout_00010";"Symbol";"DLevel";"Symbol";"SemaCanTP20";"Symbol";}
       Condition{"ever";"ok";"";}
       Evaluation{"direct";"break";
        ActionCond{"";"nok";"break";}}
       Extra{"resultblock";"2427";"";"CStatKommunikationGateway_24413";"\"\"";"\"\"";"";0;"";"";"\"\"";"SN";"";}
       NodeCategory{"";}
       Info{"VW_STG_Verbindung\r\n\r\nBaustein zum Oeffnen eines Steuergeraetekanals auf K- oder CAN-Leitung \r\n\r\nDieser Baustein liest eine Standard-Konfiguration zur STG-Kommunikation ein. Danach werden alle notwendigen Parameter\r\n in diesem Init-Datensatz ueberschrieben und der Kanal geoeffnet.\r\nAusserdem wird der Debug-Level fuer die VCI-Kommunikation gesetzt und fuer die Kommunikation TP2.0 auf VCI2,4,6 der\r\nParameter zur Entkopplung des Oeffnen des CAN-Kanals gegeben..\r\n\r\nDieser Baustein mu\xDF vor Verwendung aller anderen VCI-Funktionen ausgef\xFChrt werden.\r\n\r\nParameter:\r\n\r\nSTG_Hndl: das VCI-Handle, das geoeffnet wird.\r\nDLG_Hndl: das Dialog-Handle, das geoeffnet wird.\r\nZeile: die ZeilenNr fuer die Ausgabe (<1 keine Ausgabe)\r\nVCI_Type: der in dem Geraet eingesetzter VCI-Typ  (VCI_Type = 0 : VCI4; VCI_Type = 1 : VCI5)\r\nProtokoll: das verwendete Protokoll fuer die VCI-Kommuniktion\r\nSteuergeraet: der Steuergeraete der Kommunikation\r\nTimeout: die Zeit, welche fuer das Anreizen verwendet wird\r\nLevel: Debuglevel der VCI-Kommunikation\r\nParHndl: Handel zum Enttkoppeln des gleichzeitigen Anreizens\r\n\r\n04.07.06 sz - Aenderung der Wartezeit bei der Parallel-Verriegelung vor das VCI-Init \r\n03.11.06 sz - Erweiterung bei nicht geschlossenem Handle, _vciAdapt (ab msl version 4!!)";"";}
       Rights{"Write";"Read";}
       VersionInfo{}
       Class{"VW_STG_Verbindung_Param";}}}}
    FunctionDef{
     Name{"Initial_Tests.9715";}
     LangName{"Initial_Tests_Gateway.9715";"Initial_Tests.9715";}
     Type{2;}
     Icon{0;}
     Properties{}
     ActualParam{}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     NodeCategory{"";}
     Info{"";"";}
     Rights{"Write";"Read";}
     VersionInfo{}
     Class{"Neu";}
     FunctionDef{
      Name{"Neu.9716";}
      LangName{"ID_Check_Gateway.9716";"Code_check.9716";}
      Type{2;}
      Icon{0;}
      Properties{}
      ActualParam{}
      Condition{"ever";"ok";"";}
      Evaluation{"direct";"never";
       ActionCond{"";}}
      Extra{"teststep";}
      NodeCategory{"";}
      Info{"Import-Ablage\r\n";"";}
      Rights{"Write";"Read";}
      VersionInfo{}
      Class{"Neu";}
      FunctionDef{
       Name{"VW2000_ID_9b_Lesen_kompatibel_LID.9717";}
       LangName{"VW2000_ID_9b_Lesen_kompatibel_LID.9717";"VW2000_ID_9b_Read_kompatible_LID.9717";}
       Type{2;}
       Icon{1;}
       Properties{}
       ActualParam{"VCIKanal1";"Symbol";"VW_Stg_ID";"Symbol";}
       Condition{"ever";"ok";"";}
       Evaluation{"direct";"never";
        ActionCond{"";}}
       Extra{"resultblock";"1235";"";"ID_lesen";"\"\"";"\"\"";"";0;"";"";"\"\"";"SN";"";}
       NodeCategory{"";}
       Info{"Modul lie\xDFt die Steuergeraete-Identifikation.\r\nDabei wird der KWP2000-Befehl ReadECUIdentification (Blocktitel 0x1a)\r\nmit dem Parameter ECU-Identification ( 0x9b) verwendet.\r\nUnterstuetzt das STG den Befehl ReadByIdentifier (Blocktitel 0x22) werden die RIDs \r\n F187, F189, 0600, F1A5, F1AA, F197 gelesen und die klassische ID zusammengebaut. Damit ist die Verwendung\r\nder bisherigen Bewertungsbausteine moeglich und ein fliessender Uebergang von 0x1A \r\nzu 0x22 moeglich.\r\n\r\nDie gelesene Identifikation wird immer vollstaendig in der Variablen ID-String abgespeichert.\r\n\r\nIn der Statistik wird der ID-String abgespeichert.\r\n\r\nDie Bewertung des Pr\xFCfschrittes ist immer OK, wenn das Lesen der ID vom Steuerger\xE4t erfolgreich\r\nwar.\r\n\r\n14.06.06, sz: erstellt\r\n21.06.06, sz: Bugfix: der WSC kann nicht ueber LID F198 gelesen werden sondern ueber LID F1A5.";"Modul reads the ECU Id.\r\nBy using the KWP2000-Comand ReadECUIdentification (Requesttitel 0x1a)\r\nwith parameter ECUidentification (0x9b).\r\nIf the ECU supports the command ReadByIdentifier (Requesttitel 0x22) the RIDs \r\nF187, F188, F189, 0600 will be read and the classic id will be built.  For that the existing \r\nevaluations could be used and a change from 0x1A to 0x22 is possible.\r\n\r\nThe id will be stored in the parameter ID-String.\r\n\r\nAlso in the statistiks will the id be stored.\r\n\r\nThe evaluatin of the module will be OK if the reading of the id was OK.\r\n\r\nsz, 31.05.05";}
       Rights{"Write";"Read";}
       VersionInfo{}
       Class{"VW2000_ID_9b_Lesen_kompatibel_LID";}}
      FunctionDef{
       Name{"TNr_Check.9718";}
       LangName{"TNr_Check.9718";"TNr_Check.9718";}
       Type{2;}
       Icon{0;}
       Properties{}
       ActualParam{}
       Condition{"ever";"ok";"";}
       Evaluation{"direct";"never";
        ActionCond{"";}}
       Extra{"teststep";}
       NodeCategory{"";}
       Info{"Struckturbaustein";"";}
       Rights{"Write";"Read";}
       VersionInfo{}
       Class{"Neu";}
       FunctionDef{
        Name{"VW2000_TNr.9719";}
        LangName{"VW2000_TNr.9719";"VW2000_TNr.9719";}
        Type{2;}
        Icon{1;}
        Properties{}
        ActualParam{"erste_ID";"Symbol";"VW_Stg_ID";"Symbol";"LIN_Subsystem";"Symbol";"DTNR";"Symbol";}
        Condition{"ever";"ok";"";}
        Evaluation{"no";"never";
         ActionCond{"";}}
        Extra{"teststep";}
        NodeCategory{"";}
        Info{"Modul lie\xDFt nicht die Steuerger\xE4te-Identifikation aus dem Steuerger\xE4t, sondern nutzt die durch\r\neinen VW-Dienst VW2000_ID_Lesen in der  Variablen ID-String abgespeicherten Identifiktion.\r\n\r\nDie 12 Stellen VW/Audi-Teilenummer der gelesenen Identifikation werden in der Varablen\r\n\"Teilenummer\" gespeichert.\r\n\r\nDas LIN-Bus-Codierbyte wird dabei dem Subsystem \xFCbergeben.\r\n";"";}
        Rights{"Write";"Read";}
        VersionInfo{}
        Class{"VW2000_TNr";}}
       FunctionDef{
        Name{"ZdcFtnCheck.9720";}
        LangName{"ZdcFtnCheck.9720";"ZdcFtnCheck.9720";}
        Type{2;}
        Icon{0;}
        Properties{}
        ActualParam{"Gateway_ID_Exp";"Symbol";"DTNR";"Symbol";}
        Condition{"ever";"ok";"";}
        Evaluation{"direct";"never";
         ActionCond{"";}}
        Extra{"resultblock";"1236";"";"CStatTeilenummerGateway";"\"\"";"\"\"";"";0;"";"";"\"\"";"SN";"";}
        NodeCategory{"";}
        Info{"Baustein zur Bewertung eines logischen VW-LAS Ausdrucks (s).\r\n\r\nMit dem Parameter \"ID_Expression\" wird der logische Ausdruck \xFCbergeben.\r\nDieser Wert wird mit dem Baustein \"VW_Codefile_STG_9_2_0\" geliefert.\r\n\r\nMit dem Parameter \"ID_Result\" wird der ID-String oder die Verkettung von ID-Strings \xFCbergeben.\r\nDie ID's m\xFCssen jeweils genau 12 Zeichen lang sein.\r\n\r\nDer Baustein liefert OK zur\xFCck, wenn der logische Ausdruck durch die ID's im Parameter \"ID_Result\" wahr wird, \r\nandernfalls NOK.\r\n\r\n\r\n";"";}
        Rights{"Write";"Read";}
        VersionInfo{}
        Class{"ZdcFtnCheck";}}}
      FunctionDef{
       Name{"Coding.9721";}
       LangName{"Coding.9721";"Coding.9721";}
       Type{2;}
       Icon{0;}
       Properties{}
       ActualParam{}
       Condition{"ever";"ok";"";}
       Evaluation{"direct";"never";
        ActionCond{"";}}
       Extra{"teststep";}
       NodeCategory{"";}
       Info{"Import-Ablage\r\n";"";}
       Rights{"Write";"Read";}
       VersionInfo{}
       Class{"Neu";}
       FunctionDef{
        Name{"VW2000_Cod_Bew.9722";}
        LangName{"VW2000_Cod_Bew.9722";"VW2000_Cod_Eval.9722";}
        Type{2;}
        Icon{1;}
        Properties{}
        ActualParam{"DIALOG_LOKAL";"Symbol";"erste_ID";"Symbol";"Gateway_Codierung_Result";"Symbol";"Nein";"Symbol";"CTime_1";"Symbol";"VW_Master";"Symbol";"VW_Stg_ID";"Symbol";}
        Condition{"when";"progcond";"Gateway_Codier_Art == 0";}
        Evaluation{"direct";"never";
         ActionCond{"";}}
        Extra{"resultblock";"3177";"";"CStatCodierungGateway";"\"\"";"\"\"";"";0;"";"";"\"\"";"\"SN\"";"";}
        NodeCategory{"";}
        Info{"Modul lie\xDFt nicht die Steuerger\xE4te-Identifikation aus dem Steuerger\xE4t, sondern nutzt die durch\r\nden VW-Dienst VW2000_ID_Lesen in der  Variablen ID-String abgespeicherten Identifiktion.\r\n\r\nDer Befehl unterst\xFCtzt den Codierwert der unteren 23 Bit der Bytes 18..20 des ID-Strings.\r\nIst das Byte 17 ungeleich 03 oder 21, 22, 2x wird von einem STG ohne \"kurze\" Codierung \r\nausgegeganen und der R\xFCckgabewert ist 0.\r\nDer von STG gelesene Codierwert wird mit dem in der Variablen \"Codierung\" \xFCbergebenen \r\nCodierung verglichen.\r\n\r\nIn der Statistik wird die vom Steuerger\xE4t gelesene Codierung abgespeichert.\r\n\r\nDie Bewertung des Pr\xFCfschrittes ist immer OK, wenn die in der Variablen \"Codierung\" \xFCbergebene \r\nCodierung mit der Codierung des Steuerger\xE4tes \xFCbereinstimt.\r\n\r\nDurch Setzen des Parameters \"OK-Anzeige\" auf \"ja\" und der \xDCbergabe einer \"Anzeigezeit\"\r\ngr\xF6\xDFer 0 wird sowohl bei OK als auch bei NOK Bewertung des Pr\xFCfschrittes die Codierung\r\ndes Steuerger\xE4tes angezeigt. \r\nDurch Setzen des Parameters \"OK-Anzeige\" auf \"nein\" und der \xDCbergabe einer \"Anzeigezeit\"\r\ngr\xF6\xDFer 0 wird nur  bei NOK Bewertung des Pr\xFCfschrittes die Codierung angezeigt. \r\nDurch Setzen der \"Anzeigezeit\" auf 0 wird die Anzeige immer unterdr\xFCckt.\r\n\r\nDas LIN-Bus-Codierbyte wird vom STG in \"Subsystem\" \xFCbergeben.\r\n";"";}
        Rights{"Write";"Read";}
        VersionInfo{}
        Class{"VW2000_Cod_Bew";}}
       FunctionDef{
        Name{"LongCoding.9723";}
        LangName{"LongCoding.9723";"LongCoding.9723";}
        Type{2;}
        Icon{0;}
        Properties{}
        ActualParam{}
        Condition{"when";"progcond";"Gateway_Codier_Art == 1";}
        Evaluation{"direct";"never";
         ActionCond{"";}}
        Extra{"teststep";}
        NodeCategory{"";}
        Info{"Struckturbaustein";"";}
        Rights{"Write";"Read";}
        VersionInfo{}
        Class{"Neu";}
        FunctionDef{
         Name{"VW2000_Bewertung_unterstuetzter_Funktionen.9724";}
         LangName{"VW2000_Bewertung_unterstuetzter_Funktionen.9724";"VW2000_evaluate_supported_Functions.9724";}
         Type{2;}
         Icon{1;}
         Properties{}
         ActualParam{"VCIKanal1";"Symbol";"ConstVar37666";"Const";}
         Condition{"ever";"ok";"";}
         Evaluation{"direct";"never";
          ActionCond{"";}}
         Extra{"teststep";}
         NodeCategory{"";}
         Info{"Dieser Baustein liest keine Daten vom STG sondern prueft, ob eine Funktion \r\nvom STG als unterstuetzte Funktion angemeldet ist.\r\n\r\nDie Bewertung des Pr\xFCfschrittes ist OK, wenn die angefragte Funktion (im binaeren Format) unterst\xFCtzt wird.\r\n\r\nIn die Statistik wird die Bewertung des Pr\xFCfschrittes die angefragte Funktion gespeichert.";"";}
         Rights{"Write";"Read";}
         VersionInfo{}
         Class{"VW2000_Bewertung_unterstuetzter_Funktionen";}}
        FunctionDef{
         Name{"VW2000_Cod_Lang_Lesen_Bew.9725";}
         LangName{"VW2000_Cod_Lang_Lesen_Bew_o_ID.9725";"VW2000_Cod_Long_Read_Evaluate.9725";}
         Type{2;}
         Icon{1;}
         Properties{}
         ActualParam{"VCIKanal1";"Symbol";"DIALOG_LOKAL";"Symbol";"erste_ID";"Symbol";"Gateway_LongCode_Result";"Symbol";"Nein";"Symbol";"CTime_1";"Symbol";"LIN_Subsystem";"Symbol";"VW_Stg_ID";"Symbol";}
         Condition{"when";"nok";"";}
         Evaluation{"direct";"break";
          ActionCond{"";"ok";}}
         Extra{"resultblock";"3180";"";"CStatCodierungGateway";"\"\"";"\"\"";"";0;"";"";"\"\"";"SN";"";}
         NodeCategory{"";}
         Info{"Modul lie\xDFt nicht die Steuerger\xE4te-Identifikation aus dem Steuerger\xE4t, sondern nutzt die durch\r\nden VW-Dienst VW2000_ID_Lesen in der  Variablen ID-String abgespeicherten Identifiktion.\r\n\r\nDer Befehl unterst\xFCtzt nur die LangCodierung nach KWP2000, da\xDF hei\xDFt es wird als Codierwert \r\ndie ECU-Configuration (KWP2000-Befehl ReadECUIdentification ( Blocktitel 0x1a)\r\nmit dem Parameter ECUconfiguration ( 0x9a)) verwendet.\r\nIst das Byte 17 ungeleich 10 oder 3x wird von einem STG ohne LangCodierung ausgegeganen \r\nund der R\xFCckgabewert ist 0.\r\nDer vom STG gelesene Codierwert wird mit dem in der Variablen \"Codierung\" \xFCbergebenen \r\nCodierung verglichen.\r\n\r\nIn der Statistik wird die vom Steuerger\xE4t gelesene Codierung abgespeichert.\r\n\r\nDie Bewertung des Pr\xFCfschrittes ist immer OK, wenn das Lesen der IDs vom Steuerger\xE4t erfolgreich\r\nwar, und die in der Variablen \"Codierung\" \xFCbergebenen Codierung mit der Codierung des Steuerger\xE4tes \r\n\xFCbereinstimmt.\r\n\r\nDurch Setzen des Parameters \"OK-Anzeige\" auf \"ja\" und der \xDCbergabe einer \"Anzeigezeit\"\r\ngr\xF6\xDFer 0 wird sowohl bei OK als auch bei NOK Bewertung des Pr\xFCfschrittes die Codierung\r\ndes Steuerger\xE4tes angezeigt. \r\nDurch Setzen des Parameters \"OK-Anzeige\" auf \"nein\" und der \xDCbergabe einer \"Anzeigezeit\"\r\ngr\xF6\xDFer 0 wird nur  bei NOK Bewertung des Pr\xFCfschrittes die Codierung angezeigt. \r\nDurch Setzen der \"Anzeigezeit\" auf 0 wird die Anzeige immer unterdr\xFCckt.\r\n\r\nDas LIN-Bus-Codierbyte wird dabei dem Subsystem \xFCbergeben.\r\n\r\n// sz, 23.04.03, Bugfix: NOK wenn Baustein nicht f\xFCr lange Codierung verwendet wird.";"";}
         Rights{"Write";"Read";}
         VersionInfo{}
         Class{"VW2000_Cod_Lang_Lesen_Bew";}}
        FunctionDef{
         Name{"Service_22.9726";}
         LangName{"Service_22.9726";"Service_22.9726";}
         Type{2;}
         Icon{0;}
         Properties{}
         ActualParam{}
         Condition{"when";"ok";"";}
         Evaluation{"direct";"never";
          ActionCond{"";}}
         Extra{"teststep";}
         NodeCategory{"";}
         Info{"Struckturbaustein";"";}
         Rights{"Write";"Read";}
         VersionInfo{}
         Class{"Neu";}
         FunctionDef{
          Name{"VW2000_Read_Coding.9727";}
          LangName{"VW2000_Read_Coding.9727";"VW2000_Read_Coding.9727";}
          Type{2;}
          Icon{1;}
          Properties{}
          ActualParam{"VCIKanal1";"Symbol";"Dummy_Codierung_Result";"Symbol";"Dummy_LongCode_Result";"Symbol";"Dummy_Codier_Art";"Symbol";}
          Condition{"ever";"ok";"";}
          Evaluation{"direct";"never";
          ActionCond{"";}}
          Extra{"teststep";}
          NodeCategory{"";}
          Info{"SG-Identifikation mit Service 0x22; \r\nmit Local Identifier (LID) 0x0601, 0x0600:\r\nEs wird ueberprueft, ob die Diagnosefunktion unterstuetzt wird, dann werden die Services \r\nausgefuehrt. Zuerst mit LID 0x0601 die Laenge der Codierung gelesen.\r\nBei einem NACK vom STG wird von einem nicht Codierbaren STG ausgegangen und der \r\nBaustein mit NOK bewertet.\r\nBei einer positive Antwort wird mit LID 0x0600 die Codierung gelesen und bei einer \r\nCodierlaenge von 4 Byte der Parameter Codierung mit der Codierung als Integer befuellt \r\n(und die Codier_Art = 0 gesetzt). Damit ensprich diese Codierung der bisherigen \r\n\"kurzen 20/23 Bit-Cocierung\".\r\nIst die Codierlaenge groesser 4 wird von einer langen Codierung ausgegangen und die Codierung \r\nals Binaerstring in CodierStr abgelegt (und die Codier_Art = 1 gesetzt). \r\n\r\nCodierung:\r\nDie Laenge der Codierung ist bei Verwendung des Dienst $22 und $2E f\xFCr Codierung Lesen und \r\nSchreiben unter DataIdentifier 0x601 (VWTesterCodingInformation) in einem Byte (hex) \r\nauszugeben. Die L\xE4nge wird vor dem Lesen oder Schreiben der VWCodingValue \r\n(DataIdentifier 0x600) mit Dienst $22 abgefragt. Die L\xE4nge der Codierung ist f\xFCr das jeweilige \r\nSteuerger\xE4t von 0 bis 30 Byte festzulegen.\r\n\r\nsz, 30.05.05";"";}
          Rights{"Write";"Read";}
          VersionInfo{}
          Class{"VW2000_Read_Coding";}}
         FunctionDef{
          Name{"StringVergleich.9728";}
          LangName{"StringVergleich.9728";"StringCompare.9728";}
          Type{2;}
          Icon{1;}
          Properties{}
          ActualParam{"Gateway_LongCode_Result";"Symbol";"Dummy_LongCode_Result";"Symbol";}
          Condition{"when";"progcond";"Dummy_Codier_Art == 1";}
          Evaluation{"direct";"never";
          ActionCond{"";}}
          Extra{"resultblock";"3178";"";"CStatCodierungGateway";"\"\"";"\"\"";"";0;"";"";"\"\"";"SN";"";}
          NodeCategory{"";}
          Info{"Ueberprueft zwei Strings auf Gleichheit";"";}
          Rights{"Write";"Read";}
          VersionInfo{}
          Class{"StringVergleich";}}
         FunctionDef{
          Name{"IntVergleich.9729";}
          LangName{"IntVergleich.9729";"IntCompare.9729";}
          Type{2;}
          Icon{0;}
          Properties{}
          ActualParam{"Dummy_Codierung_Result";"Symbol";"Gateway_Codierung_Result";"Symbol";}
          Condition{"when";"progcond";"Dummy_Codier_Art == 0";}
          Evaluation{"direct";"never";
          ActionCond{"";}}
          Extra{"resultblock";"3180";"";"CStatCodierungGateway";"\"\"";"\"\"";"";0;"";"";"\"\"";"SN";"";}
          NodeCategory{"";}
          Info{"";"Component for the comparison of two integers in order to\r\nestablish whether they are identical. (S)\r\nReturns \"OK\", if the actual value corresponds to the nominal\r\nvalue.";}
          Rights{"Write";"Read";}
          VersionInfo{}
          Class{"IntVergleich";}}}}}}
     FunctionDef{
      Name{"Bauzustandsdokumentation.9730";}
      LangName{"BZD.9730";"Bauzustandsdokumentation.9730";}
      Type{2;}
      Icon{0;}
      Properties{}
      ActualParam{}
      Condition{"Never";"ever";"ok";"";}
      Evaluation{"direct";"never";
       ActionCond{"";}}
      Extra{"teststep";}
      NodeCategory{"";}
      Info{"Struckturbaustein";"";}
      Rights{"Write";"Read";}
      VersionInfo{}
      Class{"Neu";}
      FunctionDef{
       Name{"Neu.9731";}
       LangName{"ID_91_HWID_lesen.9731";"New.9731";}
       Type{2;}
       Icon{0;}
       Properties{}
       ActualParam{}
       Condition{"ever";"ok";"";}
       Evaluation{"direct";"never";
        ActionCond{"";}}
       Extra{"teststep";}
       NodeCategory{"";}
       Info{"Struckturbaustein";"";}
       Rights{"Write";"Read";}
       VersionInfo{}
       Class{"Neu";}
       FunctionDef{
        Name{"VW2000_ID_91_Lesen_kompatibel_LID.9732";}
        LangName{"VW2000_ID_91_Lesen_kompatibel_LID.9732";"VW2000_ID_91_Read_kompatibel_LID.9732";}
        Type{2;}
        Icon{1;}
        Properties{}
        ActualParam{"VCIKanal1";"Symbol";"VW_Stg_ID_91";"Symbol";}
        Condition{"ever";"ok";"";}
        Evaluation{"direct";"never";
         ActionCond{"";}}
        Extra{"teststep";}
        NodeCategory{"";}
        Info{"Modul lie\xDFt die Steuerger\xE4te-Identifikation.\r\nDabei wird der KWP2000-Befehl ReadECUIdentification ( Blocktitel 0x1a)\r\nmit dem Parameter ECUidentification ( 0x91) verwendet.\r\nUnterstuetzt das STG den Befehl ReadByIdentifier (Blocktitel 0x22) wird die RID \r\n F191, gelesen und die klassische ID zusammengebaut. Damit ist die Verwendung\r\nder bisherigen Bewertungsbausteine moeglich und ein fliessender Uebergang von 0x1A \r\nzu 0x22 moeglich.\r\n\r\nDie gelesene Identifikation wird vollstaendig in der Variablen ID-String abgespeichert.\r\n\r\nIn der Statistik wird der ID-String abgespeichert.\r\n\r\nDie Bewertung des Pr\xFCfschrittes ist immer OK, wenn das Lesen der ID vom Steuergeraet erfolgreich war.\r\n\r\n14.06.06, sz: erstellt";"Modul reads the ECU Id.\r\nBy using the KWP2000-Comand ReadECUIdentification (Requesttitel 0x1a)\r\nwith parameter ECUidentification (0x91).\r\nIf the ECU supports the command ReadByIdentifier (Requesttitel 0x22) the RID \r\nF191 will be read and the classic id will be built. (Including scaling offset). For that the existing \r\nevaluations could be used and a change from 0x1A to 0x22 is possible.\r\n\r\nThe id will be stored in the parameter ID-String.\r\n\r\nAlso in the statistiks will the id be stored.\r\n\r\nThe evaluatin of the module will be OK if the reading of the id was OK.\r\n\r\nsz, 31.05.05\r\n";}
        Rights{"Write";"Read";}
        VersionInfo{}
        Class{"VW2000_ID_91_Lesen_kompatibel_LID";}}
       FunctionDef{
        Name{"VW2000_ID_91_HWID_TNR.9733";}
        LangName{"VW2000_ID_91_HWID_TNR.9733";"VW2000_ID_91_HWID_TNR.9733";}
        Type{2;}
        Icon{1;}
        Properties{}
        ActualParam{"VW_Stg_ID_91";"Symbol";"erste_ID";"Symbol";"DSTGHWIdString";"Symbol";}
        Condition{"ever";"ok";"";}
        Evaluation{"no";"never";
         ActionCond{"";}}
        Extra{"teststep";}
        NodeCategory{"";}
        Info{"Modul lie\xDFt nicht die Steuerger\xE4te-Identifikation aus dem Steuerger\xE4t, sondern nutzt die durch\r\nden VW-Dienst VW2000_ID_91_HWID_Lesen in der  Variablen ID-String abgespeicherten Identifiktion.\r\n\r\nDie 12 Stellen VW/Audi-Teilenummer der gelesenen Identifikation werden in der Varablen\r\n\"Teilenummer\" gespeichert.\r\n";"";}
        Rights{"Write";"Read";}
        VersionInfo{}
        Class{"VW2000_ID_91_HWID_TNR";}}}
      FunctionDef{
       Name{"BZD_to_FISeQS.9734";}
       LangName{"BZD_to_FISeQS.9734";"BZD_to_FISeQS.9734";}
       Type{2;}
       Icon{0;}
       Properties{}
       ActualParam{}
       Condition{"ever";"ok";"";}
       Evaluation{"direct";"never";
        ActionCond{"";}}
       Extra{"teststep";}
       NodeCategory{"";}
       Info{"Struckturbaustein";"Structure element";}
       Rights{"Write";"Read";}
       VersionInfo{}
       Class{"Neu";}
       FunctionDef{
        Name{"VW2000_BZD_BaugruppenTyp0.9735";}
        LangName{"VW2000_BZD_BaugruppenTyp0.9735";"VW2000_BZD_BaugruppenTyp0.9735";}
        Type{2;}
        Icon{1;}
        Properties{}
        ActualParam{"VCIKanal1";"Symbol";"DIALOG_LOKAL";"Symbol";"erste_ID";"Symbol";"Gateway_0";"Symbol";"CInt3";"Symbol";"CLogFalsch";"Symbol";"DHerstellerAenderungsdatum";"Symbol";}
        Condition{"ever";"ok";"";}
        Evaluation{"direct";"never";
         ActionCond{"";}}
        Extra{"resultblock";"462";"";"CStatTxt_Gateway_BG_0";"\"\"";"\"\"";"";0;"";"";"\"A\"";"SNX";"";}
        NodeCategory{"";}
        Info{"BaugruppenTyp0\r\n\r\nBausteine ermittelt den \"BaugruppenTyp0\"; dazu wird die ID 0x86 bzw. MWB 80 gelesen\r\nund entsprechend der Doku aufbereitet. Da hier auch ein Datensatz zum BaugruppenTyp1 \r\nenthalten ist, wird dieser mit zur\xFCckgegeben zur Verarbeitung im Baustein \"BaugruppenTyp1\".\r\n\r\nIm Parameter \"BaugruppenNr\" wird die Baugruppen-Nummer (laut Baugruppenkatalog) eingetragen.\r\nWenn die ID 0x86 nicht gelesen werden kann wird der MWB 80 gelesen und zur Datenverarbeitung herangezogen.\r\n(mit \"LeseOption\" Wert=3)\r\nMit dem Parameter \"LeseOption\" kann gesteuert werden ob nur die ID 0x86 gelesen werden soll (Wert=1)\r\noder nur der MWB 80  (Wert= 2) gelesen werden soll (wenn bekannt ist, wo die Info im STG steht).\r\nMit dem Parameter \"BewImmerOK\" kann die Statistikbewertung des Bausteins immer auf OK gesetzt werden, \r\nauch wenn nicht alle Daten f\xFCr den BaugruppenTyp0 ermittelt werden konnten (werden dann mit Blanks aufgef\xFCllt).\r\n\r\nnach VW Spec.: \"Vorgaben zur Bildung von SG-Baugruppen_v2.1.doc\" ergibt sich folgendes:\r\nBaugruppentyp 0\r\nVariante 1:Hersteller und Seriennummer (25 Zeichen) mit Dienst 86\r\nByte\tBezeichnung\tDaten-Quelle\r\n1 - 3\tBaugruppen-Nummer\tBaugruppen-Katalog\r\n4 - 10\tHersteller-Kennzeichen\tDienst 86\tByte 17 - 23 1\r\n11 - 16\tHerstelldatum\tDienst 86\tByte 24, 25, 27, 28, 30, 31  \r\n17 - 20\tHersteller-Pr\xFCfstand\tDienst 86\tByte 40 - 43 1\r\n21 - 24\tlaufende Nummer\tDienst 86\tByte 44 - 47 1\r\n25\tPr\xFCfzeichen\twird bei VW durch F\xFCllzeichen \"-\" ersetzt\r\n\r\nVariante 2: Hersteller und Seriennummer (25 Zeichen) mit MWB 80\r\nByte\tBezeichnung\tDaten-Quelle\r\n1 - 3\tBaugruppen-Nummer\tBaugruppen-Katalog\r\n4 - 10\tHersteller-Kennzeichen\tMWB 80 \tByte 1 - 7 2\r\n11 - 16\tHerstelldatum\tMWB 80\tByte 9, 10, 12, 13, 15, 16 2\r\n17 - 20\tHersteller-Pr\xFCfstand\tMWB 80\tByte 27 - 30 2\r\n21 - 24\tlaufende Nummer\tMWB 80\tByte 32 - 35 2\r\n25\tPr\xFCfzeichen\twird bei VW durch F\xFCllzeichen \"-\" ersetzt\r\n";"";}
        Rights{"Write";"Read";}
        VersionInfo{}
        Class{"VW2000_BZD_BaugruppenTyp0";}}
       FunctionDef{
        Name{"VW2000_BZD_BaugruppenTyp1.9736";}
        LangName{"VW2000_BZD_BaugruppenTyp1.9736";"VW2000_BZD_BaugruppenTyp1.9736";}
        Type{2;}
        Icon{1;}
        Properties{}
        ActualParam{"VCIKanal1";"Symbol";"DIALOG_LOKAL";"Symbol";"erste_ID";"Symbol";"VW_Stg_ID";"Symbol";"DHerstellerAenderungsdatum";"Symbol";"Gateway_1";"Symbol";"CLogFalsch";"Symbol";}
        Condition{"ever";"ok";"";}
        Evaluation{"direct";"never";
         ActionCond{"";}}
        Extra{"resultblock";"463";"";"CStatTxt_Gateway_BG_1";"\"\"";"\"\"";"";0;"";"";"\"A\"";"SNX";"";}
        NodeCategory{"";}
        Info{"Baugruppentyp 1\r\n\r\nBaustein ermittelt den \"BaugruppenTyp1\"; dazu mu\xDF die ID 0x9B mit der ID-Nummer und die zuvor ermittelte Hersteller\xE4nderungsstand \r\n(HerstellAender) aus der ID 0x86 bzw. MWB 80 \xFCbergeben werden und entsprechend der Doku aufbereitet.\r\n\r\nIm Parameter \"BaugruppenNr\" wird die Baugruppen-Nummer (laut Baugruppenkatalog) eingetragen.\r\nMit dem Parameter \"BewImmerOK\" kann die Statistikbewertung des Bausteins immer auf OK gesetzt werden, \r\nauch wenn nicht alle Daten f\xFCr den BaugruppenTyp0 ermittelt werden konnten (werden dann mit Blanks aufgef\xFCllt).\r\n\r\nnach VW Spec.: \"Vorgaben zur Bildung von SG-Baugruppen_v2.1.doc\" ergibt sich folgendes:\r\nVariante 1: Teilenummer und -Version (23 Zeichen) mit Hersteller\xE4nderungsstand\r\nStellen\tBezeichnung\tDaten-Quelle\r\n1 - 3\tBaugruppen-Nummer\tBaugruppen-Katalog\r\n4 - 15\tTeilenummer \tDienst 9B\r\n\tByte 1 - 12 1\r\n16 - 23\tHersteller\xE4nderungsstand\tDienst 86\tByte 32 -39 1\r\n\r\nVariante 2: Teilenummer und -Version (23 Zeichen) mit Hersteller\xE4nderungsstand\r\nStellen\tBezeichnung\tDaten-Quelle\r\n1 - 3\tBaugruppen-Nummer\tBaugruppen-Katalog\r\n4 - 15\tTeilenummer \tDienst 9B\tByte 1 - 12 1\r\n16 - 23\tHersteller\xE4nderungsstand\tMWB 80\tByte 18 - 25 2\r\n";"";}
        Rights{"Write";"Read";}
        VersionInfo{}
        Class{"VW2000_BZD_BaugruppenTyp1";}}
       FunctionDef{
        Name{"VW2000_BZD_BaugruppenTyp2.9737";}
        LangName{"VW2000_BZD_BaugruppenTyp2.9737";"VW2000_BZD_BaugruppenTyp2.9737";}
        Type{2;}
        Icon{1;}
        Properties{}
        ActualParam{"VCIKanal1";"Symbol";"DIALOG_LOKAL";"Symbol";"erste_ID";"Symbol";"VW_Stg_ID";"Symbol";"DSTGHWIdString";"Symbol";"Gateway_2";"Symbol";"CLogFalsch";"Symbol";}
        Condition{"ever";"ok";"";}
        Evaluation{"direct";"never";
         ActionCond{"";}}
        Extra{"resultblock";"464";"";"CStatTxt_Gateway_BG_2";"\"\"";"\"\"";"";0;"";"";"\"A\"";"SNX";"";}
        NodeCategory{"";}
        Info{"Baugruppentyp 2 \r\n\r\nBaustein ermittelt den \"BaugruppenTyp2\"; dazu mu\xDF die ID 0x9B mit der ID-Nummer und die HWTeilenummer (\"HWIdString\") aus der \r\nHardwareID 0x91 \xFCbergeben werden und entsprechend der Doku aufbereitet.\r\n\r\nIm Parameter \"BaugruppenNr\" wird die Baugruppen-Nummer (laut Baugruppenkatalog) eingetragen.\r\nMit dem Parameter \"BewImmerOK\" kann die Statistikbewertung des Bausteins immer auf OK gesetzt werden, \r\nauch wenn nicht alle Daten f\xFCr den BaugruppenTyp0 ermittelt werden konnten (werden dann mit Blanks aufgef\xFCllt).\r\n\r\nnach VW Spec.: \"Vorgaben zur Bildung von SG-Baugruppen_v2.1.doc\" ergibt sich folgendes:\r\nAnliefer-Teilenummer und Software-Version (23 Zeichen)\r\n\r\nStellen\tBezeichnung\tDaten-Quelle\r\n1  -3\tBaugruppen-Nummer\tBaugruppen-Katalog\r\n4 - 15\tAnliefer-Teilenummer\tDienst 91\tByte 2 - 13  \r\n16 - 19\tLeerzeichen\t\r\n20 - 23\tSoftware-Version\tDienst 9B\tByte 13 - 16 1\r\n";"";}
        Rights{"Write";"Read";}
        VersionInfo{}
        Class{"VW2000_BZD_BaugruppenTyp2";}}
       FunctionDef{
        Name{"VW2000_BZD_BaugruppenTyp3.9738";}
        LangName{"VW2000_BZD_BaugruppenTyp3.9738";"VW2000_BZD_BaugruppenTyp3.9738";}
        Type{2;}
        Icon{1;}
        Properties{}
        ActualParam{"DIALOG_LOKAL";"Symbol";"ConstVar32791";"Const";"ConstVar32792";"Const";"ConstVar32793";"Const";"FZD";"Symbol";"CInt1000";"Symbol";}
        Condition{"ever";"ok";"";}
        Evaluation{"direct";"never";
         ActionCond{"";}}
        Extra{"resultblock";"816";"";"CStatTxt_Gateway_BG_3";"\"\"";"\"\"";"";0;"";"";"\"A\"";"SNX";"";}
        NodeCategory{"";}
        Info{"Baugruppentyp 3\r\n\r\nBaustein ermittelt den \"BaugruppenTyp3\"; dazu mu\xDF der FZD-Satz (Fzd), die Position der Baugruppen/Sorten-Codes (FzdPosition)\r\nund die jeweilige Hardware/Software - Baugruppe (HardwareSorte, SoftwareSorte) \xFCbergeben werden und daraus wird entsprechend \r\nder Doku der BaugruppenTyp aufbereitet.\r\n\r\nnach VW Spec.: \"Vorgaben zur Bildung von SG-Baugruppen_v2.1.doc\" ergibt sich folgendes:\r\nCodierung langes Codewort (Verweis auf die Zeile in der Freigabetabelle) 17 Zeichen\r\nByte\tBezeichnung\tDaten-Quelle\r\n1 - 3\tBaugruppen-Nummer\tBaugruppen-Katalog\r\n4 - 6\tHardware-Baugruppe\tSoll-Informationen von UPS aus Fahrzeugdatensatz\r\n7 - 10\tHardware Sortenschl\xFCssel\t\r\n11 - 13\tSoftware Baugruppe\t\r\n14 - 17\tSoftware Sortenschl\xFCssel\t\r\n\r\n\r\n07.03.05, sz:\r\nNach einer E-Mail von Herrn Witschi wurde die Reihenfolge von \r\nHard- und Software Baugruppe getauscht.\r\n";"";}
        Rights{"Write";"Read";}
        VersionInfo{}
        Class{"VW2000_BZD_BaugruppenTyp3";}}}}
     FunctionDef{
      Name{"Neu.9740";}
      LangName{"DTC_read_Gateway.9740";"DTC_read.9740";}
      Type{2;}
      Icon{0;}
      Properties{}
      ActualParam{}
      Condition{"ever";"progcond";"MFTORT != \"C22\"";}
      Evaluation{"direct";"never";
       ActionCond{"";}}
      Extra{"teststep";}
      NodeCategory{"";}
      Info{"Import-Ablage\r\n";"";}
      Rights{"Write";"Read";}
      VersionInfo{}
      Class{"Neu";}
      FunctionDef{
       Name{"VW2000_FSP_Lesen_Anzahl.9741";}
       LangName{"VW2000_FSP_Lesen_Anzahl.9741";"VW2000_DTC_Read_Quantity.9741";}
       Type{2;}
       Icon{1;}
       Properties{}
       ActualParam{"VCIKanal1";"Symbol";"DInt";"Symbol";"VW_FSP_Result";"Symbol";"VW_Codes_FSP_Lesen";"Symbol";}
       Condition{"ever";"ok";"";}
       Evaluation{"direct";"break";
        ActionCond{"";"break";}}
       Extra{"resultblock";"2430";"";"CStatTxtFspGateway";"\"\"";"\"\"";"";0;"";"";"\"\"";"\"SN\"";"";}
       NodeCategory{"";}
       Info{"Dieses Modul lie\xDFt den Fehlerspeicher eines Steuerger\xE4tes.\r\nDabei wird der KWP2000-Befehl readDiagnosticInfomation ( Blocktitel 0x18)\r\nmit dem Parameter allGroups (0x02 0xff 0x00) verwendet.\r\n\r\nDer gelesene Fehlerspeicherinhalt wird immer in der Variablen \"FSP-String\" zur weiteren\r\nBearbeitung abgespeichert.\r\n\r\nBewertet und in die Statistik geschrieben wird die Anzahl, der im Steuerger\xE4t vorhanden\r\nFehler. Eine Filterung wird hierbei nicht vorgenommen.\r\n\r\nDie Bewertung diese Pr\xFCfschrittes is \"OK\", wenn der Steuerger\xE4tebefehl erfolgreich \r\nausgef\xFChrt werden konnte und kein Fehler vorhandenen ist.\r\nDie Bewertung diese Pr\xFCfschrittes is \"NOK\", wenn der Steuerger\xE4tebefehl erfolgreich \r\nausgef\xFChrt werden konnte und mindestens ein Fehler vorhandenen ist.\r\nDie Bewertung diese Pr\xFCfschrittes is \"ABBR\", wenn der Steuerger\xE4tebefehl nicht\r\nerfolgreich ausgef\xFChrt werden konnte.\r\n";"";}
       Rights{"Write";"Read";}
       VersionInfo{}
       Class{"VW2000_FSP_Lesen_Anzahl";}}
      FunctionDef{
       Name{"VW2000_FSP_Bewerten_Fehler.9742";}
       LangName{"VW2000_FSP_Bewerten_Fehler.9742";"VW2000_DTC_Evaluate_ErrorCodes.9742";}
       Type{2;}
       Icon{1;}
       Properties{}
       ActualParam{"VCIKanal1";"Symbol";"DIALOG_LOKAL";"Symbol";"CDialogZeile1";"Symbol";"Ja";"Symbol";"CTime_0";"Symbol";"VW_FSP_Result";"Symbol";"VW_Codes_FSP_Lesen";"Symbol";}
       Condition{"ever";"ok";"";}
       Evaluation{"direct";"never";
        ActionCond{"";}}
       Extra{"resultblock";"2430";"";"CStatTxtFspGateway";"\"\"";"\"\"";"";0;"";"";"\"\"";"\"SN\"";"";}
       NodeCategory{"";}
       Info{"Dieses Modul lie\xDFt nicht den Fehlerspeicher eines Steuerger\xE4tes. Es wertet nur die in der\r\nVariablen gespeicherten Fehler aus. Es kann somit, die mit den Modulen \r\nVW2000_FSP_Lesen_Anzahl, VW_FSP2000_Lesen_Fehler gelesene oder\r\ndie mit dem Modul VW_FSP_Filter bearbeitete Fehlerspeicherinformation ausgewertet werde.\r\n\r\nBewertet und in die Statistik geschrieben werden  die vorhanden Fehercodes, der im \r\nSteuerger\xE4t vorhanden Fehler. Eine Filterung wird hierbei nicht vorgenommen.\r\n\r\nDie Bewertung diese Pr\xFCfschrittes is \"OK\", wenn der Steuerger\xE4tebefehl erfolgreich \r\nausgef\xFChrt werden konnte und kein Fehler vorhandenen ist.\r\n\r\nWenn eine \"Anzeigezeit\" gr\xF6\xDFer 0 \xFCbergeben wird, wird im Fehlerfall dem Werker eine Liste\r\nmit den gelesenen Fehler angezeigt. Im \"OK\"-Fall wird f\xFCr diese Zeite die Bewertung\r\nVisualisiert.";"";}
       Rights{"Write";"Read";}
       VersionInfo{}
       Class{"VW2000_FSP_Bewerten_Fehler";}}
      FunctionDef{
       Name{"StatSetAsciiResult.9743";}
       LangName{"StatSetAsciiResult.9743";"StatSetAsciiResult.9743";}
       Type{2;}
       Icon{1;}
       Properties{}
       ActualParam{"OK";"Symbol";"CText_TestBlockIncomplete";"Symbol";}
       Condition{"ever";"ok";"";}
       Evaluation{"direct";"never";
        ActionCond{"";}}
       Extra{"resultblock";"461";"";"CText_TestBlockComplete";"\"\"";"\"\"";"";0;"";"";"\"\"";"SN";"";}
       NodeCategory{"";}
       Info{"Baustein zum Schreiben von OK oder NOK in die Statistik. (S)";"";}
       Rights{"Write";"Read";}
       VersionInfo{}
       Class{"StatSetAsciiResult";}}}}
    FunctionDef{
     Name{"VW2000_STG_Ende.9744";}
     LangName{"VW2000_STG_Ende.9744";"VW2000_ECU_Disconnect.9744";}
     Type{2;}
     Icon{1;}
     Properties{}
     ActualParam{"VCIKanal1";"Symbol";}
     Condition{"ever";"ok";"";}
     Evaluation{"no";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     NodeCategory{"";}
     Info{"Mit diesem Modul wird die Kommunikation zu einem Steuerger\xE4t beendet. Dieser Befehl ist\r\nimmer nach dem letzten Befehl f\xFCr ein Steuerger\xE4t zu senden bzw. bevor die Z\xFCndung\r\nausgeschaltet wird. \r\n\r\nDie Bewertung des Pr\xFCfschrittes ist \"OK\", wenn die Verbindung erfolgreich beendet werden\r\nkonnte.\r\n\r\nIn die Statistik wird nur ein \"OK\" bzw. \"NOK\" in Abh\xE4nigkeit von der Berwertung geschrieben.\r\n\r\n";"This modules terminates the communication to a control unit. This command\r\nalways has to be send after the last command for a control unit or before the \r\nignition is going to be switched off.\r\n\r\nThe evaluation of the test step is \"OK\" if a connection could be established.\r\n\r\nTo the statistic only an \"OK\" or an \"NOK\" is written respectively to the evaluation.\r\n\r\n";}
     Rights{"Write";"Read";}
     VersionInfo{}
     Class{"VW2000_STG_Ende";}}}
   FunctionDef{
    Name{"ECU_Handling_Service_22.9745";}
    LangName{"ECU_Handling_Service_22.9745";"ECU_Handling_Service_22.9745";}
    Type{2;}
    Icon{0;}
    Properties{}
    ActualParam{}
    Condition{"LAS";"LAS_WFS3Gen_3_Schluessel1";"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    NodeCategory{"";}
    Info{"Strukturelement";"structure element";}
    Rights{"Write";"Read";}
    VersionInfo{}
    Class{"Neu_309394";}
    FunctionDef{
     Name{"Set_TBL_incomplete.9746";}
     LangName{"Set_TBL_incomplete.9746";"Set_TBL_incomplete.9746";}
     Type{2;}
     Icon{1;}
     Properties{}
     ActualParam{"NOK";"Symbol";"CText_Info_TestBlockIncomplete";"Symbol";}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"resultblock";"461";"";"CText_TestBlockComplete";"\"\"";"\"\"";"";0;"";"";"\"\"";"SN";"";}
     NodeCategory{"";}
     Info{"Baustein zum Schreiben von OK oder NOK in die Statistik. (S)";"";}
     Rights{"Write";"Read";}
     VersionInfo{}
     Class{"StatSetAsciiResult_293306";}}
    FunctionDef{
     Name{"Codefile_selection.9747";}
     LangName{"Codefile_selection.9747";"Codefile_selection.9747";}
     Type{2;}
     Icon{0;}
     Properties{}
     ActualParam{}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"break";
      ActionCond{"";"nok";}}
     Extra{"teststep";}
     NodeCategory{"";}
     Info{"Strukturelement";"structure element";}
     Rights{"Write";"Read";}
     VersionInfo{}
     Class{"Neu_309394";}
     FunctionDef{
      Name{"VW_Codefile_STG.9748";}
      LangName{"VW_Codefile_STG.9748";"VW_Codefile_STG.9748";}
      Type{2;}
      Icon{0;}
      Properties{}
      ActualParam{"DIALOG_LOKAL";"Symbol";"CDialogZeile1";"Symbol";"CText_Info_Codefile_Gateway";"Symbol";"C19_Gateway";"Symbol";"Gateway_ID_1_Result";"Symbol";"Gateway_ID_2_Result";"Symbol";"Gateway_ID_3_Result";"Symbol";"Gateway_ID_4_Result";"Symbol";"Gateway_ID_5_Result";"Symbol";"Gateway_ID_6_Result";"Symbol";"Gateway_ID_7_Result";"Symbol";"Gateway_Coding_Result";"Symbol";"Gateway_LongCode_Result";"Symbol";"Gateway_Coding_Style";"Symbol";"Gateway_Login_1";"Symbol";"Gateway_Login_2";"Symbol";"Gateway_Quantity_ECU";"Symbol";"Gateway_Adaptation_String";"Symbol";"Gateway_Prog_String";"Symbol";"Gateway_ProgL_String";"Symbol";"Gateway_State";"Symbol";"Gateway_Result";"Symbol";"Gateway_Selection";"Symbol";"Gateway_Container_Name";"Symbol";"Gateway_Container_Version";"Symbol";"Gateway_ID_Expression_Result";"Symbol";"Gateway_HWBgp";"Symbol";"Gateway_SWBgp";"Symbol";"Gateway_RawPartNumber";"Symbol";}
      Condition{"ever";"ok";"";}
      Evaluation{"direct";"never";
       ActionCond{"";}}
      Extra{"teststep";}
      NodeCategory{"";}
      Info{"Dieser Baustein wertet das Codfile mit der entsprechenden STG_Nr (XX) aus.\r\n\r\nDabei werden die Files \"codefXX\",\"lXXtab\" und \"codverXX\" auf dem Pr\xFCfplatz im Directory \"skript\" ben\xF6tigt\".\r\nDiese Files werden auf ihre Richtigkeit und Zugeh\xF6hrigkeit \xFCberpr\xFCft. Sind die CRC-Pr\xFCfsummen i.O. und\r\nbesitzen alle drei Files die gleiche Versionsnummer, wird der entsprechende Satz durch \xDCberpr\xFCfung der\r\nLAS aus dem File \"lXXtab\" an Hand des Fahrzeugdatensatzes gesucht. Ist ein Satz g\xFCltig,\r\nwerden die fahrzeugabh\xE4nigen Daten aus dem File \"codefXX\" und die Freigabeversion dieses Satzes\r\naus dem File \"codverXX\" geladen.\r\n\r\nDie Bewertung dieses Bausteines OK, wenn alle oben genannten Bedingungen erf\xFCllt sind und damit ein f\xFCr diese\r\nFahrzeugausstattung passender Satz gefunden wurde. In allen anderen F\xE4llen ist die Bewertung NOK.\r\n\r\nIst die Bewertung OK, werden die gefundenen Daten unformatiert in der Variablen \"Result\" zur Verf\xFCgung\r\ngestellt. Anschlie\xDFend werden die Daten aufbereitet, in der Variablen \"ID-Result\" die Teilenummer(n) und der \r\nIndex des erwarteten Steuerger\xE4tes 12stellig und in der Variablen \"Codierung_Result\" die\r\nCodierung f\xFCr dieses Fahrzeug gespeichert. Die Codierung kann entweder in der Freigabetabelle, in einem\r\n XML-Container, oder in einem XML Container, der einen \"Codierwortgenerator\" ben\xF6tigt, enthalten sein. \r\nIn \"Login1_Result\" / \"Login2_Result\" werden Logins bereitgestellt (wenn vorhanden).\r\nIn \"Prog_String\" werden die zu programierenden Daten bereitgestellt (wenn vorhanden).\r\nDiese k\xF6nnen dann an das Element \"CodefileProgramm_Dummy\" \xFCbergeben werden\r\n\r\nDie Variable \"Auswahl_Ergebnis\" enth\xE4lt im NOK-Fall die Fehlermeldung im Klartext und im OK-Fall\r\ndie Versionsnummer der Freigabetabelle, die gefundene Satznummer und den entsprechende LAS.\r\nDiese Information wird auch in die Statistik geschrieben.\r\n\r\nDie Variable \"Result_Status\" kann f\xFCr Ablaufsteuerungen verwendet werden. Sobald der Baustein seine\r\nAnalyse beginnt wird sie auf -1 gesetzt. Ist die Analyse beendet sigalisiert eine 0 die G\xFCltigkeit der Daten.\r\nEine 1 zeigt, da\xDF w\xE4hrend der Analyse ein Fehler aufgetreten ist, oder das f\xFCr diese Fahrzeug keine\r\nDaten gefunden werden konnten.\r\nWerden Codefile-Informationen an verschiedenen Stellen des Ablaufes oder in verschiedenen Sequenzen\r\nben\xF6tigt, so kann man \xFCber die Variable \"Result_Status\" abfragen, ob die Codefile-Auswahl schon einmal\r\nerfolgt und g\xFCltig ist. So kann man wiederholte Codefile-Auswahl vermeiden. Auch ist eine Parallelisierung \r\naller Codefile-Auswertungen in einer Hintergrund-Task m\xF6glich. Voraussetzung f\xFCr die Verwendung an\r\nmehreren Stellen oder die Parallelisierung ist eine Initialisierung dieser Variablen auf -2 nach Anforderung \r\neines Fahrzeugdatensatzes.\r\nDie Syncronisatzion der Abl\xE4ufe kann hierbei mit \"Codefile_Warten\" oder Codefile_Warten_Statistik\" erfolgen.\r\n\r\nsz, 29.08.02\r\n\r\nErweietrung auf LangeCodierung.\r\nNun wird im Parameter \"Codier_Art\" angegeben ob es eine \"kurze\" Codierung wie bisher (Wert = 0) oder \r\neine Lange Codierung (Wert = 1) handelt. Bei Codier_Art = 1 wird der CodierString der langen Codierung in \r\ndem Parameter LangCode_Result \xFCbergeben; die Lange Codierung kann bis zu 250 Bytes beinhalten und mit den \r\nBausteinen \"VW2000_Codierung_Lang\" geschrieben und \"VW2000_Cod_Lang_Lesen_Bew\" gepr\xFCft werden. \r\n\r\nsz, 26.03.03\r\n\r\nErweiterung f\xFCr Freigabetabellen in Version 2.0 und Erweiterung f\xFCr ZDC 2.02.\r\nSofern in der Freigabetabelle ein Verweis auf einen ZDC V 2.02 enthalten ist, kann der WinPfau die Berechnung von \r\nCodierwort, Anpassung, Programmierdaten und Flashdaten nicht offline durchf\xFChren. Der Baustein liefert als Erweiterung\r\nneben dem Namen des Containers auch die Version des Containes zur\xFCck. Die Berechnung von Codierwort, \r\nAnpassung, Programmierung und Flashdaten erfolgt durch spezielle ZdcXxx Bausteine.\r\nF\xFCr Daten im \"alten\" WinPfau-Format <= V 102 werden die Parameter abw\xE4rtkompatibel aufgef\xFCllt.\r\nEin weiterer neuer Parameter ist \"ID_Expression\", der mit dem logischen Ausdruck der Fertigteilnummern gef\xFCllt wird.\r\n\r\ncm, 03.07.03\r\n\r\nErweiterung um den Parameter \"ProgL_String\"\r\nAb der WinPfau Version 9.2.0.3 wird in dem Parameter \"ProgL_String\" der Programmierstring im 4 Byte \r\nFormat erzeugt. Aufbau ist identisch zu dem Parameter  \"Prog_String\", jedoch Anzahl, L\xE4nge und Adresse \r\nsind jeweils 4 Byte Motorola codiert.\r\n\r\ncm, 13.08.03\r\n\r\nErzeugt der WinPfau CSF Codefiles gibt es kein Telegramm \"PRG\" mehr. Nur noch \"PRG2\"; \r\nnun wird die kurze Programmierung \"Prog_String\" mit sinnvollen Daten bef\xFCllt; damit ist der Baustein abw\xE4rtskompatibel.\r\nMit dieser Version wird nun \"Prog_String\" mit plausiblen Daten gef\xFCllt solange die START-ADR <= 2 Byte ist.\r\n\r\nsz, 03.09.03\r\n\r\nWeitere Fehler bei Umwandlung PRG2 nach PRG beseitigt.\r\n\r\njk 11.09.03\r\n\r\nBugfix zur Inkompatibilit\xE4t der Freigabetabelle *.txt mit mehr als 3 TNR (abschneiden der TNR 4 u. 5)\r\nDer Fehler tritt nur bei mehr als 3 TNR und CF20 bei FTabs im Format *.txt auf.\r\n\r\nsz  28.04.04\r\n\r\nBugfix zur Versionskennung der FTab und LAS-String in der Statistik\r\n(wurde ab Version 2.5.6 der mslext nicht mehr vollst\xE4ndig in der Statistik aufgenommen)\r\n\r\nsz  07.06.04\r\n\r\nBugfix zum Bugfix: im Fehlerfall wird jetzt nicht mehr abgebrochen, sondern wie fr\xFCher ein \r\nNOK in die Statistik geschrieben.\r\n\r\nsz  08.06.04 \r\n\r\nBugfix: fehlende Initialisierung des Parameters XmlVersion eingetragen\r\n\r\nsz  21.01.05 ";"Dieser Baustein wertet das Codfile mit der entsprechenden STG_Nr (XX) aus.\r\n\r\nDabei werden die Files \"codefXX\",\"lXXtab\" und \"codverXX\" auf dem Pr\xFCfplatz im Directory \"skript\" ben\xF6tigt\".\r\nDiese Files werden auf ihre Richtigkeit und Zugeh\xF6hrigkeit \xFCberpr\xFCft. Sind die CRC-Pr\xFCfsummen i.O. und\r\nbesitzen alle drei Files die gleiche Versionsnummer, wird der entsprechende Satz durch \xDCberpr\xFCfung der\r\nLAS aus dem File \"lXXtab\" an Hand des Fahrzeugdatensatzes gesucht. Ist ein Satz g\xFCltig,\r\nwerden die fahrzeugabh\xE4nigen Daten aus dem File \"codefXX\" und die Freigabeversion dieses Satzes\r\naus dem File \"codverXX\" geladen.\r\n\r\nDie Bewertung dieses Bausteines OK, wenn alle oben genannten Bedingungen erf\xFCllt sind und damit ein f\xFCr diese\r\nFahrzeugausstattung passender Satz gefunden wurde. In allen anderen F\xE4llen ist die Bewertung NOK.\r\n\r\nIst die Bewertung OK, werden die gefundenen Daten unformatiert in der Variablen \"Result\" zur Verf\xFCgung\r\ngestellt. Anschlie\xDFend werden die Daten aufbereitet, in der Variablen \"ID-Result\" die Teilenummer(n) und der \r\nIndex des erwarteten Steuerger\xE4tes 12stellig und in der Variablen \"Codierung_Result\" die\r\nCodierung f\xFCr dieses Fahrzeug gespeichert. Die Codierung kann entweder in der Freigabetabelle, in einem\r\n XML-Container, oder in einem XML Container, der einen \"Codierwortgenerator\" ben\xF6tigt, enthalten sein. In \r\n\"Prog_String\" werden die zu programierenden Daten bereitgestellt (wenn vorhanden).\r\nDiese k\xF6nnen dann an das Element \"CodefileProgramm_Dummy\" \xFCbergeben werden\r\n\r\nDie Variable \"Auswahl_Ergebnis\" enth\xE4lt im NOK-Fall die Fehlermeldung im Klartext und im OK-Fall\r\ndie Versionsnummer der Freigabetabelle, die gefundene Satznummer und den entsprechende LAS.\r\nDiese Information wird auch in die Statistik geschrieben.\r\n\r\nDie Variable \"Result_Status\" kann f\xFCr Ablaufsteuerungen verwendet werden. Sobald der Baustein seine\r\nAnalyse beginnt wird sie auf -1 gesetzt. Ist die Analyse beendet sigalisiert eine 0 die G\xFCltigkeit der Daten.\r\nEine 1 zeigt, da\xDF w\xE4hrend der Analyse ein Fehler aufgetreten ist, oder das f\xFCr diese Fahrzeug keine\r\nDaten gefunden werden konnten.\r\nWerden Codefile-Informationen an verschiedenen Stellen des Ablaufes oder in verschiedenen Sequenzen\r\nben\xF6tigt, so kann man \xFCber die Variable \"Result_Status\" abfragen, ob die Codefile-Auswahl schon einmal\r\nerfolgt und g\xFCltig ist. So kann man wiederholte Codefile-Auswahl vermeiden. Auch ist eine Parallelisierung \r\naller Codefile-Auswertungen in einer Hintergrund-Task m\xF6glich. Voraussetzung f\xFCr die Verwendung an\r\nmehreren Stellen oder die Parallelisierung ist eine Initialisierung dieser Variablen auf -2 nach Anforderung \r\neines Fahrzeugdatensatzes.\r\nDie Syncronisatzion der Abl\xE4ufe kann hierbei mit \"Codefile_Warten\" oder Codefile_Warten_Statistik\" erfolgen.\r\n\r\nsz, 29.08.02\r\n";}
      Rights{"Write";"Read";}
      VersionInfo{}
      Class{"VW_Codefile_STG";}}
     FunctionDef{
      Name{"Codefile_Warten_Statistik.9749";}
      LangName{"Codefile_Warten_Statistik.9749";"Codefile_Wait_Statistic.9749";}
      Type{2;}
      Icon{0;}
      Properties{"Parallel";}
      ActualParam{"DIALOG_LOKAL";"Symbol";"CDialogZeile1";"Symbol";"CText_Info_Codefile_Gateway";"Symbol";"Gateway_State";"Symbol";"Gateway_Selection";"Symbol";"CTime10";"Symbol";}
      Condition{"ever";"ok";"";}
      Evaluation{"direct";"never";
       ActionCond{"";}}
      Extra{"resultblock";"2426";"";"CStatTxtCodefileGateway_24412";"\"\"";"\"\"";"";0;"";"";"\"\"";"\"SN\"";"";}
      NodeCategory{"";}
      Info{"Platzhalter f\xFCr Pr\xFCfschritte";"";}
      Rights{"Write";"Read";}
      VersionInfo{}
      Class{"Codefile_Warten_Statistik";}}
     FunctionDef{
      Name{"ZDC_Auswerten.9750";}
      LangName{"ZDC_Auswerten.9750";"ZDC_Processing.9750";}
      Type{2;}
      Icon{0;}
      Properties{}
      ActualParam{}
      Condition{"ever";"progcond";"  (Gateway_Container_Version !=\"\")\r\n&&(Gateway_Container_Version !=\"0152\")";}
      Evaluation{"direct";"never";
       ActionCond{"";}}
      Extra{"teststep";}
      NodeCategory{"";}
      Info{"Import-Ablage\r\n";"";}
      Rights{"Write";"Read";}
      VersionInfo{}
      Class{"Neu_309394";}
      FunctionDef{
       Name{"ZDC_Open.9751";}
       LangName{"ZDC_Open.9751";"ZDC_Open.9751";}
       Type{2;}
       Icon{0;}
       Properties{}
       ActualParam{}
       Condition{"ever";"ok";"";}
       Evaluation{"direct";"never";
        ActionCond{"";}}
       Extra{"teststep";}
       NodeCategory{"";}
       Info{"Strukturbaustein";"";}
       Rights{"Write";"Read";}
       VersionInfo{}
       Class{"Neu_309394";}
       FunctionDef{
        Name{"ZdcOpen.9752";}
        LangName{"ZdcOpen.9752";"ZdcOpen.9752";}
        Type{2;}
        Icon{0;}
        Properties{}
        ActualParam{"DZdcHndl";"Symbol";"Gateway_Container_Name";"Symbol";"Gateway_Container_Version";"Symbol";"CInt_DebugLevel_02";"Symbol";}
        Condition{"ever";"ok";"";}
        Evaluation{"direct";"never";
         ActionCond{"";}}
        Extra{"teststep";}
        NodeCategory{"";}
        Info{"Baustein oeffnet einen Zieldaten-Container (ZDC) in der Version 2.02.\r\n\r\nNach erfolgreichem Aufruf wird das uebergebene Handle mit einem gueltigen Wert (Wert >= 0) gesetzt.\r\nAndernfalls wird der Parameter \"ZdcHndl\" auf -1 gesetzt.\r\n\r\nDer Baustein steht in engem Zusammenhang mit dem Baustein \"VW_Codefile_STG_9_2_0\", der die\r\nEingangsparameter \"XmlContainer\" und \"XmlVersion\" fuer diesem Baustein liefert.\r\n";"";}
        Rights{"Write";"Read";}
        VersionInfo{}
        Class{"ZdcOpen_309411";}}}
      FunctionDef{
       Name{"ZDC_Config_data.9753";}
       LangName{"ZDC_Config_data.9753";"ZDC_Config_data.9753";}
       Type{2;}
       Icon{0;}
       Properties{}
       ActualParam{}
       Condition{"ever";"ok";"";}
       Evaluation{"direct";"never";
        ActionCond{"";}}
       Extra{"teststep";}
       NodeCategory{"";}
       Info{"Strukturbaustein";"";}
       Rights{"Write";"Read";}
       VersionInfo{}
       Class{"Neu_309394";}
       FunctionDef{
        Name{"ZdcAnpassung.9754";}
        LangName{"ZdcAnpassung.9754";"ZdcAdaptation.9754";}
        Type{2;}
        Icon{0;}
        Properties{}
        ActualParam{"DIALOG_LOKAL";"Symbol";"CDialog_Keine_Anzeige";"Symbol";"CText_Info_Codefile_Selection";"Symbol";"DZdcHndl";"Symbol";"CStr_ZDC_Modus_All";"Symbol";"Gateway_Adaptation_String";"Symbol";}
        Condition{"ever";"ok";"";}
        Evaluation{"direct";"never";
         ActionCond{"";}}
        Extra{"teststep";}
        NodeCategory{"";}
        Info{"Dieser Baustein berechnet die Anpassdaten nach dem Zieldatencontainer (ZDC) V 2.02. (S)\r\n\r\nAls Parameter muss das \"ZdcHndl\" \xFCbergeben werden, dass mit dem Baustein \"ZdcOpen\" erzeugt wurde.\r\n\r\nDer Parameter \"Modusteil\" kann zur Filterung der Daten innerhalb des Containers verwendet werden. \r\nMit Modusteil gleich \"\" werden alle Tabellen mit dem Modus \"A\" im ZDC ausgewertet.\r\n\r\nDer Baustein liefert mit dem Parameter \"Anpassung_String\" die Anpassdaten im DSA internen Austauschformat\r\nf\xFCr die Bausteine:\r\n- CodefileAnpassung_KWP2000\r\n- CodefileAnpassung_KWP1281\r\nAchtung:\r\nDas DSA interne Austauschformat f\xFCr diese Bausteine l\xE4sst nur die kurze Anpassung zu. \r\nDie kurze Anpassung besteht aus 2 Byte Anpasskanal und 2 Byte Anpassung.\r\n\r\nDer Baustein berechnet nur die Anpassdaten. Das Schreiben der Daten erfolgt nicht durch diesen Baustein!\r\n\r\n//sr 14.06.04: Bugfix: iDataTyp ist im Fall der Anpassung 64 und nicht 16. Erst Verwendbar ab mslext.dll Version 2.7.\r\n";"";}
        Rights{"Write";"Read";}
        VersionInfo{}
        Class{"ZdcAnpassung_309414";}}
       FunctionDef{
        Name{"ZdcKalibrierungL.9755";}
        LangName{"ZdcKalibrierungL.9755";"ZdcKalibrierungL.9755";}
        Type{2;}
        Icon{0;}
        Properties{}
        ActualParam{"DIALOG_LOKAL";"Symbol";"CDialog_Keine_Anzeige";"Symbol";"CText_Info_Codefile_Gateway";"Symbol";"DZdcHndl";"Symbol";"CZDCModus_K1";"Symbol";"Gateway_ZDC_Calibration_String_1";"Symbol";}
        Condition{"LAS";"LAS_not_GP1";"ever";"ok";"";}
        Evaluation{"direct";"never";
         ActionCond{"";}}
        Extra{"resultblock";"4894";"";"";"\"\"";"\"\"";"";0;"";"";"\"\"";"SN";"";}
        NodeCategory{"";}
        Info{"Dieser Baustein berechnet die Kalibrierdaten nach dem Zieldatencontainer (ZDC) V 2.04. (S)\r\n\r\nAls Parameter muss das \"ZdcHndl\" \xFCbergeben werden, dass mit dem Baustein \"ZdcOpen\" erzeugt wurde.\r\n\r\nDer Parameter \"Modusteil\" kann zur Filterung der Daten innerhalb des Containers verwendet werden. \r\nMit Modusteil gleich \"\" werden alle Tabellen mit dem Modus \"K\" im ZDC ausgewertet.\r\n\r\n\r\nDer Baustein liefert mit dem Parameter \"KalibL_String\" die Kalibrierdaten im DSA internen Austauschformat\r\nf\xFCr Kalibrierdaten mit 4 Byte Adresse.\r\n\r\nDer Baustein berechnet nur die Kalibrierdaten. Das Schreiben der Daten erfolgt nicht \r\ndurch diesen Baustein!\r\n\r\n\r\nDas Format des KalibL_String ist wie folgt aufgebaut:\r\n\r\n4 Byte: Anzahl Kalibrierungen;\r\n    4 Byte: 1. ServiceID (z.B. 0000002E f\xFCr Dienst 2E);\r\n    4 Byte: 1. RecordDataID (entspricht vom Sinn her einer Adresse. Z.B. 00000530);\r\n    4 Byte: 1. Laenge n der einzelnen Kalibrierung; \r\n    n Byte: 1. Kalibrierdaten;\r\n\r\n    4 Byte: 2. ServiceID;\r\n    4 Byte: 2. RecordDataID;\r\n    4 Byte: 2. Laenge m der einzelnen Kalibrierung; \r\n    m Byte: 2. Kalibrierdaten;\r\n\r\n    ...\r\n\r\n";"";}
        Rights{"Write";"Read";}
        VersionInfo{}
        Class{"ZdcKalibrierungL_309417";}}
       FunctionDef{
        Name{"ZdcKalibrierungL.9756";}
        LangName{"ZdcKalibrierungL.9756";"ZdcKalibrierungL.9756";}
        Type{2;}
        Icon{0;}
        Properties{}
        ActualParam{"DIALOG_LOKAL";"Symbol";"CDialog_Keine_Anzeige";"Symbol";"CText_Info_Codefile_Gateway";"Symbol";"DZdcHndl";"Symbol";"ConstVar46968";"Const";"Gateway_ZDC_Calibration_String_1";"Symbol";}
        Condition{"LAS";"LAS_GP1";"ever";"ok";"";}
        Evaluation{"direct";"never";
         ActionCond{"";}}
        Extra{"resultblock";"4894";"";"";"\"\"";"\"\"";"";0;"";"";"\"\"";"SN";"";}
        NodeCategory{"";}
        Info{"Dieser Baustein berechnet die Kalibrierdaten nach dem Zieldatencontainer (ZDC) V 2.04. (S)\r\n\r\nAls Parameter muss das \"ZdcHndl\" \xFCbergeben werden, dass mit dem Baustein \"ZdcOpen\" erzeugt wurde.\r\n\r\nDer Parameter \"Modusteil\" kann zur Filterung der Daten innerhalb des Containers verwendet werden. \r\nMit Modusteil gleich \"\" werden alle Tabellen mit dem Modus \"K\" im ZDC ausgewertet.\r\n\r\n\r\nDer Baustein liefert mit dem Parameter \"KalibL_String\" die Kalibrierdaten im DSA internen Austauschformat\r\nf\xFCr Kalibrierdaten mit 4 Byte Adresse.\r\n\r\nDer Baustein berechnet nur die Kalibrierdaten. Das Schreiben der Daten erfolgt nicht \r\ndurch diesen Baustein!\r\n\r\n\r\nDas Format des KalibL_String ist wie folgt aufgebaut:\r\n\r\n4 Byte: Anzahl Kalibrierungen;\r\n    4 Byte: 1. ServiceID (z.B. 0000002E f\xFCr Dienst 2E);\r\n    4 Byte: 1. RecordDataID (entspricht vom Sinn her einer Adresse. Z.B. 00000530);\r\n    4 Byte: 1. Laenge n der einzelnen Kalibrierung; \r\n    n Byte: 1. Kalibrierdaten;\r\n\r\n    4 Byte: 2. ServiceID;\r\n    4 Byte: 2. RecordDataID;\r\n    4 Byte: 2. Laenge m der einzelnen Kalibrierung; \r\n    m Byte: 2. Kalibrierdaten;\r\n\r\n    ...\r\n\r\n";"";}
        Rights{"Write";"Read";}
        VersionInfo{}
        Class{"ZdcKalibrierungL_309417";}}
       FunctionDef{
        Name{"ZdcKalibrierungL.9757";}
        LangName{"ZdcKalibrierungL.9757";"ZdcKalibrierungL.9757";}
        Type{2;}
        Icon{0;}
        Properties{}
        ActualParam{"DIALOG_LOKAL";"Symbol";"CDialog_Keine_Anzeige";"Symbol";"CText_Info_Codefile_Gateway";"Symbol";"DZdcHndl";"Symbol";"CZDCModus_K2";"Symbol";"Gateway_ZDC_Calibration_String_2";"Symbol";}
        Condition{"LAS";"LAS_not_GP1";"ever";"ok";"";}
        Evaluation{"direct";"never";
         ActionCond{"";}}
        Extra{"resultblock";"4895";"";"";"\"\"";"\"\"";"";0;"";"";"\"\"";"SN";"";}
        NodeCategory{"";}
        Info{"Dieser Baustein berechnet die Kalibrierdaten nach dem Zieldatencontainer (ZDC) V 2.04. (S)\r\n\r\nAls Parameter muss das \"ZdcHndl\" \xFCbergeben werden, dass mit dem Baustein \"ZdcOpen\" erzeugt wurde.\r\n\r\nDer Parameter \"Modusteil\" kann zur Filterung der Daten innerhalb des Containers verwendet werden. \r\nMit Modusteil gleich \"\" werden alle Tabellen mit dem Modus \"K\" im ZDC ausgewertet.\r\n\r\n\r\nDer Baustein liefert mit dem Parameter \"KalibL_String\" die Kalibrierdaten im DSA internen Austauschformat\r\nf\xFCr Kalibrierdaten mit 4 Byte Adresse.\r\n\r\nDer Baustein berechnet nur die Kalibrierdaten. Das Schreiben der Daten erfolgt nicht \r\ndurch diesen Baustein!\r\n\r\n\r\nDas Format des KalibL_String ist wie folgt aufgebaut:\r\n\r\n4 Byte: Anzahl Kalibrierungen;\r\n    4 Byte: 1. ServiceID (z.B. 0000002E f\xFCr Dienst 2E);\r\n    4 Byte: 1. RecordDataID (entspricht vom Sinn her einer Adresse. Z.B. 00000530);\r\n    4 Byte: 1. Laenge n der einzelnen Kalibrierung; \r\n    n Byte: 1. Kalibrierdaten;\r\n\r\n    4 Byte: 2. ServiceID;\r\n    4 Byte: 2. RecordDataID;\r\n    4 Byte: 2. Laenge m der einzelnen Kalibrierung; \r\n    m Byte: 2. Kalibrierdaten;\r\n\r\n    ...\r\n\r\n";"";}
        Rights{"Write";"Read";}
        VersionInfo{}
        Class{"ZdcKalibrierungL_309417";}}
       FunctionDef{
        Name{"ZdcKalibrierungL.9758";}
        LangName{"ZdcKalibrierungL.9758";"ZdcKalibrierungL.9758";}
        Type{2;}
        Icon{0;}
        Properties{}
        ActualParam{"DIALOG_LOKAL";"Symbol";"CDialog_Keine_Anzeige";"Symbol";"CText_Info_Codefile_Gateway";"Symbol";"DZdcHndl";"Symbol";"ConstVar46969";"Const";"Gateway_ZDC_Calibration_String_2";"Symbol";}
        Condition{"LAS";"LAS_GP1";"ever";"ok";"";}
        Evaluation{"direct";"never";
         ActionCond{"";}}
        Extra{"resultblock";"4894";"";"";"\"\"";"\"\"";"";0;"";"";"\"\"";"SN";"";}
        NodeCategory{"";}
        Info{"Dieser Baustein berechnet die Kalibrierdaten nach dem Zieldatencontainer (ZDC) V 2.04. (S)\r\n\r\nAls Parameter muss das \"ZdcHndl\" \xFCbergeben werden, dass mit dem Baustein \"ZdcOpen\" erzeugt wurde.\r\n\r\nDer Parameter \"Modusteil\" kann zur Filterung der Daten innerhalb des Containers verwendet werden. \r\nMit Modusteil gleich \"\" werden alle Tabellen mit dem Modus \"K\" im ZDC ausgewertet.\r\n\r\n\r\nDer Baustein liefert mit dem Parameter \"KalibL_String\" die Kalibrierdaten im DSA internen Austauschformat\r\nf\xFCr Kalibrierdaten mit 4 Byte Adresse.\r\n\r\nDer Baustein berechnet nur die Kalibrierdaten. Das Schreiben der Daten erfolgt nicht \r\ndurch diesen Baustein!\r\n\r\n\r\nDas Format des KalibL_String ist wie folgt aufgebaut:\r\n\r\n4 Byte: Anzahl Kalibrierungen;\r\n    4 Byte: 1. ServiceID (z.B. 0000002E f\xFCr Dienst 2E);\r\n    4 Byte: 1. RecordDataID (entspricht vom Sinn her einer Adresse. Z.B. 00000530);\r\n    4 Byte: 1. Laenge n der einzelnen Kalibrierung; \r\n    n Byte: 1. Kalibrierdaten;\r\n\r\n    4 Byte: 2. ServiceID;\r\n    4 Byte: 2. RecordDataID;\r\n    4 Byte: 2. Laenge m der einzelnen Kalibrierung; \r\n    m Byte: 2. Kalibrierdaten;\r\n\r\n    ...\r\n\r\n";"";}
        Rights{"Write";"Read";}
        VersionInfo{}
        Class{"ZdcKalibrierungL_309417";}}
       FunctionDef{
        Name{"ErrDebugInfoStr.9759";}
        LangName{"ErrDebugInfoStr.9759";"ErrDebugInfoStr.9759";}
        Type{2;}
        Icon{2;}
        Properties{}
        ActualParam{"CNullPosition";"Symbol";"Gateway_Container_Name";"Symbol";"ConstVar44293";"Const";}
        Condition{"ever";"ok";"";}
        Evaluation{"no";"never";
         ActionCond{"";}}
        Extra{"teststep";}
        NodeCategory{"";}
        Info{"Debug-Ausgabe einer Zeichenkette";"Debug-Ausgabe einer Zeichenkette";}
        Rights{"Write";"Read";}
        VersionInfo{}
        Class{"ErrDebugInfoStr";}}
       FunctionDef{
        Name{"ErrDebugInfoStr.9760";}
        LangName{"ErrDebugInfoStr.9760";"ErrDebugInfoStr.9760";}
        Type{2;}
        Icon{2;}
        Properties{}
        ActualParam{"CNullPosition";"Symbol";"Gateway_Container_Version";"Symbol";"ConstVar44294";"Const";}
        Condition{"ever";"ok";"";}
        Evaluation{"no";"never";
         ActionCond{"";}}
        Extra{"teststep";}
        NodeCategory{"";}
        Info{"Debug-Ausgabe einer Zeichenkette";"Debug-Ausgabe einer Zeichenkette";}
        Rights{"Write";"Read";}
        VersionInfo{}
        Class{"ErrDebugInfoStr";}}}
      FunctionDef{
       Name{"Neu.9761";}
       LangName{"ZDC_schliessen.9761";"ZDC_Close.9761";}
       Type{2;}
       Icon{0;}
       Properties{}
       ActualParam{}
       Condition{"ever";"ok";"";}
       Evaluation{"direct";"never";
        ActionCond{"";}}
       Extra{"teststep";}
       NodeCategory{"";}
       Info{"Strukturbaustein";"";}
       Rights{"Write";"Read";}
       VersionInfo{}
       Class{"Neu_309394";}
       FunctionDef{
        Name{"ZdcClose.9762";}
        LangName{"ZdcClose.9762";"ZdcClose.9762";}
        Type{2;}
        Icon{0;}
        Properties{}
        ActualParam{"DZdcHndl";"Symbol";}
        Condition{"ever";"ok";"";}
        Evaluation{"direct";"never";
         ActionCond{"";}}
        Extra{"teststep";}
        NodeCategory{"";}
        Info{"Baustein schlie\xDFt einen Zieldaten-Container (ZDC) in der Version 2.02, der zuvor mit dem Baustein \r\n\"ZdcOpen\" ge\xF6ffnet wurde.";"";}
        Rights{"Write";"Read";}
        VersionInfo{}
        Class{"ZdcClose_309422";}}}}}
    FunctionDef{
     Name{"ECU_communication_start.9763";}
     LangName{"ECU_communication_start.9763";"ECU_communication_start.9763";}
     Type{2;}
     Icon{0;}
     Properties{}
     ActualParam{}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"break";
      ActionCond{"";"nok";}}
     Extra{"teststep";}
     NodeCategory{"";}
     Info{"";"";}
     Rights{"Write";"Read";}
     VersionInfo{}
     Class{"Neu_309394";}
     FunctionDef{
      Name{"VW_STG_Verbindung_Param.9764";}
      LangName{"VW_STG_Verbindung_Param.9764";"VW_ECU_Connection_Param.9764";}
      Type{2;}
      Icon{1;}
      Properties{}
      ActualParam{"VCIKanal1";"Symbol";"DIALOG_LOKAL";"Symbol";"CDialogZeile1";"Symbol";"VCI_Typ_VCI5";"Symbol";"Prokoll_KWP2000_TP20";"Symbol";"ECU_Gateway";"Symbol";"CTimeout_00010";"Symbol";"DLevel";"Symbol";"SemaCanTP20";"Symbol";}
      Condition{"ever";"ok";"";}
      Evaluation{"direct";"never";
       ActionCond{"";}}
      Extra{"resultblock";"2427";"";"CStatKommunikationGateway_24413";"\"\"";"\"\"";"";0;"";"";"\"\"";"SN";"";}
      NodeCategory{"";}
      Info{"VW_STG_Verbindung\r\n\r\nBaustein zum Oeffnen eines Steuergeraetekanals auf K- oder CAN-Leitung \r\n\r\nDieser Baustein liest eine Standard-Konfiguration zur STG-Kommunikation ein. Danach werden alle notwendigen Parameter\r\n in diesem Init-Datensatz ueberschrieben und der Kanal geoeffnet.\r\nAusserdem wird der Debug-Level fuer die VCI-Kommunikation gesetzt und fuer die Kommunikation TP2.0 auf VCI2,4,6 der\r\nParameter zur Entkopplung des Oeffnen des CAN-Kanals gegeben..\r\n\r\nDieser Baustein mu\xDF vor Verwendung aller anderen VCI-Funktionen ausgef\xFChrt werden.\r\n\r\nParameter:\r\n\r\nSTG_Hndl: das VCI-Handle, das geoeffnet wird.\r\nDLG_Hndl: das Dialog-Handle, das geoeffnet wird.\r\nZeile: die ZeilenNr fuer die Ausgabe (<1 keine Ausgabe)\r\nVCI_Type: der in dem Geraet eingesetzter VCI-Typ  (VCI_Type = 0 : VCI4; VCI_Type = 1 : VCI5)\r\nProtokoll: das verwendete Protokoll fuer die VCI-Kommuniktion\r\nSteuergeraet: der Steuergeraete der Kommunikation\r\nTimeout: die Zeit, welche fuer das Anreizen verwendet wird\r\nLevel: Debuglevel der VCI-Kommunikation\r\nParHndl: Handel zum Enttkoppeln des gleichzeitigen Anreizens\r\n\r\n04.07.06 sz - Aenderung der Wartezeit bei der Parallel-Verriegelung vor das VCI-Init \r\n03.11.06 sz - Erweiterung bei nicht geschlossenem Handle, _vciAdapt (ab msl version 4!!)";"";}
      Rights{"Write";"Read";}
      VersionInfo{}
      Class{"VW_STG_Verbindung_Param";}}}
    FunctionDef{
     Name{"Neu.9765";}
     LangName{"ID_Check.9765";"ID_Check.9765";}
     Type{2;}
     Icon{0;}
     Properties{}
     ActualParam{}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"break";
      ActionCond{"";"nok";}}
     Extra{"teststep";}
     NodeCategory{"";}
     Info{"Strukturelement";"This branch of the library is used for temporary files from\r\nnew or imported library modules. It is a pure structuring\r\nlevel.";}
     Rights{"Write";"Read";}
     VersionInfo{}
     Class{"Neu_309394";}
     FunctionDef{
      Name{"Read_PartNo.9766";}
      LangName{"Read_PartNo.9766";"Read_PartNo.9766";}
      Type{2;}
      Icon{0;}
      Properties{}
      ActualParam{}
      Condition{"ever";"ok";"";}
      Evaluation{"direct";"break";
       ActionCond{"";"nok";}}
      Extra{"teststep";}
      NodeCategory{"";}
      Info{"Strukturelement";"structure element";}
      Rights{"Write";"Read";}
      VersionInfo{}
      Class{"Neu_309394";}
      FunctionDef{
       Name{"Read_ECU_Spare_PartNo.9767";}
       LangName{"Read_ECU_Spare_PartNo.9767";"Read_ECU_Spare_PartNo.9767";}
       Type{2;}
       Icon{0;}
       Properties{}
       ActualParam{}
       Condition{"ever";"ok";"";}
       Evaluation{"direct";"never";
        ActionCond{"";}}
       Extra{"teststep";}
       NodeCategory{"";}
       Info{"Strukturelement";"structure element";}
       Rights{"Write";"Read";}
       VersionInfo{}
       Class{"Neu_309394";}
       FunctionDef{
        Name{"VW2000_ReadDataByLocalId_ASCII_String.9768";}
        LangName{"VW2000_ReadDataByLocalId_ASCII_String.9768";"VW2000_ReadDataByLocalId_ASCII_String.9768";}
        Type{2;}
        Icon{1;}
        Properties{}
        ActualParam{"VCIKanal1";"Symbol";"CLID_VW_SparePartNumber";"Symbol";"DStr_Gateway_Spare_PartNo";"Symbol";"DLID";"Symbol";}
        Condition{"ever";"ok";"";}
        Evaluation{"direct";"never";
         ActionCond{"";}}
        Extra{"teststep";}
        NodeCategory{"";}
        Info{"SG-Identifikation mit Service 0x22; \r\nmit Local Identifier (LID), der im Parameter LID uebergeben wird.:\r\nEs wird ueberprueft, ob die Diagnosefunktion unterstuetzt wird, dann wird der Service ausgefuehrt.\r\nDer Parameter RecvTel liefert den kompletten Wert der STG-Antwort zur\xFCck und\r\nder Parameter ASCII_String den eigentlichen gelesenen Wert.\r\nDer Baustein liefert ein OK wenn die LID gelesen werden konnte.\r\nDer Baustein liefert ein ABBR wenn die Diagnosefunktion nicht unterst\xFCtzt wird.\r\nDer Baustein liefert ein NOK wenn die LID nicht gelesen werden konnte.\r\n\r\njk, 29.12.05";"Modul reads the ECU Id by using the KWP2000-Comand ReadByIdentifier (Requesttitel 0x22) \r\nthe RID will be given in the parameter LID.\r\nIt will be testet if the service is supported, than the service will be executed.\r\nThe parameter ID_String contains the ECU answer without the LID. Length n Byte (see spec.)\r\nThe evaluatin of the module will be OK if the reading of the RID was OK.\r\n\r\nsz, 31.05.05";}
        Rights{"Write";"Read";}
        VersionInfo{}
        Class{"VW2000_ReadDataByLocalId_ASCII_String";}}
       FunctionDef{
        Name{"ErrDebugInfoStr.9769";}
        LangName{"ErrDebugInfoStr.9769";"ErrDebugInfoStr.9769";}
        Type{2;}
        Icon{2;}
        Properties{}
        ActualParam{"CNullPosition";"Symbol";"DStr_Gateway_Spare_PartNo";"Symbol";"ConstVar44303";"Const";}
        Condition{"ever";"ok";"";}
        Evaluation{"no";"never";
         ActionCond{"";}}
        Extra{"teststep";}
        NodeCategory{"";}
        Info{"Debug-Ausgabe einer Zeichenkette";"Debug-Ausgabe einer Zeichenkette";}
        Rights{"Write";"Read";}
        VersionInfo{}
        Class{"ErrDebugInfoStr";}}
       FunctionDef{
        Name{"Validate_PartNo.9770";}
        LangName{"Validate_PartNo.9770";"Validate_PartNo.9770";}
        Type{2;}
        Icon{0;}
        Properties{}
        ActualParam{}
        Condition{"ever";"ok";"";}
        Evaluation{"direct";"never";
         ActionCond{"";"nok";}}
        Extra{"teststep";}
        NodeCategory{"";}
        Info{"Import-Ablage\r\n";"";}
        Rights{"Write";"Read";}
        VersionInfo{}
        Class{"Neu_309394";}
        FunctionDef{
         Name{"StringAdd.9771";}
         LangName{"StringAdd.9771";"StringAdd.9771";}
         Type{2;}
         Icon{0;}
         Properties{}
         ActualParam{"DStr_Gateway_Spare_PartNo";"Symbol";"ConstVar44786";"Const";"DVWSparePartNumber";"Symbol";}
         Condition{"ever";"ok";"";}
         Evaluation{"direct";"never";
          ActionCond{"";}}
         Extra{"teststep";}
         NodeCategory{"";}
         Info{"Baustein zur Verkettung von Zeichenketten.\r\n\r\nDestString = String1 + String2";"Component for the linking of strings.\r\n\r\nDestString = String1 + String2\r\n";}
         Rights{"Write";"Read";}
         VersionInfo{}
         Class{"StringAdd";}}
        FunctionDef{
         Name{"ZdcFtnCheck.9772";}
         LangName{"ZdcFtnCheck.9772";"ZdcFtnCheck.9772";}
         Type{2;}
         Icon{0;}
         Properties{}
         ActualParam{"Gateway_ID_Expression_Result";"Symbol";"DVWSparePartNumber";"Symbol";}
         Condition{"ever";"ok";"";}
         Evaluation{"direct";"never";
          ActionCond{"";}}
         Extra{"resultblock";"460";"";"CStatTeilenummerGateway";"\"\"";"\"\"";"";0;"";"";"\"\"";"SN";"";}
         NodeCategory{"";}
         Info{"Baustein zur Bewertung eines logischen VW-LAS Ausdrucks (s).\r\n\r\nMit dem Parameter \"ID_Expression\" wird der logische Ausdruck \xFCbergeben.\r\nDieser Wert wird mit dem Baustein \"VW_Codefile_STG_9_2_0\" geliefert.\r\n\r\nMit dem Parameter \"ID_Result\" wird der ID-String oder die Verkettung von ID-Strings \xFCbergeben.\r\nDie ID's m\xFCssen jeweils genau 12 Zeichen lang sein.\r\n\r\nDer Baustein liefert OK zur\xFCck, wenn der logische Ausdruck durch die ID's im Parameter \"ID_Result\" wahr wird, \r\nandernfalls NOK.\r\n\r\n\r\n";"";}
         Rights{"Write";"Read";}
         VersionInfo{}
         Class{"ZdcFtnCheck_309433";}}}}
      FunctionDef{
       Name{"Read_ECU_HW_Ref_PartNo.9773";}
       LangName{"Read_ECU_HW_Ref_PartNo.9773";"Read_ECU_HW_Ref_PartNo.9773";}
       Type{2;}
       Icon{0;}
       Properties{}
       ActualParam{}
       Condition{"Never";"ever";"ok";"";}
       Evaluation{"direct";"never";
        ActionCond{"";}}
       Extra{"teststep";}
       NodeCategory{"";}
       Info{"Strukturelement";"structure element";}
       Rights{"Write";"Read";}
       VersionInfo{}
       Class{"Neu_309394";}
       FunctionDef{
        Name{"VW2000_ReadDataByLocalId_ASCII_String.9774";}
        LangName{"VW2000_ReadDataByLocalId_ASCII_String.9774";"VW2000_ReadDataByLocalId_ASCII_String.9774";}
        Type{2;}
        Icon{1;}
        Properties{}
        ActualParam{"VCIKanal1";"Symbol";"CLID_VW_HW_Ref_PartNo";"Symbol";"DStr_Gateway_HW_Ref_PartNo";"Symbol";"DLID";"Symbol";}
        Condition{"ever";"ok";"";}
        Evaluation{"direct";"never";
         ActionCond{"";}}
        Extra{"resultblock";"5906";"";"CStat_HW_Ref_PartNo_Gateway_test";"\"\"";"\"\"";"";0;"";"";"\"A\"";"SN";"";}
        NodeCategory{"";}
        Info{"SG-Identifikation mit Service 0x22; \r\nmit Local Identifier (LID), der im Parameter LID uebergeben wird.:\r\nEs wird ueberprueft, ob die Diagnosefunktion unterstuetzt wird, dann wird der Service ausgefuehrt.\r\nDer Parameter RecvTel liefert den kompletten Wert der STG-Antwort zur\xFCck und\r\nder Parameter ASCII_String den eigentlichen gelesenen Wert.\r\nDer Baustein liefert ein OK wenn die LID gelesen werden konnte.\r\nDer Baustein liefert ein ABBR wenn die Diagnosefunktion nicht unterst\xFCtzt wird.\r\nDer Baustein liefert ein NOK wenn die LID nicht gelesen werden konnte.\r\n\r\njk, 29.12.05";"Modul reads the ECU Id by using the KWP2000-Comand ReadByIdentifier (Requesttitel 0x22) \r\nthe RID will be given in the parameter LID.\r\nIt will be testet if the service is supported, than the service will be executed.\r\nThe parameter ID_String contains the ECU answer without the LID. Length n Byte (see spec.)\r\nThe evaluatin of the module will be OK if the reading of the RID was OK.\r\n\r\nsz, 31.05.05";}
        Rights{"Write";"Read";}
        VersionInfo{}
        Class{"VW2000_ReadDataByLocalId_ASCII_String";}}
       FunctionDef{
        Name{"ErrDebugInfoStr.9775";}
        LangName{"ErrDebugInfoStr.9775";"ErrDebugInfoStr.9775";}
        Type{2;}
        Icon{2;}
        Properties{}
        ActualParam{"CNullPosition";"Symbol";"DStr_Gateway_HW_Ref_PartNo";"Symbol";"ConstVar44309";"Const";}
        Condition{"ever";"ok";"";}
        Evaluation{"no";"never";
         ActionCond{"";}}
        Extra{"teststep";}
        NodeCategory{"";}
        Info{"Debug-Ausgabe einer Zeichenkette";"Debug-Ausgabe einer Zeichenkette";}
        Rights{"Write";"Read";}
        VersionInfo{}
        Class{"ErrDebugInfoStr";}}}
      FunctionDef{
       Name{"Read_ECU_HW_Version.9776";}
       LangName{"Read_ECU_HW_Version.9776";"Read_ECU_HW_Version.9776";}
       Type{2;}
       Icon{0;}
       Properties{}
       ActualParam{}
       Condition{"Never";"ever";"ok";"";}
       Evaluation{"direct";"never";
        ActionCond{"";}}
       Extra{"teststep";}
       NodeCategory{"";}
       Info{"Strukturelement";"structure element";}
       Rights{"Write";"Read";}
       VersionInfo{}
       Class{"Neu_309394";}
       FunctionDef{
        Name{"VW2000_ReadDataByLocalId_ASCII_String.9777";}
        LangName{"VW2000_ReadDataByLocalId_ASCII_String.9777";"VW2000_ReadDataByLocalId_ASCII_String.9777";}
        Type{2;}
        Icon{1;}
        Properties{}
        ActualParam{"VCIKanal1";"Symbol";"CLID_VW_HW_Version_Number";"Symbol";"DStr_Gateway_HW_Version";"Symbol";"DLID";"Symbol";}
        Condition{"ever";"ok";"";}
        Evaluation{"direct";"never";
         ActionCond{"";}}
        Extra{"teststep";}
        NodeCategory{"";}
        Info{"SG-Identifikation mit Service 0x22; \r\nmit Local Identifier (LID), der im Parameter LID uebergeben wird.:\r\nEs wird ueberprueft, ob die Diagnosefunktion unterstuetzt wird, dann wird der Service ausgefuehrt.\r\nDer Parameter RecvTel liefert den kompletten Wert der STG-Antwort zur\xFCck und\r\nder Parameter ASCII_String den eigentlichen gelesenen Wert.\r\nDer Baustein liefert ein OK wenn die LID gelesen werden konnte.\r\nDer Baustein liefert ein ABBR wenn die Diagnosefunktion nicht unterst\xFCtzt wird.\r\nDer Baustein liefert ein NOK wenn die LID nicht gelesen werden konnte.\r\n\r\njk, 29.12.05";"Modul reads the ECU Id by using the KWP2000-Comand ReadByIdentifier (Requesttitel 0x22) \r\nthe RID will be given in the parameter LID.\r\nIt will be testet if the service is supported, than the service will be executed.\r\nThe parameter ID_String contains the ECU answer without the LID. Length n Byte (see spec.)\r\nThe evaluatin of the module will be OK if the reading of the RID was OK.\r\n\r\nsz, 31.05.05";}
        Rights{"Write";"Read";}
        VersionInfo{}
        Class{"VW2000_ReadDataByLocalId_ASCII_String";}}
       FunctionDef{
        Name{"ErrDebugInfoStr.9778";}
        LangName{"ErrDebugInfoStr.9778";"ErrDebugInfoStr.9778";}
        Type{2;}
        Icon{2;}
        Properties{}
        ActualParam{"CNullPosition";"Symbol";"DStr_Gateway_HW_Version";"Symbol";"ConstVar44312";"Const";}
        Condition{"ever";"ok";"";}
        Evaluation{"no";"never";
         ActionCond{"";}}
        Extra{"teststep";}
        NodeCategory{"";}
        Info{"Debug-Ausgabe einer Zeichenkette";"Debug-Ausgabe einer Zeichenkette";}
        Rights{"Write";"Read";}
        VersionInfo{}
        Class{"ErrDebugInfoStr";}}}
      FunctionDef{
       Name{"Read_ECU_SW_Version.9779";}
       LangName{"Read_ECU_SW_Version.9779";"Read_ECU_SW_Version.9779";}
       Type{2;}
       Icon{0;}
       Properties{}
       ActualParam{}
       Condition{"Never";"ever";"ok";"";}
       Evaluation{"direct";"never";
        ActionCond{"";}}
       Extra{"teststep";}
       NodeCategory{"";}
       Info{"Strukturelement";"structure element";}
       Rights{"Write";"Read";}
       VersionInfo{}
       Class{"Neu_309394";}
       FunctionDef{
        Name{"VW2000_ReadDataByLocalId_ASCII_String.9780";}
        LangName{"VW2000_ReadDataByLocalId_ASCII_String.9780";"VW2000_ReadDataByLocalId_ASCII_String.9780";}
        Type{2;}
        Icon{1;}
        Properties{}
        ActualParam{"VCIKanal1";"Symbol";"CLID_VW_SW_Version_Number";"Symbol";"DStr_Gateway_SW_Version";"Symbol";"DLID";"Symbol";}
        Condition{"ever";"ok";"";}
        Evaluation{"direct";"never";
         ActionCond{"";}}
        Extra{"teststep";}
        NodeCategory{"";}
        Info{"SG-Identifikation mit Service 0x22; \r\nmit Local Identifier (LID), der im Parameter LID uebergeben wird.:\r\nEs wird ueberprueft, ob die Diagnosefunktion unterstuetzt wird, dann wird der Service ausgefuehrt.\r\nDer Parameter RecvTel liefert den kompletten Wert der STG-Antwort zur\xFCck und\r\nder Parameter ASCII_String den eigentlichen gelesenen Wert.\r\nDer Baustein liefert ein OK wenn die LID gelesen werden konnte.\r\nDer Baustein liefert ein ABBR wenn die Diagnosefunktion nicht unterst\xFCtzt wird.\r\nDer Baustein liefert ein NOK wenn die LID nicht gelesen werden konnte.\r\n\r\njk, 29.12.05";"Modul reads the ECU Id by using the KWP2000-Comand ReadByIdentifier (Requesttitel 0x22) \r\nthe RID will be given in the parameter LID.\r\nIt will be testet if the service is supported, than the service will be executed.\r\nThe parameter ID_String contains the ECU answer without the LID. Length n Byte (see spec.)\r\nThe evaluatin of the module will be OK if the reading of the RID was OK.\r\n\r\nsz, 31.05.05";}
        Rights{"Write";"Read";}
        VersionInfo{}
        Class{"VW2000_ReadDataByLocalId_ASCII_String";}}
       FunctionDef{
        Name{"ErrDebugInfoStr.9781";}
        LangName{"ErrDebugInfoStr.9781";"ErrDebugInfoStr.9781";}
        Type{2;}
        Icon{2;}
        Properties{}
        ActualParam{"CNullPosition";"Symbol";"DStr_Gateway_SW_Version";"Symbol";"ConstVar44315";"Const";}
        Condition{"ever";"ok";"";}
        Evaluation{"no";"never";
         ActionCond{"";}}
        Extra{"teststep";}
        NodeCategory{"";}
        Info{"Debug-Ausgabe einer Zeichenkette";"Debug-Ausgabe einer Zeichenkette";}
        Rights{"Write";"Read";}
        VersionInfo{}
        Class{"ErrDebugInfoStr";}}}
      FunctionDef{
       Name{"StatisticRecord.9782";}
       LangName{"StatisticRecord.9782";"StatisticRecord.9782";}
       Type{2;}
       Icon{0;}
       Properties{}
       ActualParam{}
       Condition{"Never";"ever";"ok";"";}
       Evaluation{"direct";"never";
        ActionCond{"";}}
       Extra{"teststep";}
       NodeCategory{"";}
       Info{"Strukturelement";"structure element";}
       Rights{"Write";"Read";}
       VersionInfo{}
       Class{"Neu_309394";}
       FunctionDef{
        Name{"StatistikText_HW_Version.9783";}
        LangName{"StatistikText_HW_Version.9783";"StatisticText_HW_Version.9783";}
        Type{2;}
        Icon{4;}
        Properties{}
        ActualParam{"DStr_Gateway_HW_Version";"Symbol";}
        Condition{"ever";"ok";"";}
        Evaluation{"direct";"never";
         ActionCond{"";}}
        Extra{"resultblock";"5907";"";"CStat_HW_Version_Gateway_test";"\"\"";"\"\"";"";0;"";"";"\"\"";"SN";"";}
        NodeCategory{"";}
        Info{"";"Schreibt einen text in die Statistik.\r\nDie Bewertung dieses Statistikeintrages haengt von dem zuvor erzeugten Error ab. \r\nBei err == NOK - NOK Statistik.";}
        Rights{"Write";"Read";}
        VersionInfo{}
        Class{"StatistikText_NOK";}}
       FunctionDef{
        Name{"StatistikText_SW_Version.9784";}
        LangName{"StatistikText_SW_Version.9784";"StatisticText_SW_Version.9784";}
        Type{2;}
        Icon{4;}
        Properties{}
        ActualParam{"DStr_Gateway_SW_Version";"Symbol";}
        Condition{"ever";"ok";"";}
        Evaluation{"direct";"never";
         ActionCond{"";}}
        Extra{"resultblock";"5908";"";"CStat_SW_Version_Gateway_test";"\"\"";"\"\"";"";0;"";"";"\"\"";"SN";"";}
        NodeCategory{"";}
        Info{"";"Schreibt einen text in die Statistik.\r\nDie Bewertung dieses Statistikeintrages haengt von dem zuvor erzeugten Error ab. \r\nBei err == NOK - NOK Statistik.";}
        Rights{"Write";"Read";}
        VersionInfo{}
        Class{"StatistikText_NOK";}}}}}
    FunctionDef{
     Name{"Read_Configuration.9785";}
     LangName{"Read_Configuration.9785";"Read_Configuration.9785";}
     Type{2;}
     Icon{0;}
     Properties{}
     ActualParam{}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     NodeCategory{"";}
     Info{"Import-Ablage\r\n";"";}
     Rights{"Write";"Read";}
     VersionInfo{}
     Class{"Neu_309394";}
     FunctionDef{
      Name{"DlgMultiLineSet.9786";}
      LangName{"DlgMultiLineSet.9786";"DlgMultiLineSet.9786";}
      Type{2;}
      Icon{2;}
      Properties{}
      ActualParam{"DIALOG_LOKAL";"Symbol";"CDialogZeile2";"Symbol";"CText_Info_Read_Configuration_string";"Symbol";}
      Condition{"ever";"ok";"";}
      Evaluation{"no";"never";
       ActionCond{"";}}
      Extra{"teststep";}
      NodeCategory{"";}
      Info{"Bausteinen zum Setzen einer Zeile des Multi-Dialogs";"Component used to define a line of the multi-dialog.";}
      Rights{"Write";"Read";}
      VersionInfo{}
      Class{"DlgMultiLineSet";}}
     FunctionDef{
      Name{"VW2000_Read_Service_22_anyone_LID.9787";}
      LangName{"VW2000_Lese_Dienst_22_eine_LID.9787";"VW2000_Read_Service_22_anyone_LID.9787";}
      Type{2;}
      Icon{1;}
      Properties{}
      ActualParam{"VCIKanal1";"Symbol";"CLID_04A3_Gateway_configuration";"Symbol";"DStr_Variant_Coding";"Symbol";}
      Condition{"ever";"ok";"";}
      Evaluation{"direct";"never";
       ActionCond{"";}}
      Extra{"teststep";}
      NodeCategory{"";}
      Info{"SG-Identifikation mit Service 0x22; \r\nmit Local Identifier (LID), der im Parameter LID uebergeben wird.:\r\nEs wird ueberprueft, ob die Diagnosefunktion unterstuetzt wird, dann wird der Service ausgefuehrt.\r\nDer Parameter ID_String liefert den Wert zurueck. Laenge n Byte (nach Spec.).\r\nDer Baustein liefert ein OK wenn die LID gelesen werden konnte.\r\n\r\n14.06.06, sz: erstellt";"Modul reads the ECU Id by using the KWP2000-Comand ReadByIdentifier (Requesttitel 0x22) \r\nthe RID will be given in the parameter LID.\r\nIt will be testet if the service is supported, than the service will be executed.\r\nThe parameter ID_String contains the ECU answer without the LID. Length n Byte (see spec.)\r\nThe evaluatin of the module will be OK if the reading of the RID was OK.\r\n\r\nsz, 31.05.05";}
      Rights{"Write";"Read";}
      VersionInfo{}
      Class{"VW2000_Read_Service_22_anyone_LID_309439";}}
     FunctionDef{
      Name{"ZDCKalibrierung_Bewerten.9788";}
      LangName{"ZDCKalibrierung_Bewerten.9788";"ZdcKalib_Evaluate.9788";}
      Type{2;}
      Icon{1;}
      Properties{}
      ActualParam{"Gateway_ZDC_Calibration_String_1";"Symbol";"DStr_Variant_Coding";"Symbol";"CLID_04A3_Gateway_configuration";"Symbol";}
      Condition{"ever";"ok";"";}
      Evaluation{"direct";"never";
       ActionCond{"";}}
      Extra{"resultblock";"2429";"";"CStatCodierungGateway";"\"\"";"\"\"";"";0;"";"";"\"\"";"SN";"";}
      NodeCategory{"";}
      Info{"Dieser Baustein \xFCberpr\xFCft einen Wert aus dem Kalibrierstring mit der Antwort des Steuerger\xE4tes auf Gleichheit. (Ab ZDC 0204 mit Modus K)\r\n\r\nSollString: R\xFCckgabewert des Bausteins \"ZDCKalibrierungL\"\r\nIstString: Result String des ECU\r\nSearchString: Suchkriterium innerhalb des Kalibrierstrings. Als Suchkriterium ist nur der Identifier vorgesehen (z.B. \"\\h0600\" )\r\n\r\nBaustein liefert der Statistik den Soll und Istwert.\r\n\r\n// sz 06.03.09 Debug per Preprocessor";"";}
      Rights{"Write";"Read";}
      VersionInfo{}
      Class{"ZDCKalibrierung_Bewerten_old";}}
     FunctionDef{
      Name{"VW2000_Read_Service_22_anyone_LID.9789";}
      LangName{"VW2000_Lese_Dienst_22_eine_LID.9789";"VW2000_Read_Service_22_anyone_LID.9789";}
      Type{2;}
      Icon{1;}
      Properties{}
      ActualParam{"VCIKanal1";"Symbol";"CLID_0600_VWCodingValue";"Symbol";"DStr_Variant_Coding";"Symbol";}
      Condition{"ever";"ok";"";}
      Evaluation{"direct";"never";
       ActionCond{"";}}
      Extra{"teststep";}
      NodeCategory{"";}
      Info{"SG-Identifikation mit Service 0x22; \r\nmit Local Identifier (LID), der im Parameter LID uebergeben wird.:\r\nEs wird ueberprueft, ob die Diagnosefunktion unterstuetzt wird, dann wird der Service ausgefuehrt.\r\nDer Parameter ID_String liefert den Wert zurueck. Laenge n Byte (nach Spec.).\r\nDer Baustein liefert ein OK wenn die LID gelesen werden konnte.\r\n\r\n14.06.06, sz: erstellt";"Modul reads the ECU Id by using the KWP2000-Comand ReadByIdentifier (Requesttitel 0x22) \r\nthe RID will be given in the parameter LID.\r\nIt will be testet if the service is supported, than the service will be executed.\r\nThe parameter ID_String contains the ECU answer without the LID. Length n Byte (see spec.)\r\nThe evaluatin of the module will be OK if the reading of the RID was OK.\r\n\r\nsz, 31.05.05";}
      Rights{"Write";"Read";}
      VersionInfo{}
      Class{"VW2000_Read_Service_22_anyone_LID_309439";}}
     FunctionDef{
      Name{"ZDCKalibrierung_Bewerten.9790";}
      LangName{"ZDCKalibrierung_Bewerten.9790";"ZdcKalib_Evaluate.9790";}
      Type{2;}
      Icon{1;}
      Properties{}
      ActualParam{"Gateway_ZDC_Calibration_String_2";"Symbol";"DStr_Variant_Coding";"Symbol";"CLID_0600_VWCodingValue";"Symbol";}
      Condition{"ever";"ok";"";}
      Evaluation{"direct";"never";
       ActionCond{"";}}
      Extra{"resultblock";"4327";"";"CStatCodierungGateway";"\"\"";"\"\"";"";0;"";"";"\"\"";"SN";"";}
      NodeCategory{"";}
      Info{"Dieser Baustein \xFCberpr\xFCft einen Wert aus dem Kalibrierstring mit der Antwort des Steuerger\xE4tes auf Gleichheit. (Ab ZDC 0204 mit Modus K)\r\n\r\nSollString: R\xFCckgabewert des Bausteins \"ZDCKalibrierungL\"\r\nIstString: Result String des ECU\r\nSearchString: Suchkriterium innerhalb des Kalibrierstrings. Als Suchkriterium ist nur der Identifier vorgesehen (z.B. \"\\h0600\" )\r\n\r\nBaustein liefert der Statistik den Soll und Istwert.\r\n\r\n// sz 06.03.09 Debug per Preprocessor";"";}
      Rights{"Write";"Read";}
      VersionInfo{}
      Class{"ZDCKalibrierung_Bewerten_old";}}
     FunctionDef{
      Name{"ErrDebugInfoStr.9791";}
      LangName{"ErrDebugInfoStr.9791";"ErrDebugInfoStr.9791";}
      Type{2;}
      Icon{2;}
      Properties{}
      ActualParam{"CNullPosition";"Symbol";"DStr_Variant_Coding";"Symbol";"ConstVar44322";"Const";}
      Condition{"ever";"ok";"";}
      Evaluation{"no";"never";
       ActionCond{"";}}
      Extra{"teststep";}
      NodeCategory{"";}
      Info{"Debug-Ausgabe einer Zeichenkette";"Debug-Ausgabe einer Zeichenkette";}
      Rights{"Write";"Read";}
      VersionInfo{}
      Class{"ErrDebugInfoStr";}}
     FunctionDef{
      Name{"ErrDebugInfoStr.9792";}
      LangName{"ErrDebugInfoStr.9792";"ErrDebugInfoStr.9792";}
      Type{2;}
      Icon{2;}
      Properties{}
      ActualParam{"CNullPosition";"Symbol";"Gateway_ZDC_Calibration_String";"Symbol";"ConstVar44324";"Const";}
      Condition{"ever";"ok";"";}
      Evaluation{"no";"never";
       ActionCond{"";}}
      Extra{"teststep";}
      NodeCategory{"";}
      Info{"Debug-Ausgabe einer Zeichenkette";"Debug-Ausgabe einer Zeichenkette";}
      Rights{"Write";"Read";}
      VersionInfo{}
      Class{"ErrDebugInfoStr";}}}
    FunctionDef{
     Name{"DTC_read_.9793";}
     LangName{"FSP_lesen.9793";"DTC_read.9793";}
     Type{2;}
     Icon{0;}
     Properties{}
     ActualParam{}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     NodeCategory{"";}
     Info{"Import-Ablage\r\n";"";}
     Rights{"Write";"Read";}
     VersionInfo{}
     Class{"Neu_309394";}
     FunctionDef{
      Name{"VW2000_FSP_Lesen_Anzahl.9794";}
      LangName{"VW2000_FSP_Lesen_Anzahl.9794";"VW2000_DTC_Read_Quantity.9794";}
      Type{2;}
      Icon{1;}
      Properties{}
      ActualParam{"VCIKanal1";"Symbol";"DInt";"Symbol";"VW_DTC_Result";"Symbol";"VW_Codes_DTC_Read";"Symbol";}
      Condition{"ever";"ok";"";}
      Evaluation{"direct";"break";
       ActionCond{"";"break";}}
      Extra{"teststep";}
      NodeCategory{"";}
      Info{"Dieses Modul lie\xDFt den Fehlerspeicher eines Steuerger\xE4tes.\r\nEs wertet zun\xE4chst die unterst\xFCtzten Funktionen aus.\r\nDabei wird der KWP2000-Befehl readDiagnosticInfomation ( Blocktitel 0x18)\r\nmit dem Parameter allGroups (0x02 0xff 0x00) verwendet.\r\nWenn Funktion 0x0118 unterst\xFCtzt wird, wird zum lesen der SAE-Codes in neueren STG mit Parameter 0x00 0xff 0x00 gelesen.\r\nWie und ob gelesen werden konnte wird in dem Parameter FSP_Lesen_Code zur\xFCckgegeben.\r\n\r\nDer gelesene Fehlerspeicherinhalt wird immer in der Variablen \"FSP-String\" zur weiteren\r\nBearbeitung abgespeichert.\r\n\r\nBewertet und in die Statistik geschrieben wird die Anzahl, der im Steuerger\xE4t vorhanden\r\nFehler. Eine Filterung wird hierbei nicht vorgenommen.\r\n\r\nDie Bewertung diese Pr\xFCfschrittes is \"OK\", wenn der Steuerger\xE4tebefehl erfolgreich \r\nausgef\xFChrt werden konnte und kein Fehler vorhandenen ist.\r\nDie Bewertung diese Pr\xFCfschrittes is \"NOK\", wenn der Steuerger\xE4tebefehl erfolgreich \r\nausgef\xFChrt werden konnte und mindestens ein Fehler vorhandenen ist.\r\nDie Bewertung diese Pr\xFCfschrittes is \"ABBR\", wenn der Steuerger\xE4tebefehl nicht\r\nerfolgreich ausgef\xFChrt werden konnte.\r\n";"";}
      Rights{"Write";"Read";}
      VersionInfo{}
      Class{"VW2000_FSP_Lesen_Anzahl";}}
     FunctionDef{
      Name{"VW2000_FSP_Filter.9795";}
      LangName{"VW2000_FSP_Filter.9795";"VW2000_DTC_Filter.9795";}
      Type{2;}
      Icon{1;}
      Properties{}
      ActualParam{"VW_DTC_Result";"Symbol";"CStr_DTC_Filter_template";"Symbol";}
      Condition{"ever";"ok";"";}
      Evaluation{"direct";"never";
       ActionCond{"";}}
      Extra{"teststep";}
      NodeCategory{"";}
      Info{"Dieses Modul filtert aus einem durch den VW-Dienst VW2000_FSP_Lesen_Anzahl \r\ngelesenen Fehlerspeicherinhalt erlaubte Fehler heraus. \r\nDer somit gewonnene neu Fehlerspeicherinhalt kann anschlie\xDFend\r\nmit dem VW-Diensten VW2000_FSP_Bewerten_Anzahl oder VW2000_FSP_Bewerten_Fehler\r\nausgewertet und in die Statistik geschrieben werden.\r\n\r\nDie erlaubten Fehler m\xFCssen in der Variablen FSP_Filter in folgendem Format \xFCbergeben\r\nwerden:\r\n\"aaaabb\"     oder \"aaaabb;ccccdd ...\"\r\nwobei aaaa  =  1. erlaubter Fehlerort\r\n              bb  =  1. erlaubte Fehlerart\r\n          cccc  =  2. erlaubter Fehlerort\r\n              dd  =  2. erlaubte Fehlerart\r\nDie einzelnen Fehlerorte bzw. -arten sind hexadezimal mit den Zeichen \"0..9,a..f\" zu\r\ndefinieren und mit Smikolon zu trennen.\r\n\r\nDieses Modul erzeugt keine Statistik und ver\xE4ndert die vorhergehende Bewertung nicht.";"";}
      Rights{"Write";"Read";}
      VersionInfo{}
      Class{"VW2000_FSP_Filter";}}
     FunctionDef{
      Name{"VW2000_FSP_Bewerten_Fehler.9796";}
      LangName{"VW2000_FSP_Bewerten_Fehler.9796";"VW2000_DTC_Evaluate_ErrorCodes.9796";}
      Type{2;}
      Icon{1;}
      Properties{}
      ActualParam{"VCIKanal1";"Symbol";"DIALOG_LOKAL";"Symbol";"CDialogZeile1";"Symbol";"Ja";"Symbol";"CTime_0";"Symbol";"VW_DTC_Result";"Symbol";"VW_Codes_DTC_Read";"Symbol";}
      Condition{"ever";"ok";"";}
      Evaluation{"direct";"never";
       ActionCond{"";}}
      Extra{"resultblock";"2430";"";"CStatTxtFspGateway";"\"\"";"\"\"";"";0;"";"";"\"\"";"SN";"";}
      NodeCategory{"";}
      Info{"Dieses Modul lie\xDFt nicht den Fehlerspeicher eines Steuerger\xE4tes. Es wertet nur die in der\r\nVariablen gespeicherten Fehler aus. Es kann somit, die mit dem Modul VW2000_FSP_Lesen_Anzahl \r\ngelesene oder die mit dem Modul VW_FSP_Filter bearbeitete Fehlerspeicherinformation ausgewertet\r\nwerden.\r\nWie und ob der FSP gelesen werden konnte wird in dem Parameter FSP_Lesen_Code vom lesenden Baustein \r\n(VW2000_FSP_Lesen_Anzahl) \xFCbergeben. F\xFCr SAE-Codes wird in der vw_err.txt ein Prefix \"FCP\" erwartet.\r\n\r\nEs werden die vorhanden Fehercodes bewertet und in die Statistik geschrieben. \r\nEine Filterung wird hierbei nicht vorgenommen.\r\n\r\nDie Bewertung diese Pr\xFCfschrittes is \"OK\", wenn der Steuerger\xE4tebefehl erfolgreich \r\nausgef\xFChrt werden konnte und kein Fehler vorhandenen ist.\r\n\r\nWenn eine \"Anzeigezeit\" gr\xF6\xDFer 0 \xFCbergeben wird, wird im Fehlerfall dem Werker eine Liste\r\nmit den gelesenen Fehler angezeigt. Im \"OK\"-Fall wird f\xFCr diese Zeite die Bewertung\r\nVisualisiert.";"";}
      Rights{"Write";"Read";}
      VersionInfo{}
      Class{"VW2000_FSP_Bewerten_Fehler";}}}
    FunctionDef{
     Name{"ECU_comminication_stop.9797";}
     LangName{"ECU_comminication_stop.9797";"ECU_comminication_stop.9797";}
     Type{2;}
     Icon{0;}
     Properties{}
     ActualParam{}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     NodeCategory{"";}
     Info{"Struckturbaustein";"";}
     Rights{"Write";"Read";}
     VersionInfo{}
     Class{"Neu_309394";}
     FunctionDef{
      Name{"VW2000_STG_Ende.9798";}
      LangName{"VW2000_STG_Ende.9798";"VW2000_ECU_Disconnect.9798";}
      Type{2;}
      Icon{1;}
      Properties{}
      ActualParam{"VCIKanal1";"Symbol";}
      Condition{"ever";"ok";"";}
      Evaluation{"no";"never";
       ActionCond{"";}}
      Extra{"teststep";}
      NodeCategory{"";}
      Info{"Mit diesem Modul wird die Kommunikation zu einem Steuerger\xE4t beendet. Dieser Befehl ist\r\nimmer nach dem letzten Befehl f\xFCr ein Steuerger\xE4t zu senden bzw. bevor die Z\xFCndung\r\nausgeschaltet wird. \r\n\r\nDie Bewertung des Pr\xFCfschrittes ist \"OK\", wenn die Verbindung erfolgreich beendet werden\r\nkonnte.\r\n\r\nIn die Statistik wird nur ein \"OK\" bzw. \"NOK\" in Abh\xE4nigkeit von der Berwertung geschrieben.\r\n\r\n";"";}
      Rights{"Write";"Read";}
      VersionInfo{}
      Class{"VW2000_STG_Ende_309457";}}}
    FunctionDef{
     Name{"Set_TBL_complete.9799";}
     LangName{"Set_TBL_complete.9799";"Set_TBL_complete.9799";}
     Type{2;}
     Icon{1;}
     Properties{}
     ActualParam{"OK";"Symbol";"CText_Info_TestBlockComplete";"Symbol";}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"resultblock";"461";"";"CText_TestBlockComplete";"\"\"";"\"\"";"";0;"";"";"\"\"";"SN";"";}
     NodeCategory{"";}
     Info{"Baustein zum Schreiben von OK oder NOK in die Statistik. (S)";"";}
     Rights{"Write";"Read";}
     VersionInfo{}
     Class{"StatSetAsciiResult_293306";}}}
   FunctionDef{
    Name{"General_exits.9800";}
    LangName{"General_exits.9800";"General_exits.9800";}
    Type{2;}
    Icon{0;}
    Properties{}
    ActualParam{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    NodeCategory{"";}
    Info{"";"";}
    Rights{"Write";"Read";}
    VersionInfo{}
    Class{"Neu";}
    FunctionDef{
     Name{"Pruefzeit.9801";}
     LangName{"TestTime.9801";"TestTime.9801";}
     Type{2;}
     Icon{0;}
     Properties{}
     ActualParam{}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     NodeCategory{"";}
     Info{"";"";}
     Rights{"Write";"Read";}
     VersionInfo{}
     Class{"Neu";}
     FunctionDef{
      Name{"ZeitLesen.9802";}
      LangName{"ZeitLesen.9802";"Read_Time.9802";}
      Type{2;}
      Icon{0;}
      Properties{}
      ActualParam{"DTimeF2";"Symbol";}
      Condition{"ever";"ok";"";}
      Evaluation{"direct";"never";
       ActionCond{"";}}
      Extra{"teststep";}
      NodeCategory{"";}
      Info{"";"Element to read the time. \r\n\r\nThe actual time will be returned as Float.";}
      Rights{"Write";"Read";}
      VersionInfo{}
      Class{"ZeitLesen";}}
     FunctionDef{
      Name{"Floatdifferenz.9803";}
      LangName{"Floatdifferenz.9803";"Floatdifferenz.9803";}
      Type{2;}
      Icon{0;}
      Properties{}
      ActualParam{"DTimeF2";"Symbol";"DTimeF";"Symbol";"DTimeF";"Symbol";}
      Condition{"ever";"ok";"";}
      Evaluation{"direct";"never";
       ActionCond{"";}}
      Extra{"teststep";}
      NodeCategory{"";}
      Info{"Baustein zum Bilden der Differenz zwischen zwei Flie\xDFkommazahlen (Float).";"";}
      Rights{"Write";"Read";}
      VersionInfo{}
      Class{"FloatDifferenz";}}
     FunctionDef{
      Name{"FToleranzPrfng.9804";}
      LangName{"FToleranzPrfng.9804";"FToleranzPrfng.9804";}
      Type{2;}
      Icon{1;}
      Properties{}
      ActualParam{"DTimeF";"Symbol";"CFloat0";"Symbol";"CFloat_3600";"Symbol";}
      Condition{"ever";"ok";"";}
      Evaluation{"direct";"never";
       ActionCond{"";}}
      Extra{"resultblock";"1422";"";"CStatTxt_a5_gateway_test";"\"\"";"\"\"";"";0;"";"";"\"\"";"\"SN\"";"";}
      NodeCategory{"";}
      Info{"Baustein zur Toleranzbandpr\xFCfung. (S)\r\n\r\nBewertung ist OK, wenn der Istwert innerhalb der Toleranzgrenzen von Utg und Otg liegt.";"";}
      Rights{"Write";"Read";}
      VersionInfo{}
      Class{"FToleranzPrfng";}}}
    FunctionDef{
     Name{"DlgExit.9805";}
     LangName{"DlgExit.9805";"DlgExit.9805";}
     Type{2;}
     Icon{2;}
     Properties{}
     ActualParam{"DIALOG_LOKAL";"Symbol";}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     NodeCategory{"";}
     Info{"Baustein zur Deinitialisierung der Benutzerschnittstelle";"";}
     Rights{"Write";"Read";}
     VersionInfo{}
     Class{"DlgExit";}}}}}}