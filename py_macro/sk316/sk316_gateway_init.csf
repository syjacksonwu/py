Export{
 Version{"2.7.3.0";}
 CountryCodeElement{2;49;44;}
 CountryCodeText{3;49;86;44;}
 Task{"sk316_gateway_init";
  SequenceCategory{"sk316";}
  SequenceContext{}}
 Counts{45;212;242;129;0;1;}}
Types{
 TypeDef{"PBLTXT";
  LangName{"PBLTXT";"PBLTXT";}"TEXT";"";
  LangDesc{"Pruefblock-Text";"";}}
 TypeDef{"TimeF";
  LangName{"TimeF";"TimeF";}"FLOAT";"";
  LangDesc{"";"";}}
 TypeDef{"DialogTyp";
  LangName{"DialogTyp";"DialogTyp";}"INT";"";
  LangDesc{"Dialog Handle";"Dialog handle";}}
 TypeDef{"DialogSchalter";
  LangName{"DialogSchalter";"DialogSchalter";}"INT";"";
  LangDesc{"Dialog-Schalter";"Dialog-Schalter";}}
 TypeDef{"ERROR";
  LangName{"ERROR";"ERROR";}"INT";"";
  LangDesc{"Fehlervariable";"";}}
 TypeDef{"Codefile_Result_Int";
  LangName{"Codefile_Result_Int";"Codefile_Result_Int";}"INT";"";
  LangDesc{"Ergebnissse der Codefileauswahl";"";}}
 TypeDef{"DialogLine";
  LangName{"DialogLine";"DialogLine";}"INT";"";
  LangDesc{"Dialog-Zeile";"Dialog-Zeile";}}
 TypeDef{"STG_Nr_Liste";
  LangName{"STG_Nr_Liste";"STG_Nr_Liste";}"STRING";"";
  LangDesc{"";"";}}
 TypeDef{"Codefile_Result_Str";
  LangName{"Codefile_Result_Str";"Codefile_Result_Str";}"STRING";"";
  LangDesc{"Ergebnissse der Codefileauswahl";"";}}
 TypeDef{"XMLFILE";
  LangName{"XMLFILE";"XMLFILE";}"STRING";"";
  LangDesc{"Name der XML-Datei";"XML Filename";}}
 TypeDef{"XMLVERSION";
  LangName{"XMLVERSION";"XMLVERSION";}"STRING";"";
  LangDesc{"";"";}}
 TypeDef{"Timeout";
  LangName{"Timeout";"Timeout";}"INT";"[s]";
  LangDesc{"Timeoutzeit in Sekunden";"[s]";}}
 TypeDef{"STATTXT";
  LangName{"STATTXT";"STATTXT";}"TEXT";"";
  LangDesc{"Pruefschritt-Text";"";}}
 TypeDef{"ZDC_HNDL";
  LangName{"ZDC_HNDL";"ZDC_HNDL";}"INT";"";
  LangDesc{"";"";}}
 TypeDef{"Level";
  LangName{"Level";"Level";}"INT";"";
  LangDesc{"";"";}}
 TypeDef{"ZDC_MODUSTEIL";
  LangName{"ZDC_MODUSTEIL";"ZDC_MODUSTEIL";}"STRING";"";
  LangDesc{"";"";}}
 TypeDef{"VCIKANAL";
  LangName{"VCIKANAL";"VCIKANAL";}"INT";"";
  LangDesc{"VCI-Kanal";"VCI-Kanal";}}
 TypeDef{"VCITYP";
  LangName{"VCITYP";"VCITYP";}"INT";"";
  LangDesc{"Typ des VCI";"";}}
 TypeDef{"VCI_Protokoll";
  LangName{"VCI_Protokoll";"VCI_Protokoll";}"STRING";"";
  LangDesc{"";"";}}
 TypeDef{"ECU";
  LangName{"ECU";"ECU";}"STRING";"";
  LangDesc{"Steuergeraete";"";}}
 TypeDef{"DebugLevel";
  LangName{"DebugLevel";"DebugLevel";}"INT";"";
  LangDesc{"";"";}}
 TypeDef{"PAR_HNDL";
  LangName{"PAR_HNDL";"PAR_HNDL";}"INT";"";
  LangDesc{"";"";}}
 TypeDef{"VW_Result_Tel";
  LangName{"VW_Result_Tel";"VW_Result_Tel";}"STRING";"";
  LangDesc{"Ergebnistelegramme VW_Kommunikation";"";}}
 TypeDef{"ID_Nummern";
  LangName{"ID_Nummern";"ID_Nummern";}"INT";"";
  LangDesc{"";"";}}
 TypeDef{"VW_Subsystem";
  LangName{"VW_Subsystem";"VW_Subsystem";}"INT";"";
  LangDesc{"";"";}}
 TypeDef{"StgTNr";
  LangName{"StgTNr";"StgTNr";}"STRING";"";
  LangDesc{"";"";}}
 TypeDef{"IniFileName";
  LangName{"IniFileName";"IniFileName";}"STRING";"";
  LangDesc{"";"";}}
 TypeDef{"STGLogin";
  LangName{"STGLogin";"STGLogin";}"INT";"";
  LangDesc{"Steuerger\xE4te Login";"";}}
 TypeDef{"DiagnosticSession";
  LangName{"DiagnosticSession";"DiagnosticSession";}"INT";"";
  LangDesc{"";"";}}
 TypeDef{"Symbol";
  LangName{"Symbol";"Symbol";}"INT";"";
  LangDesc{"Symbol";"";}}
 TypeDef{"TimeMs";
  LangName{"TimeMs";"TimeMs";}"INT";"[ms]";
  LangDesc{"Timeout in ms";"Timeout in ms";}}
 TypeDef{"StgCodierung";
  LangName{"StgCodierung";"StgCodierung";}"INT";"";
  LangDesc{"";"";}}
 TypeDef{"VW_Codes";
  LangName{"VW_Codes";"VW_Codes";}"INT";"";
  LangDesc{"";"";}}
 TypeDef{"Time";
  LangName{"Time";"Time";}"INT";"[s]";
  LangDesc{"Zeit";"Zeit";}}
 TypeDef{"VW_Send_LID_ASCII_String";
  LangName{"VW_Send_LID_ASCII_String";"VW_Send_LID_ASCII_String";}"INT";"";
  LangDesc{"";"";}}
 TypeDef{"VW_ASCII_String";
  LangName{"VW_ASCII_String";"VW_ASCII_String";}"STRING";"";
  LangDesc{"";"";}}
 TypeDef{"STG_Datenstand";
  LangName{"STG_Datenstand";"STG_Datenstand";}"STRING";"";
  LangDesc{"";"";}}
 TypeDef{"UDS_RecordDataIdentifier";
  LangName{"UDS_RecordDataIdentifier";"UDS_RecordDataIdentifier";}"INT";"";
  LangDesc{"RecordDataIdentifier";"";}}
 TypeDef{"VCIResult";
  LangName{"VCIResult";"VCIResult";}"STRING";"";
  LangDesc{"VCI-Regebnis";"VCI-Regebnis";}}
 TypeDef{"UDS_Data";
  LangName{"UDS_Data";"UDS_Data";}"STRING";"";
  LangDesc{"";"";}}
 TypeDef{"STGAnpassung_Kanal";
  LangName{"STGAnpassung_Kanal";"STGAnpassung_Kanal";}"INT";"";
  LangDesc{"Anpassungs-Kanal";"";}}
 TypeDef{"STG_Anpassung_Lang";
  LangName{"STG_Anpassung_Lang";"STG_Anpassung_Lang";}"STRING";"";
  LangDesc{"";"";}}
 TypeDef{"Bool";
  LangName{"Bool";"Bool";}"INT";"";
  LangDesc{"Logischer Zustand";"Logischer Zustand";}}
 TypeDef{"STG_Anpassung";
  LangName{"STG_Anpassung";"STG_Anpassung";}"INT";"";
  LangDesc{"";"";}}
 TypeDef{"VCISendTel";
  LangName{"VCISendTel";"VCISendTel";}"STRING";"";
  LangDesc{"VCI-Sendetelegramm";"";}}}
Symbols{
 VarDef{"CPblText_Gateway_init";
  LangName{"CPblText_Gateway_init";"CPblText_Gateway_init";}"Var";"PBLTXT";
  LangDesc{"";"";}
  LangText{"\"Gateway init\"";"\"\xA1\xEF\xCD\xF8\xB9\xD8 \xB3\xF5\xCA\xBC\xBB\xAF\"";"\"Gateway init\"";}"Const";}
 VarDef{"DTimeF";
  LangName{"DTimeF";"DTimeF";}"Var";"TimeF";
  LangDesc{"";"";}"";}
 VarDef{"DIALOG_LOKAL";
  LangName{"DIALOG_LOKAL";"DIALOG_LOKAL";}"Var";"DialogTyp";
  LangDesc{"Dialog Handle unshared";"Dialog handle unshared";}"-1";}
 VarDef{"CTextCodierungGateway";
  LangName{"CTextCodierungGateway";"CTextCodierungGateway";}"Var";"TEXT";
  LangDesc{"";"";}
  LangText{"\"Gateway Stg\"";"\"\xCD\xF8\xB9\xD8\"";"\"Gateway ECU\"";}"Const";}
 VarDef{"CDialogS_NON";
  LangName{"CDialogS_NON";"CDialogS_NON";}"Var";"DialogSchalter";
  LangDesc{"kein Schalter";"NO switch";}"0";"Const";}
 VarDef{"CTextLeer";
  LangName{"CTextLeer";"CTextLeer";}"Var";"TEXT";
  LangDesc{"Leerer text";"Empty text";}
  LangText{"\"\"";"\"\"";"\"\"";}"Const";}
 VarDef{"CDialogS_OK_ABBR";
  LangName{"CDialogS_OK_ABBR";"CDialogS_OK_ABBR";}"Var";"DialogSchalter";
  LangDesc{"";"";}"3";"Const";}
 VarDef{"LAS_Codefile_ZV";
  LangName{"LAS_Codefile_ZV";"LAS_Codefile_ZV";}"Var";"LAS";
  LangDesc{"Zentralverriegelung";"Centralised door locking";}"\"$4K3\"";"Const";}
 VarDef{"NOK";
  LangName{"NOK";"NOK";}"Var";"ERROR";
  LangDesc{"NOK-Ergebnis";"NOK result";}"1";"Shared";"Always";"Const";}
 VarDef{"CText_TestBlockIncomplete";
  LangName{"CText_TestBlockIncomplete";"CText_TestBlockIncomplete";}"Var";"TEXT";
  LangDesc{"";"";}
  LangText{"\"Pruefblock unvollstaendig\"";"\"Test block \xB2\xBB\xCD\xEA\xD5\xFB\"";"\"Test block incomplete\"";}"Const";}
 VarDef{"CText_TestBlockComplete";
  LangName{"CText_TestBlockComplete";"CText_TestBlockComplete";}"Var";"TEXT";
  LangDesc{"";"";}
  LangText{"\"Pruefblock vollstaendig\"";"\"Test block \xCD\xEA\xD5\xFB\"";"\"Test block complete\"";}"Const";}
 VarDef{"DString";
  LangName{"DString";"DString";}"Var";"STRING";
  LangDesc{"";"";}"";}
 VarDef{"Gateway_Status";
  LangName{"Gateway_Status";"Gateway_Status";}"Var";"Codefile_Result_Int";
  LangDesc{"Codierbares Gateway";"Codeable gateway";}"-2";"Shared";}
 VarDef{"ConstVar22417";
  LangName{"";"";}"Value";"INT";
  LangDesc{"";"";}"-2";"Const";}
 VarDef{"CDialogZeile1";
  LangName{"CDialogZeile1";"CDialogZeile1";}"Var";"DialogLine";
  LangDesc{"";"";}"1";"Const";}
 VarDef{"CTextCodefile_Gateway";
  LangName{"CTextCodefile_Gateway";"CTextCodefile_Gateway";}"Var";"TEXT";
  LangDesc{"";"";}
  LangText{"\"Codefileauswahl  Gateway\"";"\"\xB6\xC1\xCD\xF8\xB9\xD8\xB1\xE0\xC2\xEB\xCE\xC4\xBC\xFE\"";"\"Codefile selection Gateway\"";}"Const";}
 VarDef{"Gateway";
  LangName{"Gateway";"Gateway";}"Var";"STG_Nr_Liste";
  LangDesc{"Gateway";"Gateway";}"\"19\"";"Const";}
 VarDef{"Gateway_ID_Result";
  LangName{"Gateway_ID_Result";"Gateway_ID_Result";}"Var";"Codefile_Result_Str";
  LangDesc{"";"";}"\"\"";"Shared";}
 VarDef{"Dummy_ID_2_Result";
  LangName{"Dummy_ID_2_Result";"Dummy_ID_2_Result";}"Var";"Codefile_Result_Str";
  LangDesc{"";"";}"\"\"";}
 VarDef{"Dummy_ID_3_Result";
  LangName{"Dummy_ID_3_Result";"Dummy_ID_3_Result";}"Var";"Codefile_Result_Str";
  LangDesc{"";"";}"\"\"";}
 VarDef{"Dummy_ID_4_Result";
  LangName{"Dummy_ID_4_Result";"Dummy_ID_4_Result";}"Var";"Codefile_Result_Str";
  LangDesc{"";"";}"\"\"";}
 VarDef{"Dummy_ID_5_Result";
  LangName{"Dummy_ID_5_Result";"Dummy_ID_5_Result";}"Var";"Codefile_Result_Str";
  LangDesc{"";"";}"\"\"";}
 VarDef{"Dummy_ID_6_Result";
  LangName{"Dummy_ID_6_Result";"Dummy_ID_6_Result";}"Var";"Codefile_Result_Str";
  LangDesc{"";"";}"\"\"";}
 VarDef{"Dummy_ID_7_Result";
  LangName{"Dummy_ID_7_Result";"Dummy_ID_7_Result";}"Var";"Codefile_Result_Str";
  LangDesc{"";"";}"\"\"";}
 VarDef{"Gateway_Codierung_Result";
  LangName{"Gateway_Codierung_Result";"Gateway_Codierung_Result";}"Var";"Codefile_Result_Int";
  LangDesc{"";"";}"-1";"Shared";}
 VarDef{"Gateway_LongCode_Result";
  LangName{"Gateway_LongCode_Result";"Gateway_LongCode_Result";}"Var";"Codefile_Result_Str";
  LangDesc{"";"";}"\"\"";"Shared";}
 VarDef{"Gateway_Codier_Art";
  LangName{"Gateway_Codier_Art";"Gateway_Codier_Art";}"Var";"Codefile_Result_Int";
  LangDesc{"";"";}"-1";"Shared";}
 VarDef{"Dummy_Login_1";
  LangName{"Dummy_Login_1";"Dummy_Login_1";}"Var";"Codefile_Result_Int";
  LangDesc{"";"";}"-1";}
 VarDef{"Dummy_Login_2";
  LangName{"Dummy_Login_2";"Dummy_Login_2";}"Var";"Codefile_Result_Int";
  LangDesc{"";"";}"-1";}
 VarDef{"Dummy_Anzahl_Stg";
  LangName{"Dummy_Anzahl_Stg";"Dummy_Anzahl_Stg";}"Var";"Codefile_Result_Int";
  LangDesc{"Anzahl der Verbauten Steuergeraete";"";}"-1";"Shared";}
 VarDef{"Gateway_Anpassung_String";
  LangName{"Gateway_Anpassung_String";"Gateway_Anpassung_String";}"Var";"Codefile_Result_Str";
  LangDesc{"";"";}"\"\"";"Shared";}
 VarDef{"Gateway_Prog_String";
  LangName{"Gateway_Prog_String";"Gateway_Prog_String";}"Var";"Codefile_Result_Str";
  LangDesc{"";"";}"\"\"";"Shared";}
 VarDef{"Gateway_ProgL_String";
  LangName{"Gateway_ProgL_String";"Gateway_ProgL_String";}"Var";"Codefile_Result_Str";
  LangDesc{"";"";}"\"\"";"Shared";}
 VarDef{"Gateway_Result";
  LangName{"Gateway_Result";"Gateway_Result";}"Var";"Codefile_Result_Str";
  LangDesc{"";"";}"\"\"";"Shared";}
 VarDef{"Gateway_Auswahl";
  LangName{"Gateway_Auswahl";"Gateway_Auswahl";}"Var";"Codefile_Result_Str";
  LangDesc{"";"";}"\"\"";"Shared";}
 VarDef{"GatewayContainer_Name";
  LangName{"GatewayContainer_Name";"GatewayContainer_Name";}"Var";"XMLFILE";
  LangDesc{"";"";}"\"\"";"Shared";}
 VarDef{"GatewayContainer_Version";
  LangName{"GatewayContainer_Version";"GatewayContainer_Version";}"Var";"XMLVERSION";
  LangDesc{"";"";}"\"\"";"Shared";}
 VarDef{"Gateway_ID_Exp";
  LangName{"Gateway_ID_Exp";"Gateway_ID_Exp";}"Var";"Codefile_Result_Str";
  LangDesc{"";"";}"\"\"";"Shared";}
 VarDef{"Dummy_HWBgp";
  LangName{"Dummy_HWBgp";"Dummy_HWBgp";}"Var";"Codefile_Result_Str";
  LangDesc{"";"";}"\"\"";}
 VarDef{"Dummy_SWBgp";
  LangName{"Dummy_SWBgp";"Dummy_SWBgp";}"Var";"Codefile_Result_Str";
  LangDesc{"";"";}"\"\"";}
 VarDef{"Dummy_Rohteilenummer";
  LangName{"Dummy_Rohteilenummer";"Dummy_Rohteilenummer";}"Var";"Codefile_Result_Str";
  LangDesc{"";"";}"\"\"";}
 VarDef{"CDialog_Keine_Anzeige";
  LangName{"CDialog_Keine_Anzeige";"CDialog_Keine_Anzeige";}"Var";"DialogLine";
  LangDesc{"";"";}"0";"Const";}
 VarDef{"CTextCodefileAuswahl";
  LangName{"CTextCodefileAuswahl";"CTextCodefileAuswahl";}"Var";"TEXT";
  LangDesc{"";"";}
  LangText{"\"Codefileauswahl\"";"\"\xB6\xC1\xB1\xE0\xC2\xEB\xCE\xC4\xBC\xFE\"";"\"Codefileauswahl\"";}"Const";}
 VarDef{"Dummy";
  LangName{"Dummy";"Dummy";}"Var";"STG_Nr_Liste";
  LangDesc{"Dummy";"Dummy";}"\"00\"";"Const";}
 VarDef{"Dummy_ID_1_Result";
  LangName{"Dummy_ID_1_Result";"Dummy_ID_1_Result";}"Var";"Codefile_Result_Str";
  LangDesc{"";"";}"\"\"";}
 VarDef{"Dummy_Codierung_Result";
  LangName{"Dummy_Codierung_Result";"Dummy_Codierung_Result";}"Var";"Codefile_Result_Int";
  LangDesc{"";"";}"-1";}
 VarDef{"Dummy_LongCode_Result";
  LangName{"Dummy_LongCode_Result";"Dummy_LongCode_Result";}"Var";"Codefile_Result_Str";
  LangDesc{"";"";}"\"\"";}
 VarDef{"Dummy_Codier_Art";
  LangName{"Dummy_Codier_Art";"Dummy_Codier_Art";}"Var";"Codefile_Result_Int";
  LangDesc{"";"";}"-1";}
 VarDef{"Dummy_Anpassung_String";
  LangName{"Dummy_Anpassung_String";"Dummy_Anpassung_String";}"Var";"Codefile_Result_Str";
  LangDesc{"";"";}"\"\"";}
 VarDef{"Dummy_Prog_String";
  LangName{"Dummy_Prog_String";"Dummy_Prog_String";}"Var";"Codefile_Result_Str";
  LangDesc{"";"";}"\"\"";}
 VarDef{"Dummy_ProgL_String";
  LangName{"Dummy_ProgL_String";"Dummy_ProgL_String";}"Var";"Codefile_Result_Str";
  LangDesc{"";"";}"\"\"";}
 VarDef{"Dummy_Status";
  LangName{"Dummy_Status";"Dummy_Status";}"Var";"Codefile_Result_Int";
  LangDesc{"";"";}"-2";}
 VarDef{"Dummy_Result";
  LangName{"Dummy_Result";"Dummy_Result";}"Var";"Codefile_Result_Str";
  LangDesc{"";"";}"\"\"";}
 VarDef{"Dummy_Auswahl";
  LangName{"Dummy_Auswahl";"Dummy_Auswahl";}"Var";"Codefile_Result_Str";
  LangDesc{"";"";}"\"\"";}
 VarDef{"DContainer_Name";
  LangName{"DContainer_Name";"DContainer_Name";}"Var";"XMLFILE";
  LangDesc{"";"";}"\"\"";"Shared";}
 VarDef{"DummyContainer_Version";
  LangName{"DummyContainer_Version";"DummyContainer_Version";}"Var";"XMLVERSION";
  LangDesc{"";"";}"\"\"";}
 VarDef{"Dummy_ID_Exp";
  LangName{"Dummy_ID_Exp";"Dummy_ID_Exp";}"Var";"Codefile_Result_Str";
  LangDesc{"";"";}"\"\"";}
 VarDef{"CTime30";
  LangName{"CTime30";"CTime30";}"Var";"Timeout";
  LangDesc{"";"";}"30";"Const";}
 VarDef{"CStatTxtCodefileGateway";
  LangName{"CStatTxtCodefileGateway";"CStatTxtCodefileGateway";}"Var";"STATTXT";
  LangDesc{"";"";}
  LangText{"\"Codefileauswahl Gateway\"";"\"\xB6\xC1\xCD\xF8\xB9\xD8\xB1\xE0\xC2\xEB\xCE\xC4\xBC\xFE\"";"\"Codefile selection Gateway\"";}"Const";}
 VarDef{"DZdcHndl";
  LangName{"DZdcHndl";"DZdcHndl";}"Var";"ZDC_HNDL";
  LangDesc{"";"";}"-1";}
 VarDef{"CLevel3";
  LangName{"CLevel3";"CLevel3";}"Var";"Level";
  LangDesc{"";"";}"3";"Const";}
 VarDef{"DummyContainer_Name";
  LangName{"DummyContainer_Name";"DummyContainer_Name";}"Var";"XMLFILE";
  LangDesc{"";"";}"\"\"";}
 VarDef{"CLevel0";
  LangName{"CLevel0";"CLevel0";}"Var";"Level";
  LangDesc{"";"";}"0";"Const";}
 VarDef{"CZDCModusAll";
  LangName{"CZDCModusAll";"CZDCModusAll";}"Var";"ZDC_MODUSTEIL";
  LangDesc{"";"";}"\"\"";"Const";}
 VarDef{"CStat_ZDC_Codierung_vw_2000";
  LangName{"CStat_ZDC_Codierung_vw_2000";"CStat_ZDC_Codierung_vw_2000";}"Var";"STATTXT";
  LangDesc{"";"";}
  LangText{"\"ZDC_Codierung VW 2000\"";"\"ZDC\xB1\xE0\xC2\xEBVW2000\"";"\"ZDC Coding VW 2000\"";}"Const";}
 VarDef{"CStat_ZDC_Anpasung_2000";
  LangName{"CStat_ZDC_Anpasung_2000";"CStat_ZDC_Anpasung_2000";}"Var";"STATTXT";
  LangDesc{"";"";}
  LangText{"\"ZDC Anpasung KW2000\"";"\"ZDC\xC6\xA5\xC5\xE4KW2000\"";"\"ZDC Anpasung KW2000\"";}"Const";}
 VarDef{"CStat_ZDC_ProgramL_2000";
  LangName{"CStat_ZDC_ProgramL_2000";"CStat_ZDC_ProgramL_2000";}"Var";"STATTXT";
  LangDesc{"";"";}
  LangText{"\"ZDC programming KW2000\"";"\"ZDC\xB1\xE0\xB3\xCCKW2000\"";"\"ZDC programming KW2000\"";}"Const";}
 VarDef{"VCIKanal1";
  LangName{"VCIKanal1";"VCIKanal1";}"Var";"VCIKANAL";
  LangDesc{"";"";}"-1";}
 VarDef{"VCI_Typ_VCI5";
  LangName{"VCI_Typ_VCI5";"VCI_Typ_VCI5";}"Var";"VCITYP";
  LangDesc{"";"";}"1";"Const";}
 VarDef{"Prokoll_KWP2000_TP20";
  LangName{"Prokoll_KWP2000_TP20";"Prokoll_KWP2000_TP20";}"Var";"VCI_Protokoll";
  LangDesc{"";"";}"\"VW2000_TP20\"";"Const";}
 VarDef{"ECU_Gateway";
  LangName{"ECU_Gateway";"ECU_Gateway";}"Var";"ECU";
  LangDesc{"";"";}"\"Gateway\"";"Const";}
 VarDef{"CTimeout_00010";
  LangName{"CTimeout_00010";"CTimeout_00010";}"Var";"Timeout";
  LangDesc{"";"";}"10";"Const";}
 VarDef{"DLevel";
  LangName{"DLevel";"DLevel";}"Var";"DebugLevel";
  LangDesc{"";"";}"0";}
 VarDef{"SemaCanTP20";
  LangName{"SemaCanTP20";"SemaCanTP20";}"Var";"PAR_HNDL";
  LangDesc{"";"";}"";"Shared";}
 VarDef{"CStatKommunikationGateway_24355";
  LangName{"CStatKommunikationGateway_24355";"CStatKommunikationGateway_24355";}"Var";"STATTXT";
  LangDesc{"";"";}
  LangText{"\"Kommunikation Gateway\"";"\"\xBA\xF4\xBD\xD0\xCD\xF8\xB9\xD8\"";"\"Communicate to Gateway\"";}"Const";}
 VarDef{"CTime01";
  LangName{"CTime01";"CTime01";}"Var";"Timeout";
  LangDesc{"1 Sekunde";"1 second";}"1";"Const";}
 VarDef{"VW_Stg_ID";
  LangName{"VW_Stg_ID";"VW_Stg_ID";}"Var";"VW_Result_Tel";
  LangDesc{"VW Ergebnis ID-Lesen";"VW result ID read";}"\"\"";}
 VarDef{"ID_lesen";
  LangName{"ID_lesen";"ID_lesen";}"Var";"STATTXT";
  LangDesc{"";"";}
  LangText{"\"ID_lesen\"";"\"\xB6\xC1\xC1\xE3\xBC\xFE\xBA\xC5\"";"\"Read ID\"";}"Const";}
 VarDef{"erste_ID";
  LangName{"erste_ID";"erste_ID";}"Var";"ID_Nummern";
  LangDesc{"";"";}"1";"Const";}
 VarDef{"LIN_Subsystem";
  LangName{"LIN_Subsystem";"LIN_Subsystem";}"Var";"VW_Subsystem";
  LangDesc{"";"";}"";}
 VarDef{"DTNR";
  LangName{"DTNR";"DTNR";}"Var";"StgTNr";
  LangDesc{"";"";}"\"\"";}
 VarDef{"CStatTeilenummerGateway";
  LangName{"CStatTeilenummerGateway";"CStatTeilenummerGateway";}"Var";"STATTXT";
  LangDesc{"";"";}
  LangText{"\"Teilenummer Gateway\"";"\"\xCD\xF8\xB9\xD8\xC1\xE3\xBC\xFE\xBA\xC5\"";"\"Part number Gateway\"";}"Const";}
 VarDef{"CIniFile_Software_sk316";
  LangName{"CIniFile_Software_sk316";"CIniFile_Software_sk316";}"Var";"IniFileName";
  LangDesc{"";"softversion for Yeti";}"\"software_sk316.ini\"";"Shared";"Const";}
 VarDef{"CStatTxtVersGateway";
  LangName{"CStatTxtVersGateway";"CStatTxtVersGateway";}"Var";"STATTXT";
  LangDesc{"";"";}
  LangText{"\"Datenstand Gateway\"";"\"\xCD\xF8\xB9\xD8 \xC8\xED\xBC\xFE\xB0\xE6\xB1\xBE\"";"\"Software version Gateway\"";}"Const";}
 VarDef{"CIniFile_Software";
  LangName{"CIniFile_Software";"CIniFile_Software";}"Var";"IniFileName";
  LangDesc{"Ini-File fuer Software-IDs";"";}"\"software.ini\"";"Const";}
 VarDef{"ID_Version_1";
  LangName{"ID_Version_1";"ID_Version_1";}"Var";"VW_Result_Tel";
  LangDesc{"";"";}"\"\"";}
 VarDef{"ID_Version";
  LangName{"ID_Version";"ID_Version";}"Var";"VW_Result_Tel";
  LangDesc{"";"";}"\"\"";}
 VarDef{"ConstVar37044";
  LangName{"";"";}"Value";"INT";
  LangDesc{"";"";}"42013";"Const";}
 VarDef{"CStatTxt_Login";
  LangName{"CStatTxt_Login";"CStatTxt_Login";}"Var";"STATTXT";
  LangDesc{"";"";}
  LangText{"\"Login\"";"\"\xB5\xC7\xC2\xBC\"";"\"Login\"";}"Const";}
 VarDef{"DiagSession_Entwickler";
  LangName{"DiagSession_Entwickler";"DiagSession_Entwickler";}"Var";"DiagnosticSession";
  LangDesc{"";"";}"0x86";"Const";}
 VarDef{"StatTxt_StartDiagSession";
  LangName{"StatTxt_StartDiagSession";"StatTxt_StartDiagSession";}"Var";"STATTXT";
  LangDesc{"";"";}
  LangText{"\"StartDiagnosticSession\"";"\"\xBF\xAA\xCA\xBC\xD5\xEF\xB6\xCF\xB6\xD4\xBB\xB0\"";"\"StartDiagnosticSession\"";}"Const";}
 VarDef{"CStatProgrammierenGateway";
  LangName{"CStatProgrammierenGateway";"CStatProgrammierenGateway";}"Var";"STATTXT";
  LangDesc{"";"";}
  LangText{"\"Programmieren Gateway\"";"\"\xCD\xF8\xB9\xD8\xB1\xE0\xB3\xCC\"";"\"Programming Gateway\"";}"Const";}
 VarDef{"CText___OK";
  LangName{"CText___OK";"CText___OK";}"Var";"TEXT";
  LangDesc{"";"";}
  LangText{"\"... OK\"";"\"...\xBA\xCF\xB8\xF1\"";"\"... OK\"";}"Const";}
 VarDef{"CSymbol1";
  LangName{"CSymbol1";"CSymbol1";}"Var";"Symbol";
  LangDesc{"Gruener Haken";"green tick";}"1";"Const";}
 VarDef{"CText___NOK";
  LangName{"CText___NOK";"CText___NOK";}"Var";"TEXT";
  LangDesc{"";"";}
  LangText{"\"... NOK\"";"\"...\xB2\xBB\xBA\xCF\xB8\xF1\"";"\"... NOK\"";}"Const";}
 VarDef{"CSymbol3";
  LangName{"CSymbol3";"CSymbol3";}"Var";"Symbol";
  LangDesc{"";"red cross";}"3";"Const";}
 VarDef{"CText___ABR";
  LangName{"CText___ABR";"CText___ABR";}"Var";"TEXT";
  LangDesc{"";"";}
  LangText{"\"... ABBRUCH\"";"\"...\xB7\xC5\xC6\xFA\"";"\"... ABORT\"";}"Const";}
 VarDef{"CSymbol2";
  LangName{"CSymbol2";"CSymbol2";}"Var";"Symbol";
  LangDesc{"";"";}"2";"Const";}
 VarDef{"CTextt___UNK";
  LangName{"CText___UNK";"CText___UNK";}"Var";"TEXT";
  LangDesc{"";"";}
  LangText{"\"... ???\"";"\"... ???\"";"\"... ???\"";}"Const";}
 VarDef{"CTimeMs_00500";
  LangName{"CTimeMs_00500";"CTimeMs_00500";}"Var";"TimeMs";
  LangDesc{"";"";}"500";"Const";}
 VarDef{"DiagSession_EndOfLine";
  LangName{"DiagSession_EndOfLine";"DiagSession_EndOfLine";}"Var";"DiagnosticSession";
  LangDesc{"";"";}"0x83";"Const";}
 VarDef{"VW_Master";
  LangName{"VW_Master";"VW_Master";}"Var";"VW_Subsystem";
  LangDesc{"";"";}"0x03";"Const";}
 VarDef{"CStatCodierenGateway_24359";
  LangName{"CStatCodierenGateway_24359";"CStatCodierenGateway_24359";}"Var";"STATTXT";
  LangDesc{"";"";}
  LangText{"\"Codieren Gateway\"";"\"\xB6\xD4\xCD\xF8\xB9\xD8\xBD\xF8\xD0\xD0\xB1\xE0\xC2\xEB\"";"\"Coding Gateway\"";}"Const";}
 VarDef{"VW_Master_Lang";
  LangName{"VW_Master_Lang";"VW_Master_Lang";}"Var";"VW_Subsystem";
  LangDesc{"";"";}"0x10";"Const";}
 VarDef{"DLangCodierung";
  LangName{"DLangCodierung";"DLangCodierung";}"Var";"STRING";
  LangDesc{"";"";}"\"\"";}
 VarDef{"STG_Login_DSR_HHC";
  LangName{"STG_Login_DSR_HHC";"STG_Login_DSR_HHC";}"Var";"STGLogin";
  LangDesc{"";"";}"40975";"Const";}
 VarDef{"CStatText_Login";
  LangName{"CStatText_Login";"CStatText_Login";}"Var";"STATTXT";
  LangDesc{"";"";}
  LangText{"\"Login\"";"\"\xB5\xC7\xC2\xBC\"";"\"Login\"";}"Const";}
 VarDef{"CStat_Anpassung";
  LangName{"CStat_Anpassung";"CStat_Anpassung";}"Var";"STATTXT";
  LangDesc{"";"";}
  LangText{"\"Anpassung\"";"\"\xC6\xA5\xC5\xE4\"";"\"Anpassung\"";}"Const";}
 VarDef{"DInt";
  LangName{"DInt";"DInt";}"Var";"INT";
  LangDesc{"";"";}"";}
 VarDef{"VW_FSP_Result";
  LangName{"VW_FSP_Result";"VW_FSP_Result";}"Var";"VW_Result_Tel";
  LangDesc{"VW Ergebnis FSP-Lesen";"VW result on fault memory read";}"\"\"";}
 VarDef{"VW_Codes_FSP_Lesen";
  LangName{"VW_Codes_FSP_Lesen";"VW_Codes_FSP_Lesen";}"Var";"VW_Codes";
  LangDesc{"";"";}"-1";"Shared";}
 VarDef{"CTime_1";
  LangName{"CTime_1";"CTime_1";}"Var";"Time";
  LangDesc{"1 Sekunde";"";}"1";"Const";}
 VarDef{"OK";
  LangName{"OK";"OK";}"Var";"ERROR";
  LangDesc{"OK-Ergebnis";"OK result";}"0";"Shared";"Always";"Const";}
 VarDef{"LAS_WFS3Gen_3_Schluessel1";
  LangName{"LAS_WFS3Gen_3_Schluessel1";"LAS_WFS3Gen_3_Schluessel1";}"Var";"LAS";
  LangDesc{"WFS3Gen nicht 3 Schluessel";"WFS3Gen not 3 Key";}"\"-$4K3\"";"Const";}
 VarDef{"CText_Info_TestBlockIncomplete";
  LangName{"CText_Info_TestBlockIncomplete";"CText_Info_TestBlockIncomplete";}"Var";"TEXT";
  LangDesc{"";"";}
  LangText{"\"Pruefblock unvollstaendig\"";"\"\xB2\xE2\xCA\xD4\xCE\xB4\xCD\xEA\xB3\xC9\"";"\"Test block incomplete\"";}"Const";}
 VarDef{"CText_Info_Codefile_Gateway";
  LangName{"CText_Info_Codefile_Gateway";"CText_Info_Codefile_Gateway";}"Var";"TEXT";
  LangDesc{"";"";}
  LangText{"\"Codefile Gateway\"";"\"Gateway\xB1\xE0\xC2\xEB\xCE\xC4\xBC\xFE\"";"\"Codefile Gateway\"";}"Const";}
 VarDef{"C19_Gateway";
  LangName{"C19_Gateway";"C19_Gateway";}"Var";"STG_Nr_Liste";
  LangDesc{"Gateway";"Gateway";}"\"19\"";"Const";}
 VarDef{"Gateway_ID_1_Result";
  LangName{"Gateway_ID_1_Result";"Gateway_ID_1_Result";}"Var";"Codefile_Result_Str";
  LangDesc{"";"";}"\"\"";}
 VarDef{"Gateway_ID_2_Result";
  LangName{"Gateway_ID_2_Result";"Gateway_ID_2_Result";}"Var";"Codefile_Result_Str";
  LangDesc{"";"";}"\"\"";}
 VarDef{"Gateway_ID_3_Result";
  LangName{"Gateway_ID_3_Result";"Gateway_ID_3_Result";}"Var";"Codefile_Result_Str";
  LangDesc{"";"";}"\"\"";}
 VarDef{"Gateway_ID_4_Result";
  LangName{"Gateway_ID_4_Result";"Gateway_ID_4_Result";}"Var";"Codefile_Result_Str";
  LangDesc{"";"";}"\"\"";}
 VarDef{"Gateway_ID_5_Result";
  LangName{"Gateway_ID_5_Result";"Gateway_ID_5_Result";}"Var";"Codefile_Result_Str";
  LangDesc{"";"";}"\"\"";}
 VarDef{"Gateway_ID_6_Result";
  LangName{"Gateway_ID_6_Result";"Gateway_ID_6_Result";}"Var";"Codefile_Result_Str";
  LangDesc{"";"";}"\"\"";}
 VarDef{"Gateway_ID_7_Result";
  LangName{"Gateway_ID_7_Result";"Gateway_ID_7_Result";}"Var";"Codefile_Result_Str";
  LangDesc{"";"";}"\"\"";}
 VarDef{"Gateway_Coding_Result";
  LangName{"Gateway_Coding_Result";"Gateway_Coding_Result";}"Var";"Codefile_Result_Int";
  LangDesc{"";"";}"-1";"Shared";}
 VarDef{"Gateway_Coding_Style";
  LangName{"Gateway_Coding_Style";"Gateway_Coding_Style";}"Var";"Codefile_Result_Int";
  LangDesc{"";"";}"-1";}
 VarDef{"Gateway_Login_1";
  LangName{"Gateway_Login_1";"Gateway_Login_1";}"Var";"Codefile_Result_Int";
  LangDesc{"";"";}"-1";}
 VarDef{"Gateway_Login_2";
  LangName{"Gateway_Login_2";"Gateway_Login_2";}"Var";"Codefile_Result_Int";
  LangDesc{"";"";}"-1";}
 VarDef{"Gateway_Quantity_ECU";
  LangName{"Gateway_Quantity_ECU";"Gateway_Quantity_ECU";}"Var";"Codefile_Result_Int";
  LangDesc{"";"";}"-1";}
 VarDef{"Gateway_Adaptation_String";
  LangName{"Gateway_Adaptation_String";"Gateway_Adaptation_String";}"Var";"Codefile_Result_Str";
  LangDesc{"";"";}"\"\"";}
 VarDef{"Gateway_State";
  LangName{"Gateway_State";"Gateway_State";}"Var";"Codefile_Result_Int";
  LangDesc{"";"";}"-2";}
 VarDef{"Gateway_Selection";
  LangName{"Gateway_Selection";"Gateway_Selection";}"Var";"Codefile_Result_Str";
  LangDesc{"";"";}"\"\"";}
 VarDef{"Gateway_Container_Name";
  LangName{"Gateway_Container_Name";"Gateway_Container_Name";}"Var";"XMLFILE";
  LangDesc{"";"";}"\"\"";}
 VarDef{"Gateway_Container_Version";
  LangName{"Gateway_Container_Version";"Gateway_Container_Version";}"Var";"XMLVERSION";
  LangDesc{"Container Version Bordnetz STG";"";}"\"\"";}
 VarDef{"Gateway_ID_Expression_Result";
  LangName{"Gateway_ID_Expression_Result";"Gateway_ID_Expression_Result";}"Var";"Codefile_Result_Str";
  LangDesc{"";"";}"\"\"";}
 VarDef{"Gateway_HWBgp";
  LangName{"Gateway_HWBgp";"Gateway_HWBgp";}"Var";"Codefile_Result_Str";
  LangDesc{"";"";}"\"\"";}
 VarDef{"Gateway_SWBgp";
  LangName{"Gateway_SWBgp";"Gateway_SWBgp";}"Var";"Codefile_Result_Str";
  LangDesc{"";"";}"\"\"";}
 VarDef{"Gateway_RawPartNumber";
  LangName{"Gateway_RawPartNumber";"Gateway_RawPartNumber";}"Var";"Codefile_Result_Str";
  LangDesc{"";"";}"\"\"";}
 VarDef{"CTime10";
  LangName{"CTime10";"CTime10";}"Var";"Timeout";
  LangDesc{"Timeout-Wert fuer 10 s";"Timeout value for 10 s";}"10";"Const";}
 VarDef{"CInt_DebugLevel_06";
  LangName{"CInt_DebugLevel_06";"CInt_DebugLevel_06";}"Var";"DebugLevel";
  LangDesc{"";"";}"6";"Const";}
 VarDef{"Dummy_Container_Name";
  LangName{"Dummy_Container_Name";"Dummy_Container_Name";}"Var";"XMLFILE";
  LangDesc{"";"";}"\"\"";}
 VarDef{"Dummy_Container_Version";
  LangName{"Dummy_Container_Version";"Dummy_Container_Version";}"Var";"XMLVERSION";
  LangDesc{"";"";}"\"\"";}
 VarDef{"CInt_DebugLevel_00";
  LangName{"CInt_DebugLevel_00";"CInt_DebugLevel_00";}"Var";"DebugLevel";
  LangDesc{"0 - No tracing";"0 - No tracing";}"0";}
 VarDef{"CNullPosition";
  LangName{"CNullPosition";"CNullPosition";}"Var";"INT";
  LangDesc{"";"";}"0";"Const";}
 VarDef{"ConstVar44293";
  LangName{"";"";}"Value";"STRING";
  LangDesc{"";"";}"\"### Gateway Container Name\"";"Const";}
 VarDef{"ConstVar44294";
  LangName{"";"";}"Value";"STRING";
  LangDesc{"";"";}"\"### Gateway Container Version\"";"Const";}
 VarDef{"CStr_ZDC_Modus_All";
  LangName{"CStr_ZDC_Modus_All";"CStr_ZDC_Modus_All";}"Var";"ZDC_MODUSTEIL";
  LangDesc{"";"";}"\"\"";"Const";}
 VarDef{"Gateway_ZDC_Calibration_String";
  LangName{"Gateway_ZDC_Calibration_String";"Gateway_ZDC_Calibration_String";}"Var";"Codefile_Result_Str";
  LangDesc{"";"";}"\"\"";}
 VarDef{"CText_Info_Codefile_Selection";
  LangName{"CText_Info_Codefile_Selection";"CText_Info_Codefile_Selection";}"Var";"TEXT";
  LangDesc{"";"";}
  LangText{"\"Codefileauswahl\"";"\"\xB1\xE0\xC2\xEB\xCE\xC4\xBC\xFE\xD1\xA1\xD4\xF1\"";"\"Codefile selection\"";}"Const";}
 VarDef{"ConstVar48957";
  LangName{"";"";}"Value";"STRING";
  LangDesc{"";"";}"\"### Gateway Programming Long string\"";"Const";}
 VarDef{"ConstVar44468";
  LangName{"";"";}"Value";"STRING";
  LangDesc{"";"";}"\"### Gateway calibration string\"";"Const";}
 VarDef{"ConstVar25928";
  LangName{"";"";}"Value";"INT";
  LangDesc{"";"";}"6";"Const";}
 VarDef{"ConstVar44467";
  LangName{"";"";}"Value";"STRING";
  LangDesc{"";"";}"\"### Gateway adaptation string\"";"Const";}
 VarDef{"CLID_VW_SparePartNumber";
  LangName{"CLID_VW_SparePartNumber";"CLID_VW_SparePartNumber";}"Var";"VW_Send_LID_ASCII_String";
  LangDesc{"";"";}"0xF187";"Const";}
 VarDef{"DStr_Gateway_Spare_PartNo";
  LangName{"DStr_Gateway_Spare_PartNo";"DStr_Gateway_Spare_PartNo";}"Var";"StgTNr";
  LangDesc{"";"";}"\"\"";}
 VarDef{"DLID";
  LangName{"DLID";"DLID";}"Var";"VW_Result_Tel";
  LangDesc{"";"";}"\"\"";}
 VarDef{"DVW_ASCII_String";
  LangName{"DVW_ASCII_String";"DVW_ASCII_String";}"Var";"VW_ASCII_String";
  LangDesc{"";"";}"\"\"";}
 VarDef{"ConstVar44303";
  LangName{"";"";}"Value";"STRING";
  LangDesc{"";"";}"\"### Gateway Spare PartNo\"";"Const";}
 VarDef{"ConstVar44786";
  LangName{"";"";}"Value";"STRING";
  LangDesc{"";"";}"\"\\h20\"";"Const";}
 VarDef{"DVWSparePartNumber";
  LangName{"DVWSparePartNumber";"DVWSparePartNumber";}"Var";"VW_Result_Tel";
  LangDesc{"";"";}"\"\"";}
 VarDef{"Dummy_ID_Expression_Result";
  LangName{"Dummy_ID_Expression_Result";"Dummy_ID_Expression_Result";}"Var";"Codefile_Result_Str";
  LangDesc{"";"";}"\"\"";}
 VarDef{"CLID_VW_HW_Ref_PartNo";
  LangName{"CLID_VW_HW_Ref_PartNo";"CLID_VW_HW_Ref_PartNo";}"Var";"VW_Send_LID_ASCII_String";
  LangDesc{"";"";}"0xF191";"Const";}
 VarDef{"DStr_Gateway_HW_Ref_PartNo";
  LangName{"DStr_Gateway_HW_Ref_PartNo";"DStr_Gateway_HW_Ref_PartNo";}"Var";"StgTNr";
  LangDesc{"";"";}"\"\"";}
 VarDef{"CStat_HW_Ref_PartNo_Gateway_init";
  LangName{"CStat_HW_Ref_PartNo_Gateway_init";"CStat_HW_Ref_PartNo_Gateway_init";}"Var";"STATTXT";
  LangDesc{"";"";}
  LangText{"\"HW Reference PartNo. Gateway init\"";"\"\xCD\xF8\xB9\xD8\xD3\xB2\xBC\xFE\xC1\xE3\xBC\xFE\xBA\xC5\xB3\xF5\xCA\xBC\xBB\xAF\"";"\"HW Reference PartNo. Gateway init\"";}"Const";}
 VarDef{"ConstVar44309";
  LangName{"";"";}"Value";"STRING";
  LangDesc{"";"";}"\"### Gateway HW_Ref PartNo\"";"Const";}
 VarDef{"CLID_VW_HW_Version_Number";
  LangName{"CLID_VW_HW_Version_Number";"CLID_VW_HW_Version_Number";}"Var";"VW_Send_LID_ASCII_String";
  LangDesc{"";"";}"0xF1A3";"Const";}
 VarDef{"DStr_Gateway_HW_Version";
  LangName{"DStr_Gateway_HW_Version";"DStr_Gateway_HW_Version";}"Var";"STG_Datenstand";
  LangDesc{"";"";}"\"\"";}
 VarDef{"ConstVar44312";
  LangName{"";"";}"Value";"STRING";
  LangDesc{"";"";}"\"### Gateway HW Version\"";"Const";}
 VarDef{"CLID_VW_SW_Version_Number";
  LangName{"CLID_VW_SW_Version_Number";"CLID_VW_SW_Version_Number";}"Var";"VW_Send_LID_ASCII_String";
  LangDesc{"";"";}"0xF189";"Const";}
 VarDef{"DStr_Gateway_SW_Version";
  LangName{"DStr_Gateway_SW_Version";"DStr_Gateway_SW_Version";}"Var";"STG_Datenstand";
  LangDesc{"";"";}"\"\"";}
 VarDef{"ConstVar44315";
  LangName{"";"";}"Value";"STRING";
  LangDesc{"";"";}"\"### Gateway SW Version\"";"Const";}
 VarDef{"CStat_HW_Version_Gateway_init";
  LangName{"CStat_HW_Version_Gateway_init";"CStat_HW_Version_Gateway_init";}"Var";"STATTXT";
  LangDesc{"";"";}
  LangText{"\"HW Version Gateway init\"";"\"\xCD\xF8\xB9\xD8\xD3\xB2\xBC\xFE\xB0\xE6\xB1\xBE\xB3\xF5\xCA\xBC\xBB\xAF\"";"\"HW Version Gateway init\"";}"Const";}
 VarDef{"DVWECUSoftwareNumber";
  LangName{"DVWECUSoftwareNumber";"DVWECUSoftwareNumber";}"Var";"VW_Result_Tel";
  LangDesc{"";"";}"\"\"";}
 VarDef{"DVWApplicationSoftwareVersionNumber";
  LangName{"DVWApplicationSoftwareVersionNumber";"DVWApplicationSoftwareVersionNumber";}"Var";"VW_Result_Tel";
  LangDesc{"";"";}"\"\"";}
 VarDef{"Dummy_Konfig_Str";
  LangName{"Dummy_Konfig_Str";"Dummy_Konfig_Str";}"Var";"Codefile_Result_Str";
  LangDesc{"";"";}"\"\"";}
 VarDef{"ConstVar25347";
  LangName{"";"";}"Value";"STRING";
  LangDesc{"";"";}"\"\"";"Const";}
 VarDef{"ConstVar45254";
  LangName{"";"";}"Value";"STRING";
  LangDesc{"";"";}"\"Anpassung by codefile\"";"Const";}
 VarDef{"ConstVar46819";
  LangName{"";"";}"Value";"INT";
  LangDesc{"";"";}"20103";"Const";}
 VarDef{"DString_FTC_Code";
  LangName{"DString_FTC_Code";"DString_FTC_Code";}"Var";"STRING";
  LangDesc{"";"";}"\"\"";}
 VarDef{"Fingerprint_0xF198";
  LangName{"Fingerprint_0xF198";"Fingerprint_0xF198";}"Var";"UDS_RecordDataIdentifier";
  LangDesc{"Fingerprint";"Fingerprint";}"0xf198";"Const";}
 VarDef{"DVciResult";
  LangName{"DVciResult";"DVciResult";}"Var";"VCIResult";
  LangDesc{"VCI-Ergebnisdatenblock";"VCI result data block";}"\"\"";}
 VarDef{"ConstVar47144";
  LangName{"";"";}"Value";"STRING";
  LangDesc{"";"";}"\"### 7495\"";"Const";}
 VarDef{"ConstVar47143";
  LangName{"";"";}"Value";"INT";
  LangDesc{"";"";}"49";"Const";}
 VarDef{"LAS_not_GP1";
  LangName{"LAS_not_GP1";"LAS_not_GP1";}"Var";"LAS";
  LangDesc{"";"";}"\"-$GP1\"";"Const";}
 VarDef{"VW_DTC_Result";
  LangName{"VW_DTC_Result";"VW_DTC_Result";}"Var";"VW_Result_Tel";
  LangDesc{"VW Ergebnis FSP-Lesen";"VW result on fault memory read";}"\"\"";}
 VarDef{"VW_Codes_DTC_Read";
  LangName{"VW_Codes_DTC_Read";"VW_Codes_DTC_Read";}"Var";"VW_Codes";
  LangDesc{"";"";}"-1";}
 VarDef{"CTime_0";
  LangName{"CTime_0";"CTime_0";}"Var";"Time";
  LangDesc{"";"";}"0";"Const";}
 VarDef{"CText_Info_TestBlockComplete";
  LangName{"CText_Info_TestBlockComplete";"CText_Info_TestBlockComplete";}"Var";"TEXT";
  LangDesc{"";"";}
  LangText{"\"Pruefblock vollstaendig\"";"\"\xB2\xE2\xCA\xD4\xCD\xEA\xB3\xC9\"";"\"Test block complete\"";}"Const";}
 VarDef{"DTimeF2";
  LangName{"DTimeF2";"DTimeF2";}"Var";"TimeF";
  LangDesc{"";"";}"";}
 VarDef{"CFloat0";
  LangName{"CFloat0";"CFloat0";}"Var";"FLOAT";
  LangDesc{"";"";}"0.0";"Const";}
 VarDef{"CFloat_3600";
  LangName{"CFloat_3600";"CFloat_3600";}"Var";"FLOAT";
  LangDesc{"";"";}"3600.0";"Const";}
 VarDef{"CStatTxt_a5_gateway_init";
  LangName{"CStatTxt_a5_gateway_init";"CStatTxt_a5_gateway_init";}"Var";"STATTXT";
  LangDesc{"";"";}
  LangText{"\"a5_gateway_init\"";"\"\xCD\xF8\xB9\xD8\xB3\xF5\xCA\xBC\xBB\xAF\xBC\xEC\xB2\xE2\xCA\xB1\xBC\xE4\"";"\"Test time Gateway init\"";}"Const";}
 VarDef{"CLogWahr";
  LangName{"CLogWahr";"CTrue";}"Var";"Bool";
  LangDesc{"logisch wahr";"Logical true";}"1";"Const";}
 VarDef{"DAnpassungBString";
  LangName{"DAnpassungBString";"DAnpassungBString";}"Var";"STRING";
  LangDesc{"";"";}"\"\"";}
 VarDef{"DTestString";
  LangName{"DTestString";"DTestString";}"Var";"STRING";
  LangDesc{"";"";}"\"\"";}
 VarDef{"CInt1";
  LangName{"CInt1";"CInt1";}"Var";"INT";
  LangDesc{"";"";}"1";"Const";}
 VarDef{"DString1";
  LangName{"DString1";"DString1";}"Var";"STRING";
  LangDesc{"";"";}"";}
 VarDef{"DString2";
  LangName{"DString2";"DString2";}"Var";"STRING";
  LangDesc{"";"";}"";}
 VarDef{"DString3";
  LangName{"DString3";"DString3";}"Var";"STRING";
  LangDesc{"";"";}"";}
 VarDef{"DString4";
  LangName{"DString4";"DString4";}"Var";"STRING";
  LangDesc{"";"";}"";}
 VarDef{"MessWertBString";
  LangName{"MessWertBString";"MessWertBString";}"Var";"STRING";
  LangDesc{"";"";}"\"\"";}
 VarDef{"Anpassung_Rueck";
  LangName{"Anpassung_Rueck";"Anpassung_Rueck";}"Var";"STG_Anpassung";
  LangDesc{"";"";}"-1";}
 VarDef{"CVciSTelNull";
  LangName{"CVciSTelNull";"CVciSTelNull";}"Var";"VCISendTel";
  LangDesc{"";"";}"\"\"";"Const";}
 VarDef{"CInt0";
  LangName{"CInt0";"CInt0";}"Var";"INT";
  LangDesc{"";"";}"0";"Const";}
 VarDef{"DLID1Result";
  LangName{"DLID1Result";"DLID1Result";}"Var";"VCIResult";
  LangDesc{"";"";}"\"\"";}
 VarDef{"DLIDResult2";
  LangName{"DLIDResult2";"DLIDResult2";}"Var";"VCIResult";
  LangDesc{"";"";}"\"\"";}
 VarDef{"DLID3Result";
  LangName{"DLID3Result";"DLID3Result";}"Var";"VCIResult";
  LangDesc{"";"";}"\"\"";}
 VarDef{"DLID4Result";
  LangName{"DLID4Result";"DLID4Result";}"Var";"VCIResult";
  LangDesc{"";"";}"\"\"";}
 VarDef{"DLID5Result";
  LangName{"DLID5Result";"DLID5Result";}"Var";"VCIResult";
  LangDesc{"";"";}"\"\"";}
 VarDef{"DLID6Result";
  LangName{"DLID6Result";"DLID6Result";}"Var";"VCIResult";
  LangDesc{"";"";}"\"\"";}
 VarDef{"DLID7Result";
  LangName{"DLID7Result";"DLID7Result";}"Var";"VCIResult";
  LangDesc{"";"";}"\"\"";}
 VarDef{"DLID8Result";
  LangName{"DLID8Result";"DLID8Result";}"Var";"VCIResult";
  LangDesc{"";"";}"\"\"";}}
ExportTags{}
NodeCategories{}
SequenceCategories{
 SequenceCategory{"sk316";"";}}
Library{
 FunctionDef{
  Name{"Sequences";}
  LangName{"Sequences";"Sequences";}
  Type{1;}
  Icon{8;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"no";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{0;1;"dsa-nj";}
   Version{0;1;"dsa-nj";"[ Baustein importiert (ersetzt) ]";"admin";"21.01.2005 11:57:13";}}
  FunctionDef{
   Name{"sk316_gateway_init_LibMain";}
   LangName{"sk316_gateway_init_LibMain";"sk316_gateway_init_LibMain";}
   Type{4;}
   Icon{5;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"no";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"sequence root for task sk316_gateway_init";"sequence root for task sk316_gateway_init";}
   Rights{"Write";"Read";}
   VersionInfo{}}}
 FunctionDef{
  Name{"Neu";}
  LangName{"Neu";"New";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"Strukturelement";"This branch of the library is used for temporary files from\r\nnew or imported library modules. It is a pure structuring\r\nlevel.";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;5;"nbmr";}
   Version{0;1;"d1";"- in Arbeit -";"admin";"07.04.2003 09:15:28";}
   Version{1;0;"lm_lap";"Info added";"lm";"19.02.2004 15:41:00";}
   Version{1;1;"lm_lap";"- in Arbeit -";"lm";"19.02.2004 15:41:21";}
   Version{1;2;"RHMPil";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"20.05.2005 17:15:46";}
   Version{1;3;"nbpj2";"[ Baustein importiert (ersetzt) ]";"pj";"08.06.2009 16:13:54";}
   Version{1;4;"nbpj2";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"13.11.2009 14:32:37";}
   Version{1;5;"nbmr";"[ Baustein importiert (ersetzt) ]";"dsa";"05.05.2010 12:44:41";}}}
 FunctionDef{
  Name{"DSA_Bibliothek";}
  LangName{"DSA_Bibliothek";"DSA_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;1;"AC";}
   Version{1;0;"AC";"- freigegeben -";"dsa-admin";"04.03.2003 11:44:35";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"admin";"03.07.2006 10:17:25";}}
  FunctionDef{
   Name{"Zeitgeber";}
   LangName{"Zeitgeber";"Timer";}
   CvsVerHis{}
   Type{1;}
   Icon{0;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Sammlung von Bausteinen zur Zeit\xFCberwachung und zur Ausf\xFChrungsverz\xF6gerung.";"Collection of components used in relation to timeouts and\r\nprocessing delays.";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{0;1;"SVW";}
    Version{0;1;"SVW";"- in Arbeit -";"admin";"12.04.2004 21:35:52";}}
   FunctionDef{
    Name{"ZeitLesen";}
    LangName{"ZeitLesen";"Read_Time";}
    CvsVerHis{}
    Type{1;}
    Icon{0;}
    Properties{"Begin";}
    FormalParam{
     OutputParam{"ZeitPunkt";
      LangName{"ZeitPunkt";"ZeitPunkt";}"TimeF";"DTimeF";
      LangDesc{"";"Read the current time";}}}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{" *ZeitPunkt = clock ();";}
    NodeCategory{"";}
    Info{"Baustein zum lesen der Zeit. \r\n\r\nDie aktuelle Zeit kommt als Float zurueck.";"Element to read the time. \r\n\r\nThe actual time will be returned as Float.";}
    Rights{"Write";"Read";}
    VersionInfo{
     CurVersion{0;3;"SVW";}
     Version{0;1;"RHM";"- in Arbeit -";"admin";"27.08.2002 09:29:38";}
     Version{0;2;"SVW";"- in Arbeit -";"admin";"30.09.2003 15:30:40";}
     Version{0;3;"SVW";"- in Arbeit -";"admin";"17.12.2003 09:38:29";}}}}}
 FunctionDef{
  Name{"DSA_Bibliothek";}
  LangName{"DSA_Bibliothek";"DSA_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;1;"AC";}
   Version{1;0;"AC";"- freigegeben -";"dsa-admin";"04.03.2003 11:44:35";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"admin";"03.07.2006 10:17:25";}}
  FunctionDef{
   Name{"BenutzerSchnittstellen";}
   LangName{"BenutzerSchnittstellen";"UserInterface";}
   CvsVerHis{}
   Type{1;}
   Icon{2;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Sammlung von Bausteinen zur Benutzerschnittstelle";"Collection of components relating to the user interface.";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{1;2;"SVW";}
    Version{1;0;"AC";"- freigegeben -";"dsa-admin";"04.03.2003 11:34:14";}
    Version{1;1;"SVW";"- in Arbeit -";"admin";"12.04.2004 19:08:29";}
    Version{1;2;"SVW";"- in Arbeit -";"admin";"12.04.2004 21:13:06";}}
   FunctionDef{
    Name{"DlgInit";}
    LangName{"DlgInit";"DlgInit";}
    CvsVerHis{}
    Type{1;}
    Icon{2;}
    Properties{"Begin";}
    FormalParam{
     OutputParam{"DialogHndl";
      LangName{"DialogHndl";"DialogHndl";}"DialogTyp";"DIALOG_LOKAL";
      LangDesc{"Dialog handle";"Dialog handle";}}}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"err = _dlgInit (DialogHndl);\r\n";}
    NodeCategory{"";}
    Info{"Baustein zur Initialisierung der Benutzerschnittstelle";"Initialises the communication handle (must take place once before each dialogue operation)";}
    Rights{"Write";"Read";}
    VersionInfo{
     CurVersion{0;1;"SVW";}
     Version{0;1;"SVW";"- in Arbeit -";"admin";"12.04.2004 16:21:05";}}}}}
 FunctionDef{
  Name{"DSA_Bibliothek";}
  LangName{"DSA_Bibliothek";"DSA_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;1;"AC";}
   Version{1;0;"AC";"- freigegeben -";"dsa-admin";"04.03.2003 11:44:35";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"admin";"03.07.2006 10:17:25";}}
  FunctionDef{
   Name{"BenutzerSchnittstellen";}
   LangName{"BenutzerSchnittstellen";"UserInterface";}
   CvsVerHis{}
   Type{1;}
   Icon{2;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Sammlung von Bausteinen zur Benutzerschnittstelle";"Collection of components relating to the user interface.";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{1;2;"SVW";}
    Version{1;0;"AC";"- freigegeben -";"dsa-admin";"04.03.2003 11:34:14";}
    Version{1;1;"SVW";"- in Arbeit -";"admin";"12.04.2004 19:08:29";}
    Version{1;2;"SVW";"- in Arbeit -";"admin";"12.04.2004 21:13:06";}}
   FunctionDef{
    Name{"MultiDisplay";}
    LangName{"MultiDisplay";"MultiDisplay";}
    CvsVerHis{}
    Type{1;}
    Icon{0;}
    Properties{"Begin";}
    FormalParam{}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"";}
    NodeCategory{"";}
    Info{"Sammlung von Bausteinen der Benutzerschnittstelle zur zeilenorientierten Ausgabe (Multi-Display)";"The MultiDisplay functions operate somewhat differently from the MsgBox, ListBox, and Input functions.\r\nThese are displayed when called up, and are then hidden as soon as the user activates \"OK\" or \"Abort\".\r\nThe \"Multifunctional dialogue box\" is always shown (although it may be temporarily obscured, for example\r\nby a \"MsgBox\"). It has four lines which can be selected independently of one another.\r\nEach line may display a text, or a text and a Bitmap graphic, or a scale and a brief text.";}
    Rights{"Write";"Read";}
    VersionInfo{
     CurVersion{0;3;"SVW";}
     Version{0;1;"AC";"- in Arbeit -";"admin";"13.02.2003 14:26:51";}
     Version{0;2;"AC";"- in Arbeit -";"admin";"13.02.2003 14:26:59";}
     Version{0;3;"SVW";"- in Arbeit -";"admin";"12.04.2004 19:15:06";}}
    FunctionDef{
     Name{"DlgMultiInit";}
     LangName{"DlgMultiInit";"DlgMultiInit";}
     CvsVerHis{}
     Type{1;}
     Icon{2;}
     Properties{"Begin";}
     FormalParam{
      InputParam{"DialogHndl";
       LangName{"DialogHndl";"DialogHndl";}"DialogTyp";"DIALOG_LOKAL";
       LangDesc{"Dialog handle";"Dialog handle";}}
      InputParam{"Titel";
       LangName{"Titel";"Titel";}"TEXT";"CTextLeer";
       LangDesc{"Titelzeile";"General headline string";}}
      InputParam{"Schalter";
       LangName{"Schalter";"Schalter";}"DialogSchalter";"CDialogS_OK_ABBR";
       LangDesc{"Dialog-Schalter";"Dialog switch";}}}
     LocalVar{}
     Condition{"ever";"ok";"";}
     Evaluation{"no";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     MSLCode{"  err = _dlgMultiInit (DialogHndl, Titel, Schalter);\r\n";}
     NodeCategory{"";}
     Info{"Bausteinen zur Initialisierung der Anzeigeeinheit.";"Component for the initialisation of the display unit.\r\n\"Titel\" defines the first line\r\n\"Schalter\" defines the switch configuration (of the 2 switches)\r\nat the MFT.";}
     Rights{"Write";"Read";}
     VersionInfo{
      CurVersion{0;3;"SVW";}
      Version{0;1;"AC";"- in Arbeit -";"admin";"13.02.2003 14:26:41";}
      Version{0;2;"SVW";"- in Arbeit -";"admin";"12.04.2004 16:24:17";}
      Version{0;3;"SVW";"- in Arbeit -";"admin";"12.04.2004 21:14:42";}}}}}}
 FunctionDef{
  Name{"DSA_Bibliothek";}
  LangName{"DSA_Bibliothek";"DSA_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;1;"AC";}
   Version{1;0;"AC";"- freigegeben -";"dsa-admin";"04.03.2003 11:44:35";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"admin";"03.07.2006 10:17:25";}}
  FunctionDef{
   Name{"StatistikElemente";}
   LangName{"StatistikElemente";"StatisticElements";}
   CvsVerHis{}
   Type{1;}
   Icon{1;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Sammlung von Bausteinen zur Statistikdatengenerierung";"Collection of components relating to the generation of\r\nstatistical data.\r\n\r\nIt only makes sense to execute test sequences if there is some way of storing the results.\r\nThat is why PRODIS-OFFICE has built-in functions to gather and generate result data.\r\nOn the other hand, not all modules supply results which are relevant to the test sequence.\r\nFor example, a module which scans a measurement from a control unit should generate result data,\r\nbut a module which simply increases a loop counter should not provide such data.\r\nIt is the job of the person creating the test sequence to determine which modules generate result data.\r\nThe following sub-chapter addresses further aspects of result data generation.\r\n\r\n\r\nSome special modules must be included in the test sequence if any result data are to be generated.\r\nResult data are also known as \"statistical data\", since such data are used to generate statistical\r\nevaluations regarding the number of OK and NOK tests, or regarding the measurements ascertained.\r\n\r\n\r\nIt is also necessary that the DTM function be active, and that a valid communication handle exists\r\nfor the communication between the test sequence and the DTM.\r\nDuring execution of the StatisticResult module, the result data record is transferred to the DTM\r\nfor transmission to the host computer.";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{0;4;"SVW";}
    Version{0;1;"SVW";"- in Arbeit -";"admin";"12.04.2004 19:57:30";}
    Version{0;2;"SVW";"- in Arbeit -";"admin";"12.04.2004 19:58:34";}
    Version{0;3;"SVW";"- in Arbeit -";"admin";"12.04.2004 20:03:39";}
    Version{0;4;"SVW";"- in Arbeit -";"admin";"12.04.2004 21:43:02";}}
   FunctionDef{
    Name{"StatSetAsciiResult";}
    LangName{"StatSetAsciiResult";"StatSetAsciiResult_209565";}
    CvsVerHis{}
    Type{1;}
    Icon{1;}
    Properties{"Begin";}
    FormalParam{
     InputParam{"Error";
      LangName{"Error";"";}"ERROR";"";
      LangDesc{"Fehler fuer Statistikeintrag";"";}}
     InputParam{"StringWert";
      LangName{"StringWert";"";}"STRING";"DString";
      LangDesc{"";"";}}}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"if (Error == OK)\r\n  _statSetAsciiResult (Error, StringWert, FOK);\r\nelse\r\n  _statSetAsciiResult (Error, StringWert, FMWNOK);\r\n";}
    NodeCategory{"";}
    Info{"Baustein zum Schreiben von OK oder NOK in die Statistik. (S)";"";}
    Rights{"Write";"Read";}
    VersionInfo{
     CurVersion{0;3;"svw";}
     Version{0;1;"PAE";"[ Baustein importiert (neu) ]";"dsa-admin";"24.07.2006 17:06:12";}
     Version{0;2;"dsanbpj2";"[ Baustein importiert (neu) ]";"admin";"18.10.2006 13:19:09";}
     Version{0;3;"svw";"[ Baustein importiert (ersetzt) ]";"dsa";"05.07.2010 12:19:39";}}}}}
 FunctionDef{
  Name{"Basis_Bibliothek";}
  LangName{"Basis_Bibliothek";"Base_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;0;"AC";}
   Version{1;0;"AC";"- freigegeben -";"dsa-admin";"04.03.2003 11:44:35";}}
  FunctionDef{
   Name{"Daten_Pruefungen";}
   LangName{"DatenPruefungen";"Data_Examination";}
   CvsVerHis{}
   Type{1;}
   Icon{0;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Sammlung von Pruef-Bausteinen";"";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{0;5;"PAE";}
    Version{0;1;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"24.07.2006 17:06:11";}
    Version{0;2;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"25.07.2006 08:26:55";}
    Version{0;3;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"25.07.2006 08:31:27";}
    Version{0;4;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"25.07.2006 08:35:23";}
    Version{0;5;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"25.07.2006 08:36:16";}}
   FunctionDef{
    Name{"IntNeu";}
    LangName{"IntPrfg";"Integer_Examination";}
    CvsVerHis{}
    Type{1;}
    Icon{1;}
    Properties{"Begin";}
    FormalParam{}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"";}
    NodeCategory{"";}
    Info{"";"";}
    Rights{"Write";"Read";}
    VersionInfo{}
    FunctionDef{
     Name{"IWertVergleich";}
     LangName{"IWertVergleich";"IntValueComparison";}
     CvsVerHis{}
     Type{1;}
     Icon{1;}
     Properties{"Begin";}
     FormalParam{
      InputParam{"Istwert";
       LangName{"Istwert";"Istwert";}"INT";"";
       LangDesc{"Istwert";"Actual value";}}
      InputParam{"Sollwert";
       LangName{"Sollwert";"Sollwert";}"INT";"";
       LangDesc{"Sollwert";"Target value";}}}
     LocalVar{}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     MSLCode{"_statSetValue(sprintf(\"%d\",Sollwert));\r\n\r\nif (Istwert == Sollwert)\r\n  err = _statSetIntResult (OK, Istwert, FOK);\r\nelse\r\n  err = _statSetIntResult (NOK, Istwert, FMWNOK);\r\n";}
     NodeCategory{"";}
     Info{"Baustein zum Vergleich von zwei ganzen Zahlen auf Gleichheit. (S)";"Checks whether two whole number values are identical";}
     Rights{"Write";"Read";}
     VersionInfo{
      CurVersion{0;4;"SVW";}
      Version{0;1;"MOS";"- in Arbeit -";"dsa-admin";"30.04.2003 13:04:30";}
      Version{0;2;"SVW";"- in Arbeit -";"admin";"17.12.2003 09:46:02";}
      Version{0;3;"SVW";"- in Arbeit -";"admin";"17.12.2003 09:46:39";}
      Version{0;4;"SVW";"- in Arbeit -";"admin";"12.04.2004 19:53:23";}}}}}}
 FunctionDef{
  Name{"VW_spezifische_Bibliothek";}
  LangName{"VW_spezifische_Bibliothek";"VW_specific_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"Sammlung von Bausteinen zur Kommunikation mit Steuergeraeten von VW.";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;2;"ZPH18";}
   Version{1;0;"AC";"- freigegeben -";"vw-admin";"04.03.2003 11:56:19";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"07.08.2006 13:58:14";}
   Version{1;2;"ZPH18";"[ Baustein importiert (ersetzt) ]";"admin";"14.08.2007 15:07:01";}}
  FunctionDef{
   Name{"VW_Codefileauswahl";}
   LangName{"VW_Codefileauswahl";"VW_Codefileauswahl";}
   CvsVerHis{}
   Type{1;}
   Icon{0;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Platzhalter f\xFCr Pr\xFCfschritte";"";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{0;1;"PAE";}
    Version{0;1;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"24.07.2006 17:06:13";}}
   FunctionDef{
    Name{"Pfau_9_2_0";}
    LangName{"Pfau_9_2_0";"";}
    CvsVerHis{}
    Type{1;}
    Icon{0;}
    Properties{"Begin";}
    FormalParam{}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"";}
    NodeCategory{"";}
    Info{"";"";}
    Rights{"Write";"Read";}
    VersionInfo{
     CurVersion{0;1;"PAE";}
     Version{0;1;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"24.07.2006 17:06:13";}}
    FunctionDef{
     Name{"VW_Codefile_STG";}
     LangName{"VW_Codefile_STG";"VW_Codefile_STG";}
     CvsVerHis{}
     Type{1;}
     Icon{0;}
     Properties{"Begin";}
     FormalParam{
      InputParam{"DialogHndl";
       LangName{"DialogHndl";"DialogHndl";}"DialogTyp";"DIALOG_LOKAL";
       LangDesc{"Dialog handle";"Dialog handle";}}
      InputParam{"Zeile";
       LangName{"Zeile";"Zeile";}"DialogLine";"CDialog_Keine_Anzeige";
       LangDesc{"Ausgabezeile";"Output line";}}
      InputParam{"Text";
       LangName{"Text";"Text";}"TEXT";"CTextCodefileAuswahl";
       LangDesc{"Ausgabetext";"Output text";}}
      InputParam{"STG_Nr";
       LangName{"STG_Nr";"STG_Nr";}"STG_Nr_Liste";"Dummy";
       LangDesc{"Steuerger\xE4tenummer";"ECU address";}}
      OutputParam{"ID_Result1";
       LangName{"ID_Result1";"ID_Result1";}"Codefile_Result_Str";"Dummy_ID_1_Result";
       LangDesc{"ID-String";"1. ID string";}}
      OutputParam{"ID_Result2";
       LangName{"ID_Result2";"ID_Result2";}"Codefile_Result_Str";"Dummy_ID_2_Result";
       LangDesc{"ID-String";"2. ID string";}}
      OutputParam{"ID_Result3";
       LangName{"ID_Result3";"ID_Result3";}"Codefile_Result_Str";"Dummy_ID_3_Result";
       LangDesc{"ID-String";"3. ID string";}}
      OutputParam{"ID_Result4";
       LangName{"ID_Result4";"ID_Result4";}"Codefile_Result_Str";"Dummy_ID_4_Result";
       LangDesc{"ID-String";"4. ID string";}}
      OutputParam{"ID_Result5";
       LangName{"ID_Result5";"ID_Result5";}"Codefile_Result_Str";"Dummy_ID_5_Result";
       LangDesc{"ID-String";"5. ID string";}}
      OutputParam{"ID_Result6";
       LangName{"ID_Result6";"ID_Result6";}"Codefile_Result_Str";"Dummy_ID_6_Result";
       LangDesc{"ID-String";"6. ID string";}}
      OutputParam{"ID_Result7";
       LangName{"ID_Result7";"ID_Result7";}"Codefile_Result_Str";"Dummy_ID_7_Result";
       LangDesc{"ID-String";"7. ID string";}}
      OutputParam{"Codierung_Result";
       LangName{"Codierung_Result";"Codierung_Result";}"Codefile_Result_Int";"Dummy_Codierung_Result";
       LangDesc{"Codierung";"Short coding string";}}
      OutputParam{"LangCode_Result";
       LangName{"LangCode_Result";"LangCode_Result";}"Codefile_Result_Str";"Dummy_LongCode_Result";
       LangDesc{"Lange Codierung String";"Long coding string";}}
      OutputParam{"Codier_Art";
       LangName{"Codier_Art";"Codier_Art";}"Codefile_Result_Int";"Dummy_Codier_Art";
       LangDesc{"Art der Codierung 0 = kurze / 1 = lange ";"Coding style: 0=short / 1=long";}}
      OutputParam{"Login1_Result";
       LangName{"Login1_Result";"Login1_Result";}"Codefile_Result_Int";"Dummy_Login_1";
       LangDesc{"1. Login";"1. Login";}}
      OutputParam{"Login2_Result";
       LangName{"Login2_Result";"Login2_Result";}"Codefile_Result_Int";"Dummy_Login_2";
       LangDesc{"2. Login";"2. Login";}}
      OutputParam{"Anzahl_Stg";
       LangName{"Anzahl_Stg";"Anzahl_Stg";}"Codefile_Result_Int";"Dummy_Anzahl_Stg";
       LangDesc{"Anzahl der Stg im Fahrzeug";"Quantity of vehicle ECU's";}}
      OutputParam{"Anpassung_String";
       LangName{"Anpassung_String";"Anpassung_String";}"Codefile_Result_Str";"Dummy_Anpassung_String";
       LangDesc{"Anpassungsdaten";"Adaptation data";}}
      OutputParam{"Prog_String";
       LangName{"Prog_String";"Prog_String";}"Codefile_Result_Str";"Dummy_Prog_String";
       LangDesc{"zu programmierender String";"Programming string; 2-Byte address format";}}
      OutputParam{"ProgL_String";
       LangName{"ProgL_String";"ProgL_String";}"Codefile_Result_Str";"Dummy_ProgL_String";
       LangDesc{"zu programmierender String im 4 Byte Adress-Format";"Programming string; 4-Byte address format";}}
      OutputParam{"Result_Status";
       LangName{"Result_Status";"Result_Status";}"Codefile_Result_Int";"Dummy_Status";
       LangDesc{"Status Auswahl (-1= l\xE4uft 0=OK 1=NOK)";"State check: -1=still running; 0=OK; 1-NOK";}}
      OutputParam{"Result";
       LangName{"Result";"Result";}"Codefile_Result_Str";"Dummy_Result";
       LangDesc{"unformatierter ErgebnisString";"Unformated result string";}}
      OutputParam{"Auswahl_Ergebnis";
       LangName{"Auswahl_Ergebnis";"Auswahl_Ergebnis";}"Codefile_Result_Str";"Dummy_Auswahl";
       LangDesc{"Version/SatzNr/LAS";"Version/Record-No/LAS";}}
      OutputParam{"XmlContainer";
       LangName{"XmlContainer";"XmlContainer";}"XMLFILE";"DContainer_Name";
       LangDesc{"Name der XML-Datei";"Name of XML File";}}
      OutputParam{"XmlVersion";
       LangName{"XmlVersion";"XmlVersion";}"XMLVERSION";"DummyContainer_Version";
       LangDesc{"Version des XML-Datei z.B. 0151/0202";"Version dof XML-File ze.g. 0151/0202";}}
      OutputParam{"ID_Expression";
       LangName{"ID_Expression";"ID_Expression";}"Codefile_Result_Str";"Dummy_ID_Exp";
       LangDesc{"Logischer Ausdr\xFCck der IDs (FTN)";"Logical term of ID's (FTN)";}}
      OutputParam{"HWBgp";
       LangName{"HWBgp";"HWBgp";}"Codefile_Result_Str";"Dummy_HWBgp";
       LangDesc{"HW Baugruppe der verwendeten Zeile der FTab";"HW Baugruppe from FTab";}}
      OutputParam{"SWBgp";
       LangName{"SWBgp";"SWBgp";}"Codefile_Result_Str";"Dummy_SWBgp";
       LangDesc{"SW Baugruppe der verwendeten Zeile der FTab";"SW Baugruppe from Ftab";}}
      OutputParam{"Rohteilenummer";
       LangName{"Rohteilenummer";"Rohteilenummer";}"Codefile_Result_Str";"Dummy_Rohteilenummer";
       LangDesc{"Rohteilenummer: ID-Expression der FTab (optional)";"ID-Expression (raw) from FTab";}}}
     LocalVar{
      LocVarDef{"Fehler_0x1000";
       LangName{"Fehler_0x1000";"";}"Locvar";"TEXT";
       LangDesc{"";"";}
       LangText{"\"0x1000 Fehler oeffnen Dateien\"";"\"0x1000 \xCE\xC4\xBC\xFE\xB4\xF2\xBF\xAA\xCA\xA7\xB0\xDC\"";"\"0x1000 error opening files\"";}"Const";}
      LocVarDef{"Fehler_0x1001";
       LangName{"Fehler_0x1001";"";}"Locvar";"TEXT";
       LangDesc{"";"";}
       LangText{"\"0x1001 Fehler LAS Analyse\"";"\"0x1001 LAS\xB7\xD6\xCE\xF6\xCA\xA7\xB0\xDC\"";"\"0x1001 Error LAS analysis\"";}"Const";}
      LocVarDef{"Fehler_0x1002";
       LangName{"Fehler_0x1002";"";}"Locvar";"TEXT";
       LangDesc{"";"";}
       LangText{"\"0x1002 Fehler schliessen Dateien\"";"\"0x1002 \xCE\xC4\xBC\xFE\xB9\xD8\xB1\xD5\xCA\xA7\xB0\xDC\"";"\"0x1002 Error closing files\"";}"Const";}
      LocVarDef{"Fehler_0x1003";
       LangName{"Fehler_0x1003";"";}"Locvar";"TEXT";
       LangDesc{"";"";}
       LangText{"\"0x1003 Versionen unterschiedlich\"";"\"0x1003 \xB0\xE6\xB1\xBE\xB4\xED\xCE\xF3\"";"\"0x1003 Versions different\"";}"Const";}
      LocVarDef{"Fehler_0x1004";
       LangName{"Fehler_0x1004";"";}"Locvar";"TEXT";
       LangDesc{"";"";}
       LangText{"\"0x1004 Satzanzahl unterschiedlich\"";"\"0x1004 \xCE\xDE\xB2\xBB\xCD\xAC\xCC\xF5\xC4\xBF\"";"\"0x1004 No of entries different\"";}"Const";}
      LocVarDef{"Fehler_0x1005";
       LangName{"Fehler_0x1005";"";}"Locvar";"TEXT";
       LangDesc{"";"";}
       LangText{"\"0x1005 keinen Satz gefunden\"";"\"0x1005 \xCE\xB4\xD5\xD2\xB5\xBD\xC8\xCE\xBA\xCE\xCC\xF5\xC4\xBF\"";"\"0x1005 no entry found\"";}"Const";}
      LocVarDef{"Fehler_0x1006";
       LangName{"Fehler_0x1006";"";}"Locvar";"TEXT";
       LangDesc{"";"";}
       LangText{"\"0x1006 Satz nicht eindeutig\"";"\"0x1006 \xCC\xF5\xC4\xBF\xB2\xBB\xCF\xE0\xCD\xAC\"";"\"0x1006 entry not unique\"";}"Const";}
      LocVarDef{"Fehler_0x1007";
       LangName{"Fehler_0x1007";"";}"Locvar";"TEXT";
       LangDesc{"";"";}
       LangText{"\"0x1007 Daten nicht lesbar\"";"\"0x1007 \xCE\xDE\xB7\xA8\xB6\xC1\xCA\xFD\xBE\xDD\"";"\"0x1007 not able to read data \"";}"Const";}
      LocVarDef{"Fehler_0x1008";
       LangName{"Fehler_0x1008";"";}"Locvar";"TEXT";
       LangDesc{"";"";}
       LangText{"\"0x1008 Version nicht lesbar\"";"\"0x1008 \xCE\xDE\xB7\xA8\xB6\xC1\xB0\xE6\xB1\xBE\"";"\"0x1008 not able to read version\"";}"Const";}
      LocVarDef{"Fehler_0x1009";
       LangName{"Fehler_0x1009";"";}"Locvar";"TEXT";
       LangDesc{"";"";}
       LangText{"\"0x1009 LAS nicht lesbar\"";"\"0x1009 \xCE\xDE\xB7\xA8\xB6\xC1LAS\"";"\"0x1009 not able to read LAS\"";}"Const";}
      LocVarDef{"Fehler_0xxxxx";
       LangName{"Fehler_0xxxxx";"";}"Locvar";"TEXT";
       LangDesc{"";"";}
       LangText{"\"unbekannt Code\"";"\"\xC2\xEB\xCE\xDE\xB7\xA8\xCA\xB6\xB1\xF0\"";"\"unknown code\"";}"Const";}
      LocVarDef{"Fehler_FalscheVersion";
       LangName{"Fehler_FalscheVersion";"";}"Locvar";"TEXT";
       LangDesc{"";"";}
       LangText{"\"falsche Version (> 102)\"";"\"\xB0\xE6\xB1\xBE\xB4\xED\xCE\xF3 (>102)\"";"\"wrong version (> 102)\"";}"Const";}
      LocVarDef{"KommentarFehler";
       LangName{"KommentarFehler";"";}"Locvar";"TEXT";
       LangDesc{"";"";}
       LangText{"\"Fehler\"";"\"\xB4\xED\xCE\xF3\"";"\"Error\"";}"Const";}}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     MSLCode{"// sz  16.07.09 Erweiterung um \"spath\" fuer den Pfad im Ftab-Prozess bei neuem Datenkonzept (ODX Stufe 5 b)\r\n// sz  27.08.07 Erweiterung RTN (Rohteilenummer) / HW/SW Baugruppe als R?kgabewerte\r\n// sz  21.01.05 Bugfix: fehlende Initialisierung des Parameters XmlVersion\r\n// sz  08.06.04 Bugfix zum Bugfix: im Fehlerfall wird jetzt nicht mehr abgebrochen\r\n// sz  07.06.04 Bugfix zur Versionskennung der FTab und LAS-String in der Statistik\r\n// sz  28.04.04 Bugfix zur Inkompatibilitaet der Freigabetabelle *.txt mit mehr als 3 TNR (abschneiden der TNR 4 u. 5)\r\n// jk  11.09.03 Bugfix zur Erzeugung von Prog_String\r\n// sz, 03.09.03 Bugfix zur Erzeugung von Prog_String\r\n// cm, 13.08.03 Erweiterung um den Parameter ProgL_String / WinPfau mit 4 Byte Adr im ZDC 1.52\r\n// cm, 07.08.03 Erweiterung ZDC2.02\r\n// Nutzbar bis Winpfau 9.1.4 (Struktur 102)\r\n// sz, 24.03.03\r\n// jk, 09.04.03 geaedert, plus Anpassung_String\r\n//                        Prog_String, wenn nicht vorhanden Leer\r\n// sz, 16.04.03 kurze Codierung f? Zahlenbasis != 1\r\n// sz, 22.04.03 Bugfix, Anpassung  \r\n\r\nstring \tLasString;\r\nstring\tCodeString;\r\nstring\tTeilString;\r\nstring\tVerString;\r\nstring\tErrString;\r\nstring\tsCodewordInfo;\r\nstring\tTmpString;\r\nint\t_err;\r\nint\tStgArt;\r\nint\tVersion;\r\nint\tElementeAnzahl;\r\nint\txmlPathLen;\r\nint\tcodeLen;\r\nint\tiZahlenbasis;\r\nint\tPos;\r\nint     csf, noblk, iCodeCnt, iLogCnt, iLogin, iAnpCnt, iAnpKa, iAnpWert, iStgCnt;\r\nint\tlen;\r\nint\tipath = 0;\r\nstring\ttelname, tel, ftn, rtn;\r\nstring\tprogstr, codestr, anpstr;\r\nstring\tdelim = \"+\";\r\nstring\tspath = \"/data/sfd/ftab/\";\r\n\r\n*XmlContainer=\"\";\r\n*XmlVersion=\"\";\r\n*Result_Status = -1;\r\n*ID_Result1 = \"\";\r\n*ID_Result2 = \"\";\r\n*ID_Result3 = \"\";\r\n*ID_Result4 = \"\";\r\n*ID_Result5 = \"\";\r\n*ID_Result6 = \"\";\r\n*ID_Result7 = \"\";\r\n*Result\t= \"\";\r\n*Codier_Art = -1;\r\n*Codierung_Result = -1;\r\n*LangCode_Result = \"\";\r\n*Auswahl_Ergebnis = \"\";\r\n*Login1_Result = 0;\r\n*Login2_Result = -1;\r\n*Anpassung_String = \"\";\r\n*Prog_String = \"\";\r\n*ProgL_String = \"\";\r\n*Anzahl_Stg = 0;\r\n*ID_Expression = \"\";\r\n*HWBgp = \"\";\r\n*SWBgp = \"\";\r\n*Rohteilenummer = \"\";\r\n\r\nif (Zeile > 0)\r\n    _dlgMultiSetLine (DialogHndl, Zeile, Text);\r\n\r\n_err = codefileExecute (\"l\" + STG_Nr + \"tab\", \"codef\" + STG_Nr, \"codver\" + STG_Nr, &CodeString, &VerString, &LasString);\r\n\r\nif(_err == 0x1000)\r\n{\r\n    _err = codefileExecute (spath + \"l\" + STG_Nr + \"tab\", spath + \"codef\" + STG_Nr, spath + \"codver\" + STG_Nr, &CodeString, &VerString, &LasString);\r\n    if(_err != 0)\r\n    {\r\n\tErrString = sprintf(\"%s-0x%x\",\"unbekannter Code\",_err);\r\n    \terr = NOK;\r\n    }\r\n    else\r\n    {\r\n\tipath = 1;\r\n      ErrString = \"\";\r\n      err = OK;\r\n    }\r\n}\r\nelse\r\n{\r\n    ErrString = \"\";\r\n    err = OK;\r\n}\r\n\r\nswitch ( _err )\r\n{\r\ncase 0x1000 : \r\n\t{\r\n\t\tErrString = Fehler_0x1000;\r\n\t\terr = NOK;\r\n\t}\r\ncase 0x1001 : \r\n\t{\r\n\t\tErrString = Fehler_0x1001;\r\n\t\terr = NOK;\r\n\t}\r\ncase 0x1002 : \r\n\t{\r\n\t\tErrString = Fehler_0x1002;\r\n\t\terr = OK;\r\n\t}\r\ncase 0x1003 : \r\n\t{\r\n\t\tErrString = Fehler_0x1003;\r\n\t\terr = NOK;\r\n\t}\r\ncase 0x1004 : \r\n\t{\r\n\t\tErrString = Fehler_0x1004;\r\n\t\terr = NOK;\r\n\t}\r\ncase 0x1005 : \r\n\t{\r\n\t\tErrString = Fehler_0x1005;\r\n\t\terr = NOK;\r\n\t}\r\ncase 0x1006 : \r\n\t{\r\n\t\tErrString = Fehler_0x1006;\r\n\t\terr = NOK;\r\n\t}\r\ncase 0x1007 : \r\n\t{\r\n\t\tErrString = Fehler_0x1007;\r\n\t\terr = NOK;\r\n\t}\r\ncase 0x1008 : \r\n\t{\r\n\t\tErrString = Fehler_0x1008;\r\n\t\terr = OK;\r\n\t}\r\ncase 0x1009 : \r\n\t{\r\n\t\tErrString = Fehler_0x1009;\r\n\t\terr = NOK;\r\n\t}\r\n}\r\n\r\nif (!err)\r\n{\r\n    // Aufbereitung, wenn alles OK\r\n    VerString = tostr (VerString);\r\n    LasString = tostr (LasString); \r\n    *Result = CodeString;\r\n    Version = binstrtoi(midstr(CodeString,0,4));\r\n    if (Version == 0x43463230)\t// CF20\r\n    {\r\n\t// CSF-Format\r\n\terrDebug (2, midstr(CodeString, 0, 200));\r\n\tcsf = csfrdOpen (CodeString, &telname);\r\n\tif (csf < 0)\r\n\t    err = errFatal (NOK, \"wrong format\");\r\n\telse\r\n\t{\r\n\t    while (!err && csfrdGetTel (csf, &tel) == 0)\r\n\t    {\r\n//\t    \terrDebug (10, \"subtel=\", tel); // Debug cmcm\r\n\t    \terr = csfRead (tel, &telname);\r\n\t    \tif (!err)\r\n\t    \t{\r\n\t    \t    if (telname == \"ZDC\")\r\n\t    \t    {\r\n\t    \t      err = csfRead (tel, &telname, XmlVersion, XmlContainer);\r\n\t    \t      if (ipath)\r\n\t\t    \t      *XmlContainer = spath + *XmlContainer;\r\n\t    \t\terrDebug (11, \"xmlver=\", *XmlVersion, \" xmlfile=\", *XmlContainer);\r\n\t\t\tif (*XmlVersion == \"0152\")\r\n\t\t\t{\r\n\t\t\t    _err = _vwcodewExecuteEx (*XmlContainer, LangCode_Result, &sCodewordInfo, &iZahlenbasis);\r\n\t\t\t    if (_err == OK)\r\n\t\t\t\t{\r\n\t\t\t\t    if (iZahlenbasis != 1)\t// kurze Codierung\r\n\t\t\t\t    {\t\r\n\t\t\t\t\t*Codier_Art = 0;\r\n\t\t\t\t\terrDebug (13, hexstr (*LangCode_Result));\r\n\t\t\t\t\t*Codierung_Result = binstrtoi (*LangCode_Result);\r\n\t\t\t\t    }\r\n\t\t\t\t    else\t// lange Codierung\r\n\t\t\t\t    {\r\n\t\t\t\t\t*Codier_Art = 1;\r\n\t\t\t\t\t*LangCode_Result = midstr (*LangCode_Result, 1, -1);\r\n\t\t\t\t\terrDebug (14, hexstr (*LangCode_Result));\r\n\t\t\t\t    }\r\n\t\t\t\t    errDebug (12, sprintf (\"CWG: %s\", sCodewordInfo));\r\n\t\t             }\t\r\n\t\t\t     else errDebug (13, \"No CWG!\");\r\n\t\t\t}\r\n\t    \t    }\r\n\t    \t    else if (telname == \"FTN\")\r\n\t\t    {\r\n\t\t\terr = csfRead (tel, &telname, &ftn);\r\n\t\t\terrDebug (15, sprintf (\"FTN: %s\", ftn));\r\n\t\t\t*ID_Expression = ftn;\r\n   \t\t\tif (ftn [0] == '+')\r\n\t\t            ftn = midstr (ftn, 1, -1);\r\n\t\t\tif (strfind (ftn, \"/()\") < 0)\r\n\t    \t      {\r\n\t    \t            if (strtok (&ftn, ID_Result1, delim) >= 0)\r\n\t\t\t\t    *ID_Result1 = sprintf (\"%-12s\", *ID_Result1);\r\n\t    \t            if (strtok (&ftn, ID_Result2, delim) >= 0)\r\n\t\t\t\t    *ID_Result2 = sprintf (\"%-12s\", *ID_Result2);\r\n\t    \t            if (strtok (&ftn, ID_Result3, delim) >= 0)\r\n\t\t\t\t    *ID_Result3 = sprintf (\"%-12s\", *ID_Result3);\r\n\t    \t            if (strtok (&ftn, ID_Result4, delim) >= 0)\r\n\t\t\t\t    *ID_Result4 = sprintf (\"%-12s\", *ID_Result4);\r\n\t    \t            if (strtok (&ftn, ID_Result5, delim) >= 0)\r\n\t\t\t\t    *ID_Result5 = sprintf (\"%-12s\", *ID_Result5);\r\n\t    \t            if (strtok (&ftn, ID_Result6, delim) >= 0)\r\n\t\t\t\t    *ID_Result6 = sprintf (\"%-12s\", *ID_Result6);\r\n\t    \t            if (strtok (&ftn, ID_Result7, delim) >= 0)\r\n\t\t\t\t    *ID_Result7 = sprintf (\"%-12s\", *ID_Result7);\r\n\t\t\t}\r\n\t    \t    }\r\n\t    \t    else if (telname == \"RTN\")\r\n\t    \t    {\r\n\t    \t        err = csfRead (tel, &telname, &rtn);\r\n\t\t\terrDebug (16, sprintf (\"RTN: %s\", rtn));\r\n\t\t\t\t\t\t\t\tif (!err)\r\n\t\t\t\t\t\t\t\t\t*Rohteilenummer = rtn;\r\n\t    \t    }\r\n\t    \t    else if (telname == \"BGR\")\r\n\t    \t    {\r\n\t    \t        err = csfRead (tel, &telname, HWBgp, SWBgp);\r\n\t\t\terrDebug (17, sprintf (\"BGR: hw=%s sw=%s\", *HWBgp, *SWBgp));\r\n\t    \t    }\r\n\t    \t    else if (telname == \"PRG2\")\r\n\t    \t    {\r\n\t    \t        err = csfRead (tel, &telname, &noblk, &progstr);\r\n\t    \t        strM4Set (ProgL_String, 0, noblk);\r\n\t    \t        *ProgL_String = *ProgL_String + progstr;\r\n\t\t\terrDebug (18, sprintf (\"PRG2: data=%s\", hexstr (*ProgL_String)));\r\n \t\t// um abwaertzkompatibel zu bleiben hier der 'alte' Prog_String:\r\n\t    \t        strM2Set (Prog_String, 0, noblk);\r\n\t\t\t  len = binstrtoi(*Prog_String);\r\n\t\t\t  TmpString = midstr(*ProgL_String,4,-1);\r\n\t\t\t  while (len > 0) \r\n\t\t\t\t{\r\n\t\t\t\t*Prog_String = *Prog_String + midstr(TmpString,2,2) + midstr(TmpString,6,2) + midstr(TmpString,8,binstrtoi(midstr(TmpString,6,2)));\r\n\t\t\t\tTmpString = midstr(TmpString,8 + binstrtoi(midstr(TmpString,6,2)),-1);\r\n\t\t\t\tlen = len -1;\r\n\t\t\t\t}\r\n\t\t\terrDebug (18, sprintf (\"PRG:  data=%s\", hexstr (*Prog_String)));\r\n\t    \t    }\r\n\t    \t    else if (telname == \"COD\")\r\n\t    \t    {\r\n\t    \t        err = csfRead (tel, &telname, &codestr);\r\n\t    \t        *Codier_Art = 0;\r\n\t    \t        if (iCodeCnt == 0)\r\n\t    \t        {\r\n\t    \t            *Codierung_Result = ascstrtoi (codestr);\r\n\t\t\t    *LangCode_Result = itobinstr (*Codierung_Result);\r\n\t    \t        }\r\n\t    \t        iCodeCnt = iCodeCnt + 1;\r\n\t    \t        errDebug (19, sprintf (\"COD: data=%s\", codestr));\r\n\t    \t    }\r\n\t    \t    else if (telname == \"LOG\")\t    \t    {\r\n\t    \t    \terr = csfRead (tel, &telname, &iLogin);\r\n\t    \t    \tif (iLogCnt == 0)\r\n\t    \t            *Login1_Result = iLogin;\r\n\t    \t        else if (iLogCnt == 1)\r\n\t    \t            *Login2_Result = iLogin;\r\n\t\t\tiLogCnt = iLogCnt + 1;\r\n\t\t\terrDebug (20, sprintf (\"LOG: data=%d\", iLogin));\r\n\t    \t    }\r\n\t    \t    else if (telname == \"ANP\")\r\n\t    \t    {\r\n\t    \t    \terr = csfRead (tel, &telname, &iAnpKa, &iAnpWert);\r\n\t    \t        iAnpCnt = iAnpCnt + 1;\r\n\t    \t        strM2Set (Anpassung_String, 0, iAnpCnt);\r\n\t    \t        strM2Set (&anpstr, 0, iAnpKa);\r\n\t    \t        strM2Set (&anpstr, 2, iAnpWert);\r\n\t    \t    \t*Anpassung_String = *Anpassung_String + anpstr;\r\n\t\t\terrDebug (21, sprintf (\"ANP: K=%d W=%d\", iAnpKa, iAnpWert));\r\n\t    \t    }\r\n\t    \t    else if (telname == \"STG\")\r\n\t    \t    {\r\n\t    \t    \terr = csfRead (tel, &telname, &StgArt);\r\n\t    \t    \tif (iStgCnt == 0)\r\n\t    \t    \t    *Anzahl_Stg = StgArt % 10;\r\n\t    \t    \tiStgCnt = iStgCnt + 1;\r\n\t\t\terrDebug (22, sprintf (\"STG: data=%d\", StgArt));\r\n\t    \t    }\r\n\t    \t    else\r\n\t    \t\terrDebug (25, \"unhandled tel=\", tel);\r\n\t    \t}\r\n\t    }\r\n\t    csfrdClose (csf);\r\n\t}\r\n\tif (err)\r\n\t{\r\n\t    ErrString = \"FGT200\";\r\n\t}\r\n    }\r\n    else if (Version == 101 || Version == 102)\r\n    {\r\n    \tif (Version == 102)\r\n    \t{\r\n\t    errDebug (2, hexstr (CodeString));\r\n\t    xmlPathLen = CodeString [4]*265 + CodeString [5];\r\n\t    *XmlContainer\t= midstr (CodeString, 6, xmlPathLen);\r\n\t    codeLen =  CodeString[xmlPathLen + 6]*256 + CodeString[xmlPathLen + 7];\r\n\t    CodeString = \"\\h00000000\" + midstr (*Result, xmlPathLen + 8, -1);\r\n\t    // Codierwort ?er XML-Datei berechnen\r\n\t    if (*XmlContainer[0] != 0)\r\n\t    {\r\n\t\terr = _vwcodewExecuteEx (*XmlContainer, LangCode_Result, &sCodewordInfo, &iZahlenbasis);\r\n\t\terrDebug(1,sprintf(\"CWG: %s\",sCodewordInfo));\r\n\t\tif (iZahlenbasis != 1)\t// kurze Codierung\r\n\t\t{\t\r\n\t\t    *Codier_Art = 0;\r\n\t\t    errDebug (3, hexstr (*LangCode_Result));\r\n\t\t    *Codierung_Result = binstrtoi (*LangCode_Result);\r\n\t\t}\r\n\t\telse\t\t\t// lange Codierung\r\n\t\t{\r\n\t\t    *Codier_Art = 1;\r\n\t\t    *LangCode_Result = midstr (*LangCode_Result, 1, -1);\r\n\t\t    errDebug (4, hexstr (*LangCode_Result));\r\n\t\t}\r\n\t    }\r\n\t    if (err)\r\n\t\t*Codierung_Result = -1;\r\n\t}\r\n\r\n\t// Behandlung Teilenummern\r\n\tElementeAnzahl\t= binstrtoi(midstr(CodeString,4,2));\r\n\tTeilString\t\t= midstr(CodeString,6,12*ElementeAnzahl);\r\n\tCodeString\t\t= midstr(CodeString,12*ElementeAnzahl+6,strlen(CodeString));\r\n\terrDebug(1,sprintf(\"TeileNummern:%s\",TeilString));\r\n\tif  (ElementeAnzahl > 0)\r\n\t{\r\n\t    *ID_Result1       = midstr(TeilString,0,12);\r\n\t    *ID_Expression = *ID_Result1;\r\n\t}\r\n\tif  (ElementeAnzahl > 1)\r\n\t{\r\n\t    *ID_Result2       = midstr(TeilString,12,12);\r\n\t    *ID_Expression = *ID_Expression + \"+\" + *ID_Result2;\r\n\t}\r\n\tif  (ElementeAnzahl > 2)\r\n\t{\r\n\t    *ID_Result3       = midstr(TeilString,24,12);\r\n\t    *ID_Expression = *ID_Expression + \"+\" + *ID_Result3;\r\n\t}\r\n\tif  (ElementeAnzahl > 3)\r\n\t{\r\n\t    *ID_Result4       = midstr(TeilString,36,12);\r\n\t    *ID_Expression = *ID_Expression + \"+\" + *ID_Result4;\r\n\t}\r\n\tif  (ElementeAnzahl > 4)\r\n\t{\r\n\t    *ID_Result5       = midstr(TeilString,48,12);\r\n\t    *ID_Expression = *ID_Expression + \"+\" + *ID_Result5;\r\n\t}\r\n\tif  (ElementeAnzahl > 5)\r\n\t{\r\n\t    *ID_Result6       = midstr(TeilString,60,12);\r\n\t    *ID_Expression = *ID_Expression + \"+\" + *ID_Result6;\r\n\t}\r\n\tif  (ElementeAnzahl > 6)\r\n\t{\r\n\t    *ID_Result7       = midstr(TeilString,72,12);\r\n\t    *ID_Expression = *ID_Expression + \"+\" + *ID_Result7;\r\n\t}\r\n\t// Behandlung Codierung\r\n\tElementeAnzahl\t= binstrtoi(midstr(CodeString,0,2));\tTeilString\t\t= midstr(CodeString,2,12*ElementeAnzahl);\r\n\tCodeString\t\t= midstr(CodeString,12*ElementeAnzahl+2,strlen(CodeString));\r\n\tif  (ElementeAnzahl > 0 && *Codierung_Result == -1)\r\n\t{\r\n\t    *Codierung_Result = binstrtoi(midstr(TeilString,8,4));\r\n\t    *Codier_Art = 0;\r\n\t}\r\n\terrDebug(1,sprintf(\"Codierung:%s;%d\",hexstr(TeilString),*Codierung_Result));\r\n\r\n\t// Behandlung Login\r\n\tElementeAnzahl\t= binstrtoi(midstr(CodeString,0,2));\r\n\tTeilString\t\t= midstr(CodeString,2,2*ElementeAnzahl);\r\n\tCodeString\t\t= midstr(CodeString,2*ElementeAnzahl+2,strlen(CodeString));\r\n\tif  (ElementeAnzahl > 0)\r\n\t    *Login1_Result    = binstrtoi(midstr(TeilString,0,2));\r\n\tif  (ElementeAnzahl > 1)\r\n\t    *Login2_Result    = binstrtoi(midstr(TeilString,2,2));\r\n\terrDebug(1,sprintf(\"Login:%s;%d;%d\",hexstr(TeilString),*Login1_Result,*Login2_Result));\r\n\r\n\t// Behandlung STGArt\r\n\tElementeAnzahl\t= binstrtoi(midstr(CodeString,0,2));\r\n\tTeilString\t\t= midstr(CodeString,2,2*ElementeAnzahl);\r\n\tCodeString\t\t= midstr(CodeString,2*ElementeAnzahl+2,strlen(CodeString));\r\n\tif  (ElementeAnzahl > 0)\r\n\t{\r\n\t    StgArt \t\t  = binstrtoi(midstr(TeilString,2,2));\r\n\t    *Anzahl_Stg = StgArt - (StgArt / 10 * 10);\r\n\t}\r\n\t// Behandlung Anpassung\tElementeAnzahl\r\n\tElementeAnzahl\t= binstrtoi(midstr(CodeString,0,2));\r\n\tTeilString\t\t= midstr(CodeString,0,4*ElementeAnzahl+2);\r\n\tCodeString\t\t= midstr(CodeString,4*ElementeAnzahl+2,strlen(CodeString));\r\n\tif (ElementeAnzahl > 0)\r\n\t    *Anpassung_String = TeilString;\r\n\telse\r\n\t    *Anpassung_String = \"\";\r\n\t// Achtung bei Version 102 Struktur?derung an dieser Stelle (+ 16 Byte Baugruppe/Sorte)\r\n\tif (Version == 102)\r\n\t{\r\n\t    *HWBgp\t\t= hexstr (midstr(CodeString,0 ,8));\r\n\t    *SWBgp\t\t= hexstr (midstr(CodeString,8 ,16));\r\n\t    CodeString\t= midstr(CodeString,16 ,strlen(CodeString));\r\n\t}\r\n\t// Behandlung Programmierdaten\r\n\t*Prog_String      = CodeString;\r\n\tif ((strlen(*Prog_String) < 2) || ((*Prog_String[0] == 0) && (*Prog_String[1] == 0)))\r\n\t    *Prog_String = \"\";\r\n\terrDebug(1,sprintf(\"ProgDaten;%s\",hexstr(CodeString)));\r\n    }\r\n    else\r\n    {\r\n        // Abbruch bei falscher WinPfau Version\r\n\tErrString = sprintf(\"falsche Version %d (> 102)\", Version);\r\n\terr = NOK;\r\n    }\r\n}\r\nif (!err)\r\n{\r\n    *Auswahl_Ergebnis = sprintf(\"Version:%s LAS:%s\",VerString,LasString);\r\n    if (strlen (ErrString))\r\n\t*Auswahl_Ergebnis = *Auswahl_Ergebnis + \" \" + KommentarFehler + \":\" + ErrString;\r\n    *Result_Status    = OK;\r\n}\r\nelse\r\n{\r\n    *Auswahl_Ergebnis = sprintf(\"%s:%s\",KommentarFehler,ErrString);\t\r\n    *Result_Status = NOK;\r\n    errFatal (err, *Auswahl_Ergebnis);\r\n}\r\n_statSetAsciiResult (err, *Auswahl_Ergebnis, FUABBR);";}
     NodeCategory{"";}
     Info{"Dieser Baustein wertet das Codfile mit der entsprechenden STG_Nr (XX) aus.\r\n\r\nDabei werden die Files \"codefXX\",\"lXXtab\" und \"codverXX\" auf dem Pr\xFCfplatz im Directory \"skript\" ben\xF6tigt\".\r\nDiese Files werden auf ihre Richtigkeit und Zugeh\xF6hrigkeit \xFCberpr\xFCft. Sind die CRC-Pr\xFCfsummen i.O. und\r\nbesitzen alle drei Files die gleiche Versionsnummer, wird der entsprechende Satz durch \xDCberpr\xFCfung der\r\nLAS aus dem File \"lXXtab\" an Hand des Fahrzeugdatensatzes gesucht. Ist ein Satz g\xFCltig,\r\nwerden die fahrzeugabh\xE4nigen Daten aus dem File \"codefXX\" und die Freigabeversion dieses Satzes\r\naus dem File \"codverXX\" geladen.\r\n\r\nDie Bewertung dieses Bausteines OK, wenn alle oben genannten Bedingungen erf\xFCllt sind und damit ein f\xFCr diese\r\nFahrzeugausstattung passender Satz gefunden wurde. In allen anderen F\xE4llen ist die Bewertung NOK.\r\n\r\nIst die Bewertung OK, werden die gefundenen Daten unformatiert in der Variablen \"Result\" zur Verf\xFCgung\r\ngestellt. Anschlie\xDFend werden die Daten aufbereitet, in der Variablen \"ID-Result\" die Teilenummer(n) und der \r\nIndex des erwarteten Steuerger\xE4tes 12stellig und in der Variablen \"Codierung_Result\" die\r\nCodierung f\xFCr dieses Fahrzeug gespeichert. Die Codierung kann entweder in der Freigabetabelle, in einem\r\n XML-Container, oder in einem XML Container, der einen \"Codierwortgenerator\" ben\xF6tigt, enthalten sein. \r\nIn \"Login1_Result\" / \"Login2_Result\" werden Logins bereitgestellt (wenn vorhanden).\r\nIn \"Prog_String\" werden die zu programierenden Daten bereitgestellt (wenn vorhanden).\r\nDiese k\xF6nnen dann an das Element \"CodefileProgramm_Dummy\" \xFCbergeben werden\r\n\r\nDie Variable \"Auswahl_Ergebnis\" enth\xE4lt im NOK-Fall die Fehlermeldung im Klartext und im OK-Fall\r\ndie Versionsnummer der Freigabetabelle, die gefundene Satznummer und den entsprechende LAS.\r\nDiese Information wird auch in die Statistik geschrieben.\r\n\r\nDie Variable \"Result_Status\" kann f\xFCr Ablaufsteuerungen verwendet werden. Sobald der Baustein seine\r\nAnalyse beginnt wird sie auf -1 gesetzt. Ist die Analyse beendet sigalisiert eine 0 die G\xFCltigkeit der Daten.\r\nEine 1 zeigt, da\xDF w\xE4hrend der Analyse ein Fehler aufgetreten ist, oder das f\xFCr diese Fahrzeug keine\r\nDaten gefunden werden konnten.\r\nWerden Codefile-Informationen an verschiedenen Stellen des Ablaufes oder in verschiedenen Sequenzen\r\nben\xF6tigt, so kann man \xFCber die Variable \"Result_Status\" abfragen, ob die Codefile-Auswahl schon einmal\r\nerfolgt und g\xFCltig ist. So kann man wiederholte Codefile-Auswahl vermeiden. Auch ist eine Parallelisierung \r\naller Codefile-Auswertungen in einer Hintergrund-Task m\xF6glich. Voraussetzung f\xFCr die Verwendung an\r\nmehreren Stellen oder die Parallelisierung ist eine Initialisierung dieser Variablen auf -2 nach Anforderung \r\neines Fahrzeugdatensatzes.\r\nDie Syncronisatzion der Abl\xE4ufe kann hierbei mit \"Codefile_Warten\" oder Codefile_Warten_Statistik\" erfolgen.\r\n\r\nsz, 29.08.02\r\n\r\nErweietrung auf LangeCodierung.\r\nNun wird im Parameter \"Codier_Art\" angegeben ob es eine \"kurze\" Codierung wie bisher (Wert = 0) oder \r\neine Lange Codierung (Wert = 1) handelt. Bei Codier_Art = 1 wird der CodierString der langen Codierung in \r\ndem Parameter LangCode_Result \xFCbergeben; die Lange Codierung kann bis zu 250 Bytes beinhalten und mit den \r\nBausteinen \"VW2000_Codierung_Lang\" geschrieben und \"VW2000_Cod_Lang_Lesen_Bew\" gepr\xFCft werden. \r\n\r\nsz, 26.03.03\r\n\r\nErweiterung f\xFCr Freigabetabellen in Version 2.0 und Erweiterung f\xFCr ZDC 2.02.\r\nSofern in der Freigabetabelle ein Verweis auf einen ZDC V 2.02 enthalten ist, kann der WinPfau die Berechnung von \r\nCodierwort, Anpassung, Programmierdaten und Flashdaten nicht offline durchf\xFChren. Der Baustein liefert als Erweiterung\r\nneben dem Namen des Containers auch die Version des Containes zur\xFCck. Die Berechnung von Codierwort, \r\nAnpassung, Programmierung und Flashdaten erfolgt durch spezielle ZdcXxx Bausteine.\r\nF\xFCr Daten im \"alten\" WinPfau-Format <= V 102 werden die Parameter abw\xE4rtkompatibel aufgef\xFCllt.\r\nEin weiterer neuer Parameter ist \"ID_Expression\", der mit dem logischen Ausdruck der Fertigteilnummern gef\xFCllt wird.\r\n\r\ncm, 03.07.03\r\n\r\nErweiterung um den Parameter \"ProgL_String\"\r\nAb der WinPfau Version 9.2.0.3 wird in dem Parameter \"ProgL_String\" der Programmierstring im 4 Byte \r\nFormat erzeugt. Aufbau ist identisch zu dem Parameter  \"Prog_String\", jedoch Anzahl, L\xE4nge und Adresse \r\nsind jeweils 4 Byte Motorola codiert.\r\n\r\ncm, 13.08.03\r\n\r\nErzeugt der WinPfau CSF Codefiles gibt es kein Telegramm \"PRG\" mehr. Nur noch \"PRG2\"; \r\nnun wird die kurze Programmierung \"Prog_String\" mit sinnvollen Daten bef\xFCllt; damit ist der Baustein abw\xE4rtskompatibel.\r\nMit dieser Version wird nun \"Prog_String\" mit plausiblen Daten gef\xFCllt solange die START-ADR <= 2 Byte ist.\r\n\r\nsz, 03.09.03\r\n\r\nWeitere Fehler bei Umwandlung PRG2 nach PRG beseitigt.\r\n\r\njk 11.09.03\r\n\r\nBugfix zur Inkompatibilit\xE4t der Freigabetabelle *.txt mit mehr als 3 TNR (abschneiden der TNR 4 u. 5)\r\nDer Fehler tritt nur bei mehr als 3 TNR und CF20 bei FTabs im Format *.txt auf.\r\n\r\nsz  28.04.04\r\n\r\nBugfix zur Versionskennung der FTab und LAS-String in der Statistik\r\n(wurde ab Version 2.5.6 der mslext nicht mehr vollst\xE4ndig in der Statistik aufgenommen)\r\n\r\nsz  07.06.04\r\n\r\nBugfix zum Bugfix: im Fehlerfall wird jetzt nicht mehr abgebrochen, sondern wie fr\xFCher ein \r\nNOK in die Statistik geschrieben.\r\n\r\nsz  08.06.04 \r\n\r\nBugfix: fehlende Initialisierung des Parameters XmlVersion eingetragen\r\n\r\nsz  21.01.05 ";"Dieser Baustein wertet das Codfile mit der entsprechenden STG_Nr (XX) aus.\r\n\r\nDabei werden die Files \"codefXX\",\"lXXtab\" und \"codverXX\" auf dem Pr\xFCfplatz im Directory \"skript\" ben\xF6tigt\".\r\nDiese Files werden auf ihre Richtigkeit und Zugeh\xF6hrigkeit \xFCberpr\xFCft. Sind die CRC-Pr\xFCfsummen i.O. und\r\nbesitzen alle drei Files die gleiche Versionsnummer, wird der entsprechende Satz durch \xDCberpr\xFCfung der\r\nLAS aus dem File \"lXXtab\" an Hand des Fahrzeugdatensatzes gesucht. Ist ein Satz g\xFCltig,\r\nwerden die fahrzeugabh\xE4nigen Daten aus dem File \"codefXX\" und die Freigabeversion dieses Satzes\r\naus dem File \"codverXX\" geladen.\r\n\r\nDie Bewertung dieses Bausteines OK, wenn alle oben genannten Bedingungen erf\xFCllt sind und damit ein f\xFCr diese\r\nFahrzeugausstattung passender Satz gefunden wurde. In allen anderen F\xE4llen ist die Bewertung NOK.\r\n\r\nIst die Bewertung OK, werden die gefundenen Daten unformatiert in der Variablen \"Result\" zur Verf\xFCgung\r\ngestellt. Anschlie\xDFend werden die Daten aufbereitet, in der Variablen \"ID-Result\" die Teilenummer(n) und der \r\nIndex des erwarteten Steuerger\xE4tes 12stellig und in der Variablen \"Codierung_Result\" die\r\nCodierung f\xFCr dieses Fahrzeug gespeichert. Die Codierung kann entweder in der Freigabetabelle, in einem\r\n XML-Container, oder in einem XML Container, der einen \"Codierwortgenerator\" ben\xF6tigt, enthalten sein. In \r\n\"Prog_String\" werden die zu programierenden Daten bereitgestellt (wenn vorhanden).\r\nDiese k\xF6nnen dann an das Element \"CodefileProgramm_Dummy\" \xFCbergeben werden\r\n\r\nDie Variable \"Auswahl_Ergebnis\" enth\xE4lt im NOK-Fall die Fehlermeldung im Klartext und im OK-Fall\r\ndie Versionsnummer der Freigabetabelle, die gefundene Satznummer und den entsprechende LAS.\r\nDiese Information wird auch in die Statistik geschrieben.\r\n\r\nDie Variable \"Result_Status\" kann f\xFCr Ablaufsteuerungen verwendet werden. Sobald der Baustein seine\r\nAnalyse beginnt wird sie auf -1 gesetzt. Ist die Analyse beendet sigalisiert eine 0 die G\xFCltigkeit der Daten.\r\nEine 1 zeigt, da\xDF w\xE4hrend der Analyse ein Fehler aufgetreten ist, oder das f\xFCr diese Fahrzeug keine\r\nDaten gefunden werden konnten.\r\nWerden Codefile-Informationen an verschiedenen Stellen des Ablaufes oder in verschiedenen Sequenzen\r\nben\xF6tigt, so kann man \xFCber die Variable \"Result_Status\" abfragen, ob die Codefile-Auswahl schon einmal\r\nerfolgt und g\xFCltig ist. So kann man wiederholte Codefile-Auswahl vermeiden. Auch ist eine Parallelisierung \r\naller Codefile-Auswertungen in einer Hintergrund-Task m\xF6glich. Voraussetzung f\xFCr die Verwendung an\r\nmehreren Stellen oder die Parallelisierung ist eine Initialisierung dieser Variablen auf -2 nach Anforderung \r\neines Fahrzeugdatensatzes.\r\nDie Syncronisatzion der Abl\xE4ufe kann hierbei mit \"Codefile_Warten\" oder Codefile_Warten_Statistik\" erfolgen.\r\n\r\nsz, 29.08.02\r\n";}
     Rights{"Write";"Read";}
     VersionInfo{
      CurVersion{2;24;"nbmr";}
      Version{1;0;"AC";"- freigegeben -";"vw-admin";"24.03.2003 16:35:45";}
      Version{1;1;"AC";"- in Arbeit -";"vw-admin";"28.03.2003 10:07:03";}
      Version{1;2;"AC";"- in Arbeit -";"vw-admin";"28.03.2003 10:18:41";}
      Version{1;3;"AC";"- in Arbeit -";"vw-admin";"22.04.2003 17:22:18";}
      Version{1;4;"AC";"- in Arbeit -";"vw-admin";"20.08.2003 16:33:12";}
      Version{1;5;"AC";"- in Arbeit -";"vw-admin";"20.08.2003 16:34:16";}
      Version{1;6;"AC";"- in Arbeit -";"vw-admin";"20.08.2003 16:34:48";}
      Version{1;7;"AC";"- in Arbeit -";"vw-admin";"20.08.2003 16:35:49";}
      Version{1;8;"AC";"- in Arbeit -";"vw-admin";"20.08.2003 16:36:08";}
      Version{1;9;"AC";"- in Arbeit -";"vw-admin";"27.08.2003 16:54:03";}
      Version{1;10;"AC";"- in Arbeit -";"vw-admin";"28.08.2003 15:33:13";}
      Version{1;11;"AC";"- in Arbeit -";"vw-admin";"03.09.2003 15:00:46";}
      Version{1;12;"AC";"- in Arbeit -";"vw-admin";"03.09.2003 15:02:08";}
      Version{1;13;"AC";"- in Arbeit -";"vw-admin";"03.09.2003 15:04:31";}
      Version{1;14;"MOS";"- in Arbeit -";"dsa-admin";"11.09.2003 10:17:40";}
      Version{2;0;"AC";" - freigegeben - ";"vw-admin";"14.10.2003 11:04:44";}
      Version{2;1;"AC";"- in Arbeit -";"vw-admin";"14.10.2003 11:05:00";}
      Version{2;2;"AC";"- in Arbeit -";"vw-admin";"28.04.2004 15:57:29";}
      Version{2;3;"AC";"- in Arbeit -";"vw-admin";"28.04.2004 15:59:54";}
      Version{2;4;"AC";"- in Arbeit -";"vw-admin";"07.06.2004 08:07:33";}
      Version{2;5;"AC";"- in Arbeit -";"vw-admin";"07.06.2004 08:16:02";}
      Version{2;6;"AC";"- in Arbeit -";"vw-admin";"08.06.2004 15:50:33";}
      Version{2;7;"AC";"- in Arbeit -";"admin";"21.01.2005 15:11:55";}
      Version{2;8;"AC";"- in Arbeit -";"admin";"21.01.2005 15:12:38";}
      Version{2;9;"ZPH18";"[ Baustein importiert (ersetzt) ]";"admin";"15.08.2007 08:15:15";}
      Version{2;10;"svwcp2";"- in Arbeit -";"admin";"12.10.2007 18:36:23";}
      Version{2;11;"CP23A";"- in Arbeit -";"admin";"25.10.2007 11:40:21";}
      Version{2;12;"CP23A";"- in Arbeit -";"admin";"25.10.2007 12:37:22";}
      Version{2;13;"CP23A";"- in Arbeit -";"admin";"25.10.2007 12:38:53";}
      Version{2;14;"CP23A";"- in Arbeit -";"admin";"25.10.2007 12:40:10";}
      Version{2;15;"CP23A";"- in Arbeit -";"admin";"25.10.2007 12:42:33";}
      Version{2;16;"CP23A";"- in Arbeit -";"admin";"25.10.2007 12:45:02";}
      Version{2;17;"CP23A";"- in Arbeit -";"admin";"25.10.2007 12:47:28";}
      Version{2;18;"nbmr";"[ Baustein importiert (ersetzt) ]";"dsa";"18.01.2010 15:13:28";}
      Version{2;19;"svw";"- in Arbeit -";"dsa";"29.03.2010 11:25:24";}
      Version{2;20;"svw";"- in Arbeit -";"dsa";"29.03.2010 11:25:57";}
      Version{2;21;"svw";"- in Arbeit -";"dsa";"29.03.2010 11:28:01";}
      Version{2;22;"svw";"- in Arbeit -";"dsa";"29.03.2010 11:28:52";}
      Version{2;23;"svw";"- in Arbeit -";"dsa";"29.03.2010 11:30:25";}
      Version{2;24;"nbmr";"[ Baustein importiert (ersetzt) ]";"dsa";"05.05.2010 11:08:10";}}}}}}
 FunctionDef{
  Name{"VW_spezifische_Bibliothek";}
  LangName{"VW_spezifische_Bibliothek";"VW_specific_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"Sammlung von Bausteinen zur Kommunikation mit Steuergeraeten von VW.";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;2;"ZPH18";}
   Version{1;0;"AC";"- freigegeben -";"vw-admin";"04.03.2003 11:56:19";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"07.08.2006 13:58:14";}
   Version{1;2;"ZPH18";"[ Baustein importiert (ersetzt) ]";"admin";"14.08.2007 15:07:01";}}
  FunctionDef{
   Name{"VW_Codefileauswahl";}
   LangName{"VW_Codefileauswahl";"VW_Codefileauswahl";}
   CvsVerHis{}
   Type{1;}
   Icon{0;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Platzhalter f\xFCr Pr\xFCfschritte";"";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{0;1;"PAE";}
    Version{0;1;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"24.07.2006 17:06:13";}}
   FunctionDef{
    Name{"Codefile_Warten_Statistik";}
    LangName{"Codefile_Warten_Statistik";"Codefile_Warten_Statistik";}
    CvsVerHis{}
    Type{1;}
    Icon{0;}
    Properties{"Begin";}
    FormalParam{
     InputParam{"DialogHndl";
      LangName{"DialogHndl";"DialogHndl";}"DialogTyp";"DIALOG_LOKAL";
      LangDesc{"";"";}}
     InputParam{"Zeile";
      LangName{"Zeile";"Zeile";}"DialogLine";"CDialogZeile1";
      LangDesc{"";"";}}
     InputParam{"Text";
      LangName{"Text";"Text";}"TEXT";"CTextLeer";
      LangDesc{"";"";}}
     OutputParam{"Result_Status";
      LangName{"Result_Status";"Result_Status";}"Codefile_Result_Int";"Dummy_Status";
      LangDesc{"Status Auswahl (-1= l\xE4uft 0=OK 1=NOK)";"";}}
     OutputParam{"Auswahl_Ergebnis";
      LangName{"Auswahl_Ergebnis";"Auswahl_Ergebnis";}"Codefile_Result_Str";"Dummy_Auswahl";
      LangDesc{"Version/SatzNr/LAS";"";}}
     InputParam{"Timeout";
      LangName{"Timeout";"Timeout";}"Timeout";"CTime30";
      LangDesc{"Maximale Pr\xFCfzeit";"";}}}
    LocalVar{
     LocVarDef{"KommentarLaeuft";
      LangName{"KommentarLaeuft";"";}"Locvar";"TEXT";
      LangDesc{"";"";}
      LangText{"\"Auswahl laeuft\"";"\"\xD4\xCB\xD0\xD0\"";"\"running\"";}"Const";}
     LocVarDef{"KommentarPflegefehler";
      LangName{"KommentarPflegefehler";"KommentarPflegefehler";}"Locvar";"TEXT";
      LangDesc{"";"";}
      LangText{"\"Codefile Pflegefehler\"";"\"\xB1\xE0\xC2\xEB\xCE\xC4\xBC\xFE\xD4\xEC\xB3\xC9\xB2\xCE\xCA\xFD\xC9\xE8\xB6\xA8\xB4\xED\xCE\xF3\"";"\"Codefiles parametererror\"";}"Const";}
     LocVarDef{"KommentarTimeout";
      LangName{"KommentarTimeout";"";}"Locvar";"TEXT";
      LangDesc{"";"";}
      LangText{"\"Abbruch Timeout\"";"\"\xB3\xAC\xCA\xB1\xCD\xCB\xB3\xF6\"";"\"Abort timeout\"";}"Const";}}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"if (Zeile > 0)\r\n\t_dlgMultiSetLine (DialogHndl, Zeile, Text);\r\n\r\nint\ttstart;\r\n\r\ntstart = time ();\r\n\r\nwhile (*Result_Status < 0)\r\n\t{\r\n\tif (time () > tstart + Timeout)\r\n\t\t{\r\n\t\t*Result_Status = -3;\r\n\t\tbreak;\r\n\t\t}\r\n\r\n\tWait (0.1);\r\n\t}\r\n\r\nerr = NOK;\r\nswitch(*Result_Status)\r\n\t{\r\n\tcase -3 :\r\n\t\t{\r\n\t\t_statSetAsciiResult (NOK, KommentarTimeout, FUABBR);\r\n\t\tbreak;\r\n\t\t}\r\n\tcase -1 :\r\n\t\t{\r\n\t\t_statSetAsciiResult (NOK, KommentarLaeuft, FUABBR);\r\n\t\tbreak;\r\n\t\t}\r\n\tcase 1 :\r\n\t\t{\r\n\t\t_statSetAsciiResult (NOK, *Auswahl_Ergebnis, FUABBR);\r\n\t\tbreak;\r\n\t\t}\r\n\tcase 0 :\r\n\t\t{\r\n\t\t_statSetAsciiResult (OK, *Auswahl_Ergebnis, FOK);\r\n\t\terr = OK;\r\n\t\tbreak;\r\n\t\t}\r\n\tdefault:\r\n\t\t{\r\n\t\t_statSetAsciiResult (NOK, KommentarPflegefehler, FUABBR);\r\n\t\tbreak;\r\n\t\t}\r\n\t}";}
    NodeCategory{"";}
    Info{"Wartet auf Status 0 = OK oder 1 =  NOK der Codefileabarbeitung und sendet den g\xFCltigen Satz\r\nin die Statistik.";"";}
    Rights{"Write";"Read";}
    VersionInfo{
     CurVersion{1;1;"PAE";}
     Version{1;0;"AC";"- freigegeben -";"vw-admin";"05.03.2003 16:30:12";}
     Version{1;1;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"24.07.2006 17:06:13";}}}}}
 FunctionDef{
  Name{"VW_spezifische_Bibliothek";}
  LangName{"VW_spezifische_Bibliothek";"VW_specific_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"Sammlung von Bausteinen zur Kommunikation mit Steuergeraeten von VW.";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;2;"ZPH18";}
   Version{1;0;"AC";"- freigegeben -";"vw-admin";"04.03.2003 11:56:19";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"07.08.2006 13:58:14";}
   Version{1;2;"ZPH18";"[ Baustein importiert (ersetzt) ]";"admin";"14.08.2007 15:07:01";}}
  FunctionDef{
   Name{"VW_Codefileauswahl";}
   LangName{"VW_Codefileauswahl";"VW_Codefileauswahl";}
   CvsVerHis{}
   Type{1;}
   Icon{0;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Platzhalter f\xFCr Pr\xFCfschritte";"";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{0;1;"PAE";}
    Version{0;1;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"24.07.2006 17:06:13";}}
   FunctionDef{
    Name{"Pfau_9_2_0";}
    LangName{"Pfau_9_2_0";"";}
    CvsVerHis{}
    Type{1;}
    Icon{0;}
    Properties{"Begin";}
    FormalParam{}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"";}
    NodeCategory{"";}
    Info{"";"";}
    Rights{"Write";"Read";}
    VersionInfo{
     CurVersion{0;1;"PAE";}
     Version{0;1;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"24.07.2006 17:06:13";}}
    FunctionDef{
     Name{"ZdcOpen";}
     LangName{"ZdcOpen";"";}
     CvsVerHis{}
     Type{1;}
     Icon{0;}
     Properties{"Begin";}
     FormalParam{
      OutputParam{"ZdcHndl";
       LangName{"ZdcHndl";"ZdcHndl";}"ZDC_HNDL";"DZdcHndl";
       LangDesc{"Handle zu einem ZDC";"";}}
      InputParam{"XmlContainer";
       LangName{"XmlContainer";"XmlContainer";}"XMLFILE";"DummyContainer_Name";
       LangDesc{"Name der XML-Datei";"";}}
      InputParam{"XmlVersion";
       LangName{"XmlVersion";"XmlVersion";}"XMLVERSION";"DummyContainer_Version";
       LangDesc{"Version des XML-Datei z.B. 0151/0202/0203/0204/020401";"";}}
      InputParam{"DebugLevel";
       LangName{"DebugLevel";"DebugLevel";}"Level";"CLevel0";
       LangDesc{"Debug-Level";"";}}}
     LocalVar{}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     MSLCode{"err = 0;\r\nif (*ZdcHndl >= 0)\r\n    zdcClose (*ZdcHndl);\r\n*ZdcHndl = -1;\r\nif (XmlContainer[0] != 0 && (XmlVersion == \"0202\" || XmlVersion == \"0203\" || XmlVersion == \"0204\" || XmlVersion == \"0205\" || XmlVersion == \"020401\"))\r\n{\r\n    *ZdcHndl = zdcOpen (XmlContainer, DebugLevel);\r\n    if (*ZdcHndl < 0)\r\n\terr = errFatal (NOK, \"open zdc failed \", XmlContainer);\r\n}";}
     NodeCategory{"";}
     Info{"Baustein \xF6ffnet einen Zieldaten-Container (ZDC) in den Versionen 2.02, 2.03 2.04, 2.0401.\r\n\r\nNach erfolgreichem Aufruf wird das \xFCbergebene Handle mit einem g\xFCltigen Wert (Wert >= 0) gesetzt.\r\nAndernfalls wird der Parameter \"ZdcHndl\" auf -1 gesetzt.\r\n\r\nDer Baustein steht in engem Zusammenhang mit dem Baustein \"VW_Codefile_STG\", der die\r\nEingangsparameter \"XmlContainer\" und \"XmlVersion\" f\xFCr diesem Baustein liefert.\r\n\r\n09.01.06, sr: Update, \xF6ffnet jetzt auch ZDC Container 2.03\r\n21.05.07, sz: Update, \xF6ffnet jetzt auch ZDC Container 2.04 und 2.0401";"";}
     Rights{"Write";"Read";}
     VersionInfo{
      CurVersion{1;10;"cp32";}
      Version{0;1;"DSA";"- in Arbeit -";"admin";"03.07.2003 16:07:52";}
      Version{0;2;"DSA";"- in Arbeit -";"admin";"03.07.2003 16:08:40";}
      Version{0;3;"DSA";"- in Arbeit -";"admin";"03.07.2003 16:09:12";}
      Version{0;4;"DSA";"- in Arbeit -";"admin";"03.07.2003 16:09:33";}
      Version{0;5;"DSA";"- in Arbeit -";"admin";"03.07.2003 16:10:00";}
      Version{0;6;"DSA";"- in Arbeit -";"admin";"03.07.2003 16:11:12";}
      Version{0;7;"DSA";"- in Arbeit -";"admin";"03.07.2003 16:11:35";}
      Version{1;0;"DSA";"";"sr";"17.12.2004 14:12:19";}
      Version{1;1;"AAC";"- in Arbeit -";"sr";"09.01.2006 11:44:45";}
      Version{1;2;"AAC";"- in Arbeit -";"sr";"09.01.2006 11:45:04";}
      Version{1;3;"AAC";"- in Arbeit -";"sr";"09.01.2006 11:45:22";}
      Version{1;4;"AC";"- in Arbeit -";"dsa-admin";"20.01.2006 15:15:43";}
      Version{1;5;"PAE";"- in Arbeit -";"dsa-admin";"15.05.2007 16:46:56";}
      Version{1;6;"PAE";"- in Arbeit -";"dsa-admin";"15.05.2007 16:47:33";}
      Version{1;7;"PAE";"- in Arbeit -";"dsa-admin";"21.05.2007 14:00:11";}
      Version{1;8;"ZPH18";"[ Baustein importiert (ersetzt) ]";"admin";"14.08.2007 15:07:01";}
      Version{1;9;"FAW";"- in Arbeit -";"admin";"18.08.2007 12:32:21";}
      Version{1;10;"cp32";"- in Arbeit -";"admin";"16.01.2013 11:17:48";}}}}}}
 FunctionDef{
  Name{"VW_spezifische_Bibliothek";}
  LangName{"VW_spezifische_Bibliothek";"VW_specific_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"Sammlung von Bausteinen zur Kommunikation mit Steuergeraeten von VW.";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;2;"ZPH18";}
   Version{1;0;"AC";"- freigegeben -";"vw-admin";"04.03.2003 11:56:19";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"07.08.2006 13:58:14";}
   Version{1;2;"ZPH18";"[ Baustein importiert (ersetzt) ]";"admin";"14.08.2007 15:07:01";}}
  FunctionDef{
   Name{"VW_Codefileauswahl";}
   LangName{"VW_Codefileauswahl";"VW_Codefileauswahl";}
   CvsVerHis{}
   Type{1;}
   Icon{0;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Platzhalter f\xFCr Pr\xFCfschritte";"";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{0;1;"PAE";}
    Version{0;1;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"24.07.2006 17:06:13";}}
   FunctionDef{
    Name{"Pfau_9_2_0";}
    LangName{"Pfau_9_2_0";"";}
    CvsVerHis{}
    Type{1;}
    Icon{0;}
    Properties{"Begin";}
    FormalParam{}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"";}
    NodeCategory{"";}
    Info{"";"";}
    Rights{"Write";"Read";}
    VersionInfo{
     CurVersion{0;1;"PAE";}
     Version{0;1;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"24.07.2006 17:06:13";}}
    FunctionDef{
     Name{"ZdcCodierung";}
     LangName{"ZdcCodierung";"";}
     CvsVerHis{}
     Type{1;}
     Icon{0;}
     Properties{"Begin";}
     FormalParam{
      InputParam{"DialogHndl";
       LangName{"DialogHndl";"DialogHndl";}"DialogTyp";"DIALOG_LOKAL";
       LangDesc{"";"";}}
      InputParam{"Zeile";
       LangName{"Zeile";"Zeile";}"DialogLine";"CDialog_Keine_Anzeige";
       LangDesc{"";"";}}
      InputParam{"Text";
       LangName{"Text";"Text";}"TEXT";"CTextCodefileAuswahl";
       LangDesc{"";"";}}
      InputParam{"ZdcHndl";
       LangName{"ZdcHndl";"ZdcHndl";}"ZDC_HNDL";"DZdcHndl";
       LangDesc{"Handle zu einem ZDC";"";}}
      InputParam{"Modusteil";
       LangName{"Modusteil";"Modusteil";}"ZDC_MODUSTEIL";"CZDCModusAll";
       LangDesc{"Modusteil wird als Filter eingesetzt (mit Modusteil == \"\" wird der Filter ausgeschaltet) ";"";}}
      OutputParam{"Codierung_Result";
       LangName{"Codierung_Result";"Codierung_Result";}"Codefile_Result_Int";"Dummy_Codierung_Result";
       LangDesc{"Codierung";"";}}
      OutputParam{"LangCode_Result";
       LangName{"LangCode_Result";"LangCode_Result";}"Codefile_Result_Str";"Dummy_LongCode_Result";
       LangDesc{"Lange Codierung String";"";}}
      OutputParam{"Codier_Art";
       LangName{"Codier_Art";"Codier_Art";}"Codefile_Result_Int";"Dummy_Codier_Art";
       LangDesc{"Art der Codierung 0 = kurze / 1 = lange ";"";}}}
     LocalVar{
      LocVarDef{"KommentarNOK";
       LangName{"KommentarNOK";"KommentarNOK";}"Locvar";"TEXT";
       LangDesc{"";"";}
       LangText{"\"Codierung ungueltig\"";"\"\xB1\xE0\xC2\xEB\xCE\xDE\xD0\xA7\"";"\"Codierung ungueltig\"";}"Const";}}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     MSLCode{"string\tsInfo;\r\nint\tiZahlenbasis;\r\n\r\nerr = 0;\r\nif (ZdcHndl >= 0)\r\n{\r\n    if (Zeile > 0)\r\n        _dlgMultiSetLine (DialogHndl, Zeile, Text);\r\n\r\n    *Codierung_Result = -1;\r\n    *LangCode_Result=\"\";\r\n    zdcCollectSeekFirst (ZdcHndl);\r\n    err = zdcCodeword (ZdcHndl, Modusteil, \r\n\t\t\tLangCode_Result, &sInfo, &iZahlenbasis);\r\n    if (err)\r\n    {\r\n\terr = errFatal (NOK, \"zdc codeword failed\");\r\n\t_statSetAsciiResult (err, KommentarNOK, FUABBR);\r\n    }\r\n    if (!err)\r\n    {\r\n\terrDebug (2, sInfo);\r\n\tif (iZahlenbasis != 1)\t// kurze Codierung\r\n\t{\t\r\n\t    *Codier_Art = 0;\r\n\t    errDebug (3, hexstr (*LangCode_Result));\r\n\t    *Codierung_Result = binstrtoi (*LangCode_Result);\r\n\t}\r\n\telse\t// lange Codierung\r\n\t{\r\n\t    *Codier_Art = 1;\r\n\t    *LangCode_Result = midstr (*LangCode_Result, 1, -1);\r\n\t    errDebug (4, hexstr (*LangCode_Result));\r\n\t}\r\n    }\r\n    if (Zeile > 0)\r\n\t_dlgMultiTextRsltBmp (DialogHndl, Zeile, Text, err);\r\n}\r\nif (!err)\r\n    _statSetAsciiResult (err, sInfo, FOK);\r\n";}
     NodeCategory{"";}
     Info{"Dieser Baustein berechnet das Codierwort nach dem Zieldatencontainer (ZDC) V 2.02. (S)\r\n\r\nAls Parameter muss das \"ZdcHndl\" \xFCbergeben werden, dass mit dem Baustein \"ZdcOpen\" erzeugt wurde.\r\n\r\nDer Parameter \"Modusteil\" kann zur Filterung der Daten innerhalb des Containers verwendet werden. \r\nMit Modusteil gleich \"\" werden alle Tabellen mit dem Modus \"C\" im ZDC ausgewertet.\r\n\r\nIm Parameter \"Codierung_Art\" wird der Ergebnistyp zur\xFCck gemeldet:\r\n0: kurze Codierung (bis zu 31 Bit)\r\n1: lange Codierung (bis zu 250 Byte)\r\n-1: Codierung ung\xFCltig\r\n\r\nBei kurzer Codierung (Codierung_Art = 0) wird die Variable \"Codierung_Result\" mit dem Wert des Codierwortes gef\xFCllt.\r\nBei langer Codierung (Codierung_Art = 1) wird die Variable \"LangCode_Result\" mit der Codierung gef\xFCllt.\r\n\r\nDer Baustein berechnet nur die Codierung. Das Schreiben der Codierung erfolgt nicht durch diesen Baustein!\r\n\r\nDie Codierung des Stuerger\xE4ts kann \xFCber die Bausteine:\r\n- VW2000_Codieren\r\n- VW2000_Codieren_Lang\r\n- ...\r\nerfolgen.";"";}
     Rights{"Write";"Read";}
     VersionInfo{
      CurVersion{0;30;"PAE";}
      Version{0;1;"DSA";"- in Arbeit -";"admin";"16.06.2003 15:49:58";}
      Version{0;2;"DSA";"- in Arbeit -";"admin";"16.06.2003 15:50:33";}
      Version{0;3;"DSA";"- in Arbeit -";"admin";"16.06.2003 15:50:44";}
      Version{0;4;"DSA";"- in Arbeit -";"admin";"16.06.2003 15:57:20";}
      Version{0;5;"DSA";"- in Arbeit -";"admin";"16.06.2003 15:58:08";}
      Version{0;6;"DSA";"- in Arbeit -";"admin";"16.06.2003 15:58:31";}
      Version{0;7;"DSA";"- in Arbeit -";"admin";"16.06.2003 15:59:05";}
      Version{0;8;"DSA";"- in Arbeit -";"admin";"16.06.2003 15:59:11";}
      Version{0;9;"DSA";"- in Arbeit -";"admin";"16.06.2003 16:00:58";}
      Version{0;10;"DSA";"- in Arbeit -";"admin";"16.06.2003 16:01:54";}
      Version{0;11;"DSA";"- in Arbeit -";"admin";"16.06.2003 16:03:07";}
      Version{0;12;"DSA";"- in Arbeit -";"admin";"16.06.2003 16:04:20";}
      Version{0;13;"DSA";"- in Arbeit -";"admin";"16.06.2003 16:23:55";}
      Version{0;14;"DSA";"- in Arbeit -";"admin";"25.06.2003 19:27:49";}
      Version{0;15;"DSA";"- in Arbeit -";"admin";"25.06.2003 19:28:36";}
      Version{0;16;"DSA";"- in Arbeit -";"admin";"25.06.2003 19:28:57";}
      Version{0;17;"DSA";"- in Arbeit -";"admin";"03.07.2003 16:15:12";}
      Version{0;18;"DSA";"- in Arbeit -";"admin";"03.07.2003 16:15:59";}
      Version{0;19;"DSA";"- in Arbeit -";"admin";"03.07.2003 16:17:21";}
      Version{0;20;"DSA";"- in Arbeit -";"admin";"03.07.2003 16:17:43";}
      Version{0;21;"DSA";"- in Arbeit -";"admin";"03.07.2003 16:19:32";}
      Version{0;22;"DSA";"- in Arbeit -";"admin";"03.07.2003 16:25:28";}
      Version{0;23;"DSA";"- in Arbeit -";"admin";"03.07.2003 16:26:29";}
      Version{0;24;"DSA";"- in Arbeit -";"admin";"03.07.2003 16:27:56";}
      Version{0;25;"DSA";"- in Arbeit -";"admin";"03.07.2003 16:28:36";}
      Version{0;26;"DSA";"- in Arbeit -";"admin";"03.07.2003 17:50:12";}
      Version{0;27;"DSA";"- in Arbeit -";"admin";"03.07.2003 17:56:26";}
      Version{0;28;"DSA";"- in Arbeit -";"admin";"03.07.2003 17:57:24";}
      Version{0;29;"VW-WOL";"- in Arbeit -";"admin";"08.07.2003 17:05:50";}
      Version{0;30;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"24.07.2006 17:06:13";}}}}}}
 FunctionDef{
  Name{"VW_spezifische_Bibliothek";}
  LangName{"VW_spezifische_Bibliothek";"VW_specific_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"Sammlung von Bausteinen zur Kommunikation mit Steuergeraeten von VW.";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;2;"ZPH18";}
   Version{1;0;"AC";"- freigegeben -";"vw-admin";"04.03.2003 11:56:19";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"07.08.2006 13:58:14";}
   Version{1;2;"ZPH18";"[ Baustein importiert (ersetzt) ]";"admin";"14.08.2007 15:07:01";}}
  FunctionDef{
   Name{"VW_Codefileauswahl";}
   LangName{"VW_Codefileauswahl";"VW_Codefileauswahl";}
   CvsVerHis{}
   Type{1;}
   Icon{0;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Platzhalter f\xFCr Pr\xFCfschritte";"";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{0;1;"PAE";}
    Version{0;1;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"24.07.2006 17:06:13";}}
   FunctionDef{
    Name{"Pfau_9_2_0";}
    LangName{"Pfau_9_2_0";"";}
    CvsVerHis{}
    Type{1;}
    Icon{0;}
    Properties{"Begin";}
    FormalParam{}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"";}
    NodeCategory{"";}
    Info{"";"";}
    Rights{"Write";"Read";}
    VersionInfo{
     CurVersion{0;1;"PAE";}
     Version{0;1;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"24.07.2006 17:06:13";}}
    FunctionDef{
     Name{"Zdc203Anpassung";}
     LangName{"Zdc203Anpassung";"Zdc203Anpassung";}
     CvsVerHis{}
     Type{1;}
     Icon{0;}
     Properties{"Begin";}
     FormalParam{
      InputParam{"DialogHndl";
       LangName{"DialogHndl";"DialogHndl";}"DialogTyp";"DIALOG_LOKAL";
       LangDesc{"";"";}}
      InputParam{"Zeile";
       LangName{"Zeile";"Zeile";}"DialogLine";"CDialog_Keine_Anzeige";
       LangDesc{"";"";}}
      InputParam{"Text";
       LangName{"Text";"Text";}"TEXT";"CTextCodefileAuswahl";
       LangDesc{"";"";}}
      InputParam{"ZdcHndl";
       LangName{"ZdcHndl";"ZdcHndl";}"ZDC_HNDL";"DZdcHndl";
       LangDesc{"Handle zu einem ZDC";"";}}
      InputParam{"Modusteil";
       LangName{"Modusteil";"Modusteil";}"ZDC_MODUSTEIL";"CZDCModusAll";
       LangDesc{"Modusteil wird als Filter eingesetzt (mit Modusteil == \"\" wird der Filter ausgeschaltet) ";"";}}
      OutputParam{"Anpassung_String";
       LangName{"Anpassung_String";"Anpassung_String";}"Codefile_Result_Str";"Dummy_Anpassung_String";
       LangDesc{"zu programmierender String";"\"\"";}}}
     LocalVar{
      LocVarDef{"KommentarNOK";
       LangName{"KommentarNOK";"KommentarNOK";}"Locvar";"TEXT";
       LangDesc{"";"";}
       LangText{"\"Anpassung ungueltig\"";"\"Anpassung ungueltig\"";"\"Anpassung ungueltig\"";}"Const";}}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     MSLCode{"string\tsInfo, sData, buf;\r\nint     iAnz, iDataTyp;\r\nint\t\tiKanal, iAnpassung;\r\n\r\nerr = 0;\r\nif (ZdcHndl >= 0)\r\n{\r\n    if (Zeile > 0)\r\n        _dlgMultiSetLine (DialogHndl, Zeile, Text);\r\n\r\n    *Anpassung_String = \"\";\r\n    iAnz = 0;\r\n    strM4Set (Anpassung_String, 0, iAnz);\r\n    zdcCollectSeekFirst (ZdcHndl);\r\n    while (!err)\r\n    {\r\n\t    err = zdcCollect (ZdcHndl, \"A\", Modusteil, &sInfo, &iDataTyp);\r\n        if (err == -1)\r\n\t    {\r\n\t        err = 0;\r\n\t        break;\r\n\t    }\r\n\t    while (!err && (iDataTyp & 64 || iDataTyp & 128) )\r\n\t    {\r\n\t        err = zdcGetAdaptation (ZdcHndl, &iKanal, &sData);\r\n\t        if (err == -1)\r\n\t        {\r\n\t\t        err = 0;\r\n\t\t        break;\r\n\t        }\r\n\t        if (!err)\r\n    \t    {\r\n                buf = \"\";\r\n                strM4Set (&buf, 0, iKanal);\r\n                if( iDataTyp & 64 )\r\n                {\r\n                    /* Kurze Anpassung */\r\n        \t        iAnpassung = binstrtoi (sData);\r\n        \t        errDebug (0, sprintf (\"Kurze Anpassung: Kanal %#lx, Anp= %#lx\", iKanal, iAnpassung));\r\n                    strM4Set (&buf, 4, 2);          /* Laenge auf 2 Bytes setzen, da kurze Anpassung */\r\n                    strM2Set (&buf, 8, iAnpassung); /* 2 Bytes Anpasswert setzen */\r\n        \t        *Anpassung_String = *Anpassung_String + buf;\r\n        \t    }\r\n                else\r\n                {\r\n                    /* Lange Anpassung */\r\n        \t        errDebug (0, sprintf (\"Lange Anpassung: Kanal %#lx, Anp= '%s'\", iKanal, hexstr(sData)));\r\n                    strM4Set (&buf, 4, strlen(sData));   /* Laenge setzen fuer lange Anpassung */\r\n                    *Anpassung_String = *Anpassung_String + buf + sData;\r\n                }\r\n    \t        iAnz = iAnz + 1;\r\n    \t    }\r\n    \t}\r\n    }\r\n    if (!err)\r\n\t    strM4Set (Anpassung_String, 0, iAnz);\r\n    else\r\n\t    err = errFatal (NOK, \"zdc anpassung data error\");\r\n\r\n    if (Zeile > 0)\r\n\t    _dlgMultiTextRsltBmp (DialogHndl, Zeile, Text, err);\r\n}\r\nif (err || iAnz == 0)\r\n    *Anpassung_String = \"\";\r\nif (!err)\r\n    _statSetAsciiResult (err, sInfo + \" data=0h\" + midstr (hexstr(*Anpassung_String), 0, 64), FOK);\r\n//    _statSetAsciiResult (err, sInfo, FOK);\r\nelse\r\n    _statSetAsciiResult (err, KommentarNOK, FUABBR);\r\n";}
     NodeCategory{"";}
     Info{"Dieser Baustein berechnet die Anpassdaten nach dem Zieldatencontainer (ZDC) V 2.03. (S)\r\nZieldatencontainer der Version 2.02 k\xF6nnen mit diesem Baustein auch verarbeitet werden.\r\nEs gibt dann keine \"Lange Anpassung\".\r\n\r\nAls Parameter muss das \"ZdcHndl\" \xFCbergeben werden, dass mit dem Baustein \"ZdcOpen\" erzeugt wurde.\r\n\r\nDer Parameter \"Modusteil\" kann zur Filterung der Daten innerhalb des Containers verwendet werden. \r\nMit Modusteil gleich \"\" werden alle Tabellen mit dem Modus \"A\" im ZDC ausgewertet.\r\n\r\nDer Baustein liefert mit dem Parameter \"Anpassung_String\" die Anpassdaten im folgenden Format:\r\n\r\n4 Byte: Anzahl Anpassungen;\r\n    4 Byte: 1. Anpassungs-Kanal;\r\n    4 Byte: 1. Laenge n der einzelnen Anpassung; \r\n    n Byte: 1. Anpassungswert;\r\n\r\n    4 Byte: 2. Anpassungs-Kanal;\r\n    4 Byte: 2. Laenge m der einzelnen Anpassung; \r\n    m Byte: 2. Anpassungswert; ...\r\n\r\n\r\nBeispiel:\r\n\"\\h000000020000000100000002abcd00000005000000a00102030405060708090a\"\r\nAnzahl Anpassungen: 2\r\nKanal: 1 kurze Anpassung: 43981 (int)\r\nKanal: 5 lange Anpassung: 0102030405060708090A\r\n\r\nDer Baustein berechnet nur die Anpassdaten. Das Schreiben der Daten erfolgt nicht durch diesen Baustein!\r\n\r\n20.01.06, sr: erstellt";"";}
     Rights{"Write";"Read";}
     VersionInfo{
      CurVersion{3;1;"nbmr";}
      Version{0;1;"AAC";"- in Arbeit -";"sr";"09.01.2006 11:09:21";}
      Version{0;2;"AAC";"- in Arbeit -";"sr";"09.01.2006 11:12:31";}
      Version{0;3;"AAC";"- in Arbeit -";"sr";"09.01.2006 11:14:31";}
      Version{1;0;"AAC";"Erste Version.";"sr";"09.01.2006 11:14:55";}
      Version{1;1;"AAC";"Bugfix zu Position der Daten bei kurzer Anpassung";"sr";"09.01.2006 17:14:47";}
      Version{2;0;"AAC";"";"sr";"20.01.2006 15:13:10";}
      Version{2;1;"AAC";"- in Arbeit -";"sr";"20.01.2006 17:53:34";}
      Version{3;0;"AAC";"Bugfix. Wenn lange Anpassung\r\nnach kurzer Anpassung kam,\r\nwurden alte Daten der kurzen\r\nAnpassung mit in die lange\r\nAnpassung \xFCbernommen.";"sr";"20.01.2006 17:53:42";}
      Version{3;1;"nbmr";"[ Baustein importiert (neu) ]";"dsa";"03.12.2008 12:35:14";}}}}}}
 FunctionDef{
  Name{"VW_spezifische_Bibliothek";}
  LangName{"VW_spezifische_Bibliothek";"VW_specific_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"Sammlung von Bausteinen zur Kommunikation mit Steuergeraeten von VW.";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;2;"ZPH18";}
   Version{1;0;"AC";"- freigegeben -";"vw-admin";"04.03.2003 11:56:19";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"07.08.2006 13:58:14";}
   Version{1;2;"ZPH18";"[ Baustein importiert (ersetzt) ]";"admin";"14.08.2007 15:07:01";}}
  FunctionDef{
   Name{"VW_Codefileauswahl";}
   LangName{"VW_Codefileauswahl";"VW_Codefileauswahl";}
   CvsVerHis{}
   Type{1;}
   Icon{0;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Platzhalter f\xFCr Pr\xFCfschritte";"";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{0;1;"PAE";}
    Version{0;1;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"24.07.2006 17:06:13";}}
   FunctionDef{
    Name{"Pfau_9_2_0";}
    LangName{"Pfau_9_2_0";"";}
    CvsVerHis{}
    Type{1;}
    Icon{0;}
    Properties{"Begin";}
    FormalParam{}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"";}
    NodeCategory{"";}
    Info{"";"";}
    Rights{"Write";"Read";}
    VersionInfo{
     CurVersion{0;1;"PAE";}
     Version{0;1;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"24.07.2006 17:06:13";}}
    FunctionDef{
     Name{"ZdcProgrammierungL";}
     LangName{"ZdcProgrammierungL";"ZdcProgrammingLong";}
     CvsVerHis{}
     Type{1;}
     Icon{0;}
     Properties{"Begin";}
     FormalParam{
      InputParam{"DialogHndl";
       LangName{"DialogHndl";"DialogHndl";}"DialogTyp";"DIALOG_LOKAL";
       LangDesc{"Dialog handle";"Dialog handle";}}
      InputParam{"Zeile";
       LangName{"Zeile";"Zeile";}"DialogLine";"CDialog_Keine_Anzeige";
       LangDesc{"";"\"\"";}}
      InputParam{"Text";
       LangName{"Text";"Text";}"TEXT";"CTextCodefileAuswahl";
       LangDesc{"";"\"\"";}}
      InputParam{"ZdcHndl";
       LangName{"ZdcHndl";"ZdcHndl";}"ZDC_HNDL";"DZdcHndl";
       LangDesc{"Handle zu einem ZDC";"\"\"";}}
      InputParam{"Modusteil";
       LangName{"Modusteil";"Modusteil";}"ZDC_MODUSTEIL";"CZDCModusAll";
       LangDesc{"Modusteil wird als Filter eingesetzt (mit Modusteil == \"\" wird der Filter ausgeschaltet) ";"\"\"";}}
      OutputParam{"ProgL_String";
       LangName{"ProgL_String";"ProgL_String";}"Codefile_Result_Str";"Dummy_ProgL_String";
       LangDesc{"zu programmierender String im 4 Byte Adress-Format";"\"\"";}}}
     LocalVar{
      LocVarDef{"KommentarNOK";
       LangName{"KommentarNOK";"";}"Locvar";"TEXT";
       LangDesc{"";"";}
       LangText{"\"Programmierstring ungueltig\"";"\"\xB1\xE0\xB3\xCC\xD7\xD6\xB7\xFB\xB4\xAE\xCE\xDE\xD0\xA7\"";"\"Programming string unvalid\"";}"Const";}}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     MSLCode{"string\tsInfo, sData, buf;\r\nint         iAnz, iDataTyp;\r\nint\t\tlen;\r\nstring\tsRohteilenummer, sFertigteilenummer, sKanal, sDatenInternFormat;\r\nint\t\tiStartAdr, iUncompressedSize, iLoeschbereichStart, iLoeschbereichEnd;\r\nint\t\tiDatencheckStart, iDatencheckEnd, iDatencheckChecksum, iLength;\r\n\r\nerr = 0;\r\nif (ZdcHndl >= 0)\r\n{\r\n    if (Zeile > 0)\r\n        _dlgMultiSetLine (DialogHndl, Zeile, Text);\r\n\r\n    *ProgL_String = \"\";\r\n    iAnz = 0;\r\n    strM4Set (ProgL_String, 0, iAnz);\r\n    zdcCollectSeekFirst (ZdcHndl);\r\n    while (!err)\r\n    {\r\n\terr = zdcCollect (ZdcHndl, \"P\", Modusteil, &sInfo, &iDataTyp);\r\n      if (err == -1)\r\n\t{\r\n\t    err = 0;\r\n\t    break;\r\n\t}\r\n\twhile (!err && iDataTyp & 4)\r\n\t{\r\n\t    err = zdcGetDataInfo (ZdcHndl,\r\n\t\t     \t\t&sRohteilenummer,\r\n\t\t\t\t&sFertigteilenummer,\r\n     \t\t\t\t&sKanal,\r\n\t\t\t\t&sDatenInternFormat,\r\n     \t\t\t\t&iStartAdr,\r\n     \t\t\t\t&iUncompressedSize,\r\n     \t\t\t\t&iLoeschbereichStart,\r\n     \t\t\t\t&iLoeschbereichEnd,\r\n     \t\t\t\t&iDatencheckStart,\r\n     \t\t\t\t&iDatencheckEnd,\r\n     \t\t\t\t&iDatencheckChecksum,\r\n     \t\t\t\t&iLength);\r\n\t    if (err == -1)\r\n\t    {\r\n\t\terr = 0;\r\n\t\tbreak;\r\n\t    }\r\n\t    if (!err)\r\n\t    {\r\n\t\terr = zdcGetDataBlock (ZdcHndl, iLength + 1, &sData);\r\n\t\tlen = strlen (sData);\r\n\t\tbuf = \"\";\r\n    \t\tstrM4Set (&buf, 4, len);\r\n    \t\tstrM4Set (&buf, 0, iStartAdr);\r\n//\t\tbuf = buf + midstr (sData, 8, len);\r\n\t\tbuf = buf + sData;\r\n\t\t*ProgL_String = *ProgL_String + buf;\r\n\t\tiAnz = iAnz + 1;\r\n\t    }\r\n\t}\r\n\r\n\twhile (!err && iDataTyp & 16)\r\n\t{\r\n\t    err = zdcGetBuf (ZdcHndl, &iStartAdr, &sData);\r\n\t    if (err == -1)\r\n\t    {\r\n\t\terr = 0;\r\n\t\tbreak;\r\n\t    }\r\n\t    if (!err)\r\n\t    {\r\n\t\t    len = strlen (sData);\r\n\t\t    buf = \"\";\r\n    \t\t    strM4Set (&buf, 4, len);\r\n    \t\t    strM4Set (&buf, 0, iStartAdr);\r\n\t\t    buf = buf + sData;\r\n\t\t    *ProgL_String = *ProgL_String + buf;\r\n\t\t    iAnz = iAnz + 1;\r\n\t    }\r\n\t}\r\n    }\r\n    if (!err)\r\n\tstrM4Set (ProgL_String, 0, iAnz);\r\n    else\r\n\terr = errFatal (NOK, \"zdc programm data error\");\r\n\r\n    if (Zeile > 0)\r\n\t_dlgMultiTextRsltBmp (DialogHndl, Zeile, Text, err);\r\n}\r\nerrDebug (err, sprintf (\"progl string (%ld byte) 0h'%s'\", strlen (*ProgL_String), hexstr (midstr (*ProgL_String, 0, 100))));\r\nif (err || iAnz == 0)\r\n    *ProgL_String = \"\";\r\nif (!err)\r\n    _statSetAsciiResult (err, sInfo + \" data=0h\" + midstr (hexstr(*ProgL_String), 0, 64), FOK);\r\nelse\r\n    _statSetAsciiResult (err, KommentarNOK, FUABBR);";}
     NodeCategory{"";}
     Info{"Dieser Baustein berechnet die Programmierdaten nach dem Zieldatencontainer (ZDC) V 2.02. (S)\r\n\r\nAls Parameter muss das \"ZdcHndl\" \xFCbergeben werden, dass mit dem Baustein \"ZdcOpen\" erzeugt wurde.\r\n\r\nDer Parameter \"Modusteil\" kann zur Filterung der Daten innerhalb des Containers verwendet werden. \r\nMit Modusteil gleich \"\" werden alle Tabellen mit dem Modus \"P\" im ZDC ausgewertet.\r\n\r\nDer Baustein liefert mit dem Parameter \"ProgL_String\" die Programmierdaten im DSA internen Austauschformat\r\nf\xFCr die Bausteine:\r\n- CodefileProgrammLang_KWP2000\r\n- CodefileProgrammLang_KWP1281\r\n- CodefileProgrammLang_KWP2000_1_03\r\nAchtung:\r\nHier wird das 'neue' (lange) DSA interne Austauschformat f\xFCr Programmierdaten verwendet. \r\n\r\nDer Baustein berechnet nur die Programmierdaten. Das Schreiben der Programmierdaten erfolgt nicht \r\ndurch diesen Baustein!";"";}
     Rights{"Write";"Read";}
     VersionInfo{
      CurVersion{1;0;"AC";}
      Version{0;1;"AC";"- in Arbeit -";"vw-admin";"26.08.2003 15:35:09";}
      Version{0;2;"AC";"- in Arbeit -";"vw-admin";"26.08.2003 17:20:30";}
      Version{1;0;"AC";" - freigegeben - ";"vw-admin";"26.08.2003 17:20:33";}}}}}}
 FunctionDef{
  Name{"VW_spezifische_Bibliothek";}
  LangName{"VW_spezifische_Bibliothek";"VW_specific_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"Sammlung von Bausteinen zur Kommunikation mit Steuergeraeten von VW.";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;2;"ZPH18";}
   Version{1;0;"AC";"- freigegeben -";"vw-admin";"04.03.2003 11:56:19";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"07.08.2006 13:58:14";}
   Version{1;2;"ZPH18";"[ Baustein importiert (ersetzt) ]";"admin";"14.08.2007 15:07:01";}}
  FunctionDef{
   Name{"VW_Codefileauswahl";}
   LangName{"VW_Codefileauswahl";"VW_Codefileauswahl";}
   CvsVerHis{}
   Type{1;}
   Icon{0;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Platzhalter f\xFCr Pr\xFCfschritte";"";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{0;1;"PAE";}
    Version{0;1;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"24.07.2006 17:06:13";}}
   FunctionDef{
    Name{"Pfau_9_2_0";}
    LangName{"Pfau_9_2_0";"";}
    CvsVerHis{}
    Type{1;}
    Icon{0;}
    Properties{"Begin";}
    FormalParam{}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"";}
    NodeCategory{"";}
    Info{"";"";}
    Rights{"Write";"Read";}
    VersionInfo{
     CurVersion{0;1;"PAE";}
     Version{0;1;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"24.07.2006 17:06:13";}}
    FunctionDef{
     Name{"ZdcClose";}
     LangName{"ZdcClose";"ZdcClose";}
     CvsVerHis{}
     Type{1;}
     Icon{0;}
     Properties{"Begin";}
     FormalParam{
      OutputParam{"ZdcHndl";
       LangName{"ZdcHndl";"ZdcHndl";}"ZDC_HNDL";"DZdcHndl";
       LangDesc{"Handle zu einem ZDC";"\"\"";}}}
     LocalVar{}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     MSLCode{"err = 0;\r\nif (*ZdcHndl >= 0)\r\n    zdcClose (*ZdcHndl);\r\n*ZdcHndl = -1;";}
     NodeCategory{"";}
     Info{"Baustein schlie\xDFt einen Zieldaten-Container (ZDC) in der Version 2.02, der zuvor mit dem Baustein \r\n\"ZdcOpen\" ge\xF6ffnet wurde.";"";}
     Rights{"Write";"Read";}
     VersionInfo{
      CurVersion{0;1;"DSA";}
      Version{0;1;"DSA";"- in Arbeit -";"admin";"03.07.2003 16:12:23";}}}}}}
 FunctionDef{
  Name{"VW_spezifische_Bibliothek";}
  LangName{"VW_spezifische_Bibliothek";"VW_specific_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"Sammlung von Bausteinen zur Kommunikation mit Steuergeraeten von VW.";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;2;"ZPH18";}
   Version{1;0;"AC";"- freigegeben -";"vw-admin";"04.03.2003 11:56:19";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"07.08.2006 13:58:14";}
   Version{1;2;"ZPH18";"[ Baustein importiert (ersetzt) ]";"admin";"14.08.2007 15:07:01";}}
  FunctionDef{
   Name{"VW_STG_Verbindung_Param";}
   LangName{"VW_STG_Verbindung_Param";"VW_ECU_Connection_Param";}
   CvsVerHis{}
   Type{1;}
   Icon{1;}
   Properties{"Begin";}
   FormalParam{
    OutputParam{"STG_Hndl";
     LangName{"STG_Hndl";"STG_Hndl";}"VCIKANAL";"VCIKanal1";
     LangDesc{"VCI-Kanal";"VCI channel";}}
    InputParam{"DLG_Hndl";
     LangName{"DLG_Hndl";"DLG_Hndl";}"DialogTyp";"DIALOG_LOKAL";
     LangDesc{"Dialog handle";"Dialog handle";}}
    InputParam{"Zeile";
     LangName{"Zeile";"Zeile";}"DialogLine";"CDialogZeile1";
     LangDesc{"Ausgabezeile";"Output line";}}
    InputParam{"VCI_Type";
     LangName{"VCI_Type";"VCI_Type";}"VCITYP";"VCI_Typ_VCI5";
     LangDesc{"0 = VCI4; 1 = VCI5";"0 = VCI4; 1 = VCI5";}}
    InputParam{"VCI_Protokoll";
     LangName{"VCI_Protokoll";"VCI_Protokoll";}"VCI_Protokoll";"";
     LangDesc{"VW1281,VW2000,VW1281_TP16,VW2000_TP16,VW2000_TP20,UDS";"VW1281, VW2000, VW1281_TP16, VW2000_TP16, VW2000_TP20";}}
    InputParam{"Steuergeraet";
     LangName{"Steuergeraet";"ECU";}"ECU";"";
     LangDesc{"Steuergeraete Name";"Name of ECU";}}
    InputParam{"Timeout";
     LangName{"Timeout";"Timeout";}"Timeout";"CTimeout_00010";
     LangDesc{"Timeout-Zeit";"Timeout";}}
    InputParam{"Level";
     LangName{"Level";"Level";}"DebugLevel";"DLevel";
     LangDesc{"Debug-Level";"Debug-Level";}}
    OutputParam{"ParHndl";
     LangName{"ParHndl";"ParHndl";}"PAR_HNDL";"SemaCanTP20";
     LangDesc{"Synchronisationsvariable";"Synchronisation variable";}}}
   LocalVar{
    LocVarDef{"Kommentar1";
     LangName{"Kommentar1";"Kommentar1";}"Locvar";"TEXT";
     LangDesc{"";"";}
     LangText{"\"Reizen\"";"\"\xBA\xF4\xBD\xD0\"";"\"Wake up \"";}"Const";}
    LocVarDef{"Kommentar2";
     LangName{"Kommentar2";"Kommentar2";}"Locvar";"TEXT";
     LangDesc{"";"";}
     LangText{"\"kein gueltiger VCI-Typ\"";"\"\xCE\xDE\xD3\xD0\xD0\xA7\xB5\xC4VCI\xC0\xE0\xD0\xCD\"";"\"no valid VCI type\"";}"Const";}
    LocVarDef{"Kommentar3";
     LangName{"Kommentar3";"Kommentar3";}"Locvar";"TEXT";
     LangDesc{"";"";}
     LangText{"\"ungueltiges VCIOpen\"";"\"\xCE\xDE\xD0\xA7VCI\xBF\xAA\xC6\xF4\"";"\"invalid VCIOpen\"";}"Const";}
    LocVarDef{"Kommentar4";
     LangName{"Kommentar4";"Kommentar4";}"Locvar";"TEXT";
     LangDesc{"";"";}
     LangText{"\"ungueltiger ParamVal\"";"\"invalid ParamVal\"";"\"invalid ParamVal\"";}"Const";}}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"// **********************************************************\r\n//  mg - 01.07.04 Widerholungsschleife vergr?ert\r\n//  jk - 20.11.03 ParHndl geaendert\r\n// created by jk - 12.11.03\r\n//  21.09.04 sz - Kommentare aendern um Sektionen der vcidev.ini zu aktivieren\r\n//  26.10.04 sz - Erweiterung: lesen der unterstuetzten Dienste und Anhaengen an VCI-Handel\r\n//  01.06.05 sz - Erweiterung: schliessen eines schon ge?fneten VCI-Handel\r\n//  08.08.05 sz - Korrektur: NOK wenn unterstuetzte Funktionen lesen zu einem Kommunikationsabbruch fuehren\r\n//  13.09.05 sz - Korrektur: zu if (...) Zeile 65 fehlte die Klammer {}; V(ParHndl) wurde immer ausgefuehrt\r\n//  04.07.06 sz - Aenderung der Wartezeit bei der Parallel-Verriegelung vor das VCI-Init \r\n//  03.11.06 sz - Erweiterung bei nicht geschlossenem Handle, _vciAdapt (ab msl version 4!!)\r\n// ********************************************************** \r\n\r\nstring ParName, ParString;\r\nstring ValName, ValString;\r\nstring RecvTel;\r\nint\ti, ValInt;\r\nint\ttStart;\r\nint\t_err;\r\nint\tStatus;\r\n\r\nif ((VCI_Type < 0) || (VCI_Type > 1))\r\n{\r\n\t_statSetAsciiResult(NOK,Kommentar2,FSTGI);\r\n\terrFatal(NOK,Kommentar2 + \"VCITyp:\",VCI_Type);\r\n\treturn NOK;\r\n}\r\n\r\nif (Zeile > 0)\r\n\t_dlgMultiSetLine (DLG_Hndl, Zeile, Kommentar1 + Steuergeraet);\r\n\r\nif (*STG_Hndl >= 0)\r\n{\r\n\tif (_vciAdapt (*STG_Hndl) == OK)\r\n\t{\r\n\t        if (midstr (VCI_Protokoll,0,6) == \"VW1281\")\r\n\t                _vciDataExchange (*STG_Hndl, 0x06, 0x09, \"\", &RecvTel);\r\n\t        else\r\n\t        \t_vciDataExchange (*STG_Hndl, 0x82, 0xc2, \"\", &RecvTel);\r\n\t}\r\n\t_vciClose (STG_Hndl);\r\n}\r\n\r\ntStart = time();\r\n\r\ndo\r\n{\r\n\tif (VCI_Type == 0)\r\n\t\tParName = \"VCI4\";\r\n\tif (VCI_Type == 1)\r\n\t\tParName = \"VCI5\";\r\n\tParName = Steuergeraet + \"_\" + ParName + \"_\" + VCI_Protokoll;\t//L?ung mit Sektionen\r\n\r\n\terr = _vciOpen (STG_Hndl, ParName);\r\n\r\n\tif (err != OK)\r\n\t{\r\n\t\t_statSetAsciiResult(NOK,Kommentar3,FSTGI);\r\n\t\t_vciClose(STG_Hndl);\r\n\t\tif (Zeile > 0)\r\n\t\t\t_dlgMultiClearLine (DLG_Hndl, Zeile);\t\r\n\t\treturn NOK;\r\n\t}\r\n\t_vciSetDebugLevel (*STG_Hndl, Level);\r\n\tif ((VCI_Protokoll == \"VW2000_TP20\") || (VCI_Protokoll == \"VW1281_TP16\") || (VCI_Protokoll == \"VW2000_TP16\") || (VCI_Protokoll == \"UDS\")) \r\n        {\r\n\t\tP(ParHndl);\r\n                Wait (0.05);\r\n        }\r\n\terr = _vciInit (*STG_Hndl);\r\n\r\n\tif ((VCI_Protokoll == \"VW2000_TP20\") || (VCI_Protokoll == \"VW1281_TP16\") || (VCI_Protokoll == \"VW2000_TP16\") || (VCI_Protokoll == \"UDS\"))\r\n\t\tV(ParHndl);\r\n\r\n\tif (err != OK)\r\n\t{\r\n\t\t_vciClose(STG_Hndl);\r\n\t\tWait (0.2);\r\n\t}\r\n}while ((err != OK) && (time () < tStart + Timeout));\r\n\r\nif (err != OK)\r\n{\r\n\terr = NOK;\r\n\t_vciStatVciError (*STG_Hndl);\r\n\t_statSetResult (err, FSTGI);\r\n}\r\nelse\r\n\t_statSetResult (OK, FSTGI);\r\n\r\nif ((err == OK) && (midstr (VCI_Protokoll,0,6) == \"VW2000\"))\r\n{\r\n\t_err = _vciDataExchange (*STG_Hndl, 0x31, 0x71, \"\\xb8\\x00\\x00\", &RecvTel);\r\n\tif (_err != OK)\r\n\t{\r\n\t\tRecvTel = \"no Response\";\r\n\t\terr = _vciAdapt (*STG_Hndl);\r\n\t}\r\n\tvciExDtaWrite (*STG_Hndl, RecvTel);\r\n}\r\n\r\n\r\nif (Zeile > 0)\r\n\t_dlgMultiClearLine (DLG_Hndl, Zeile);\r\n";}
   NodeCategory{"";}
   Info{"VW_STG_Verbindung\r\n\r\nBaustein zum Oeffnen eines Steuergeraetekanals auf K- oder CAN-Leitung \r\n\r\nDieser Baustein liest eine Standard-Konfiguration zur STG-Kommunikation ein. Danach werden alle notwendigen Parameter\r\n in diesem Init-Datensatz ueberschrieben und der Kanal geoeffnet.\r\nAusserdem wird der Debug-Level fuer die VCI-Kommunikation gesetzt und fuer die Kommunikation TP2.0 auf VCI2,4,6 der\r\nParameter zur Entkopplung des Oeffnen des CAN-Kanals gegeben..\r\n\r\nDieser Baustein mu?vor Verwendung aller anderen VCI-Funktionen ausgef\xFChrt werden.\r\n\r\nParameter:\r\n\r\nSTG_Hndl: das VCI-Handle, das geoeffnet wird.\r\nDLG_Hndl: das Dialog-Handle, das geoeffnet wird.\r\nZeile: die ZeilenNr fuer die Ausgabe (<1 keine Ausgabe)\r\nVCI_Type: der in dem Geraet eingesetzter VCI-Typ  (VCI_Type = 0 : VCI4; VCI_Type = 1 : VCI5)\r\nProtokoll: das verwendete Protokoll fuer die VCI-Kommuniktion\r\nSteuergeraet: der Steuergeraete der Kommunikation\r\nTimeout: die Zeit, welche fuer das Anreizen verwendet wird\r\nLevel: Debuglevel der VCI-Kommunikation\r\nParHndl: Handel zum Enttkoppeln des gleichzeitigen Anreizens\r\n\r\n04.07.06 sz - Aenderung der Wartezeit bei der Parallel-Verriegelung vor das VCI-Init \r\n03.11.06 sz - Erweiterung bei nicht geschlossenem Handle, _vciAdapt (ab msl version 4!!)";"";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{3;21;"nbmr";}
    Version{1;0;"AC";" in Arbeit";"vw-admin";"22.02.2005 17:58:04";}
    Version{2;0;"PAE";"";"vw-admin";"01.06.2005 13:40:01";}
    Version{3;0;"AC";"Update VCI-Handleling";"dsa-admin";"06.11.2006 16:47:30";}
    Version{3;1;"CRE1A_OF";"- in Arbeit -";"admin";"12.01.2007 09:17:37";}
    Version{3;2;"CRE1A_OF";"- in Arbeit -";"admin";"12.01.2007 09:18:22";}
    Version{3;3;"CRE1A_OF";"- in Arbeit -";"admin";"12.01.2007 09:18:45";}
    Version{3;4;"CRE1A_OF";"- in Arbeit -";"admin";"12.01.2007 09:19:13";}
    Version{3;5;"CRE1A_OF";"- in Arbeit -";"admin";"12.01.2007 09:22:36";}
    Version{3;6;"CRE1A_OF";"- in Arbeit -";"admin";"12.01.2007 09:23:12";}
    Version{3;7;"CRE1A_OF";"- in Arbeit -";"admin";"12.01.2007 09:23:42";}
    Version{3;8;"CRE1A";"- in Arbeit -";"admin";"12.01.2007 10:59:46";}
    Version{3;9;"CRE1A";"- in Arbeit -";"admin";"12.01.2007 12:47:17";}
    Version{3;10;"CRE1A";"- in Arbeit -";"admin";"12.01.2007 14:42:34";}
    Version{3;11;"CRE1A";"- in Arbeit -";"admin";"12.01.2007 14:42:48";}
    Version{3;12;"CRE1A";"- in Arbeit -";"admin";"12.01.2007 14:43:19";}
    Version{3;13;"CRE1A";"- in Arbeit -";"admin";"12.01.2007 14:44:31";}
    Version{3;14;"CRE1A";"- in Arbeit -";"admin";"01.03.2007 11:05:05";}
    Version{3;15;"CRE1A";"- in Arbeit -";"admin";"01.03.2007 11:43:18";}
    Version{3;16;"CRE1A";"- in Arbeit -";"admin";"26.04.2007 17:04:27";}
    Version{3;17;"ZPH18";"[ Baustein importiert (ersetzt) ]";"admin";"15.08.2007 10:48:22";}
    Version{3;18;"FAW";"- in Arbeit -";"admin";"27.09.2007 13:39:13";}
    Version{3;19;"svwcp2";"- in Arbeit -";"admin";"11.10.2007 20:09:02";}
    Version{3;20;"CP23A";"- in Arbeit -";"admin";"07.11.2007 11:21:40";}
    Version{3;21;"nbmr";"[ Baustein importiert (ersetzt) ]";"dsa";"15.05.2009 15:07:58";}}}}
 FunctionDef{
  Name{"DSA_Bibliothek";}
  LangName{"DSA_Bibliothek";"DSA_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;1;"AC";}
   Version{1;0;"AC";"- freigegeben -";"dsa-admin";"04.03.2003 11:44:35";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"admin";"03.07.2006 10:17:25";}}
  FunctionDef{
   Name{"Zeitgeber";}
   LangName{"Zeitgeber";"Timer";}
   CvsVerHis{}
   Type{1;}
   Icon{0;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Sammlung von Bausteinen zur Zeit\xFCberwachung und zur Ausf\xFChrungsverz\xF6gerung.";"Collection of components used in relation to timeouts and\r\nprocessing delays.";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{0;1;"SVW";}
    Version{0;1;"SVW";"- in Arbeit -";"admin";"12.04.2004 21:35:52";}}
   FunctionDef{
    Name{"Warten";}
    LangName{"Warten";"Wait";}
    CvsVerHis{}
    Type{1;}
    Icon{0;}
    Properties{"Begin";}
    FormalParam{
     InputParam{"Timeout";
      LangName{"Timeout";"Timeout";}"Timeout";"CTime01";
      LangDesc{"Wartezeit in sek.";"Waiting time in sec.";}}}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"no";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"  // print (\"wait...\");\r\n  wait (Timeout+1);\r\n";}
    NodeCategory{"";}
    Info{"Baustein zum Warten einer bestimmten Zeit.\r\n\r\nDer Parameter \"Timeout\" gibt die Wartezeit in Sekunden an.\r\n";"Module to wait a defined time.\r\n\r\nThe parameter \"timout\" defines the waiting time in seconds.";}
    Rights{"Write";"Read";}
    VersionInfo{
     CurVersion{0;2;"CP3";}
     Version{0;1;"SVW";"- in Arbeit -";"admin";"30.09.2003 15:38:42";}
     Version{0;2;"CP3";"- in Arbeit -";"admin";"28.10.2003 03:30:31";}}}}}
 FunctionDef{
  Name{"VW_spezifische_Bibliothek";}
  LangName{"VW_spezifische_Bibliothek";"VW_specific_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"Sammlung von Bausteinen zur Kommunikation mit Steuergeraeten von VW.";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;2;"ZPH18";}
   Version{1;0;"AC";"- freigegeben -";"vw-admin";"04.03.2003 11:56:19";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"07.08.2006 13:58:14";}
   Version{1;2;"ZPH18";"[ Baustein importiert (ersetzt) ]";"admin";"14.08.2007 15:07:01";}}
  FunctionDef{
   Name{"VW2000_Dienste";}
   LangName{"VW2000_Dienste";"VW2000_Dienste";}
   CvsVerHis{}
   Type{1;}
   Icon{0;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Sammlung von Bausteinen zur Kommunikation mit Steuerger\xE4ten von VW mit dem Protokoll K2000";"";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{1;3;"PAE";}
    Version{1;0;"AC";"- freigegeben -";"vw-admin";"17.02.2003 15:37:21";}
    Version{1;1;"AC";"- in Arbeit -";"vw-admin";"28.08.2003 17:40:34";}
    Version{1;2;"AC";"- in Arbeit -";"dsa-admin";"08.06.2004 08:55:47";}
    Version{1;3;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"25.07.2006 08:36:16";}}
   FunctionDef{
    Name{"VW2000_Dienste_22";}
    LangName{"VW2000_Dienste_22";"VW2000_Services_22";}
    CvsVerHis{}
    Type{1;}
    Icon{0;}
    Properties{"Begin";}
    FormalParam{}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"";}
    NodeCategory{"";}
    Info{"SG-Identifikation mit Service 0x22.\r\nDiese sollen in Zukunft die STG - ID 0x1A (0x9b, 0x9a, 0x91, 0x86, ...) abloesen.";"Moduls read the ECU Id by using the KWP2000-Comand ReadByIdentifier (Requesttitel 0x22) ";}
    Rights{"Write";"Read";}
    VersionInfo{
     CurVersion{1;0;"PAE";}
     Version{0;1;"PAE";"- in Arbeit -";"vw-admin";"30.05.2005 14:08:48";}
     Version{0;2;"PAE";"- in Arbeit -";"vw-admin";"31.05.2005 11:13:39";}
     Version{1;0;"PAE";" Freigabe ";"vw-admin";"03.06.2005 15:53:13";}}
    FunctionDef{
     Name{"VW2000_ID_9b_Lesen_kompatibel_LID";}
     LangName{"VW2000_ID_9b_Lesen_kompatibel_LID";"VW2000_ID_9b_Read_kompatible_LID";}
     CvsVerHis{}
     Type{1;}
     Icon{1;}
     Properties{"Begin";}
     FormalParam{
      InputParam{"Hndl";
       LangName{"Hndl";"Hndl";}"VCIKANAL";"VCIKanal1";
       LangDesc{"VCI-Kanal";"";}}
      OutputParam{"ID_String";
       LangName{"ID_String";"ID_String";}"VW_Result_Tel";"VW_Stg_ID";
       LangDesc{"Steuergeraete-Identifikation";"";}}}
     LocalVar{}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     MSLCode{"#pragma using VW2000_Read_Service_22_up_to_8_LIDs\r\n#pragma using VW2000_Read_Service_22_anyone_LID // err = VW2000_Read_Service_22_anyone_LID(err, Hndl, LID, &ID_String);\r\n#pragma using VW2000_ID_Lesen // err = VW2000_ID_Lesen(err, Hndl, &ID_String);\r\n\r\nint\tCodeLen;\r\nstring \tServTel, telbuf, Codetable;\r\nstring\tECU_PartNo, ECU_swv, Codestring, ECU_WSC, JNumber, SystemName, LID7Result, LID8Result;\r\n\r\n*ID_String = \"\";\r\nvciExDtaRead (Hndl, &ServTel);\r\nif (0 > strstr (ServTel, \"\\x01\\x14\"))\t// Funktion unterstuetzt? \r\n{\r\n\terr = VW2000_ID_Lesen(err, Hndl, ID_String);\r\n}\r\nelse\r\n{\r\n\terr = VW2000_Read_Service_22_anyone_LID(err, Hndl, \"\\h0601\", &telbuf);\r\n\tif (!err)\r\n\t{\r\n\t\tCodeLen = telbuf [0];\r\n\t\terr = VW2000_Read_Service_22_up_to_8_LIDs(err, Hndl, \"\\hf187\", 11, &ECU_PartNo, \"\\hf189\", 4, &ECU_swv, \"\\h0600\", CodeLen, &Codestring, \"\\hf1a5\", 6, &ECU_WSC, \"\\hf1aa\", 5, &JNumber, \"\\hf197\", 13, &SystemName, \"\", 0, &LID7Result, \"\", 0, &LID8Result, ID_String);\r\n#ifdef DEBUGSG\r\n\t\terrDebug(0, \"Codelen = \",CodeLen);\r\n\t\terrDebug(err, \"ECU_PartNo: \",ECU_PartNo, \"hex: \", hexstr (ECU_PartNo));\r\n\t\terrDebug(err, \"ECU_swv: \",ECU_swv, \"hex: \", hexstr (ECU_swv));\r\n\t\terrDebug(err, \"Codestring: \",Codestring, \"hex: \", hexstr (Codestring));\r\n\t\terrDebug(err, \"ECU_WSC: \",ECU_WSC, \"hex: \", hexstr (ECU_WSC));\r\n\t\terrDebug(err, \"JNumber: \",JNumber, \"hex: \", hexstr (JNumber));\r\n\t\terrDebug(err, \"SystemName: \",SystemName, \"hex: \", hexstr (SystemName));\r\n#endif\r\n\t}\r\n\tif (!err)\r\n\t{\r\n\t\tif (CodeLen == 3)\r\n\t\t{\r\n\t\t\tCodetable = \"\\x03\";\r\n\t\t\tCodestring = midstr (Codestring, 1, 3);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tCodetable = \"\\x10\";\r\n\t\t\tCodestring = strset(0x00, 3);\r\n\t\t}\r\n\t\t*ID_String = \"\\x9b\" + ECU_PartNo + \" \" + ECU_swv + Codetable + Codestring + ECU_WSC + JNumber + strset (0x20, 1) + SystemName + strset (0x20, 1);\r\n#ifdef DEBUGSG\r\n\t\terrDebug(err, \"ID_String 9b: \",*ID_String, \"hex: \", hexstr (*ID_String));\r\n#endif\r\n\t\t_statSetStrResult (err, *ID_String, FSTGI);\r\n\t}\r\n}\r\n\r\n";}
     NodeCategory{"";}
     Info{"Modul lie\xDFt die Steuergeraete-Identifikation.\r\nDabei wird der KWP2000-Befehl ReadECUIdentification (Blocktitel 0x1a)\r\nmit dem Parameter ECU-Identification ( 0x9b) verwendet.\r\nUnterstuetzt das STG den Befehl ReadByIdentifier (Blocktitel 0x22) werden die RIDs \r\n F187, F189, 0600, F1A5, F1AA, F197 gelesen und die klassische ID zusammengebaut. Damit ist die Verwendung\r\nder bisherigen Bewertungsbausteine moeglich und ein fliessender Uebergang von 0x1A \r\nzu 0x22 moeglich.\r\n\r\nDie gelesene Identifikation wird immer vollstaendig in der Variablen ID-String abgespeichert.\r\n\r\nIn der Statistik wird der ID-String abgespeichert.\r\n\r\nDie Bewertung des Pr\xFCfschrittes ist immer OK, wenn das Lesen der ID vom Steuerger\xE4t erfolgreich\r\nwar.\r\n\r\n14.06.06, sz: erstellt\r\n21.06.06, sz: Bugfix: der WSC kann nicht ueber LID F198 gelesen werden sondern ueber LID F1A5.";"Modul reads the ECU Id.\r\nBy using the KWP2000-Comand ReadECUIdentification (Requesttitel 0x1a)\r\nwith parameter ECUidentification (0x9b).\r\nIf the ECU supports the command ReadByIdentifier (Requesttitel 0x22) the RIDs \r\nF187, F188, F189, 0600 will be read and the classic id will be built.  For that the existing \r\nevaluations could be used and a change from 0x1A to 0x22 is possible.\r\n\r\nThe id will be stored in the parameter ID-String.\r\n\r\nAlso in the statistiks will the id be stored.\r\n\r\nThe evaluatin of the module will be OK if the reading of the id was OK.\r\n\r\nsz, 31.05.05";}
     Rights{"Write";"Read";}
     VersionInfo{
      CurVersion{2;2;"ZPH18";}
      Version{0;1;"PAE";"- in Arbeit -";"vw-admin";"25.05.2005 14:50:16";}
      Version{0;2;"PAE";"- in Arbeit -";"vw-admin";"25.05.2005 14:59:45";}
      Version{0;3;"PAE";"- in Arbeit -";"vw-admin";"25.05.2005 15:44:10";}
      Version{0;4;"PAE";"- in Arbeit -";"vw-admin";"25.05.2005 15:47:48";}
      Version{0;5;"PAE";"- in Arbeit -";"vw-admin";"30.05.2005 16:47:53";}
      Version{0;6;"PAE";"- in Arbeit -";"vw-admin";"30.05.2005 16:59:51";}
      Version{0;7;"PAE";"- in Arbeit -";"vw-admin";"31.05.2005 10:09:34";}
      Version{0;8;"PAE";"- in Arbeit -";"vw-admin";"02.06.2005 14:55:09";}
      Version{0;9;"PAE";"- in Arbeit -";"vw-admin";"03.06.2005 09:23:38";}
      Version{0;10;"PAE";"- in Arbeit -";"vw-admin";"03.06.2005 09:24:49";}
      Version{0;11;"PAE";"- in Arbeit -";"vw-admin";"03.06.2005 09:25:01";}
      Version{0;12;"PAE";"- in Arbeit -";"vw-admin";"03.06.2005 13:36:06";}
      Version{1;0;"PAE";" Freigabe ";"vw-admin";"03.06.2005 15:53:21";}
      Version{1;1;"PAE";"- in Arbeit -";"vw-admin";"03.06.2005 15:54:08";}
      Version{1;2;"AC";"- in Arbeit -";"dsa-admin";"08.06.2006 16:09:24";}
      Version{1;3;"AC";"- in Arbeit -";"dsa-admin";"08.06.2006 16:26:28";}
      Version{1;4;"AC";"- in Arbeit -";"dsa-admin";"08.06.2006 16:26:46";}
      Version{1;5;"AC";"- in Arbeit -";"dsa-admin";"09.06.2006 16:09:04";}
      Version{1;6;"AC";"- in Arbeit -";"dsa-admin";"09.06.2006 16:16:18";}
      Version{1;7;"AC";"- in Arbeit -";"dsa-admin";"09.06.2006 16:29:24";}
      Version{1;8;"AC";"- in Arbeit -";"dsa-admin";"09.06.2006 16:44:15";}
      Version{1;9;"AC";"- in Arbeit -";"dsa-admin";"14.06.2006 11:27:05";}
      Version{1;10;"AC";"- in Arbeit -";"dsa-admin";"14.06.2006 11:30:10";}
      Version{1;11;"AC";"- in Arbeit -";"dsa-admin";"14.06.2006 15:26:18";}
      Version{2;0;"AC";" - Updated to LH 2006 -";"dsa-admin";"14.06.2006 15:47:32";}
      Version{2;1;"AC";"- in Arbeit -";"dsa-admin";"21.06.2006 12:43:03";}
      Version{2;2;"ZPH18";"[ Baustein importiert (neu) ]";"admin";"14.08.2007 15:07:02";}}}}}}
 FunctionDef{
  Name{"VW_spezifische_Bibliothek";}
  LangName{"VW_spezifische_Bibliothek";"VW_specific_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"Sammlung von Bausteinen zur Kommunikation mit Steuergeraeten von VW.";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;2;"ZPH18";}
   Version{1;0;"AC";"- freigegeben -";"vw-admin";"04.03.2003 11:56:19";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"07.08.2006 13:58:14";}
   Version{1;2;"ZPH18";"[ Baustein importiert (ersetzt) ]";"admin";"14.08.2007 15:07:01";}}
  FunctionDef{
   Name{"VW2000_Dienste";}
   LangName{"VW2000_Dienste";"VW2000_Dienste";}
   CvsVerHis{}
   Type{1;}
   Icon{0;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Sammlung von Bausteinen zur Kommunikation mit Steuerger\xE4ten von VW mit dem Protokoll K2000";"";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{1;3;"PAE";}
    Version{1;0;"AC";"- freigegeben -";"vw-admin";"17.02.2003 15:37:21";}
    Version{1;1;"AC";"- in Arbeit -";"vw-admin";"28.08.2003 17:40:34";}
    Version{1;2;"AC";"- in Arbeit -";"dsa-admin";"08.06.2004 08:55:47";}
    Version{1;3;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"25.07.2006 08:36:16";}}
   FunctionDef{
    Name{"VW2000_ID";}
    LangName{"VW2000_ID";"VW2000_ID";}
    CvsVerHis{}
    Type{1;}
    Icon{0;}
    Properties{"Begin";}
    FormalParam{}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"";}
    NodeCategory{"";}
    Info{"";"";}
    Rights{"Write";"Read";}
    VersionInfo{
     CurVersion{0;1;"PAE";}
     Version{0;1;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"24.07.2006 17:06:13";}}
    FunctionDef{
     Name{"VW2000_TNr";}
     LangName{"VW2000_TNr";"VW2000_TNr";}
     CvsVerHis{}
     Type{1;}
     Icon{1;}
     Properties{"Begin";}
     FormalParam{
      InputParam{"ID_Nummer";
       LangName{"ID_Nummer";"ID_Nummer";}"ID_Nummern";"erste_ID";
       LangDesc{"zu lesende ID";"\"\"";}}
      InputParam{"ID_String";
       LangName{"ID_String";"ID_String";}"VW_Result_Tel";"VW_Stg_ID";
       LangDesc{"gelesene STG-Identifikation";"\"\"";}}
      OutputParam{"Subsystem";
       LangName{"Subsystem";"Subsystem";}"VW_Subsystem";"LIN_Subsystem";
       LangDesc{"LIN-Bus-Subsystem";"\"\"";}}
      OutputParam{"Teilenummer";
       LangName{"Teilenummer";"Teilenummer";}"StgTNr";"DTNR";
       LangDesc{"gelesene Teilenummer";"\"\"";}}}
     LocalVar{}
     Condition{"ever";"ok";"";}
     Evaluation{"no";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     MSLCode{"err =  _vwK2000VWIdTNR (ID_String, ID_Nummer, Teilenummer);\r\n_vwK2000GetSubsystem(ID_String, ID_Nummer, Subsystem);\r\n\r\nif (err)\r\n    err = NOK;\r\n\r\n_statSetStrResult (err, *Teilenummer, FSTGI);\r\n\r\n";}
     NodeCategory{"";}
     Info{"Modul lie\xDFt nicht die Steuerger\xE4te-Identifikation aus dem Steuerger\xE4t, sondern nutzt die durch\r\neinen VW-Dienst VW2000_ID_Lesen in der  Variablen ID-String abgespeicherten Identifiktion.\r\n\r\nDie 12 Stellen VW/Audi-Teilenummer der gelesenen Identifikation werden in der Varablen\r\n\"Teilenummer\" gespeichert.\r\n\r\nDas LIN-Bus-Codierbyte wird dabei dem Subsystem \xFCbergeben.\r\n";"";}
     Rights{"Write";"Read";}
     VersionInfo{
      CurVersion{0;2;"AC";}
      Version{0;1;"AC";"- in Arbeit -";"admin";"11.02.2005 13:58:33";}
      Version{0;2;"AC";"- in Arbeit -";"admin";"11.02.2005 13:59:45";}}}}}}
 FunctionDef{
  Name{"VW_spezifische_Bibliothek";}
  LangName{"VW_spezifische_Bibliothek";"VW_specific_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"Sammlung von Bausteinen zur Kommunikation mit Steuergeraeten von VW.";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;2;"ZPH18";}
   Version{1;0;"AC";"- freigegeben -";"vw-admin";"04.03.2003 11:56:19";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"07.08.2006 13:58:14";}
   Version{1;2;"ZPH18";"[ Baustein importiert (ersetzt) ]";"admin";"14.08.2007 15:07:01";}}
  FunctionDef{
   Name{"VW_Codefileauswahl";}
   LangName{"VW_Codefileauswahl";"VW_Codefileauswahl";}
   CvsVerHis{}
   Type{1;}
   Icon{0;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Platzhalter f\xFCr Pr\xFCfschritte";"";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{0;1;"PAE";}
    Version{0;1;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"24.07.2006 17:06:13";}}
   FunctionDef{
    Name{"Pfau_9_2_0";}
    LangName{"Pfau_9_2_0";"";}
    CvsVerHis{}
    Type{1;}
    Icon{0;}
    Properties{"Begin";}
    FormalParam{}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"";}
    NodeCategory{"";}
    Info{"";"";}
    Rights{"Write";"Read";}
    VersionInfo{
     CurVersion{0;1;"PAE";}
     Version{0;1;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"24.07.2006 17:06:13";}}
    FunctionDef{
     Name{"ZdcFtnCheck";}
     LangName{"ZdcFtnCheck";"ZdcFtnCheck";}
     CvsVerHis{}
     Type{1;}
     Icon{0;}
     Properties{"Begin";}
     FormalParam{
      InputParam{"ID_Expression";
       LangName{"ID_Expression";"ID_Expression";}"Codefile_Result_Str";"Dummy_ID_Exp";
       LangDesc{"Logischer Ausdr\xFCck der IDs (FTN)";"\"\"";}}
      InputParam{"ID_Result";
       LangName{"ID_Result";"ID_Result";}"Codefile_Result_Str";"Dummy_ID_1_Result";
       LangDesc{"ID-String";"\"\"";}}}
     LocalVar{}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     MSLCode{"if (zdcFtnCheck (ID_Expression, ID_Result, 12))\r\n    err = OK;\r\nelse\r\n    err = NOK;\r\n_statSetAsciiResult (err, ID_Result, FMWNOK);\r\n_statSetValue (ID_Expression);";}
     NodeCategory{"";}
     Info{"Baustein zur Bewertung eines logischen VW-LAS Ausdrucks (s).\r\n\r\nMit dem Parameter \"ID_Expression\" wird der logische Ausdruck \xFCbergeben.\r\nDieser Wert wird mit dem Baustein \"VW_Codefile_STG_9_2_0\" geliefert.\r\n\r\nMit dem Parameter \"ID_Result\" wird der ID-String oder die Verkettung von ID-Strings \xFCbergeben.\r\nDie ID's m\xFCssen jeweils genau 12 Zeichen lang sein.\r\n\r\nDer Baustein liefert OK zur\xFCck, wenn der logische Ausdruck durch die ID's im Parameter \"ID_Result\" wahr wird, \r\nandernfalls NOK.\r\n\r\n\r\n";"";}
     Rights{"Write";"Read";}
     VersionInfo{
      CurVersion{0;2;"DSA";}
      Version{0;1;"DSA";"- in Arbeit -";"cm";"23.07.2003 18:36:24";}
      Version{0;2;"DSA";"- in Arbeit -";"cm";"23.07.2003 18:42:43";}}}}}}
 FunctionDef{
  Name{"VW_spezifische_Bibliothek";}
  LangName{"VW_spezifische_Bibliothek";"VW_specific_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"Sammlung von Bausteinen zur Kommunikation mit Steuergeraeten von VW.";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;2;"ZPH18";}
   Version{1;0;"AC";"- freigegeben -";"vw-admin";"04.03.2003 11:56:19";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"07.08.2006 13:58:14";}
   Version{1;2;"ZPH18";"[ Baustein importiert (ersetzt) ]";"admin";"14.08.2007 15:07:01";}}
  FunctionDef{
   Name{"VW2000_Dienste";}
   LangName{"VW2000_Dienste";"VW2000_Dienste";}
   CvsVerHis{}
   Type{1;}
   Icon{0;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Sammlung von Bausteinen zur Kommunikation mit Steuerger\xE4ten von VW mit dem Protokoll K2000";"";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{1;3;"PAE";}
    Version{1;0;"AC";"- freigegeben -";"vw-admin";"17.02.2003 15:37:21";}
    Version{1;1;"AC";"- in Arbeit -";"vw-admin";"28.08.2003 17:40:34";}
    Version{1;2;"AC";"- in Arbeit -";"dsa-admin";"08.06.2004 08:55:47";}
    Version{1;3;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"25.07.2006 08:36:16";}}
   FunctionDef{
    Name{"VW2000_ID";}
    LangName{"VW2000_ID";"VW2000_ID";}
    CvsVerHis{}
    Type{1;}
    Icon{0;}
    Properties{"Begin";}
    FormalParam{}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"";}
    NodeCategory{"";}
    Info{"";"";}
    Rights{"Write";"Read";}
    VersionInfo{
     CurVersion{0;1;"PAE";}
     Version{0;1;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"24.07.2006 17:06:13";}}
    FunctionDef{
     Name{"VW2000_Softwareversion";}
     LangName{"VW2000_Softwareversion";"VW2000_Softwareversion";}
     CvsVerHis{}
     Type{1;}
     Icon{1;}
     Properties{"Begin";}
     FormalParam{
      InputParam{"SoftwareFile";
       LangName{"SoftwareFile";"SoftwareFile";}"IniFileName";"CIniFile_Software";
       LangDesc{"Datendatei mit Softwareversionen";"";}}
      InputParam{"ID_Nummer";
       LangName{"ID_Nummer";"ID_Nummer";}"ID_Nummern";"erste_ID";
       LangDesc{"zu lesende ID";"Part number to be read";}}
      InputParam{"ID_String";
       LangName{"ID_String";"ID_String";}"VW_Result_Tel";"VW_Stg_ID";
       LangDesc{"gelesene STG-Identifikation";"ECU ID string";}}}
     LocalVar{}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     MSLCode{"int length;\r\nint position;\r\nstring\tiStr;\r\nstring\tVersion;\r\nstring\tSoftwareVersion;\r\nstring Teilenummer;\r\n\r\n// Aufbau INI-Datei\r\n// [Version]\r\n// ;Teilenummer=Softwareversionsarray (jeweils 4 Byte )\r\n// 03D676453=1020,1021\r\n\r\nerr = _vwK2000VWIdVersion(ID_String, ID_Nummer, &SoftwareVersion);\r\nerr = _vwK2000VWIdTNR(ID_String, ID_Nummer, &Teilenummer);\r\n\r\n// Softwareversionsdatei \xF6ffnen\r\niniLoad(SoftwareFile);\r\n\r\n// Softwareversion auslesen\r\nerr=iniString(SoftwareFile,\"Version\",Teilenummer,&Version);\r\n_statSetValue (Version);\r\n\r\nif ( err == OK )\r\n {\r\n   // ggf. mehrere Softwareversionen extrahieren und im Vergleich per ODER verkn\xFCpfen\r\n   length=strlen(Version); \r\n   position = 0;\r\n   while ( position < length)\r\n    {\r\n      iStr = midstr (Version, position, 4);\r\n      if ( iStr == SoftwareVersion )\r\n       {\r\n         // Version gefunden -> R\xFCckgabe OK\r\n         err=OK;\r\n         iniUnload(SoftwareFile);\r\n         _statSetAsciiResult (err, SoftwareVersion, FOK);\r\n         return(err); \r\n       } \r\n     position = position + 5;\r\n    }\r\n  // Softwareversion nicht gefunden -> R\xFCckgabe NOK\r\n  err=NOK;\r\n  _statSetAsciiResult (err, SoftwareVersion, FMWNOK);\r\n }\r\nelse\r\n {\r\n _statSetValue ( \"no Version defined\");\r\n _statSetAsciiResult (NOK,SoftwareVersion, FUABBR);\r\n }\r\n\r\n// Softwareversionsdatei schliessen \r\niniUnload(SoftwareFile);\r\n  ";}
     NodeCategory{"";}
     Info{"Modul lie\xDFt nicht die Steuerger\xE4te-Identifikation aus dem Steuerger\xE4t, sondern nutzt die durch\r\nden VW-Dienst VW2000_ID_Lesen in der Variablen ID-String abgespeicherten Identifiktion.\r\n\r\nVergleicht Softwareversion aus SG-Identifikation mit gepflegter Softwareversion in einer \r\nINI-Datei. Referenzierung \xFCber 9-stellige Teilenummer des SG.\r\n\r\n\r\nAufbau INI-Datei\r\n[Version]\r\nTeilenummer=Softwareversionsarray (jeweils 4 Stellen )\r\n03D676453 =1020,1021\r\n03D676454 =1133\r\n";"";}
     Rights{"Write";"Read";}
     VersionInfo{
      CurVersion{1;2;"CP3";}
      Version{1;0;"AC";"- freigegeben -";"vw-admin";"04.03.2003 13:14:50";}
      Version{1;1;"CP3";"- in Arbeit -";"admin";"21.10.2003 23:06:20";}
      Version{1;2;"CP3";"- in Arbeit -";"admin";"21.10.2003 23:07:47";}}}}}}
 FunctionDef{
  Name{"VW_spezifische_Bibliothek";}
  LangName{"VW_spezifische_Bibliothek";"VW_specific_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"Sammlung von Bausteinen zur Kommunikation mit Steuergeraeten von VW.";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;2;"ZPH18";}
   Version{1;0;"AC";"- freigegeben -";"vw-admin";"04.03.2003 11:56:19";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"07.08.2006 13:58:14";}
   Version{1;2;"ZPH18";"[ Baustein importiert (ersetzt) ]";"admin";"14.08.2007 15:07:01";}}
  FunctionDef{
   Name{"VW2000_Dienste";}
   LangName{"VW2000_Dienste";"VW2000_Dienste";}
   CvsVerHis{}
   Type{1;}
   Icon{0;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Sammlung von Bausteinen zur Kommunikation mit Steuerger\xE4ten von VW mit dem Protokoll K2000";"";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{1;3;"PAE";}
    Version{1;0;"AC";"- freigegeben -";"vw-admin";"17.02.2003 15:37:21";}
    Version{1;1;"AC";"- in Arbeit -";"vw-admin";"28.08.2003 17:40:34";}
    Version{1;2;"AC";"- in Arbeit -";"dsa-admin";"08.06.2004 08:55:47";}
    Version{1;3;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"25.07.2006 08:36:16";}}
   FunctionDef{
    Name{"VW2000_ID";}
    LangName{"VW2000_ID";"VW2000_ID";}
    CvsVerHis{}
    Type{1;}
    Icon{0;}
    Properties{"Begin";}
    FormalParam{}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"";}
    NodeCategory{"";}
    Info{"";"";}
    Rights{"Write";"Read";}
    VersionInfo{
     CurVersion{0;1;"PAE";}
     Version{0;1;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"24.07.2006 17:06:13";}}
    FunctionDef{
     Name{"VW2000_Vers_Speichern";}
     LangName{"VW2000_Vers_Speichern";"VW2000_ID_Version_Store";}
     CvsVerHis{}
     Type{1;}
     Icon{1;}
     Properties{"Begin";}
     FormalParam{
      InputParam{"ID_Nummer";
       LangName{"ID_Nummer";"ID_Nummer";}"ID_Nummern";"erste_ID";
       LangDesc{"zu lesende ID";"Part number to be read";}}
      InputParam{"ID_String";
       LangName{"ID_String";"ID_String";}"VW_Result_Tel";"VW_Stg_ID";
       LangDesc{"gelesene STG-Identifikation";"ECU ID string";}}
      OutputParam{"Version";
       LangName{"Version";"Version";}"VW_Result_Tel";"ID_Version";
       LangDesc{"";"";}}}
     LocalVar{}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     MSLCode{"err = _vwK2000VWVersionHex(ID_String, ID_Nummer, Version);";}
     NodeCategory{"";}
     Info{"Modul lie\xDFt nicht die Steuerger\xE4te-Identifikation aus dem Steuerger\xE4t, sondern nutzt die durch\r\nden VW-Dienst VW2000_ID_Lesen in der Variablen ID-String abgespeicherten Identifiktion.\r\n\r\nDieser Pr\xFCfschritt, oder VW2000_Vers_Lesen_Speichern ist immer vor einer Codierung oder einem Login \r\nauszuf\xFChren, da bei diesen Befehlen der Datenstand an das STG gesendet werden mu?\r\n\r\nAus der Identifikation werden die 4 Byte Datenstand in der Variablen \"Version\" gespeichert.\r\nDiese Version wird in der Statistik gespeichert.\r\n\r\nDie Bewertung des Pr\xFCfschrittes ist immer OK, wenn in der Variblen \"ID_String\" eine g\xFCltige Identifikation\r\ngespeichert ist. Is dies nicht der Fall, wird in der Variablen \"Version\" \"0000\" gespeichert.\r\n\r\n";"";}
     Rights{"Write";"Read";}
     VersionInfo{
      CurVersion{1;3;"dsanbpj2";}
      Version{1;0;"AC";"- freigegeben -";"vw-admin";"24.03.2003 16:36:51";}
      Version{1;1;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"24.07.2006 17:06:13";}
      Version{1;2;"dsanbpj2";"- in Arbeit -";"admin";"18.10.2006 13:33:57";}
      Version{1;3;"dsanbpj2";"[ Baustein importiert (ersetzt) ]";"admin";"18.10.2006 13:43:06";}}}}}}
 FunctionDef{
  Name{"VW_spezifische_Bibliothek";}
  LangName{"VW_spezifische_Bibliothek";"VW_specific_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"Sammlung von Bausteinen zur Kommunikation mit Steuergeraeten von VW.";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;2;"ZPH18";}
   Version{1;0;"AC";"- freigegeben -";"vw-admin";"04.03.2003 11:56:19";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"07.08.2006 13:58:14";}
   Version{1;2;"ZPH18";"[ Baustein importiert (ersetzt) ]";"admin";"14.08.2007 15:07:01";}}
  FunctionDef{
   Name{"VW2000_Dienste";}
   LangName{"VW2000_Dienste";"VW2000_Dienste";}
   CvsVerHis{}
   Type{1;}
   Icon{0;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Sammlung von Bausteinen zur Kommunikation mit Steuerger\xE4ten von VW mit dem Protokoll K2000";"";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{1;3;"PAE";}
    Version{1;0;"AC";"- freigegeben -";"vw-admin";"17.02.2003 15:37:21";}
    Version{1;1;"AC";"- in Arbeit -";"vw-admin";"28.08.2003 17:40:34";}
    Version{1;2;"AC";"- in Arbeit -";"dsa-admin";"08.06.2004 08:55:47";}
    Version{1;3;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"25.07.2006 08:36:16";}}
   FunctionDef{
    Name{"VW2000_SeedKeyLevel2";}
    LangName{"VW2000_SeedKeyLevel2";"VW2000_SeedKeyLevel2";}
    CvsVerHis{}
    Type{1;}
    Icon{1;}
    Properties{"Begin";}
    FormalParam{
     InputParam{"Hndl";
      LangName{"Hndl";"Hndl";}"VCIKANAL";"VCIKanal1";
      LangDesc{"VCI-Kanal";"VCI channel";}}
     InputParam{"DlgHndl";
      LangName{"DlgHndl";"DlgHndl";}"DialogTyp";"DIALOG_LOKAL";
      LangDesc{"Dialog handle";"Dialog handle";}}
     InputParam{"Zeile";
      LangName{"Zeile";"Zeile";}"DialogLine";"CDialogZeile1";
      LangDesc{"Ausgabezeile";"Output line";}}
     InputParam{"Login";
      LangName{"Login";"Login";}"STGLogin";"";
      LangDesc{"Steuerger\xE4te Login";"ECU Login";}}}
    LocalVar{
     LocVarDef{"Kommentar1";
      LangName{"Kommentar1";"";}"Locvar";"TEXT";
      LangDesc{"";"";}
      LangText{"\"Seed / Key Level2\"";"\"Seed / Key \xBC\xB6\xB1\xF02\"";"\"Seed / Key Level2\"";}"Const";}}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"string\tTmpStr;\r\nint     Seed;\r\nint\tKey;\r\nstring\tStgResult;\r\n\r\n\r\nif (Zeile > 0 )\r\n\t_dlgMultiSetLine (DlgHndl, Zeile, Kommentar1);\r\n\r\nerr = _vciDataExchange (Hndl, 0x27, 0x67, \"\\x03\", &StgResult);\r\n\r\nif (err)\r\n\t{\r\n\t_vciStatVciError (Hndl);\r\n      _statSetStrResult(err,StgResult,FSTGI);\r\n\t}\r\nelse\r\n\t{\r\n\t\t// errDebug(1,sprintf(\"Seed:%s\",hexstr(midstr(StgResult,1,4))));\r\n        Seed = binstrtoi(midstr(StgResult,1,4));\r\n\t\t// errDebug(2,sprintf(\"SeedInt:%d\",Seed));\r\n\tKey = Seed + Login;\r\n\t\t// errDebug(3,sprintf(\"KeyInt:%d\",Key));\r\n\tTmpStr = itobinstr(Key);\r\n\t\t// errDebug(4,sprintf(\"Key:%s\",hexstr(TmpStr)));\r\n\tif ( Seed != 0)\r\n\t\terr = _vciDataExchange (Hndl, 0x27, 0x67, \"\\x04\"+TmpStr, &StgResult);\r\n\tif (err)\r\n\t\t{\r\n\t\t_vciStatVciError (Hndl);\r\n       \t_statSetStrResult(err,StgResult,FSTGI);\r\n\t\t}\r\n\telse\r\n\t\t_statSetFloatResult(err,Login,FOK);\r\n\t}\r\n\r\nif (Zeile > 0 )\r\n\t_dlgMultiClearLine (DlgHndl, Zeile);";}
    NodeCategory{"";}
    Info{"Mit diesem Modul kann das Seed&Key Verfahren mit einem Steuerger\xE4t angewendet werden.\r\n(VAG-Tester Funktion 16)\r\n\r\nDer Login mu?in der Variable \"Login\" \xFCbergeben werden.\r\n\r\nDie Bewertung des Pr\xFCfschrittes ist immer \"OK\", wenn der Seed und der Key erfolgreich zum \r\nSteuerger\xE4t gesendet wurde.\r\n\r\nIn die Statistik wird der Login geschrieben.";"";}
    Rights{"Write";"Read";}
    VersionInfo{
     CurVersion{1;3;"nbmr";}
     Version{1;0;"AC";"- freigegeben -";"vw-admin";"24.03.2003 16:37:41";}
     Version{1;1;"CP3";"- in Arbeit -";"admin";"22.10.2003 01:48:44";}
     Version{1;2;"CP3";"- in Arbeit -";"admin";"24.08.2006 08:40:51";}
     Version{1;3;"nbmr";"[ Baustein importiert (ersetzt) ]";"dsa";"21.05.2009 10:43:11";}}}}}
 FunctionDef{
  Name{"VW_spezifische_Bibliothek";}
  LangName{"VW_spezifische_Bibliothek";"VW_specific_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"Sammlung von Bausteinen zur Kommunikation mit Steuergeraeten von VW.";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;2;"ZPH18";}
   Version{1;0;"AC";"- freigegeben -";"vw-admin";"04.03.2003 11:56:19";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"07.08.2006 13:58:14";}
   Version{1;2;"ZPH18";"[ Baustein importiert (ersetzt) ]";"admin";"14.08.2007 15:07:01";}}
  FunctionDef{
   Name{"VW2000_Dienste";}
   LangName{"VW2000_Dienste";"VW2000_Dienste";}
   CvsVerHis{}
   Type{1;}
   Icon{0;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Sammlung von Bausteinen zur Kommunikation mit Steuerger\xE4ten von VW mit dem Protokoll K2000";"";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{1;3;"PAE";}
    Version{1;0;"AC";"- freigegeben -";"vw-admin";"17.02.2003 15:37:21";}
    Version{1;1;"AC";"- in Arbeit -";"vw-admin";"28.08.2003 17:40:34";}
    Version{1;2;"AC";"- in Arbeit -";"dsa-admin";"08.06.2004 08:55:47";}
    Version{1;3;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"25.07.2006 08:36:16";}}
   FunctionDef{
    Name{"VW2000_StartDiagnosticSession";}
    LangName{"VW2000_StartDiagnosticSession";"VW2000_StartDiagnosticSession";}
    CvsVerHis{}
    Type{1;}
    Icon{1;}
    Properties{"Begin";}
    FormalParam{
     InputParam{"Hndl";
      LangName{"Hndl";"Hndl";}"VCIKANAL";"VCIKanal1";
      LangDesc{"VCI-Kanal";"VCI channel";}}
     InputParam{"Mode";
      LangName{"Mode";"Mode";}"DiagnosticSession";"";
      LangDesc{"Diagnosesitzung";"";}}}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"string\tRecvTel;\r\nstring\tsMode;\r\n\r\nsMode = midstr(itobinstr (Mode & 0xff), 3, 1);\r\n\r\nerr = _vciDataExchange (Hndl, 0x10, 0x50, sMode, &RecvTel);\r\nif ( err != OK )\r\n\t{\r\n\t_vciStatVciError (Hndl);\r\n\t_statSetStrResult(err,RecvTel,FSTGI);\r\n\terr = NOK;\r\n\t}\r\nelse\r\n\t_statSetResult(OK,FOK);\r\n";}
    NodeCategory{"";}
    Info{"Dieser Baustein startet eine definierte Diagnosesitzung in STG. Dadurch werden in der Regel bestimmte\r\nDiagnosebefehle zur Nutzung freigegeben.\r\nDabei wird der KWP2000-Befehl StartDiagnosticSession ( Blocktitel 0x10)\r\nmit dem Parameter \"Mode\"  verwendet.\r\nIn den meisten F\xE4llen ist vor der Verwendung dieses Befehls die Berechtigung mit Hilfe eines Login oder \r\ndurch das Seed and Key -Verfahren zu erlangen.\r\n\r\nDie Bewertung des Pr\xFCfschrittes ist immer OK, wenn der STG-Befehl erfolgreich ausgef\xFChrt werden konnte.\r\n\r\nIn die Statistik wird im OK-Fall nur die Bewertung des Pr\xFCfschrittes und im NOK-Fall\r\ndie die vollst\xE4ndige Antwort des STG gespeichert.";"";}
    Rights{"Write";"Read";}
    VersionInfo{
     CurVersion{1;0;"AC";}
     Version{1;0;"AC";"- freigegeben -";"vw-admin";"04.03.2003 13:55:45";}}}}}
 FunctionDef{
  Name{"VW_spezifische_Bibliothek";}
  LangName{"VW_spezifische_Bibliothek";"VW_specific_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"Sammlung von Bausteinen zur Kommunikation mit Steuergeraeten von VW.";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;2;"ZPH18";}
   Version{1;0;"AC";"- freigegeben -";"vw-admin";"04.03.2003 11:56:19";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"07.08.2006 13:58:14";}
   Version{1;2;"ZPH18";"[ Baustein importiert (ersetzt) ]";"admin";"14.08.2007 15:07:01";}}
  FunctionDef{
   Name{"VW_Codefileauswahl";}
   LangName{"VW_Codefileauswahl";"VW_Codefileauswahl";}
   CvsVerHis{}
   Type{1;}
   Icon{0;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Platzhalter f\xFCr Pr\xFCfschritte";"";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{0;1;"PAE";}
    Version{0;1;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"24.07.2006 17:06:13";}}
   FunctionDef{
    Name{"Pfau_9_2_0";}
    LangName{"Pfau_9_2_0";"";}
    CvsVerHis{}
    Type{1;}
    Icon{0;}
    Properties{"Begin";}
    FormalParam{}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"";}
    NodeCategory{"";}
    Info{"";"";}
    Rights{"Write";"Read";}
    VersionInfo{
     CurVersion{0;1;"PAE";}
     Version{0;1;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"24.07.2006 17:06:13";}}
    FunctionDef{
     Name{"CodefileProgrammLang_KWP2000_1_03";}
     LangName{"CodefileProgrammLang_KWP2000_1_03";"CodefileProgramLong_KWP2000_1_03";}
     CvsVerHis{}
     Type{1;}
     Icon{0;}
     Properties{"Begin";}
     FormalParam{
      InputParam{"DialogHndl";
       LangName{"DialogHndl";"DialogHndl";}"DialogTyp";"DIALOG_LOKAL";
       LangDesc{"Dialog handle";"Dialog handle";}}
      InputParam{"Zeile";
       LangName{"Zeile";"Zeile";}"DialogLine";"CDialogZeile1";
       LangDesc{"Ausgabezeile";"Output line";}}
      InputParam{"Hndl";
       LangName{"Hndl";"Hndl";}"VCIKANAL";"VCIKanal1";
       LangDesc{"VCI-Kanal";"VCI channel";}}
      InputParam{"ProgL_String";
       LangName{"ProgL_String";"ProgL_String";}"Codefile_Result_Str";"Dummy_Prog_String";
       LangDesc{"Programmier String im 4-Byte Adressformat";"Programming string; 4-Byte address format";}}}
     LocalVar{
      LocVarDef{"Kommentar";
       LangName{"Kommentar";"";}"Locvar";"TEXT";
       LangDesc{"";"";}
       LangText{"\"programmieren\"";"\"\xB1\xE0\xB3\xCC\xD6\xD0\"";"\"Programming\"";}"Const";}
      LocVarDef{"KommentarFehler";
       LangName{"KommentarFehler";"";}"Locvar";"TEXT";
       LangDesc{"";"";}
       LangText{"\"Programmierfehler\"";"\"\xB1\xE0\xB3\xCC\xB3\xF6\xB4\xED\"";"\"Programming fault\"";}"Const";}
      LocVarDef{"KommentarNOK";
       LangName{"KommentarNOK";"";}"Locvar";"TEXT";
       LangDesc{"";"";}
       LangText{"\"Programmstring ung\xFCltig\"";"\"\xB1\xE0\xB3\xCC\xD7\xD6\xB7\xFB\xB4\xAE\xCE\xDE\xD0\xA7\"";"\"Programming string unvalid\"";}"Const";}
      LocVarDef{"KommentarOK";
       LangName{"KommentarOK";"";}"Locvar";"TEXT";
       LangDesc{"";"";}
       LangText{"\"Programmierung OK\"";"\"\xB1\xE0\xB3\xCCOK\"";"\"Programming OK\"";}"Const";}}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     MSLCode{"// jk 14.08.03 Erweiterung auf 4-Byte Adresse und 4-Byte L\xE4nge f\xFCr Pfau >= 9.2.0.3\r\n\r\nint\tAnzBlock;\r\nint\tBlockAddr;\r\nint\tBlockAnz;\r\nstring\tTeilStr;\r\nstring\tProgString;\r\nstring\tLesen;\r\n\r\nif (Zeile > 0)\r\n\t_dlgMultiSetLine (DialogHndl, Zeile , Kommentar);\r\n\r\nerr = OK;\r\nProgString = ProgL_String;\r\n\r\nerrDebug(1,hexstr(ProgString));\r\n\r\nif (strlen(ProgString) <= 4)\r\n\t{\r\n\t_statSetAsciiResult (NOK, KommentarNOK, FUABBR);\r\n\treturn NOK;\r\n\t}\r\n\r\nAnzBlock  = binstrtoi(midstr(ProgString,0,4));\r\nProgString = midstr(ProgString,4,strlen(ProgString)-4);\r\n\r\nwhile ((AnzBlock > 0) && (err == OK))\r\n\t{\r\n\tif (strlen(ProgString) <= 8)\r\n\t\t{\r\n\t\t_statSetAsciiResult (NOK, KommentarNOK, FUABBR);\r\n\t\treturn NOK;\r\n\t\t} \r\n\tBlockAddr   = binstrtoi(midstr(ProgString,0,4));\r\n\tProgString  = midstr(ProgString,4,strlen(ProgString)-4);\r\n\tBlockAnz    = binstrtoi(midstr(ProgString,0,4));\r\n\tProgString  = midstr(ProgString,4,strlen(ProgString)-4);\r\n\tTeilStr\t    = midstr(ProgString,0,BlockAnz);\r\n\tProgString  = midstr(ProgString,BlockAnz,strlen(ProgString)-BlockAnz);\r\n\tif (strlen(TeilStr) < BlockAnz)\t\r\n\t\t{\r\n\t\t_statSetAsciiResult (NOK, KommentarNOK, FUABBR);\r\n\t\treturn NOK;\r\n\t\t} \r\n\r\n\terr= _vwK2000VWBlockWrite_1_03(Hndl, BlockAddr, TeilStr);\r\n\r\n\tif (err != OK)\r\n\t\t{\r\n\t\t_statSetAsciiResult (NOK, KommentarFehler, FUABBR);\r\n\t\treturn NOK;\r\n\t\t}\r\n\r\n\tAnzBlock = AnzBlock - 1;\r\n\t}\r\n\r\n\r\n_statSetAsciiResult (err, KommentarOK, FOK);";}
     NodeCategory{"";}
     Info{"Dieser Baustein schreibt die Programierdaten aus dem Parameter \"Prog_String\" in ein Steuerger\xE4t mit KWP2000.\r\n\r\nIn \"Prog_String\" werden die Programierdaten aus dem Codefile \xFCbergeben.\r\nDie max. Anzahl Datendatenbytes je Schreibbefehl ist \"Blockl\xE4nge\".\r\n\r\n####\r\nHierbei wird die neue Erweiterung zum KWP2000 Spec zum Thema Flashen verwendet.\r\nBen\xF6tigt z.B. f\xFCr Airbag prog. PQ35\r\n####\r\n\r\nDie Bewertung dieses Bausteines ist OK, wenn das Schreiben in Ordnung war.\r\nR\xFCcklesen ist nicht m\xF6glich.\r\n\r\nDer Baustein ist auf die Verarbeitung von 4Byte Adress- und L\xE4ngeninforationen ausgelegt.\r\n\r\nIn die Statistik wird ein Statustext geschrieben.";"";}
     Rights{"Write";"Read";}
     VersionInfo{
      CurVersion{1;1;"CP3";}
      Version{0;1;"MOS";"- in Arbeit -";"mosel-admin";"14.08.2003 10:08:20";}
      Version{0;2;"MOS";"- in Arbeit -";"mosel-admin";"14.08.2003 10:08:25";}
      Version{0;3;"MOS";"- in Arbeit -";"mosel-admin";"14.08.2003 10:08:45";}
      Version{0;4;"MOS";"- in Arbeit -";"mosel-admin";"14.08.2003 10:11:51";}
      Version{0;5;"MOS";"- in Arbeit -";"mosel-admin";"14.08.2003 10:23:16";}
      Version{0;6;"MOS";"- in Arbeit -";"mosel-admin";"14.08.2003 10:37:12";}
      Version{0;7;"MOS";"- in Arbeit -";"mosel-admin";"14.08.2003 13:06:39";}
      Version{0;8;"AC";"- in Arbeit -";"vw-admin";"20.08.2003 10:23:17";}
      Version{1;0;"AC";" - freigegeben - ";"vw-admin";"20.08.2003 10:24:45";}
      Version{1;1;"CP3";"- in Arbeit -";"admin";"22.10.2003 16:36:23";}}}}}}
 FunctionDef{
  Name{"DSA_Bibliothek";}
  LangName{"DSA_Bibliothek";"DSA_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;1;"AC";}
   Version{1;0;"AC";"- freigegeben -";"dsa-admin";"04.03.2003 11:44:35";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"admin";"03.07.2006 10:17:25";}}
  FunctionDef{
   Name{"BenutzerSchnittstellen";}
   LangName{"BenutzerSchnittstellen";"UserInterface";}
   CvsVerHis{}
   Type{1;}
   Icon{2;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Sammlung von Bausteinen zur Benutzerschnittstelle";"Collection of components relating to the user interface.";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{1;2;"SVW";}
    Version{1;0;"AC";"- freigegeben -";"dsa-admin";"04.03.2003 11:34:14";}
    Version{1;1;"SVW";"- in Arbeit -";"admin";"12.04.2004 19:08:29";}
    Version{1;2;"SVW";"- in Arbeit -";"admin";"12.04.2004 21:13:06";}}
   FunctionDef{
    Name{"MultiDisplay";}
    LangName{"MultiDisplay";"MultiDisplay";}
    CvsVerHis{}
    Type{1;}
    Icon{0;}
    Properties{"Begin";}
    FormalParam{}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"";}
    NodeCategory{"";}
    Info{"Sammlung von Bausteinen der Benutzerschnittstelle zur zeilenorientierten Ausgabe (Multi-Display)";"The MultiDisplay functions operate somewhat differently from the MsgBox, ListBox, and Input functions.\r\nThese are displayed when called up, and are then hidden as soon as the user activates \"OK\" or \"Abort\".\r\nThe \"Multifunctional dialogue box\" is always shown (although it may be temporarily obscured, for example\r\nby a \"MsgBox\"). It has four lines which can be selected independently of one another.\r\nEach line may display a text, or a text and a Bitmap graphic, or a scale and a brief text.";}
    Rights{"Write";"Read";}
    VersionInfo{
     CurVersion{0;3;"SVW";}
     Version{0;1;"AC";"- in Arbeit -";"admin";"13.02.2003 14:26:51";}
     Version{0;2;"AC";"- in Arbeit -";"admin";"13.02.2003 14:26:59";}
     Version{0;3;"SVW";"- in Arbeit -";"admin";"12.04.2004 19:15:06";}}
    FunctionDef{
     Name{"MultiDisplay_Lines";}
     LangName{"MultiDisplay_Lines";"MultiDisplay_Lines";}
     CvsVerHis{}
     Type{1;}
     Icon{0;}
     Properties{"Begin";}
     FormalParam{}
     LocalVar{}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     MSLCode{"";}
     NodeCategory{"";}
     Info{"";"";}
     Rights{"Write";"Read";}
     VersionInfo{
      CurVersion{0;1;"RHMPil";}
      Version{0;1;"RHMPil";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"20.05.2005 17:16:43";}}
     FunctionDef{
      Name{"DlgMultiLineResultStatus";}
      LangName{"DlgMultiLineResultStatus";"DlgMultiLineResultStatus";}
      CvsVerHis{}
      Type{1;}
      Icon{2;}
      Properties{"Begin";}
      FormalParam{
       InputParam{"DialogHndl";
        LangName{"DialogHndl";"DialogHndl";}"DialogTyp";"DIALOG_LOKAL";
        LangDesc{"DialogHandle";"Dialog handle";}}
       InputParam{"Zeile";
        LangName{"Zeile";"Zeile";}"DialogLine";"CDialogZeile1";
        LangDesc{"";"Output line";}}
       InputParam{"TextOK";
        LangName{"TextOK";"TextOK";}"TEXT";"CText___OK";
        LangDesc{"";"";}}
       InputParam{"SymbolOK";
        LangName{"SymbolOK";"SymbolOK";}"Symbol";"CSymbol1";
        LangDesc{"Symbol";"Symbol";}}
       InputParam{"TextNOK";
        LangName{"TextNOK";"TextNOK";}"TEXT";"CText___NOK";
        LangDesc{"";"";}}
       InputParam{"SymbolNOK";
        LangName{"SymbolNOK";"SymbolNOK";}"Symbol";"CSymbol3";
        LangDesc{"Symbol";"Symbol";}}
       InputParam{"TextABR";
        LangName{"TextABR";"TextABR";}"TEXT";"CText___ABR";
        LangDesc{"";"";}}
       InputParam{"SymbolABR";
        LangName{"SymbolABR";"SymbolABR";}"Symbol";"CSymbol2";
        LangDesc{"Symbol";"Symbol";}}
       InputParam{"TextUNK";
        LangName{"TextUNK";"TextUNK";}"TEXT";"CTextt___UNK";
        LangDesc{"";"";}}
       InputParam{"Timeout";
        LangName{"Timeout";"Timeout";}"TimeMs";"CTimeMs_00500";
        LangDesc{"Wartezeit in ms";"Timeout";}}}
      LocalVar{}
      Condition{"ever";"ok";"";}
      Evaluation{"no";"never";
       ActionCond{"";}}
      Extra{"teststep";}
      MSLCode{"int errIn = err;\r\n\r\n/*\r\nswitch (errIn)\r\n{\r\n\tcase OK:\r\n\t{\r\n\t\terr = _dlgMultiTextBmp (DialogHndl, Zeile, TextOK, SymbolOK);\r\n\t}\r\n\tcase NOK:\r\n\t{\r\n\t\terr = _dlgMultiTextBmp (DialogHndl, Zeile, TextNOK, SymbolNOK);\r\n\t}\r\n\tcase ABBR:\r\n\t{\r\n\t\terr = _dlgMultiTextBmp (DialogHndl, Zeile, TextABR, SymbolABR);\r\n\t}\r\n\tdefault:\r\n\t{\r\n\t\terr = _dlgMultiSetLine (DialogHndl, Zeile, TextUNK);\r\n\t}\r\n} // switch\r\n*/\r\nif (errIn == OK)\r\n\t{\r\n\t\terr = _dlgMultiTextBmp (DialogHndl, Zeile, TextOK, SymbolOK);\r\n\t}\r\nif (errIn == NOK)\r\n\t{\r\n\t\terr = _dlgMultiTextBmp (DialogHndl, Zeile, TextNOK, SymbolNOK);\r\n\t}\r\nif (errIn == ABBR)\r\n\t{\r\n\t\terr = _dlgMultiTextBmp (DialogHndl, Zeile, TextABR, SymbolABR);\r\n\t}\r\nif ((errIn != OK) && (errIn != NOK) && (errIn != ABBR))\r\n\t{\r\n\t\terr = _dlgMultiSetLine (DialogHndl, Zeile, TextUNK);\r\n\t}\r\n\r\nif (Timeout > 0)\r\n{\r\n\tWait (Timeout/1000.0);\r\n}\r\n\r\nerr = _dlgMultiClearLine (DialogHndl, 1);\r\nerr = _dlgMultiClearLine (DialogHndl, 2);\r\nerr = _dlgMultiClearLine (DialogHndl, 3);\r\nerr = _dlgMultiClearLine (DialogHndl, 4);";}
      NodeCategory{"";}
      Info{"Bausteinen zum Setzen einer Zeile des Multi-Dialogs";"Module to set a line of the multi-dialog.";}
      Rights{"Write";"Read";}
      VersionInfo{
       CurVersion{0;7;"CRE1A";}
       Version{0;1;"CRE1";"- in Arbeit -";"admin";"13.04.2005 16:51:14";}
       Version{0;2;"CRE1";"- in Arbeit -";"admin";"13.04.2005 17:06:01";}
       Version{0;3;"CRE1";"- in Arbeit -";"admin";"13.04.2005 17:07:33";}
       Version{0;4;"CRE1A_OF";"- in Arbeit -";"admin";"21.01.2006 00:10:59";}
       Version{0;5;"CRE1";"- in Arbeit -";"admin";"06.04.2006 16:33:32";}
       Version{0;6;"CRE1";"- in Arbeit -";"admin";"12.04.2006 09:53:51";}
       Version{0;7;"CRE1A";"- in Arbeit -";"admin";"25.04.2007 17:10:13";}}}}}}}
 FunctionDef{
  Name{"VW_spezifische_Bibliothek";}
  LangName{"VW_spezifische_Bibliothek";"VW_specific_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"Sammlung von Bausteinen zur Kommunikation mit Steuergeraeten von VW.";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;2;"ZPH18";}
   Version{1;0;"AC";"- freigegeben -";"vw-admin";"04.03.2003 11:56:19";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"07.08.2006 13:58:14";}
   Version{1;2;"ZPH18";"[ Baustein importiert (ersetzt) ]";"admin";"14.08.2007 15:07:01";}}
  FunctionDef{
   Name{"VW2000_Dienste";}
   LangName{"VW2000_Dienste";"VW2000_Dienste";}
   CvsVerHis{}
   Type{1;}
   Icon{0;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Sammlung von Bausteinen zur Kommunikation mit Steuerger\xE4ten von VW mit dem Protokoll K2000";"";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{1;3;"PAE";}
    Version{1;0;"AC";"- freigegeben -";"vw-admin";"17.02.2003 15:37:21";}
    Version{1;1;"AC";"- in Arbeit -";"vw-admin";"28.08.2003 17:40:34";}
    Version{1;2;"AC";"- in Arbeit -";"dsa-admin";"08.06.2004 08:55:47";}
    Version{1;3;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"25.07.2006 08:36:16";}}
   FunctionDef{
    Name{"VW2000_Dienste_2E";}
    LangName{"VW2000_Dienste_2E";"VW2000_Dienste_2E";}
    CvsVerHis{}
    Type{1;}
    Icon{0;}
    Properties{"Begin";}
    FormalParam{}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"";}
    NodeCategory{"";}
    Info{"SG-Identifikation schreiben mit Service 0x2e (WriteDataByIdentifier).\r\nDiese sollen in Zukunft 0x3B \"WriteDataByLocalIdentifer\" abloesen.";"Moduls write the ECU Id by using the KWP2000-Comand WriteDataByIdentifier (Requesttitel 0x22)\r\nand will replace 0x3B \"WriteDataByLocalIdentifer\".";}
    Rights{"Write";"Read";}
    VersionInfo{
     CurVersion{1;0;"PAE";}
     Version{0;1;"PAE";"- in Arbeit -";"vw-admin";"30.05.2005 15:53:21";}
     Version{0;2;"PAE";"- in Arbeit -";"vw-admin";"31.05.2005 11:15:52";}
     Version{1;0;"PAE";" Freigabe ";"vw-admin";"03.06.2005 16:04:15";}}
    FunctionDef{
     Name{"VW2000_Codieren_kompatibel";}
     LangName{"VW2000_Codieren_kompatibel";"VW2000_Coding_kompatible";}
     CvsVerHis{}
     Type{1;}
     Icon{1;}
     Properties{"Begin";}
     FormalParam{
      InputParam{"Hndl";
       LangName{"Hndl";"Hndl";}"VCIKANAL";"VCIKanal1";
       LangDesc{"VCI-Kanal";"\"\"";}}
      InputParam{"DlgHndl";
       LangName{"DlgHndl";"DlgHndl";}"DialogTyp";"DIALOG_LOKAL";
       LangDesc{"";"\"\"";}}
      InputParam{"Zeile";
       LangName{"Zeile";"Zeile";}"DialogLine";"CDialogZeile1";
       LangDesc{"Ausgabezeile";"\"\"";}}
      InputParam{"Codierung";
       LangName{"Codierung";"Codierung";}"StgCodierung";"";
       LangDesc{"Steuerger\xE4te Codierung";"\"\"";}}
      InputParam{"Version";
       LangName{"Version";"Version";}"VW_Result_Tel";"ID_Version";
       LangDesc{"";"\"\"";}}
      InputParam{"Subsystem";
       LangName{"Subsystem";"Subsystem";}"VW_Subsystem";"LIN_Subsystem";
       LangDesc{"LIN-Bus-Subsystem";"\"\"";}}}
     LocalVar{
      LocVarDef{"Kommentar1";
       LangName{"Kommentar1";"Kommentar1";}"Locvar";"TEXT";
       LangDesc{"";"";}
       LangText{"\"Codieren\"";"\"\xB1\xE0\xC2\xEB\"";"\"coding\"";}"Const";}
      LocVarDef{"KommentarCodeLenNOK";
       LangName{"KommentarCodeLenNOK";"KommentarCodeLenNOK";}"Locvar";"TEXT";
       LangDesc{"";"";}
       LangText{"\"Codierlaenge NOK\"";"\"\xB1\xE0\xC2\xEB\xB3\xA4\xB6\xC8\xB2\xBB\xBA\xCF\xB8\xF1\"";"\"Code length NOK\"";}"Const";}
      LocVarDef{"KommentarECUwoCoding";
       LangName{"KommentarECUwoCoding";"KommentarECUwoCoding";}"Locvar";"TEXT";
       LangDesc{"";"";}
       LangText{"\"SG ohne Codierung\"";"\"\xBF\xD8\xD6\xC6\xC6\xF7\xCE\xDE\xB1\xE0\xC2\xEB\"";"\"ECU without coding\"";}"Const";}
      LocVarDef{"KommentarStatNOK";
       LangName{"KommentarStatNOK";"KommentarStatNOK";}"Locvar";"TEXT";
       LangDesc{"";"";}
       LangText{"\"keine kurze Codierung\"";"\"\xCE\xDE\xB6\xCC\xB1\xE0\xC2\xEB\"";"\"no short code\"";}"Const";}}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     MSLCode{"#pragma using VW2000_Read_Service_22_anyone_LID // err = VW2000_Read_Service_22_anyone_LID(err, Hndl, LID, &ID_String);\r\n#pragma using VW2000_Write_Service_2E_any_LID // err = VW2000_Write_Service_2E_any_LID(err, Hndl, LID, WriteData);\r\n#pragma using VW2000_Codieren // err = VW2000_Codieren(err, Hndl, DlgHndl, Zeile, Codierung, Version, Subsystem);\r\n\r\nstring\tCod_String, Wsc_String, telbuf, ServTel;\r\nint     Tmp_Int, CodeLen;\r\n\r\nvciExDtaRead (Hndl, &ServTel);\r\nif (0 > strstr (ServTel, \"\\x01\\x14\"))\t// Funktion unterstuetzt? \r\n{\r\n\terr = VW2000_Codieren(err, Hndl, DlgHndl, Zeile, Codierung, Version, Subsystem);\r\n}\r\nelse\r\n{\r\n\tif (Zeile > 0 )\r\n\t\t_dlgMultiSetLine (DlgHndl, Zeile, Kommentar1);\r\n\terr = VW2000_Read_Service_22_anyone_LID(err, Hndl, \"\\h0601\", &telbuf);\r\n\tif (err)\r\n\t{\r\n\t\t_vciStatVciError (Hndl);\r\n\t\t_statSetStrResult (ABBR,KommentarECUwoCoding, FSTGI);\r\n\t\tif (Zeile > 0 )\r\n\t\t\t_dlgMultiClearLine (DlgHndl, Zeile);\r\n\t\treturn(ABBR);\r\n\t}\r\n\tTmp_Int = GeraeteNr_VW * 8;\r\n\tTmp_Int = Tmp_Int + ((ImporteursNr_VW & 0x380) / 0x80);\r\n\tWsc_String = midstr(itobinstr(Tmp_Int),1,3);\r\n\tTmp_Int = ImporteursNr_VW * 2;\r\n\tif (WSC_VW > 0xffff)\r\n\t    Tmp_Int = Tmp_Int +1;\r\n\tWsc_String = Wsc_String + midstr(itobinstr(Tmp_Int),3,1);\r\n\tTmp_Int = WSC_VW & 0xffff;\r\n\tWsc_String = Wsc_String + midstr(itobinstr(Tmp_Int),2,2);\r\n\tCodeLen = telbuf [0];\r\n\tif ((CodeLen <= 4) && (strlen (Wsc_String) == 6))\r\n\t{\t\r\n\t\terr = VW2000_Write_Service_2E_any_LID(err, Hndl, \"\\hf198\", Wsc_String);\r\n\t\tif (err == OK)\r\n\t\t{\r\n\t\t\tCod_String = midstr (itobinstr (Codierung), 4 - CodeLen, CodeLen);\r\n\t\t\terr = VW2000_Write_Service_2E_any_LID(err, Hndl, \"\\h0600\", Cod_String);\r\n\t\t}\r\n\t}\r\n\telse\r\n\t{\t\r\n\t\t_statSetAsciiResult(NOK,sprintf(\"%s:%02d\", KommentarCodeLenNOK, CodeLen),FMWNOK);\r\n\t\tif (Zeile > 0 )\r\n\t\t\t_dlgMultiClearLine (DlgHndl, Zeile);\r\n\t\treturn NOK;\r\n\t}\r\n}\r\nif (!err)\r\n        _statSetFloatResult(err,Codierung,FOK);\r\nif (Zeile > 0 )\r\n\t_dlgMultiClearLine (DlgHndl, Zeile);\r\n\r\n";}
     NodeCategory{"";}
     Info{"Modul schreibt die Steuergeraete-Codierung.\r\nDabei wird der Baustein \"VW2000_Codieren\" verwendet.\r\nUnterstuetzt das STG den Befehl WriteByIdentifier (Blocktitel 0x2e) werden die RIDs  \r\n0601 gelesen, die L\xE4nge der Codierung geprueft, bei OK der  WSC mit F198 und die \r\nCodierung mit 0600 geschrieben. Damit ist ein fliessender Uebergang von 0x3B \r\nzu 0x2E moeglich.\r\n\r\n14.06.06, sz: erstellt";"";}
     Rights{"Write";"Read";}
     VersionInfo{
      CurVersion{1;0;"AC";}
      Version{0;1;"AC";"- in Arbeit -";"dsa-admin";"09.06.2006 15:12:18";}
      Version{0;2;"AC";"- in Arbeit -";"dsa-admin";"09.06.2006 15:58:09";}
      Version{0;3;"AC";"- in Arbeit -";"dsa-admin";"09.06.2006 16:03:56";}
      Version{0;4;"AC";"- in Arbeit -";"dsa-admin";"09.06.2006 16:04:59";}
      Version{0;5;"AC";"- in Arbeit -";"dsa-admin";"09.06.2006 16:05:24";}
      Version{0;6;"AC";"- in Arbeit -";"dsa-admin";"09.06.2006 16:41:27";}
      Version{0;7;"AC";"- in Arbeit -";"dsa-admin";"14.06.2006 11:35:18";}
      Version{0;8;"AC";"- in Arbeit -";"dsa-admin";"14.06.2006 12:00:19";}
      Version{0;9;"AC";"- in Arbeit -";"dsa-admin";"14.06.2006 15:40:54";}
      Version{0;10;"AC";"- in Arbeit -";"dsa-admin";"14.06.2006 15:46:13";}
      Version{1;0;"AC";" - initial check in -";"dsa-admin";"14.06.2006 15:47:19";}}}}}}
 FunctionDef{
  Name{"VW_spezifische_Bibliothek";}
  LangName{"VW_spezifische_Bibliothek";"VW_specific_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"Sammlung von Bausteinen zur Kommunikation mit Steuergeraeten von VW.";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;2;"ZPH18";}
   Version{1;0;"AC";"- freigegeben -";"vw-admin";"04.03.2003 11:56:19";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"07.08.2006 13:58:14";}
   Version{1;2;"ZPH18";"[ Baustein importiert (ersetzt) ]";"admin";"14.08.2007 15:07:01";}}
  FunctionDef{
   Name{"VW2000_Dienste";}
   LangName{"VW2000_Dienste";"VW2000_Dienste";}
   CvsVerHis{}
   Type{1;}
   Icon{0;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Sammlung von Bausteinen zur Kommunikation mit Steuerger\xE4ten von VW mit dem Protokoll K2000";"";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{1;3;"PAE";}
    Version{1;0;"AC";"- freigegeben -";"vw-admin";"17.02.2003 15:37:21";}
    Version{1;1;"AC";"- in Arbeit -";"vw-admin";"28.08.2003 17:40:34";}
    Version{1;2;"AC";"- in Arbeit -";"dsa-admin";"08.06.2004 08:55:47";}
    Version{1;3;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"25.07.2006 08:36:16";}}
   FunctionDef{
    Name{"VW2000_Dienste_2E";}
    LangName{"VW2000_Dienste_2E";"VW2000_Dienste_2E";}
    CvsVerHis{}
    Type{1;}
    Icon{0;}
    Properties{"Begin";}
    FormalParam{}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"";}
    NodeCategory{"";}
    Info{"SG-Identifikation schreiben mit Service 0x2e (WriteDataByIdentifier).\r\nDiese sollen in Zukunft 0x3B \"WriteDataByLocalIdentifer\" abloesen.";"Moduls write the ECU Id by using the KWP2000-Comand WriteDataByIdentifier (Requesttitel 0x22)\r\nand will replace 0x3B \"WriteDataByLocalIdentifer\".";}
    Rights{"Write";"Read";}
    VersionInfo{
     CurVersion{1;0;"PAE";}
     Version{0;1;"PAE";"- in Arbeit -";"vw-admin";"30.05.2005 15:53:21";}
     Version{0;2;"PAE";"- in Arbeit -";"vw-admin";"31.05.2005 11:15:52";}
     Version{1;0;"PAE";" Freigabe ";"vw-admin";"03.06.2005 16:04:15";}}
    FunctionDef{
     Name{"VW2000_Coding_Long_kompatible";}
     LangName{"VW2000_Codieren_Lang_kompatibel";"VW2000_Coding_Long_kompatible";}
     CvsVerHis{}
     Type{1;}
     Icon{1;}
     Properties{"Begin";}
     FormalParam{
      InputParam{"Hndl";
       LangName{"Hndl";"Hndl";}"VCIKANAL";"VCIKanal1";
       LangDesc{"VCI-Kanal";"\"\"";}}
      InputParam{"DlgHndl";
       LangName{"DlgHndl";"DlgHndl";}"DialogTyp";"DIALOG_LOKAL";
       LangDesc{"";"\"\"";}}
      InputParam{"Zeile";
       LangName{"Zeile";"Zeile";}"DialogLine";"CDialogZeile1";
       LangDesc{"Ausgabezeile";"\"\"";}}
      InputParam{"Codierung";
       LangName{"Codierung";"Codierung";}"STRING";"DLangCodierung";
       LangDesc{"Steuerger\xE4te Codierung";"\"\"";}}
      InputParam{"Version";
       LangName{"Version";"Version";}"VW_Result_Tel";"ID_Version";
       LangDesc{"";"\"\"";}}
      InputParam{"Subsystem";
       LangName{"Subsystem";"Subsystem";}"VW_Subsystem";"LIN_Subsystem";
       LangDesc{"LIN-Bus-Subsystem";"\"\"";}}}
     LocalVar{
      LocVarDef{"Kommentar1";
       LangName{"Kommentar1";"Kommentar1";}"Locvar";"TEXT";
       LangDesc{"";"";}
       LangText{"\"Codierung\"";"\"\xB1\xE0\xC2\xEB\"";"\"coding\"";}"Const";}
      LocVarDef{"KommentarCodeLenNOK";
       LangName{"KommentarCodeLenNOK";"KommentarCodeLenNOK";}"Locvar";"TEXT";
       LangDesc{"";"";}
       LangText{"\"Codierlaenge NOK\"";"\"\xB1\xE0\xC2\xEB\xB3\xA4\xB6\xC8\xB2\xBB\xBA\xCF\xB8\xF1\"";"\"Code length NOK\"";}"Const";}
      LocVarDef{"KommentarECUwoCoding";
       LangName{"KommentarECUwoCoding";"KommentarECUwoCoding";}"Locvar";"TEXT";
       LangDesc{"";"";}
       LangText{"\"SG ohne Codierung\"";"\"\xBF\xD8\xD6\xC6\xC6\xF7\xCE\xDE\xB1\xE0\xC2\xEB\"";"\"ECU without coding\"";}"Const";}
      LocVarDef{"KommentarStatNOK";
       LangName{"KommentarStatNOK";"KommentarStatNOK";}"Locvar";"TEXT";
       LangDesc{"";"";}
       LangText{"\"keine lange Codierung\"";"\"\xCE\xDE\xB3\xA4\xB1\xE0\xC2\xEB\"";"\"no long code\"";}"Const";}}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     MSLCode{"#pragma using VW2000_Read_Service_22_anyone_LID // err = VW2000_Read_Service_22_anyone_LID(err, Hndl, LID, &ID_String);\r\n#pragma using VW2000_Write_Service_2E_any_LID // err = VW2000_Write_Service_2E_any_LID(err, Hndl, LID, WriteData);\r\n#pragma using VW2000_Codieren_Lang // err = VW2000_Codieren_Lang(err, Hndl, DlgHndl, Zeile, Codierung, Version, Subsystem);\r\n\r\nstring\tCod_String, Wsc_String, telbuf, ServTel;\r\nint     Tmp_Int, CodeLen;\r\n\r\nvciExDtaRead (Hndl, &ServTel);\r\nif (0 > strstr (ServTel, \"\\x01\\x14\"))\t// Funktion unterstuetzt? \r\n{\r\n\terr = VW2000_Codieren_Lang(err, Hndl, DlgHndl, Zeile, Codierung, Version, Subsystem);\r\n}\r\nelse\r\n{\r\n\tif (Zeile > 0 )\r\n\t\t_dlgMultiSetLine (DlgHndl, Zeile, Kommentar1);\r\n\terr = VW2000_Read_Service_22_anyone_LID(err, Hndl, \"\\h0601\", &telbuf);\r\n\tif (err)\r\n\t{\r\n\t\t_statSetStrResult (ABBR,KommentarECUwoCoding, FSTGI);\r\n\t\tif (Zeile > 0 )\r\n\t\t\t_dlgMultiClearLine (DlgHndl, Zeile);\r\n\t\treturn(ABBR);\r\n\t}\r\n\tTmp_Int = GeraeteNr_VW * 8;\r\n\tTmp_Int = Tmp_Int + ((ImporteursNr_VW & 0x380) / 0x80);\r\n\tWsc_String = midstr(itobinstr(Tmp_Int),1,3);\r\n\tTmp_Int = ImporteursNr_VW * 2;\r\n\tif (WSC_VW > 0xffff)\r\n\t\tTmp_Int = Tmp_Int +1;\r\n\tWsc_String = Wsc_String + midstr(itobinstr(Tmp_Int),3,1);\r\n\tTmp_Int = WSC_VW & 0xffff;\r\n\tWsc_String = Wsc_String + midstr(itobinstr(Tmp_Int),2,2);\r\n\tCodeLen = telbuf [0];\r\n\tif ((CodeLen == strlen (Codierung)) && (strlen (Wsc_String) == 6))\r\n\t{\t\r\n\t\terr = VW2000_Write_Service_2E_any_LID(err, Hndl, \"\\hf198\", Wsc_String);\r\n\t\tif (err == OK)\r\n\t\t{\r\n\t\t\terr = VW2000_Write_Service_2E_any_LID(err, Hndl, \"\\h0600\", Codierung);\r\n\t\t}\r\n\t}\r\n\telse\r\n\t{\t\r\n\t\t_statSetAsciiResult(NOK,sprintf(\"%s:%02d\", KommentarCodeLenNOK, CodeLen),FMWNOK);\r\n\t\tif (Zeile > 0 )\r\n\t\t\t_dlgMultiClearLine (DlgHndl, Zeile);\r\n\t\treturn NOK;\r\n\t}\r\n}\r\nif (!err)\r\n        _statSetStrResult(err,Codierung,FOK);\r\nif (Zeile > 0 )\r\n\t_dlgMultiClearLine (DlgHndl, Zeile);\r\n\r\n\r\n";}
     NodeCategory{"";}
     Info{"Modul schreibt die \"lange\" Steuergeraete-Codierung.\r\nDabei wird der Baustein \"VW2000_Codieren_Lang\" verwendet.\r\nUnterstuetzt das STG den Befehl WriteByIdentifier (Blocktitel 0x2e) werden die RIDs  \r\n0601 gelesen, die L\xE4nge der Codierung geprueft, bei OK der  WSC mit F198 und die \r\nCodierung mit 0600 geschrieben. Damit ist ein fliessender Uebergang von 0x3B \r\nzu 0x2E moeglich.\r\n\r\n14.06.06, sz: erstellt";"";}
     Rights{"Write";"Read";}
     VersionInfo{
      CurVersion{1;0;"AC";}
      Version{0;1;"AC";"- in Arbeit -";"dsa-admin";"09.06.2006 15:20:27";}
      Version{0;2;"AC";"- in Arbeit -";"dsa-admin";"09.06.2006 16:03:41";}
      Version{0;3;"AC";"- in Arbeit -";"dsa-admin";"09.06.2006 16:05:44";}
      Version{0;4;"AC";"- in Arbeit -";"dsa-admin";"09.06.2006 16:05:55";}
      Version{0;5;"AC";"- in Arbeit -";"dsa-admin";"09.06.2006 16:43:23";}
      Version{0;6;"AC";"- in Arbeit -";"dsa-admin";"14.06.2006 11:35:06";}
      Version{0;7;"AC";"- in Arbeit -";"dsa-admin";"14.06.2006 12:01:23";}
      Version{0;8;"AC";"- in Arbeit -";"dsa-admin";"14.06.2006 15:41:13";}
      Version{0;9;"AC";"- in Arbeit -";"dsa-admin";"14.06.2006 15:46:47";}
      Version{1;0;"AC";" - initial check in -";"dsa-admin";"14.06.2006 15:47:25";}}}}}}
 FunctionDef{
  Name{"DP_Bibliothek";}
  LangName{"DP_Bibliothek";"DP_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";"nok";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"Schablone zur Strukturierung von Sequenzen";"Pattern for the structuring of seqences.";}
  Rights{"Write";"Hidden";}
  VersionInfo{
   CurVersion{0;1;"nbmr";}
   Version{0;1;"nbmr";"- in Arbeit -";"admin";"05.05.2010 12:28:02";}}
  FunctionDef{
   Name{"DP_aTeilpruefung";}
   LangName{"DP_aTeilpruefung";"DP_IDT_Service_CP11A_Roller";}
   CvsVerHis{}
   Type{1;}
   Icon{0;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";"nok";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Schablone zur Strukturierung von Sequenzen";"Pattern for the structuring of seqences.";}
   Rights{"Read";"Read";}
   VersionInfo{}
   FunctionDef{
    Name{"Pruefschrittvorlage";}
    LangName{"Pruefschrittvorlage";"Template";}
    CvsVerHis{}
    Type{1;}
    Icon{2;}
    Properties{"Begin";}
    FormalParam{}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";"nok";}}
    Extra{"teststep";}
    MSLCode{"";}
    NodeCategory{"";}
    Info{"";"";}
    Rights{"Write";"Read";}
    VersionInfo{}}}}
 FunctionDef{
  Name{"VW_spezifische_Bibliothek";}
  LangName{"VW_spezifische_Bibliothek";"VW_specific_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"Sammlung von Bausteinen zur Kommunikation mit Steuergeraeten von VW.";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;2;"ZPH18";}
   Version{1;0;"AC";"- freigegeben -";"vw-admin";"04.03.2003 11:56:19";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"07.08.2006 13:58:14";}
   Version{1;2;"ZPH18";"[ Baustein importiert (ersetzt) ]";"admin";"14.08.2007 15:07:01";}}
  FunctionDef{
   Name{"VW_Codefileauswahl";}
   LangName{"VW_Codefileauswahl";"VW_Codefileauswahl";}
   CvsVerHis{}
   Type{1;}
   Icon{0;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Platzhalter f\xFCr Pr\xFCfschritte";"";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{0;1;"PAE";}
    Version{0;1;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"24.07.2006 17:06:13";}}
   FunctionDef{
    Name{"CodefileLangeAnpassung_KWP2000";}
    LangName{"CodefileLangeAnpassung_KWP2000";"CodefileLangeAnpassung_KWP2000";}
    CvsVerHis{}
    Type{1;}
    Icon{0;}
    Properties{"Begin";}
    FormalParam{
     InputParam{"DialogHndl";
      LangName{"DialogHndl";"DialogHndl";}"DialogTyp";"DIALOG_LOKAL";
      LangDesc{"";"\"\"";}}
     InputParam{"Zeile";
      LangName{"Zeile";"Zeile";}"DialogLine";"CDialogZeile1";
      LangDesc{"Ausgabezeile";"\"\"";}}
     InputParam{"Hndl";
      LangName{"Hndl";"Hndl";}"VCIKANAL";"VCIKanal1";
      LangDesc{"VCI-Kanal";"\"\"";}}
     InputParam{"Anpassung_String";
      LangName{"Anpassung_String";"Anpassung_String";}"Codefile_Result_Str";"Dummy_Anpassung_String";
      LangDesc{"zu programmierender String";"\"\"";}}}
    LocalVar{
     LocVarDef{"KommentarAnpassung";
      LangName{"KommentarAnpassung";"KommentarAnpassung";}"Locvar";"TEXT";
      LangDesc{"";"";}
      LangText{"\"Anpassung\"";"\"Anpassung\"";"\"adaption\"";}"Const";}
     LocVarDef{"KommentarFehler";
      LangName{"KommentarFehler";"KommentarFehler";}"Locvar";"TEXT";
      LangDesc{"";"";}
      LangText{"\"Fehler\"";"\"Fehler\"";"\"error\"";}"Const";}}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"#pragma using VW2000_LangeAnpassung_Komplett // err = VW2000_LangeAnpassung_Komplett(err, Hndl, DlgHndl, Kanal, Anpassung, Text, MesswerteAuswert, &Rueckgabewert, &RecvTel);\r\n#pragma using VW2000_Anpassung_Komplett // err = VW2000_Anpassung_Komplett(err, Hndl, DlgHndl, Kanal, Anpassung, Text, &Rueckgabewert, &RecvTel);\r\n\r\nint\tAnzahl = 0;\r\nstring\tText;\r\nint\tKanal;\r\nint\tAnpassung;\r\nstring\tStatString = \"Anpassung\" + \" \";\r\nint\tRueckgabewert;\r\nstring\tRecvTel;\r\nint\tPos = 0;\r\nint\tAnpassLen = 0;\r\nint     MesswerteAuswert = 0;\r\nstring\tLangeAnpassung;\r\n\r\nif (strlen(Anpassung_String) > 2)\r\n\tAnzahl = Anpassung_String[0]*256 + Anpassung_String[1];\r\n#ifdef DEBUGANPASSUNG\r\nerrDebug (0, \"Anzahl Anpassungen: \",Anzahl);\r\nerrDebug (0, \"Anzahl Anpassungen: \",Anpassung_String);\r\n#endif\r\nif (Anzahl > 0)\r\n{\r\n\terr = NOK;\r\n\twhile (Anzahl > 0) \r\n\t\t{\r\n\t\tKanal = Anpassung_String[Pos+2] * 256 + Anpassung_String[Pos+3];\r\n\t\tAnpassung = Anpassung_String[Pos+4] * 256 + Anpassung_String[Pos+5];\r\n\t\tText = \"Anpassung\" + \" \" + sprintf(\"%d\",Kanal) ;\r\n#ifdef DEBUGANPASSUNG\r\nerrDebug (0, \"Kanal: \", Kanal, \", Anpassung: \", Anpassung);\r\n#endif\r\n\t\terr = VW2000_Anpassung_Komplett(err, Hndl, DialogHndl, Kanal, Anpassung, Text, &Rueckgabewert, &RecvTel);\r\n\t\tif (err != OK)\r\n\t\t\t{\r\n\t\t\terr = NOK;\r\n\t\t\tStatString = \"Fehler\" + \" \" + \"Anpassung\" + \" \" + sprintf(\"%d=%d\",Kanal,Anpassung);\r\n\t\t\tbreak;\r\n\t\t\t}\r\n\t\telse StatString = StatString + sprintf(\"%d=%d\",Kanal,Anpassung) + \";\";\r\n\t\tPos = Pos +4;\r\n\t\tAnzahl = Anzahl -1;\r\n\t\tif (Anpassung_String[Pos+2] * 256 + Anpassung_String[Pos+3] <= 0)\r\n\t\t\tbreak;\r\n\t\t}\r\n}\r\nelse \r\n{\r\n\tAnzahl = binstrtoi(midstr(Anpassung_String,0,4));\r\n\tAnpassung_String = midstr(Anpassung_String,4,-1);\r\n#ifdef DEBUGANPASSUNG\r\nerrDebug (0, \"Anzahl Anpassungen: \",Anzahl);\r\n#endif\r\n\terr = NOK;\r\n\twhile (Anzahl > 0)\r\n\t{\r\n\t\tKanal = binstrtoi(midstr(Anpassung_String,0,4));\r\n\t\tAnpassung_String = midstr(Anpassung_String,4,-1);\r\n\t\tText = \"Anpassung\" + \" \" + sprintf(\"%d\",Kanal) ;\r\n\t\tAnpassLen = binstrtoi(midstr(Anpassung_String,0,4));\r\n\t\tAnpassung_String = midstr(Anpassung_String,4,-1);\r\n\t\tif (AnpassLen <= 2)\r\n\t\t{\r\n\t\t\tAnpassung = binstrtoi(midstr(Anpassung_String,0,AnpassLen));\r\n\t\t\tAnpassung_String = midstr(Anpassung_String,AnpassLen,-1);\r\n#ifdef DEBUGANPASSUNG\r\nerrDebug (0, \"Kanal: \", Kanal, \", Anpassung: \", Anpassung);\r\n#endif\t\t\t\r\n\t\t\terr = VW2000_Anpassung_Komplett(err, Hndl, DialogHndl, Kanal, Anpassung, Text, &Rueckgabewert, &RecvTel);\r\n\t\t}\r\n\t\telse if (AnpassLen > 2)\r\n\t\t{\r\n\t\t\tLangeAnpassung = midstr(Anpassung_String,0,AnpassLen);\r\n\t\t\tAnpassung_String = midstr(Anpassung_String,AnpassLen,-1);\r\n#ifdef DEBUGANPASSUNG\r\nerrDebug (0, \"Kanal: \", Kanal, \", lange Anpassung: \", hexstr (LangeAnpassung));\r\n#endif\t\t\t\r\n\t\t\terr = VW2000_LangeAnpassung_Komplett(err, Hndl, DialogHndl, Kanal, LangeAnpassung, Text, MesswerteAuswert, &Rueckgabewert, &RecvTel);\r\n\t\t}\r\n\t\tif (err != OK)\r\n\t\t{\r\n\t\t\terr = NOK;\r\n\t\t\tStatString = \"Fehler\" + \" \" + \"Anpassung\" + \" \" + sprintf(\"%d\",Kanal);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\telse StatString = StatString + sprintf(\"%d\",Kanal) + \";\";\r\n\t\tAnzahl = Anzahl -1;\r\n\t}\r\n}\r\n_statSetAsciiResult (err, StatString, FOK);";}
    NodeCategory{"";}
    Info{"Dieser Baustein schreibt die Anpassungsdaten aus dem Parameter \"Anpassung_String\" in ein \r\nSteuergeraet mit VW2000 Protokoll.\r\n\r\nIn \"Anpassung_String\" werden die Anpassungsdaten aus dem Codefile / ZDC uebergeben. \r\nEs werden \"normale\" Anpassungen (1 Byte Kanal, max. 2 Byte Wert) und / oder \"lange\" Anpassungen\r\n(1 Byte Kanal, max. 80 Byte Wert ) geschrieben.\r\n\r\nWegen der langen Anpassung wurde das Uebergabeformat von \"Anpassung_String\" erweitert:\r\n4 Byte: Anzahl Anpassungen; 4 Byte: 1. Anpassungs-Kanal; 4 Byte: 1. Laenge n der einzelnen Anpassung; \r\nn Byte: 1. Anpassungswert; 4 Byte: 2. Anpassungs-Kanal; 4 Byte: 2. Laenge m der einzelnen Anpassung; \r\nm Byte: 2. Anpassungswert; ...\r\n\r\nDas \"alte\" Format kann nach wie vor Verarbeitet werden.\r\n\r\nDie Bewertung dieses Bausteines ist OK, wenn das Schreiben der Daten in Ordnung war. \r\nDie Bewertung ist NOK, bei Datenanzahl = 0 oder wenn das Schreiben eines Kanals NOK war.\r\n\r\nIn die Statistik wird ein Statustext geschrieben.\r\n\r\n02.01.2006, sz: Erstellt";"";}
    Rights{"Write";"Read";}
    VersionInfo{
     CurVersion{0;11;"cp32";}
     Version{0;1;"AC";"- in Arbeit -";"vw-admin";"02.01.2006 11:46:59";}
     Version{0;2;"AC";"- in Arbeit -";"dsa-admin";"02.01.2006 13:44:48";}
     Version{0;3;"AC";"- in Arbeit -";"dsa-admin";"02.01.2006 13:46:01";}
     Version{0;4;"AC";"- in Arbeit -";"dsa-admin";"02.01.2006 13:46:22";}
     Version{0;5;"AC";"- in Arbeit -";"dsa-admin";"02.01.2006 13:47:23";}
     Version{0;6;"AC";"- in Arbeit -";"dsa-admin";"02.01.2006 13:56:23";}
     Version{0;7;"AC";"- in Arbeit -";"dsa-admin";"02.01.2006 13:58:53";}
     Version{0;8;"AC";"- in Arbeit -";"dsa-admin";"02.01.2006 14:18:02";}
     Version{0;9;"AC";"- in Arbeit -";"dsa-admin";"02.01.2006 14:51:03";}
     Version{0;10;"nbmr";"[ Baustein importiert (neu) ]";"dsa";"03.12.2008 12:32:02";}
     Version{0;11;"cp32";"- in Arbeit -";"admin";"02.12.2011 15:48:41";}}}}}
 FunctionDef{
  Name{"VW_spezifische_Bibliothek";}
  LangName{"VW_spezifische_Bibliothek";"VW_specific_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"Sammlung von Bausteinen zur Kommunikation mit Steuergeraeten von VW.";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;2;"ZPH18";}
   Version{1;0;"AC";"- freigegeben -";"vw-admin";"04.03.2003 11:56:19";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"07.08.2006 13:58:14";}
   Version{1;2;"ZPH18";"[ Baustein importiert (ersetzt) ]";"admin";"14.08.2007 15:07:01";}}
  FunctionDef{
   Name{"VW_Codefileauswahl";}
   LangName{"VW_Codefileauswahl";"VW_Codefileauswahl";}
   CvsVerHis{}
   Type{1;}
   Icon{0;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Platzhalter f\xFCr Pr\xFCfschritte";"";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{0;1;"PAE";}
    Version{0;1;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"24.07.2006 17:06:13";}}
   FunctionDef{
    Name{"Pfau_9_2_0";}
    LangName{"Pfau_9_2_0";"";}
    CvsVerHis{}
    Type{1;}
    Icon{0;}
    Properties{"Begin";}
    FormalParam{}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"";}
    NodeCategory{"";}
    Info{"";"";}
    Rights{"Write";"Read";}
    VersionInfo{
     CurVersion{0;1;"PAE";}
     Version{0;1;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"24.07.2006 17:06:13";}}
    FunctionDef{
     Name{"CodefileAnpassung_KWP2000";}
     LangName{"CodefileAnpassung_KWP2000";"CodefileAdaptation_KWP2000";}
     CvsVerHis{}
     Type{1;}
     Icon{0;}
     Properties{"Begin";}
     FormalParam{
      InputParam{"DialogHndl";
       LangName{"DialogHndl";"DialogHndl";}"DialogTyp";"DIALOG_LOKAL";
       LangDesc{"Dialog handle";"Dialog handle";}}
      InputParam{"Zeile";
       LangName{"Zeile";"Zeile";}"DialogLine";"CDialogZeile1";
       LangDesc{"Ausgabezeile";"Output line";}}
      InputParam{"Hndl";
       LangName{"Hndl";"Hndl";}"VCIKANAL";"VCIKanal1";
       LangDesc{"VCI-Kanal";"VCI channel";}}
      InputParam{"Anpassung_String";
       LangName{"Anpassung_String";"Anpassung_String";}"Codefile_Result_Str";"Dummy_Anpassung_String";
       LangDesc{"zu programmierender String";"Programming string";}}}
     LocalVar{
      LocVarDef{"KommentarAnpassung";
       LangName{"KommentarAnpassung";"KommentarAnpassung";}"Locvar";"TEXT";
       LangDesc{"";"";}
       LangText{"\"Anpassung\"";"\"\xCA\xCA\xC5\xE4\xC6\xF7\"";"\"adaption\"";}"Const";}
      LocVarDef{"KommentarFehler";
       LangName{"KommentarFehler";"";}"Locvar";"TEXT";
       LangDesc{"";"";}
       LangText{"\"Fehler\"";"\"\xB4\xED\xCE\xF3\"";"\"error\"";}"Const";}}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     MSLCode{"#pragma using VW2000_Anpassung_Komplett // err = VW2000_Anpassung_Komplett(err, Hndl, DlgHndl, Kanal, Anpassung, Text, &Rueckgabewert, &RecvTel);\r\n\r\nint\tAnzahl = 0;\r\nstring\tText;\r\nint\tKanal;\r\nint\tAnpassung;\r\nstring\tStatString = KommentarAnpassung + \" \";\r\nint\tRueckgabewert;\r\nstring\tRecvTel;\r\nint\tPos;\r\n\r\nif (strlen(Anpassung_String) > 2)\r\n\tAnzahl = Anpassung_String[0]*256 + Anpassung_String[1];\r\nerrDebug ( 0, \"AnpassungString :  ( '\", hexstr(Anpassung_String), \"' )\"  );\r\nerrDebug ( 0, \"AnpassungString [0] :  ( '\", hexstr(Anpassung_String[0]), \"' )\"  );\r\nerrDebug ( 0, \"AnpassungString [1] :  ( '\", hexstr(Anpassung_String[1]), \"' )\"  );\r\nerrDebug ( 0, \"String Length :  ( '\", strlen(Anpassung_String), \"' )\"  );\r\nerrDebug ( 0, \"Anzahl :  ( '\", Anzahl, \"' )\"  );\r\n\r\nPos = 0;\r\nerr = NOK;\r\nwhile (Anzahl > 0) \r\n\t{\r\n\tKanal = Anpassung_String[Pos+2] * 256 + Anpassung_String[Pos+3];\r\n      errDebug ( 0, \"Kanal :  ( '\", Kanal, \"' )\"  );\r\n\tAnpassung = Anpassung_String[Pos+4] * 256 + Anpassung_String[Pos+5];\r\n\terrDebug ( 0, \"Anpassung :  ( '\", Anpassung, \"' )\"  );\r\n      Text = KommentarAnpassung + \" \" + sprintf(\"%d\",Kanal) ;\r\n\terrDebug ( 0, \"Text :  ( '\", Text, \"' )\"  );\r\n      err = VW2000_Anpassung_Komplett(err, Hndl, DialogHndl, Kanal, Anpassung, Text, &Rueckgabewert, &RecvTel);\r\n\terrDebug ( 0, \"RecvTel :  ( '\", RecvTel, \"' )\"  );\r\n      if (err != OK)\r\n\t\t{\r\n\t\terr = NOK;\r\n\t\tStatString = KommentarFehler + \" \" + KommentarAnpassung + \" \" + sprintf(\"%d=%d\",Kanal,Anpassung);\r\n\t\tbreak;\r\n\t\t}\r\n\telse StatString = StatString + sprintf(\"%d=%d\",Kanal,Anpassung) + \";\";\r\n\tPos = Pos +4;\r\n\tAnzahl = Anzahl -1;\r\n\tif (Anpassung_String[Pos+2] * 256 + Anpassung_String[Pos+3] <= 0)\r\n\t\tbreak;\r\n\t}\r\n\r\n_statSetAsciiResult (err, StatString, FOK);\r\n";}
     NodeCategory{"";}
     Info{"Dieser Baustein schreibt die Anpassungsdaten aus dem Parameter \"Anpassung_String\" in ein Steuerger\xE4t mit KWP1281.\r\n\r\nIn \"Anpassung_String\" werden die Anpassungsdaten aus dem Codefile \xFCbergeben. Die Kan\xE4le sind hierbei unbedeudent.\r\n\r\nDie Bewertung dieses Bausteines ist OK, wenn das Schreiben der Daten in Ordnung war. \r\nDie Bewertung ist NOK, bei Datenanzahl = 0 oder wenn das Schreiben eines Kanals NOK war.\r\n\r\nIn die Statistik wird ein Statustext geschrieben.";"";}
     Rights{"Write";"Read";}
     VersionInfo{
      CurVersion{0;8;"CP3";}
      Version{0;1;"MOS";"- in Arbeit -";"vw-admin";"09.04.2003 15:13:51";}
      Version{0;2;"MOS";"- in Arbeit -";"vw-admin";"09.04.2003 15:14:27";}
      Version{0;3;"MOS";"- in Arbeit -";"vw-admin";"09.04.2003 15:17:51";}
      Version{0;4;"MOS";"- in Arbeit -";"vw-admin";"09.04.2003 15:18:35";}
      Version{0;5;"MOS";"- in Arbeit -";"mosel-admin";"23.04.2003 11:15:03";}
      Version{0;6;"CP3";"- in Arbeit -";"zf";"06.05.2010 12:34:45";}
      Version{0;7;"CP3";"- in Arbeit -";"zf";"06.05.2010 12:55:58";}
      Version{0;8;"CP3";"- in Arbeit -";"zf";"06.05.2010 13:18:33";}}}}}}
 FunctionDef{
  Name{"VW_spezifische_Bibliothek";}
  LangName{"VW_spezifische_Bibliothek";"VW_specific_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"Sammlung von Bausteinen zur Kommunikation mit Steuergeraeten von VW.";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;2;"ZPH18";}
   Version{1;0;"AC";"- freigegeben -";"vw-admin";"04.03.2003 11:56:19";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"07.08.2006 13:58:14";}
   Version{1;2;"ZPH18";"[ Baustein importiert (ersetzt) ]";"admin";"14.08.2007 15:07:01";}}
  FunctionDef{
   Name{"VW2000_Dienste";}
   LangName{"VW2000_Dienste";"VW2000_Dienste";}
   CvsVerHis{}
   Type{1;}
   Icon{0;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Sammlung von Bausteinen zur Kommunikation mit Steuerger\xE4ten von VW mit dem Protokoll K2000";"";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{1;3;"PAE";}
    Version{1;0;"AC";"- freigegeben -";"vw-admin";"17.02.2003 15:37:21";}
    Version{1;1;"AC";"- in Arbeit -";"vw-admin";"28.08.2003 17:40:34";}
    Version{1;2;"AC";"- in Arbeit -";"dsa-admin";"08.06.2004 08:55:47";}
    Version{1;3;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"25.07.2006 08:36:16";}}
   FunctionDef{
    Name{"VW2000_FSP";}
    LangName{"VW2000_FSP";"VW2000_DTC";}
    CvsVerHis{}
    Type{1;}
    Icon{0;}
    Properties{"Begin";}
    FormalParam{}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"";}
    NodeCategory{"";}
    Info{"";"";}
    Rights{"Write";"Read";}
    VersionInfo{}
    FunctionDef{
     Name{"VW2000_FSP_Lesen_Anzahl";}
     LangName{"VW2000_FSP_Lesen_Anzahl";"VW2000_DTC_Read_Quantity";}
     CvsVerHis{}
     Type{1;}
     Icon{1;}
     Properties{"Begin";}
     FormalParam{
      InputParam{"Hndl";
       LangName{"Hndl";"Hndl";}"VCIKANAL";"VCIKanal1";
       LangDesc{"VCI-Kanal";"VCI channel";}}
      OutputParam{"Anzahl_Fehler";
       LangName{"Anzahl_Fehler";"Anzahl_Fehler";}"INT";"DInt";
       LangDesc{"Anzahl der vorhanden Fehler";"";}}
      OutputParam{"FSP_String";
       LangName{"FSP_String";"FSP_String";}"VW_Result_Tel";"VW_FSP_Result";
       LangDesc{"Fehlerspeicher-Telegramm";"";}}
      OutputParam{"FSP_Lesen_Code";
       LangName{"FSP_Lesen_Code";"FSP_Lesen_Code";}"VW_Codes";"VW_Codes_FSP_Lesen";
       LangDesc{"";"";}}}
     LocalVar{}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     MSLCode{"int\ti;\r\nstring\terrTel;\r\nstring ServTel;\r\n\r\nvciExDtaRead (Hndl, &ServTel);\r\n\r\n*FSP_Lesen_Code = 2;\r\n// \"altes\" Format \r\nif (0 > strstr (ServTel, \"\\x01\\x18\"))\r\n\t{\r\n\terr = _vciDataExchange (Hndl, 0x18, 0x58, \"\\x02\\xff\\x00\", FSP_String);\r\n\tif (err != OK)\t\t// abwaertskompatibel! wenn keine Info im Handel\r\n\t\t{\r\n\t\terr = _vciDataExchange (Hndl, 0x18, 0x58, \"\\x00\\xff\\x00\", FSP_String);\r\n\t\t*FSP_Lesen_Code = 0;\r\n\t\t}\r\n\t}\r\nelse\t\t// SAE Hex-Format\r\n\t{\r\n\terr = _vciDataExchange (Hndl, 0x18, 0x58, \"\\x00\\xff\\x00\", FSP_String);\r\n\t*FSP_Lesen_Code = 0;\r\n\t}\r\nif (err)\r\n\t{\r\n\t_vciStatVciError (Hndl);\r\n\t_statSetStrResult (ABBR, *FSP_String, FSTGE);\r\n\t*FSP_Lesen_Code = -1;\r\n\t}\r\nelse\r\n\t{\r\n\t*Anzahl_Fehler = *FSP_String[0];\r\n        if (*Anzahl_Fehler > 0)\r\n                err = NOK;\r\n        _statSetFloatResult (err, *Anzahl_Fehler * 1.0, FMWNOK);\r\n\t}";}
     NodeCategory{"";}
     Info{"Dieses Modul lie\xDFt den Fehlerspeicher eines Steuerger\xE4tes.\r\nEs wertet zun\xE4chst die unterst\xFCtzten Funktionen aus.\r\nDabei wird der KWP2000-Befehl readDiagnosticInfomation ( Blocktitel 0x18)\r\nmit dem Parameter allGroups (0x02 0xff 0x00) verwendet.\r\nWenn Funktion 0x0118 unterst\xFCtzt wird, wird zum lesen der SAE-Codes in neueren STG mit Parameter 0x00 0xff 0x00 gelesen.\r\nWie und ob gelesen werden konnte wird in dem Parameter FSP_Lesen_Code zur\xFCckgegeben.\r\n\r\nDer gelesene Fehlerspeicherinhalt wird immer in der Variablen \"FSP-String\" zur weiteren\r\nBearbeitung abgespeichert.\r\n\r\nBewertet und in die Statistik geschrieben wird die Anzahl, der im Steuerger\xE4t vorhanden\r\nFehler. Eine Filterung wird hierbei nicht vorgenommen.\r\n\r\nDie Bewertung diese Pr\xFCfschrittes is \"OK\", wenn der Steuerger\xE4tebefehl erfolgreich \r\nausgef\xFChrt werden konnte und kein Fehler vorhandenen ist.\r\nDie Bewertung diese Pr\xFCfschrittes is \"NOK\", wenn der Steuerger\xE4tebefehl erfolgreich \r\nausgef\xFChrt werden konnte und mindestens ein Fehler vorhandenen ist.\r\nDie Bewertung diese Pr\xFCfschrittes is \"ABBR\", wenn der Steuerger\xE4tebefehl nicht\r\nerfolgreich ausgef\xFChrt werden konnte.\r\n";"";}
     Rights{"Write";"Read";}
     VersionInfo{
      CurVersion{2;0;"AC";}
      Version{1;0;"AC";"- freigegeben -";"vw-admin";"04.03.2003 13:37:09";}
      Version{1;1;"x";"- in Arbeit -";"vw-admin";"25.08.2004 13:43:32";}
      Version{1;2;"x";"- in Arbeit -";"vw-admin";"25.08.2004 13:43:47";}
      Version{1;3;"AC";"- in Arbeit -";"vw-admin";"26.08.2004 10:19:54";}
      Version{1;4;"AC";"- in Arbeit -";"vw-admin";"01.12.2004 12:12:33";}
      Version{1;5;"AC";"- in Arbeit -";"vw-admin";"02.12.2004 15:24:07";}
      Version{1;6;"AC";"- in Arbeit -";"vw-admin";"02.12.2004 15:30:13";}
      Version{2;0;"AC";" - freigegeben - ";"vw-admin";"02.12.2004 15:36:55";}}}}}}
 FunctionDef{
  Name{"VW_spezifische_Bibliothek";}
  LangName{"VW_spezifische_Bibliothek";"VW_specific_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"Sammlung von Bausteinen zur Kommunikation mit Steuergeraeten von VW.";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;2;"ZPH18";}
   Version{1;0;"AC";"- freigegeben -";"vw-admin";"04.03.2003 11:56:19";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"07.08.2006 13:58:14";}
   Version{1;2;"ZPH18";"[ Baustein importiert (ersetzt) ]";"admin";"14.08.2007 15:07:01";}}
  FunctionDef{
   Name{"VW2000_Dienste";}
   LangName{"VW2000_Dienste";"VW2000_Dienste";}
   CvsVerHis{}
   Type{1;}
   Icon{0;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Sammlung von Bausteinen zur Kommunikation mit Steuerger\xE4ten von VW mit dem Protokoll K2000";"";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{1;3;"PAE";}
    Version{1;0;"AC";"- freigegeben -";"vw-admin";"17.02.2003 15:37:21";}
    Version{1;1;"AC";"- in Arbeit -";"vw-admin";"28.08.2003 17:40:34";}
    Version{1;2;"AC";"- in Arbeit -";"dsa-admin";"08.06.2004 08:55:47";}
    Version{1;3;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"25.07.2006 08:36:16";}}
   FunctionDef{
    Name{"VW2000_FSP";}
    LangName{"VW2000_FSP";"VW2000_DTC";}
    CvsVerHis{}
    Type{1;}
    Icon{0;}
    Properties{"Begin";}
    FormalParam{}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"";}
    NodeCategory{"";}
    Info{"";"";}
    Rights{"Write";"Read";}
    VersionInfo{}
    FunctionDef{
     Name{"VW2000_FSP_Loeschen";}
     LangName{"VW2000_FSP_Loeschen";"VW2000_DTC_Clear";}
     CvsVerHis{}
     Type{1;}
     Icon{1;}
     Properties{"Begin";}
     FormalParam{
      InputParam{"Hndl";
       LangName{"Hndl";"Hndl";}"VCIKANAL";"VCIKanal1";
       LangDesc{"VCI-Kanal";"VCI channel";}}
      InputParam{"DlgHndl";
       LangName{"DlgHndl";"DlgHndl";}"DialogTyp";"DIALOG_LOKAL";
       LangDesc{"Dialog handle";"Dialog handle";}}
      InputParam{"Zeile";
       LangName{"Zeile";"Zeile";}"DialogLine";"CDialogZeile1";
       LangDesc{"Ausgabezeile";"Output line";}}
      InputParam{"AnzeigeZeit";
       LangName{"AnzeigeZeit";"AnzeigeZeit";}"Time";"CTime_1";
       LangDesc{"Anzeigezeit";"Display time";}}}
     LocalVar{
      LocVarDef{"Kommentar1";
       LangName{"Kommentar1";"";}"Locvar";"TEXT";
       LangDesc{"";"";}
       LangText{"\"FSP loeschen\"";"\"\xC9\xBE\xB3\xFD\xB9\xCA\xD5\xCF\xC2\xEB\"";"\"DTC delete\"";}"Const";}}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     MSLCode{"int\tAnzErr;\r\nint\ti;\r\nstring\terrTel;\r\nstring\ttelbuf;\r\nstring\tResult;\r\n\r\nif (AnzeigeZeit > 0 )\r\n\t_dlgMultiSetLine (DlgHndl, Zeile, Kommentar1);\r\n\r\nerr = _vciDataExchange (Hndl, 0x14, 0x54, \"\\xff\\x00\", &Result);\r\n\r\nif (err)\r\n\t_vciStatVciError (Hndl);\r\nif (err)\r\n\t_statSetStrResult(NOK,Result,FSTGI);\r\nelse\r\n\t_statSetResult (OK, FOK);\r\n\r\n\r\nif (AnzeigeZeit > 0 )\r\n\t{\r\n\t_dlgMultiTextRsltBmp (DlgHndl,1,Kommentar1,err);\r\n\t_dlgRecvTel (DlgHndl, AnzeigeZeit, &telbuf );\t\t\r\n\t_dlgMultiSetButtons(DlgHndl,3);\t\r\n\t_dlgMultiClearLine (DlgHndl, Zeile);\r\n\t}\r\n";}
     NodeCategory{"";}
     Info{"Dieses Modul l\xF6scht den Fehlerspeicher eines Steuerger\xE4tes.\r\nDabei wird der KWP2000-Befehl ClearDiagnosticInfomation ( Blocktitel 0x14)\r\nmit dem Parameter allGroups ( 0xff 0x00) verwendet.\r\n\r\nDie Bewertung diese Pr\xFCfschrittes ist \"OK\", wenn der Steuerger\xE4tebefehl erfolgreich \r\nausgef\xFChrt werden konnte, Die Bewertung des Pr\xFCfschrittes wird in die Statistik gesschrieben.";"";}
     Rights{"Write";"Read";}
     VersionInfo{
      CurVersion{1;2;"CP3";}
      Version{1;0;"AC";"- freigegeben -";"vw-admin";"24.03.2003 16:37:08";}
      Version{1;1;"SVW";"- in Arbeit -";"admin";"24.09.2003 12:50:46";}
      Version{1;2;"CP3";"- in Arbeit -";"admin";"24.08.2006 09:43:30";}}}}}}
 FunctionDef{
  Name{"VW_spezifische_Bibliothek";}
  LangName{"VW_spezifische_Bibliothek";"VW_specific_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"Sammlung von Bausteinen zur Kommunikation mit Steuergeraeten von VW.";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;2;"ZPH18";}
   Version{1;0;"AC";"- freigegeben -";"vw-admin";"04.03.2003 11:56:19";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"07.08.2006 13:58:14";}
   Version{1;2;"ZPH18";"[ Baustein importiert (ersetzt) ]";"admin";"14.08.2007 15:07:01";}}
  FunctionDef{
   Name{"VW2000_Dienste";}
   LangName{"VW2000_Dienste";"VW2000_Dienste";}
   CvsVerHis{}
   Type{1;}
   Icon{0;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Sammlung von Bausteinen zur Kommunikation mit Steuerger\xE4ten von VW mit dem Protokoll K2000";"";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{1;3;"PAE";}
    Version{1;0;"AC";"- freigegeben -";"vw-admin";"17.02.2003 15:37:21";}
    Version{1;1;"AC";"- in Arbeit -";"vw-admin";"28.08.2003 17:40:34";}
    Version{1;2;"AC";"- in Arbeit -";"dsa-admin";"08.06.2004 08:55:47";}
    Version{1;3;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"25.07.2006 08:36:16";}}
   FunctionDef{
    Name{"VW2000_STG_Verbindungsaufbau";}
    LangName{"VW2000_STG_Verbindungsaufbau";"VW2000_ECU_Connection";}
    CvsVerHis{}
    Type{1;}
    Icon{0;}
    Properties{"Begin";}
    FormalParam{}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"";}
    NodeCategory{"";}
    Info{"Platzhalter f\xFCr Pr\xFCfschritte";"";}
    Rights{"Write";"Read";}
    VersionInfo{}
    FunctionDef{
     Name{"VW2000_STG_Ende";}
     LangName{"VW2000_STG_Ende";"VW2000_STG_Ende";}
     CvsVerHis{}
     Type{1;}
     Icon{1;}
     Properties{"Begin";}
     FormalParam{
      OutputParam{"Hndl";
       LangName{"Hndl";"Hndl";}"VCIKANAL";"VCIKanal1";
       LangDesc{"VCI-Kanal";"";}}}
     LocalVar{}
     Condition{"ever";"ok";"";}
     Evaluation{"no";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     MSLCode{"string RecvTel;\r\n\r\nerr = _vciDataExchange (*Hndl, 0x82, 0xc2, \"\", &RecvTel);\r\nif (err)\r\n\t{\r\n\t_vciStatVciError (*Hndl);\r\n\treturn(err);\r\n\t}\r\nelse\r\n\t_statSetResult (err, FOK);\r\n\r\n_vciClose (Hndl);\r\n";}
     NodeCategory{"";}
     Info{"Mit diesem Modul wird die Kommunikation zu einem Steuerger\xE4t beendet. Dieser Befehl ist\r\nimmer nach dem letzten Befehl f\xFCr ein Steuerger\xE4t zu senden bzw. bevor die Z\xFCndung\r\nausgeschaltet wird. \r\n\r\nDie Bewertung des Pr\xFCfschrittes ist \"OK\", wenn die Verbindung erfolgreich beendet werden\r\nkonnte.\r\n\r\nIn die Statistik wird nur ein \"OK\" bzw. \"NOK\" in Abh\xE4nigkeit von der Berwertung geschrieben.\r\n\r\n";"";}
     Rights{"Write";"Read";}
     VersionInfo{
      CurVersion{1;1;"PAE";}
      Version{1;0;"AC";"- freigegeben -";"vw-admin";"27.02.2003 10:44:10";}
      Version{1;1;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"25.07.2006 08:36:16";}}}}}}
 FunctionDef{
  Name{"Werk_Spezifische_Bibliothek";}
  LangName{"Werk_Spezifische_Bibliothek";"Customer_specific_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"Import-Ablage\r\n";"";}
  Rights{"Write";"Read";}
  VersionInfo{}
  FunctionDef{
   Name{"Bibo_Mosel";}
   LangName{"Bibo_Mosel";"Library_Mosel";}
   CvsVerHis{}
   Type{1;}
   Icon{0;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Import-Ablage\r\n";"";}
   Rights{"Write";"Read";}
   VersionInfo{}
   FunctionDef{
    Name{"otherNeu";}
    LangName{"otherNeu";"otherNew";}
    CvsVerHis{}
    Type{1;}
    Icon{0;}
    Properties{"Begin";}
    FormalParam{}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"";}
    NodeCategory{"";}
    Info{"Strukturelement";"This branch of the library is used for temporary files from\r\nnew or imported library modules. It is a pure structuring\r\nlevel.";}
    Rights{"Write";"Read";}
    VersionInfo{}
    FunctionDef{
     Name{"Neu_309535";}
     LangName{"Neu_309535";"New_309535";}
     CvsVerHis{}
     Type{1;}
     Icon{0;}
     Properties{"Begin";}
     FormalParam{}
     LocalVar{}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     MSLCode{"";}
     NodeCategory{"";}
     Info{"Strukturelement";"structure element";}
     Rights{"Write";"Read";}
     VersionInfo{
      CurVersion{0;3;"CRE1";}
      Version{0;1;"CRE1";"- in Arbeit -";"admin";"16.09.2004 12:14:41";}
      Version{0;2;"CRE1";"- in Arbeit -";"admin";"02.11.2005 11:02:40";}
      Version{0;3;"CRE1";"- in Arbeit -";"admin";"02.11.2005 11:03:14";}}}}}}
 FunctionDef{
  Name{"DSA_Bibliothek";}
  LangName{"DSA_Bibliothek";"DSA_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;1;"AC";}
   Version{1;0;"AC";"- freigegeben -";"dsa-admin";"04.03.2003 11:44:35";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"admin";"03.07.2006 10:17:25";}}
  FunctionDef{
   Name{"StatistikElemente";}
   LangName{"StatistikElemente";"StatisticElements";}
   CvsVerHis{}
   Type{1;}
   Icon{1;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Sammlung von Bausteinen zur Statistikdatengenerierung";"Collection of components relating to the generation of\r\nstatistical data.\r\n\r\nIt only makes sense to execute test sequences if there is some way of storing the results.\r\nThat is why PRODIS-OFFICE has built-in functions to gather and generate result data.\r\nOn the other hand, not all modules supply results which are relevant to the test sequence.\r\nFor example, a module which scans a measurement from a control unit should generate result data,\r\nbut a module which simply increases a loop counter should not provide such data.\r\nIt is the job of the person creating the test sequence to determine which modules generate result data.\r\nThe following sub-chapter addresses further aspects of result data generation.\r\n\r\n\r\nSome special modules must be included in the test sequence if any result data are to be generated.\r\nResult data are also known as \"statistical data\", since such data are used to generate statistical\r\nevaluations regarding the number of OK and NOK tests, or regarding the measurements ascertained.\r\n\r\n\r\nIt is also necessary that the DTM function be active, and that a valid communication handle exists\r\nfor the communication between the test sequence and the DTM.\r\nDuring execution of the StatisticResult module, the result data record is transferred to the DTM\r\nfor transmission to the host computer.";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{0;4;"SVW";}
    Version{0;1;"SVW";"- in Arbeit -";"admin";"12.04.2004 19:57:30";}
    Version{0;2;"SVW";"- in Arbeit -";"admin";"12.04.2004 19:58:34";}
    Version{0;3;"SVW";"- in Arbeit -";"admin";"12.04.2004 20:03:39";}
    Version{0;4;"SVW";"- in Arbeit -";"admin";"12.04.2004 21:43:02";}}
   FunctionDef{
    Name{"StatSetAsciiResult_293306";}
    LangName{"StatSetAsciiResult_293306";"StatSetAsciiResult";}
    CvsVerHis{}
    Type{1;}
    Icon{1;}
    Properties{"Begin";}
    FormalParam{
     InputParam{"Error";
      LangName{"Error";"";}"ERROR";"";
      LangDesc{"Fehler fuer Statistikeintrag";"";}}
     InputParam{"StringWert";
      LangName{"StringWert";"";}"STRING";"DString";
      LangDesc{"";"";}}}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"if (Error == OK)\r\n  _statSetAsciiResult (Error, StringWert, FOK);\r\nelse\r\n  _statSetAsciiResult (Error, StringWert, FMWNOK);\r\n";}
    NodeCategory{"";}
    Info{"Baustein zum Schreiben von OK oder NOK in die Statistik. (S)";"";}
    Rights{"Write";"Read";}
    VersionInfo{
     CurVersion{0;2;"CRE1A";}
     Version{0;1;"PAE";"[ Baustein importiert (neu) ]";"dsa-admin";"24.07.2006 17:06:12";}
     Version{0;2;"CRE1A";"[ Baustein importiert (neu) ]";"admin";"21.01.2007 15:39:29";}}}}}
 FunctionDef{
  Name{"VW_spezifische_Bibliothek";}
  LangName{"VW_spezifische_Bibliothek";"VW_specific_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"Sammlung von Bausteinen zur Kommunikation mit Steuergeraeten von VW.";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;2;"ZPH18";}
   Version{1;0;"AC";"- freigegeben -";"vw-admin";"04.03.2003 11:56:19";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"07.08.2006 13:58:14";}
   Version{1;2;"ZPH18";"[ Baustein importiert (ersetzt) ]";"admin";"14.08.2007 15:07:01";}}
  FunctionDef{
   Name{"VW_Codefileauswahl";}
   LangName{"VW_Codefileauswahl";"VW_Codefileauswahl";}
   CvsVerHis{}
   Type{1;}
   Icon{0;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Platzhalter f\xFCr Pr\xFCfschritte";"";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{0;1;"PAE";}
    Version{0;1;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"24.07.2006 17:06:13";}}
   FunctionDef{
    Name{"Pfau_9_2_0";}
    LangName{"Pfau_9_2_0";"";}
    CvsVerHis{}
    Type{1;}
    Icon{0;}
    Properties{"Begin";}
    FormalParam{}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"";}
    NodeCategory{"";}
    Info{"";"";}
    Rights{"Write";"Read";}
    VersionInfo{
     CurVersion{0;1;"PAE";}
     Version{0;1;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"24.07.2006 17:06:13";}}
    FunctionDef{
     Name{"ZdcOpen_309552";}
     LangName{"ZdcOpen_309552";"ZdcOpen_309552";}
     CvsVerHis{}
     Type{1;}
     Icon{0;}
     Properties{"Begin";}
     FormalParam{
      OutputParam{"ZdcHndl";
       LangName{"ZdcHndl";"ZdcHndl";}"ZDC_HNDL";"DZdcHndl";
       LangDesc{"ZDC Handle";"ZDC Handle";}}
      InputParam{"XmlContainer";
       LangName{"XmlContainer";"XmlContainer";}"XMLFILE";"Dummy_Container_Name";
       LangDesc{"Name der XML-Datei";"XML Container name";}}
      InputParam{"XmlVersion";
       LangName{"XmlVersion";"XmlVersion";}"XMLVERSION";"Dummy_Container_Version";
       LangDesc{"Version des XML-Datei z.B. 0151/0202/0203";"XML Container version e.g. 0151/0202/0203/0204";}}
      InputParam{"DebugLevel";
       LangName{"DebugLevel";"DebugLevel";}"DebugLevel";"CInt_DebugLevel_00";
       LangDesc{"Debug Level";"Set debug level";}}}
     LocalVar{}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     MSLCode{"err = 0;\r\nif (*ZdcHndl >= 0)\r\n    zdcClose (*ZdcHndl);\r\n*ZdcHndl = -1;\r\nif (XmlContainer[0] != 0 && (XmlVersion == \"0202\" || XmlVersion == \"0203\" || XmlVersion == \"0204\" || XmlVersion == \"020401\" || XmlVersion == \"0205\"))\r\n{\r\n    *ZdcHndl = zdcOpen (XmlContainer, DebugLevel);\r\n    if (*ZdcHndl < 0)\r\n\terr = errFatal (NOK, \"open zdc failed \", XmlContainer);\r\n    else\r\n\terr = OK;\r\n}\r\nelse\r\n    err = errFatal (NOK, \"open zdc failed / wrong version \", XmlContainer, \" \", XmlVersion);\r\n_statSetAsciiResult (err, \"open zdc\", FUABBR);";}
     NodeCategory{"";}
     Info{"Baustein \xF6ffnet einen Zieldaten-Container (ZDC) in der Version 2.02 oder 2.03.\r\n\r\nNach erfolgreichem Aufruf wird das \xFCbergebene Handle mit einem g\xFCltigen Wert (Wert >= 0) gesetzt.\r\nAndernfalls wird der Parameter \"ZdcHndl\" auf -1 gesetzt.\r\n\r\nDer Baustein steht in engem Zusammenhang mit dem Baustein \"VW_Codefile_STG\", der die\r\nEingangsparameter \"XmlContainer\" und \"XmlVersion\" f\xFCr diesem Baustein liefert.\r\n\r\n09.01.06, sr: Update, \xF6ffnet jetzt auch ZDC Container 2.03";"";}
     Rights{"Write";"Read";}
     VersionInfo{
      CurVersion{1;17;"CP41A";}
      Version{0;1;"DSA";"- in Arbeit -";"admin";"03.07.2003 16:07:52";}
      Version{0;2;"DSA";"- in Arbeit -";"admin";"03.07.2003 16:08:40";}
      Version{0;3;"DSA";"- in Arbeit -";"admin";"03.07.2003 16:09:12";}
      Version{0;4;"DSA";"- in Arbeit -";"admin";"03.07.2003 16:09:33";}
      Version{0;5;"DSA";"- in Arbeit -";"admin";"03.07.2003 16:10:00";}
      Version{0;6;"DSA";"- in Arbeit -";"admin";"03.07.2003 16:11:12";}
      Version{0;7;"DSA";"- in Arbeit -";"admin";"03.07.2003 16:11:35";}
      Version{1;0;"DSA";"";"sr";"17.12.2004 14:12:19";}
      Version{1;1;"AAC";"- in Arbeit -";"sr";"09.01.2006 11:44:45";}
      Version{1;2;"AAC";"- in Arbeit -";"sr";"09.01.2006 11:45:04";}
      Version{1;3;"AAC";"- in Arbeit -";"sr";"09.01.2006 11:45:22";}
      Version{1;4;"AC";"- in Arbeit -";"dsa-admin";"20.01.2006 15:15:43";}
      Version{1;5;"CRE1";"- in Arbeit -";"admin";"21.02.2006 12:11:50";}
      Version{1;6;"CRE1";"- in Arbeit -";"admin";"21.02.2006 12:12:07";}
      Version{1;7;"CRE1";"- in Arbeit -";"admin";"24.08.2006 17:51:21";}
      Version{1;8;"CRE1A";"- in Arbeit -";"admin";"07.06.2007 11:57:24";}
      Version{1;9;"CRE2A";"- in Arbeit -";"admin";"18.08.2008 10:51:48";}
      Version{1;10;"CRE2A";"- in Arbeit -";"admin";"18.08.2008 10:52:04";}
      Version{1;11;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"23.10.2008 14:08:10";}
      Version{1;12;"PAE";"- in Arbeit -";"dsa-admin";"08.01.2009 09:37:57";}
      Version{1;13;"PAE";"- in Arbeit -";"dsa-admin";"08.01.2009 10:06:14";}
      Version{1;14;"PAE";"- in Arbeit -";"dsa-admin";"08.01.2009 10:08:14";}
      Version{1;15;"CP41A";"- in Arbeit -";"admin";"08.07.2010 10:27:16";}
      Version{1;16;"CP41A";"- in Arbeit -";"admin";"29.07.2010 01:38:09";}
      Version{1;17;"CP41A";"- in Arbeit -";"admin";"19.08.2010 15:24:43";}}}}}}
 FunctionDef{
  Name{"DSA_Bibliothek";}
  LangName{"DSA_Bibliothek";"DSA_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;1;"AC";}
   Version{1;0;"AC";"- freigegeben -";"dsa-admin";"04.03.2003 11:44:35";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"admin";"03.07.2006 10:17:25";}}
  FunctionDef{
   Name{"BenutzerSchnittstellen";}
   LangName{"BenutzerSchnittstellen";"UserInterface";}
   CvsVerHis{}
   Type{1;}
   Icon{2;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Sammlung von Bausteinen zur Benutzerschnittstelle";"Collection of components relating to the user interface.";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{1;2;"SVW";}
    Version{1;0;"AC";"- freigegeben -";"dsa-admin";"04.03.2003 11:34:14";}
    Version{1;1;"SVW";"- in Arbeit -";"admin";"12.04.2004 19:08:29";}
    Version{1;2;"SVW";"- in Arbeit -";"admin";"12.04.2004 21:13:06";}}
   FunctionDef{
    Name{"Debug";}
    LangName{"Debug";"Debug";}
    CvsVerHis{}
    Type{1;}
    Icon{0;}
    Properties{"Begin";}
    FormalParam{}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"";}
    NodeCategory{"";}
    Info{"Sammlung von Bausteinen zur Ein- Ausgabe von Debug-Informationen";"The Debug functions have no effect on the test sequence.\r\nThey also generate no text output which is visible in the foreground.\r\nTheir \"background activity\" consists of writing status information in a window or a file,\r\nin order to track potential problems in the test sequence.";}
    Rights{"Write";"Read";}
    VersionInfo{
     CurVersion{0;1;"SVW";}
     Version{0;1;"SVW";"- in Arbeit -";"admin";"12.04.2004 19:14:08";}}
    FunctionDef{
     Name{"ErrDebugInfoStr";}
     LangName{"ErrDebugInfoStr";"ErrDebugInfoStr";}
     CvsVerHis{}
     Type{1;}
     Icon{2;}
     Properties{"Begin";}
     FormalParam{
      InputParam{"num";
       LangName{"num";"num";}"INT";"CNullPosition";
       LangDesc{"";"";}}
      InputParam{"str";
       LangName{"str";"str";}"STRING";"";
       LangDesc{"";"";}}
      InputParam{"Info";
       LangName{"Info";"Info";}"STRING";"";
       LangDesc{"";"";}}}
     LocalVar{}
     Condition{"ever";"ok";"";}
     Evaluation{"no";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     MSLCode{"  errDebug (num, sprintf(\"%s : %s\",Info,str));";}
     NodeCategory{"";}
     Info{"Debug-Ausgabe einer Zeichenkette";"Debug-Ausgabe einer Zeichenkette";}
     Rights{"Write";"Read";}
     VersionInfo{
      CurVersion{1;3;"nbmr";}
      Version{0;1;"RHMPil";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"24.02.2005 07:54:19";}
      Version{0;2;"RHMPil";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"26.02.2005 15:05:18";}
      Version{1;0;"PAE";" Freigabe ";"vw-admin";"08.06.2005 14:30:05";}
      Version{1;1;"MOS";"[ Baustein importiert (ersetzt) ]";"jk";"06.10.2008 15:39:56";}
      Version{1;2;"nbpj2";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"03.08.2009 09:43:57";}
      Version{1;3;"nbmr";"[ Baustein importiert (ersetzt) ]";"dsa";"05.05.2010 12:54:12";}}}}}}
 FunctionDef{
  Name{"VW_spezifische_Bibliothek";}
  LangName{"VW_spezifische_Bibliothek";"VW_specific_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"Sammlung von Bausteinen zur Kommunikation mit Steuergeraeten von VW.";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;2;"ZPH18";}
   Version{1;0;"AC";"- freigegeben -";"vw-admin";"04.03.2003 11:56:19";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"07.08.2006 13:58:14";}
   Version{1;2;"ZPH18";"[ Baustein importiert (ersetzt) ]";"admin";"14.08.2007 15:07:01";}}
  FunctionDef{
   Name{"VW_Codefileauswahl";}
   LangName{"VW_Codefileauswahl";"VW_Codefileauswahl";}
   CvsVerHis{}
   Type{1;}
   Icon{0;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Platzhalter f\xFCr Pr\xFCfschritte";"";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{0;1;"PAE";}
    Version{0;1;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"24.07.2006 17:06:13";}}
   FunctionDef{
    Name{"Pfau_9_2_0";}
    LangName{"Pfau_9_2_0";"";}
    CvsVerHis{}
    Type{1;}
    Icon{0;}
    Properties{"Begin";}
    FormalParam{}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"";}
    NodeCategory{"";}
    Info{"";"";}
    Rights{"Write";"Read";}
    VersionInfo{
     CurVersion{0;1;"PAE";}
     Version{0;1;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"24.07.2006 17:06:13";}}
    FunctionDef{
     Name{"ZdcKalibrierungL_309560";}
     LangName{"ZdcKalibrierungL_309560";"ZdcKalibrierungL_309560";}
     CvsVerHis{}
     Type{1;}
     Icon{0;}
     Properties{"Begin";}
     FormalParam{
      InputParam{"DialogHndl";
       LangName{"DialogHndl";"DialogHndl";}"DialogTyp";"DIALOG_LOKAL";
       LangDesc{"";"";}}
      InputParam{"Zeile";
       LangName{"Zeile";"Zeile";}"DialogLine";"CDialog_Keine_Anzeige";
       LangDesc{"";"";}}
      InputParam{"Text";
       LangName{"Text";"Text";}"TEXT";"CText_Info_Codefile_Selection";
       LangDesc{"";"";}}
      InputParam{"ZdcHndl";
       LangName{"ZdcHndl";"ZdcHndl";}"ZDC_HNDL";"DZdcHndl";
       LangDesc{"Handle zu einem ZDC";"";}}
      InputParam{"Modusteil";
       LangName{"Modusteil";"Modusteil";}"ZDC_MODUSTEIL";"CStr_ZDC_Modus_All";
       LangDesc{"Modusteil wird als Filter eingesetzt (mit Modusteil == \"\" wird der Filter ausgeschaltet) ";"Modusteil wird als Filter eingesetzt (mit Modusteil == \"\" wird der Filter ausgeschaltet) ";}}
      OutputParam{"KalibL_String";
       LangName{"KalibL_String";"KalibL_String";}"Codefile_Result_Str";"Dummy_ProgL_String";
       LangDesc{"zu programmierender String im 4 Byte Adress-Kalibrier-Format";"";}}}
     LocalVar{
      LocVarDef{"KommentarNOK";
       LangName{"KommentarNOK";"KommentarNOK";}"Locvar";"TEXT";
       LangDesc{"";"";}
       LangText{"\"Programmierstring ungueltig\"";"\"\xB1\xE0\xB3\xCC\xD7\xD6\xB7\xFB\xB4\xAE\xCE\xDE\xD0\xA7\"";"\"Programming string unvalid\"";}"Const";}}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     MSLCode{"string sInfo, sData, buf;\r\nint    iAnz, iDataTyp;\r\nint    len;\r\nstring sRohteilenummer, sFertigteilenummer, sKanal, sDatenInternFormat;\r\nint    iStartAdr, iUncompressedSize, iLoeschbereichStart, iLoeschbereichEnd;\r\nint    iDatencheckStart, iDatencheckEnd, iDatencheckChecksum, iLength;\r\nint    ServiceID;\r\nint    RecordDataID;\r\n\r\nerr = 0;\r\nif (ZdcHndl >= 0)\r\n{\r\n    if (Zeile > 0)\r\n        _dlgMultiSetLine (DialogHndl, Zeile, Text);\r\n\r\n    *KalibL_String = \"\";\r\n    ServiceID    = 0;\r\n    RecordDataID = 0;\r\n    iAnz = 0;\r\n    strM4Set (KalibL_String, 0, iAnz);\r\n\r\n    zdcCollectSeekFirst (ZdcHndl);\r\n    while (!err)\r\n    {\r\n        err = zdcCollect (ZdcHndl, \"K\", Modusteil, &sInfo, &iDataTyp);\r\n        if (err == -1)\r\n        {\r\n            err  = 0;\r\n            break;\r\n        }\r\n        if( !err )\r\n        {\r\n            err = zdcGetCalibration(ZdcHndl, &ServiceID, &RecordDataID);\r\n        }\r\n        while (!err && iDataTyp & 4)\r\n        {\r\n            err = zdcGetDataInfo (ZdcHndl,\r\n                                  &sRohteilenummer,\r\n                                  &sFertigteilenummer,\r\n                                  &sKanal,\r\n                                  &sDatenInternFormat,\r\n                                  &iStartAdr,\r\n                                  &iUncompressedSize,\r\n                                  &iLoeschbereichStart,\r\n                                  &iLoeschbereichEnd,\r\n                                  &iDatencheckStart,\r\n                                  &iDatencheckEnd,\r\n                                  &iDatencheckChecksum,\r\n                                  &iLength);\r\n            if (err == -1)\r\n            {\r\n                err = 0;\r\n                break;\r\n            }\r\n            if (!err)\r\n            {\r\n                err = zdcGetDataBlock (ZdcHndl, iLength + 1, &sData);\r\n                len = strlen (sData);\r\n                buf = \"\";\r\n                strM4Set (&buf, 0, ServiceID);\r\n                strM4Set (&buf, 4, RecordDataID);\r\n                strM4Set (&buf, 8, len);\r\n                buf = buf + sData;\r\n                *KalibL_String = *KalibL_String + buf;\r\n                iAnz = iAnz + 1;\r\n            }\r\n        }\r\n\r\n        while (!err && iDataTyp & 16)\r\n        {\r\n            err = zdcGetBuf (ZdcHndl, &iStartAdr, &sData);\r\n            if (err == -1)\r\n            {\r\n                err = 0;\r\n                break;\r\n            }\r\n            if (!err)\r\n            {\r\n                len = strlen (sData);\r\n                buf = \"\";\r\n                strM4Set (&buf, 0, ServiceID);\r\n                strM4Set (&buf, 4, RecordDataID);\r\n                strM4Set (&buf, 8, len);\r\n                buf = buf + sData;\r\n                *KalibL_String = *KalibL_String + buf;\r\n                iAnz = iAnz + 1;\r\n            }\r\n        }\r\n    }\r\n    if (!err)\r\n        strM4Set (KalibL_String, 0, iAnz);\r\n    else\r\n        err = errFatal (NOK, \"zdc calibration data error\");\r\n\r\n    if (Zeile > 0)\r\n        _dlgMultiTextRsltBmp (DialogHndl, Zeile, Text, err);\r\n}\r\n\r\nerrDebug (err, sprintf (\"kalibl string (%ld byte) 0h'%s'\",\r\n          strlen (*KalibL_String), hexstr (midstr (*KalibL_String, 0, 100))));\r\n          \r\nif (err || iAnz == 0)\r\n    *KalibL_String = \"\";\r\n    \r\nif (!err)\r\n    _statSetAsciiResult (err, sInfo + \" data=0h\" + midstr (hexstr(*KalibL_String), 0, 64), FOK);\r\nelse\r\n    _statSetAsciiResult (err, KommentarNOK, FUABBR);";}
     NodeCategory{"";}
     Info{"Dieser Baustein berechnet die Kalibrierdaten nach dem Zieldatencontainer (ZDC) V 2.04. (S)\r\n\r\nAls Parameter muss das \"ZdcHndl\" \xFCbergeben werden, dass mit dem Baustein \"ZdcOpen\" erzeugt wurde.\r\n\r\nDer Parameter \"Modusteil\" kann zur Filterung der Daten innerhalb des Containers verwendet werden. \r\nMit Modusteil gleich \"\" werden alle Tabellen mit dem Modus \"K\" im ZDC ausgewertet.\r\n\r\n\r\nDer Baustein liefert mit dem Parameter \"KalibL_String\" die Kalibrierdaten im DSA internen Austauschformat\r\nf\xFCr Kalibrierdaten mit 4 Byte Adresse.\r\n\r\nDer Baustein berechnet nur die Kalibrierdaten. Das Schreiben der Daten erfolgt nicht \r\ndurch diesen Baustein!\r\n\r\n\r\nDas Format des KalibL_String ist wie folgt aufgebaut:\r\n\r\n4 Byte: Anzahl Kalibrierungen;\r\n    4 Byte: 1. ServiceID (z.B. 0000002E f\xFCr Dienst 2E);\r\n    4 Byte: 1. RecordDataID (entspricht vom Sinn her einer Adresse. Z.B. 00000530);\r\n    4 Byte: 1. Laenge n der einzelnen Kalibrierung; \r\n    n Byte: 1. Kalibrierdaten;\r\n\r\n    4 Byte: 2. ServiceID;\r\n    4 Byte: 2. RecordDataID;\r\n    4 Byte: 2. Laenge m der einzelnen Kalibrierung; \r\n    m Byte: 2. Kalibrierdaten;\r\n\r\n    ...\r\n\r\n";"";}
     Rights{"Write";"Read";}
     VersionInfo{
      CurVersion{3;3;"CP41A_Te";}
      Version{0;1;"AAC";"- in Arbeit -";"sr";"30.06.2006 10:30:53";}
      Version{0;2;"AAC";"- in Arbeit -";"sr";"30.06.2006 10:35:24";}
      Version{0;3;"AAC";"- in Arbeit -";"sr";"30.06.2006 11:14:20";}
      Version{0;4;"AAC";"- in Arbeit -";"sr";"30.06.2006 11:38:45";}
      Version{0;5;"AAC";"- in Arbeit -";"sr";"30.06.2006 11:46:32";}
      Version{0;6;"AAC";"- in Arbeit -";"sr";"30.06.2006 11:52:36";}
      Version{0;7;"AAC";"- in Arbeit -";"sr";"30.06.2006 11:53:02";}
      Version{0;8;"AAC";"- in Arbeit -";"sr";"30.06.2006 11:57:01";}
      Version{0;9;"AAC";"- in Arbeit -";"sr";"30.06.2006 11:59:21";}
      Version{1;0;"AAC";"Erste Version";"sr";"30.06.2006 11:59:31";}
      Version{1;1;"AAC";"- in Arbeit -";"sr";"04.07.2006 09:47:39";}
      Version{1;2;"AAC";"- in Arbeit -";"sr";"04.07.2006 09:47:52";}
      Version{1;3;"AAC";"- in Arbeit -";"sr";"04.07.2006 09:48:35";}
      Version{1;4;"AAC";"- in Arbeit -";"sr";"04.07.2006 09:49:06";}
      Version{1;5;"AAC";"- in Arbeit -";"sr";"04.07.2006 09:50:13";}
      Version{1;6;"AAC";"- in Arbeit -";"sr";"04.07.2006 09:52:22";}
      Version{1;7;"AAC";"- in Arbeit -";"sr";"04.07.2006 09:56:13";}
      Version{1;8;"AAC";"- in Arbeit -";"sr";"04.07.2006 09:57:44";}
      Version{1;9;"AAC";"- in Arbeit -";"sr";"04.07.2006 10:01:18";}
      Version{1;10;"AAC";"- in Arbeit -";"sr";"04.07.2006 10:02:28";}
      Version{1;11;"AAC";"- in Arbeit -";"sr";"04.07.2006 10:25:43";}
      Version{1;12;"AAC";"- in Arbeit -";"sr";"04.07.2006 10:26:19";}
      Version{1;13;"AAC";"- in Arbeit -";"sr";"04.07.2006 10:31:01";}
      Version{1;14;"AAC";"- in Arbeit -";"sr";"04.07.2006 10:31:24";}
      Version{2;0;"AAC";"Schnittstelle wurde umgestellt. Jetzt werden wieder alle Tabellen auf einmal ausgelesen und ein Bin\xE4rstring mit allen Daten erzeugt. Das Format des Bin\xE4rstrings wurde f\xFCr ServiceID und RecordDataID erweitert.";"sr";"04.07.2006 10:50:12";}
      Version{2;1;"AAC";"- in Arbeit -";"sr";"04.07.2006 11:48:00";}
      Version{3;0;"AAC";"DialogTyp_Muell durch DialogTyp ersetzt.";"sr";"04.07.2006 11:48:04";}
      Version{3;1;"CRE2A";"- in Arbeit -";"admin";"31.10.2009 13:07:07";}
      Version{3;2;"CRE2A";"- in Arbeit -";"admin";"19.01.2010 10:32:13";}
      Version{3;3;"CP41A_Te";"- in Arbeit -";"admin";"04.04.2010 19:48:45";}}}}}}
 FunctionDef{
  Name{"VW_spezifische_Bibliothek";}
  LangName{"VW_spezifische_Bibliothek";"VW_specific_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"Sammlung von Bausteinen zur Kommunikation mit Steuergeraeten von VW.";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;2;"ZPH18";}
   Version{1;0;"AC";"- freigegeben -";"vw-admin";"04.03.2003 11:56:19";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"07.08.2006 13:58:14";}
   Version{1;2;"ZPH18";"[ Baustein importiert (ersetzt) ]";"admin";"14.08.2007 15:07:01";}}
  FunctionDef{
   Name{"VW_Codefileauswahl";}
   LangName{"VW_Codefileauswahl";"VW_Codefileauswahl";}
   CvsVerHis{}
   Type{1;}
   Icon{0;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Platzhalter f\xFCr Pr\xFCfschritte";"";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{0;1;"PAE";}
    Version{0;1;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"24.07.2006 17:06:13";}}
   FunctionDef{
    Name{"Pfau_9_2_0";}
    LangName{"Pfau_9_2_0";"";}
    CvsVerHis{}
    Type{1;}
    Icon{0;}
    Properties{"Begin";}
    FormalParam{}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"";}
    NodeCategory{"";}
    Info{"";"";}
    Rights{"Write";"Read";}
    VersionInfo{
     CurVersion{0;1;"PAE";}
     Version{0;1;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"24.07.2006 17:06:13";}}
    FunctionDef{
     Name{"ZdcClose_309563";}
     LangName{"ZdcClose_309563";"ZdcClose_309563";}
     CvsVerHis{}
     Type{1;}
     Icon{0;}
     Properties{"Begin";}
     FormalParam{
      OutputParam{"ZdcHndl";
       LangName{"ZdcHndl";"ZdcHndl";}"ZDC_HNDL";"DZdcHndl";
       LangDesc{"Handle zu einem ZDC";"ZDC Handle";}}}
     LocalVar{}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     MSLCode{"err = 0;\r\nif (*ZdcHndl >= 0)\r\n    zdcClose (*ZdcHndl);\r\n*ZdcHndl = -1;";}
     NodeCategory{"";}
     Info{"Baustein schlie\xDFt einen Zieldaten-Container (ZDC) in der Version 2.02, der zuvor mit dem Baustein \r\n\"ZdcOpen\" ge\xF6ffnet wurde.";"";}
     Rights{"Write";"Read";}
     VersionInfo{
      CurVersion{0;2;"CRE1";}
      Version{0;1;"DSA";"- in Arbeit -";"admin";"03.07.2003 16:12:23";}
      Version{0;2;"CRE1";"- in Arbeit -";"admin";"21.02.2006 12:13:11";}}}}}}
 FunctionDef{
  Name{"VW_spezifische_Bibliothek";}
  LangName{"VW_spezifische_Bibliothek";"VW_specific_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"Sammlung von Bausteinen zur Kommunikation mit Steuergeraeten von VW.";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;2;"ZPH18";}
   Version{1;0;"AC";"- freigegeben -";"vw-admin";"04.03.2003 11:56:19";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"07.08.2006 13:58:14";}
   Version{1;2;"ZPH18";"[ Baustein importiert (ersetzt) ]";"admin";"14.08.2007 15:07:01";}}
  FunctionDef{
   Name{"VW_Codefileauswahl";}
   LangName{"VW_Codefileauswahl";"VW_Codefileauswahl";}
   CvsVerHis{}
   Type{1;}
   Icon{0;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Platzhalter f\xFCr Pr\xFCfschritte";"";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{0;1;"PAE";}
    Version{0;1;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"24.07.2006 17:06:13";}}
   FunctionDef{
    Name{"Pfau_9_2_0";}
    LangName{"Pfau_9_2_0";"";}
    CvsVerHis{}
    Type{1;}
    Icon{0;}
    Properties{"Begin";}
    FormalParam{}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"";}
    NodeCategory{"";}
    Info{"";"";}
    Rights{"Write";"Read";}
    VersionInfo{
     CurVersion{0;1;"PAE";}
     Version{0;1;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"24.07.2006 17:06:13";}}
    FunctionDef{
     Name{"Zdc203Anpassung_uf";}
     LangName{"Zdc203Anpassung_uf";"Zdc203Anpassung_uf";}
     CvsVerHis{}
     Type{1;}
     Icon{0;}
     Properties{"Begin";}
     FormalParam{
      InputParam{"Hndl";
       LangName{"Hndl";"Hndl";}"VCIKANAL";"VCIKanal1";
       LangDesc{"VCI-Kanal";"\"\"";}}
      InputParam{"DialogHndl";
       LangName{"DialogHndl";"DialogHndl";}"DialogTyp";"DIALOG_LOKAL";
       LangDesc{"";"";}}
      InputParam{"Zeile";
       LangName{"Zeile";"Zeile";}"DialogLine";"CDialog_Keine_Anzeige";
       LangDesc{"";"";}}
      InputParam{"Text";
       LangName{"Text";"Text";}"TEXT";"CTextCodefileAuswahl";
       LangDesc{"";"";}}
      InputParam{"ZdcHndl";
       LangName{"ZdcHndl";"ZdcHndl";}"ZDC_HNDL";"DZdcHndl";
       LangDesc{"Handle zu einem ZDC";"";}}
      InputParam{"Modusteil";
       LangName{"Modusteil";"Modusteil";}"ZDC_MODUSTEIL";"CZDCModusAll";
       LangDesc{"Modusteil wird als Filter eingesetzt (mit Modusteil == \"\" wird der Filter ausgeschaltet) ";"";}}
      OutputParam{"Anpassung_String";
       LangName{"Anpassung_String";"Anpassung_String";}"Codefile_Result_Str";"Dummy_Anpassung_String";
       LangDesc{"zu programmierender String";"\"\"";}}}
     LocalVar{
      LocVarDef{"KommentarNOK";
       LangName{"KommentarNOK";"KommentarNOK";}"Locvar";"TEXT";
       LangDesc{"";"";}
       LangText{"\"Anpassung ungueltig\"";"\"\"";"\"Anpassung ungueltig\"";}"Const";}}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     MSLCode{"// sz, 13.01.10 bei kurzer Anpassung f\xFCr SG mit langer Anpassung: Sonderbehandlung 1 Byte L\xE4nge\r\n// km, 28.10.09 f\xFCr die Auswahl der verwendeten Anpassung (kurze oder lange)\r\n// wird die unterst\xFCtzte Funktion ausgelesen\r\n// \\x01\\x0a -> lange Anpassung; \\x01\\x03 -> kurze Anpassung\r\n\r\nstring\tsInfo, sData, buf;\r\nint     \tiAnz, iDataTyp;\r\nint\t\tiKanal, iAnpassung, ilen;\r\nint\t\tAnpassungstyp;\r\nstring \tServTel;\r\n\r\nAnpassungstyp = 1;\t// lange Anpassung soll unterstuetzt werden\r\n\r\n// Lesen der Unterst\xFCtzten Funktionen\r\nvciExDtaRead (Hndl, &ServTel);\r\nif ( (0 > strstr (ServTel, \"\\x01\\x0a\")) && (0 > strstr (ServTel, \"\\x01\\x03\")) )  // lange oder kurze Anpassung unterst\xFCtzt? \r\n{\r\n\t_vciStatVciError (Hndl);\r\n\t//_statSetStrResult (ABBR, KommentarFunktionNOK, FSTGI);\r\n\t_statSetAsciiResult(ABBR, sprintf(\"Funktion nicht unterstuetzt\"), FSTGI);\r\n\treturn(ABBR);\r\n}\r\nelse\r\n{\r\n\tif (0 > strstr (ServTel, \"\\x01\\x0a\"))\r\n\t\tAnpassungstyp = 0;\t// kurze Anpassung wird unterst\xFCtzt\r\n}\r\n\t\r\n\r\nerr = 0;\r\nif (ZdcHndl >= 0)\r\n{\r\n    if (Zeile > 0)\r\n        _dlgMultiSetLine (DialogHndl, Zeile, Text);\r\n\r\n    *Anpassung_String = \"\";\r\n    iAnz = 0;\r\n    strM4Set (Anpassung_String, 0, iAnz);\r\n    zdcCollectSeekFirst (ZdcHndl);\r\n    while (!err)\r\n    {\r\n\t    err = zdcCollect (ZdcHndl, \"A\", Modusteil, &sInfo, &iDataTyp);\r\n        if (err == -1)\r\n\t    {\r\n\t        err = 0;\r\n\t        break;\r\n\t    }\r\n\t    while (!err && (iDataTyp & 64 || iDataTyp & 128) )\r\n\t    {\r\n\t        err = zdcGetAdaptation (ZdcHndl, &iKanal, &sData);\r\n\t        if (err == -1)\r\n\t        {\r\n\t\t        err = 0;\r\n\t\t        break;\r\n\t        }\r\n\t        if (!err)\r\n    \t    {\r\n                buf = \"\";\r\n                strM4Set (&buf, 0, iKanal);\r\n                if (Anpassungstyp == 0)\r\n                {\r\n                    /* Kurze Anpassung */\r\n                    if (iDataTyp & 64)\r\n\t\t\t  {\r\n        \t        \tiAnpassung = binstrtoi (sData);\r\n        \t        \terrDebug (0, sprintf (\"Kurze Anpassung: Kanal %#lx, Anp= %#lx\", iKanal, iAnpassung));\r\n                    \tstrM4Set (&buf, 4, 2);          /* Laenge auf 2 Bytes setzen, da kurze Anpassung */\r\n                    \tstrM2Set (&buf, 8, iAnpassung); /* 2 Bytes Anpasswert setzen */\r\n        \t        \t*Anpassung_String = *Anpassung_String + buf;\r\n\t\t\t  }\r\n\t\t\t  else\r\n\t\t\t  \terr = NOK;\r\n        \t    }\r\n                else\r\n                {\r\n                \tif (iDataTyp & 64)\t\t//kurze Anpassung f\xFCr SG mit langer Anpassung\r\n                \t{\r\n                \t\tiAnpassung = binstrtoi (sData);\r\n                \t\tif (iAnpassung < 256)\r\n                \t\t\tsData = midstr (itobinstr (iAnpassung), 3, 1);\r\n                \t\telse if (iAnpassung < (256 ^ 2))\r\n\t                \t\tsData = midstr (itobinstr (iAnpassung), 2, 2);\r\n                \t}\r\n                \t/* Lange Anpassung */\r\n        \t      \terrDebug (0, sprintf (\"Lange Anpassung: Kanal %#lx, Anp= '%s'\", iKanal, hexstr(sData)));\r\n                \tstrM4Set (&buf, 4, strlen(sData));   /* Laenge setzen fuer lange Anpassung */\r\n                \t*Anpassung_String = *Anpassung_String + buf + sData;\r\n                }\r\n    \t        iAnz = iAnz + 1;\r\n    \t    }\r\n    \t}\r\n    }\r\n    if (!err)\r\n\t    strM4Set (Anpassung_String, 0, iAnz);\r\n    else\r\n\t    err = errFatal (NOK, \"zdc anpassung data error\");\r\n\r\n    if (Zeile > 0)\r\n\t    _dlgMultiTextRsltBmp (DialogHndl, Zeile, Text, err);\r\n}\r\nif (err || iAnz == 0)\r\n    *Anpassung_String = \"\";\r\nif (!err)\r\n    _statSetAsciiResult (err, sInfo + \" data=0h\" + midstr (hexstr(*Anpassung_String), 0, 64), FOK);\r\n//    _statSetAsciiResult (err, sInfo, FOK);\r\nelse\r\n    _statSetAsciiResult (err, KommentarNOK, FUABBR);\r\n\r\nerrDebug (0, sprintf (\"ZDCInfo: '%s'\", sInfo + \" data=0h\" + midstr (hexstr(*Anpassung_String), 0, 64)));";}
     NodeCategory{"";}
     Info{"Dieser Baustein berechnet die Anpassdaten nach dem Zieldatencontainer (ZDC) V 2.03. (S)\r\nZieldatencontainer der Version 2.02 k\xF6nnen mit diesem Baustein auch verarbeitet werden.\r\nEs gibt dann keine \"Lange Anpassung\".\r\n\r\nAls Parameter muss das \"ZdcHndl\" \xFCbergeben werden, dass mit dem Baustein \"ZdcOpen\" erzeugt wurde.\r\n\r\nDer Parameter \"Modusteil\" kann zur Filterung der Daten innerhalb des Containers verwendet werden. \r\nMit Modusteil gleich \"\" werden alle Tabellen mit dem Modus \"A\" im ZDC ausgewertet.\r\n\r\nDer Baustein liefert mit dem Parameter \"Anpassung_String\" die Anpassdaten im folgenden Format:\r\n\r\n4 Byte: Anzahl Anpassungen;\r\n    4 Byte: 1. Anpassungs-Kanal;\r\n    4 Byte: 1. Laenge n der einzelnen Anpassung; \r\n    n Byte: 1. Anpassungswert;\r\n\r\n    4 Byte: 2. Anpassungs-Kanal;\r\n    4 Byte: 2. Laenge m der einzelnen Anpassung; \r\n    m Byte: 2. Anpassungswert; ...\r\n\r\n\r\nBeispiel:\r\n\"\\h000000020000000100000002abcd00000005000000a00102030405060708090a\"\r\nAnzahl Anpassungen: 2\r\nKanal: 1 kurze Anpassung: 43981 (int)\r\nKanal: 5 lange Anpassung: 0102030405060708090A\r\n\r\nDer Baustein berechnet nur die Anpassdaten. Das Schreiben der Daten erfolgt nicht durch diesen Baustein!\r\n\r\n20.01.06, sr: erstellt\r\nkm, 28.10.09 f\xFCr die Auswahl der verwendeten Anpassung (kurze oder lange) wird die unterst\xFCtzte Funktion ausgelesen\r\nsz, 13.01.10 bei kurzer Anpassung f\xFCr SG mit langer Anpassung: Sonderbehandlung 1 Byte L\xE4nge";"";}
     Rights{"Write";"Read";}
     VersionInfo{}}}}}
 FunctionDef{
  Name{"VW_spezifische_Bibliothek";}
  LangName{"VW_spezifische_Bibliothek";"VW_specific_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"Sammlung von Bausteinen zur Kommunikation mit Steuergeraeten von VW.";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;2;"ZPH18";}
   Version{1;0;"AC";"- freigegeben -";"vw-admin";"04.03.2003 11:56:19";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"07.08.2006 13:58:14";}
   Version{1;2;"ZPH18";"[ Baustein importiert (ersetzt) ]";"admin";"14.08.2007 15:07:01";}}
  FunctionDef{
   Name{"VW2000_Dienste";}
   LangName{"VW2000_Dienste";"VW2000_Dienste";}
   CvsVerHis{}
   Type{1;}
   Icon{0;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Sammlung von Bausteinen zur Kommunikation mit Steuerger\xE4ten von VW mit dem Protokoll K2000";"";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{1;3;"PAE";}
    Version{1;0;"AC";"- freigegeben -";"vw-admin";"17.02.2003 15:37:21";}
    Version{1;1;"AC";"- in Arbeit -";"vw-admin";"28.08.2003 17:40:34";}
    Version{1;2;"AC";"- in Arbeit -";"dsa-admin";"08.06.2004 08:55:47";}
    Version{1;3;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"25.07.2006 08:36:16";}}
   FunctionDef{
    Name{"VW2000_Dienste_22";}
    LangName{"VW2000_Dienste_22";"VW2000_Services_22";}
    CvsVerHis{}
    Type{1;}
    Icon{0;}
    Properties{"Begin";}
    FormalParam{}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"";}
    NodeCategory{"";}
    Info{"SG-Identifikation mit Service 0x22.\r\nDiese sollen in Zukunft die STG - ID 0x1A (0x9b, 0x9a, 0x91, 0x86, ...) abloesen.";"Moduls read the ECU Id by using the KWP2000-Comand ReadByIdentifier (Requesttitel 0x22) ";}
    Rights{"Write";"Read";}
    VersionInfo{
     CurVersion{1;0;"PAE";}
     Version{0;1;"PAE";"- in Arbeit -";"vw-admin";"30.05.2005 14:08:48";}
     Version{0;2;"PAE";"- in Arbeit -";"vw-admin";"31.05.2005 11:13:39";}
     Version{1;0;"PAE";" Freigabe ";"vw-admin";"03.06.2005 15:53:13";}}
    FunctionDef{
     Name{"VW2000_ReadDataByLocalId_ASCII_String";}
     LangName{"VW2000_ReadDataByLocalId_ASCII_String";"VW2000_Read_DataByLocalId_ASCII_String";}
     CvsVerHis{}
     Type{1;}
     Icon{1;}
     Properties{"Begin";}
     FormalParam{
      InputParam{"Hndl";
       LangName{"Hndl";"Hndl";}"VCIKANAL";"VCIKanal1";
       LangDesc{"VCI-Kanal";"VCI channel";}}
      InputParam{"LID";
       LangName{"LID";"LID";}"VW_Send_LID_ASCII_String";"";
       LangDesc{"local Identifier (Ergbnis ASCII-String)";"";}}
      OutputParam{"ASCII_String";
       LangName{"ASCII_String";"ASCII_String";}"VW_ASCII_String";"DVW_ASCII_String";
       LangDesc{"Ergebnis-Daten";"";}}
      OutputParam{"RecvTel";
       LangName{"RecvTel";"RecvTel";}"VW_Result_Tel";"DLID";
       LangDesc{"Steuergeraete-Telegramm";"";}}}
     LocalVar{
      LocVarDef{"CKommentarFunktionNOK";
       LangName{"CKommentarFunktionNOK";"CKommentarFunktionNOK";}"Locvar";"TEXT";
       LangDesc{"";"";}
       LangText{"\"Funktion nicht unterstuetzt\"";"\"\xB9\xA6\xC4\xDC\xB2\xBB\xD6\xA7\xB3\xD6\"";"\"Function not supported\"";}"Const";}}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     MSLCode{"#pragma using VW2000_Read_Service_22_allgemein // err = VW2000_Read_Service_22_allgemein(err, Hndl, LID, &RecvTel);\r\n\r\n*RecvTel = \"\";\r\n*ASCII_String = \"\";\r\n\r\nif ((LID < 0) || (LID > 0xffff))\r\n\t{\r\n\terr = ABBR;\r\n\t_statSetAsciiResult(ABBR, CKommentarFunktionNOK, FSTGI);\r\n\treturn err;\r\n\t}\r\n\r\nerr = VW2000_Read_Service_22_allgemein(err, Hndl, midstr(itobinstr(LID),2,2), RecvTel);\r\n\r\nif (err == OK)\r\n\t{\r\n\t*ASCII_String = midstr(*RecvTel,2,-1);\r\n\t_statSetAsciiResult(err, *ASCII_String, FOK);\r\n\t}\r\n";}
     NodeCategory{"";}
     Info{"SG-Identifikation mit Service 0x22; \r\nmit Local Identifier (LID), der im Parameter LID uebergeben wird.:\r\nEs wird ueberprueft, ob die Diagnosefunktion unterstuetzt wird, dann wird der Service ausgefuehrt.\r\nDer Parameter RecvTel liefert den kompletten Wert der STG-Antwort zur\xFCck und\r\nder Parameter ASCII_String den eigentlichen gelesenen Wert.\r\nDer Baustein liefert ein OK wenn die LID gelesen werden konnte.\r\nDer Baustein liefert ein ABBR wenn die Diagnosefunktion nicht unterst\xFCtzt wird.\r\nDer Baustein liefert ein NOK wenn die LID nicht gelesen werden konnte.\r\n\r\njk, 29.12.05";"Modul reads the ECU Id by using the KWP2000-Comand ReadByIdentifier (Requesttitel 0x22) \r\nthe RID will be given in the parameter LID.\r\nIt will be testet if the service is supported, than the service will be executed.\r\nThe parameter ID_String contains the ECU answer without the LID. Length n Byte (see spec.)\r\nThe evaluatin of the module will be OK if the reading of the RID was OK.\r\n\r\nsz, 31.05.05";}
     Rights{"Write";"Read";}
     VersionInfo{
      CurVersion{0;21;"CP41A_Te";}
      Version{0;1;"ING";"- in Arbeit -";"dsa-admin";"23.12.2005 08:55:16";}
      Version{0;2;"ING";"- in Arbeit -";"dsa-admin";"23.12.2005 08:56:08";}
      Version{0;3;"ING";"- in Arbeit -";"dsa-admin";"23.12.2005 08:57:03";}
      Version{0;4;"ING";"- in Arbeit -";"dsa-admin";"23.12.2005 08:59:01";}
      Version{0;5;"ING";"- in Arbeit -";"dsa-admin";"23.12.2005 09:37:06";}
      Version{0;6;"ING";"- in Arbeit -";"dsa-admin";"23.12.2005 09:40:12";}
      Version{0;7;"ING";"- in Arbeit -";"dsa-admin";"23.12.2005 09:46:51";}
      Version{0;8;"ING";"- in Arbeit -";"dsa-admin";"23.12.2005 10:06:14";}
      Version{0;9;"ING";"- in Arbeit -";"dsa-admin";"23.12.2005 10:08:15";}
      Version{0;10;"ING";"- in Arbeit -";"dsa-admin";"27.12.2005 15:43:56";}
      Version{0;11;"ING";"- in Arbeit -";"dsa-admin";"28.12.2005 15:51:45";}
      Version{0;12;"ING";"- in Arbeit -";"dsa-admin";"29.12.2005 08:29:40";}
      Version{0;13;"ING";"- in Arbeit -";"dsa-admin";"29.12.2005 09:03:47";}
      Version{0;14;"ING";"- in Arbeit -";"dsa-admin";"29.12.2005 09:04:55";}
      Version{0;15;"ING";"- in Arbeit -";"dsa-admin";"29.12.2005 09:07:26";}
      Version{0;16;"ING";"- in Arbeit -";"dsa-admin";"29.12.2005 09:09:05";}
      Version{0;17;"ING";"- in Arbeit -";"dsa-admin";"29.12.2005 09:10:00";}
      Version{0;18;"ING";"- in Arbeit -";"dsa-admin";"29.12.2005 09:31:59";}
      Version{0;19;"ING";"- in Arbeit -";"dsa-admin";"29.12.2005 09:34:33";}
      Version{0;20;"ING";"- in Arbeit -";"beckermi";"16.01.2006 18:58:11";}
      Version{0;21;"CP41A_Te";"- in Arbeit -";"admin";"07.04.2010 17:43:46";}}}}}}
 FunctionDef{
  Name{"DSA_Bibliothek";}
  LangName{"DSA_Bibliothek";"DSA_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;1;"AC";}
   Version{1;0;"AC";"- freigegeben -";"dsa-admin";"04.03.2003 11:44:35";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"admin";"03.07.2006 10:17:25";}}
  FunctionDef{
   Name{"Daten_Bearbeitung";}
   LangName{"DatenBearbeitung";"Data_Manipulation";}
   CvsVerHis{}
   Type{1;}
   Icon{0;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Sammlung von Bausteinen zur Bearbeitung von Variablen.";"Data editing arises very frequently. Calculations must be carried out, character strings\r\nmust be copied or separated out, parameters must be initialised...";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{0;1;"SVW";}
    Version{0;1;"SVW";"- in Arbeit -";"admin";"12.04.2004 19:29:41";}}
   FunctionDef{
    Name{"StringData";}
    LangName{"StringData";"StringData";}
    CvsVerHis{}
    Type{1;}
    Icon{0;}
    Properties{"Begin";}
    FormalParam{}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"";}
    NodeCategory{"";}
    Info{"Sammlung von Bausteinen zur Bearbeitung von Zeichenketten.";"Collection of components for the editing of strings.";}
    Rights{"Write";"Read";}
    VersionInfo{
     CurVersion{0;11;"PAE";}
     Version{0;1;"RHMPil";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"22.05.2005 09:03:00";}
     Version{0;2;"RHMPil";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"22.05.2005 09:47:40";}
     Version{0;3;"RHMPil";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"22.05.2005 10:48:41";}
     Version{0;4;"RHMPil";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"22.05.2005 10:55:51";}
     Version{0;5;"RHMPil";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"19.09.2005 12:16:30";}
     Version{0;6;"RHMPil";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"25.10.2005 13:09:20";}
     Version{0;7;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"24.07.2006 17:06:12";}
     Version{0;8;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"25.07.2006 08:26:55";}
     Version{0;9;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"25.07.2006 08:31:26";}
     Version{0;10;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"25.07.2006 08:35:22";}
     Version{0;11;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"25.07.2006 08:36:15";}}
    FunctionDef{
     Name{"StringFunktionen";}
     LangName{"StringFunktionen";"StringFunction";}
     CvsVerHis{}
     Type{1;}
     Icon{0;}
     Properties{"Begin";}
     FormalParam{}
     LocalVar{}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     MSLCode{"";}
     NodeCategory{"";}
     Info{"";"";}
     Rights{"Write";"Read";}
     VersionInfo{}
     FunctionDef{
      Name{"StringAdd";}
      LangName{"StringAdd";"StringAdd";}
      CvsVerHis{}
      Type{1;}
      Icon{0;}
      Properties{"Begin";}
      FormalParam{
       InputParam{"String1";
        LangName{"String1";"String1";}"STRING";"DString";
        LangDesc{"";"";}}
       InputParam{"String2";
        LangName{"String2";"String2";}"STRING";"DString";
        LangDesc{"";"";}}
       OutputParam{"DestString";
        LangName{"DestString";"DestString";}"STRING";"DString";
        LangDesc{"";"";}}}
      LocalVar{}
      Condition{"ever";"ok";"";}
      Evaluation{"direct";"never";
       ActionCond{"";}}
      Extra{"teststep";}
      MSLCode{"*DestString = String1 + String2;\r\n";}
      NodeCategory{"";}
      Info{"Baustein zur Verkettung von Zeichenketten.\r\n\r\nDestString = String1 + String2";"Component for the linking of strings.\r\n\r\nDestString = String1 + String2\r\n";}
      Rights{"Write";"Read";}
      VersionInfo{
       CurVersion{0;1;"RHMPil";}
       Version{0;1;"RHMPil";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"24.02.2005 07:54:14";}}}}}}}
 FunctionDef{
  Name{"VW_spezifische_Bibliothek";}
  LangName{"VW_spezifische_Bibliothek";"VW_specific_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"Sammlung von Bausteinen zur Kommunikation mit Steuergeraeten von VW.";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;2;"ZPH18";}
   Version{1;0;"AC";"- freigegeben -";"vw-admin";"04.03.2003 11:56:19";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"07.08.2006 13:58:14";}
   Version{1;2;"ZPH18";"[ Baustein importiert (ersetzt) ]";"admin";"14.08.2007 15:07:01";}}
  FunctionDef{
   Name{"VW_Codefileauswahl";}
   LangName{"VW_Codefileauswahl";"VW_Codefileauswahl";}
   CvsVerHis{}
   Type{1;}
   Icon{0;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Platzhalter f\xFCr Pr\xFCfschritte";"";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{0;1;"PAE";}
    Version{0;1;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"24.07.2006 17:06:13";}}
   FunctionDef{
    Name{"Pfau_9_2_0";}
    LangName{"Pfau_9_2_0";"";}
    CvsVerHis{}
    Type{1;}
    Icon{0;}
    Properties{"Begin";}
    FormalParam{}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"";}
    NodeCategory{"";}
    Info{"";"";}
    Rights{"Write";"Read";}
    VersionInfo{
     CurVersion{0;1;"PAE";}
     Version{0;1;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"24.07.2006 17:06:13";}}
    FunctionDef{
     Name{"ZdcFtnCheck_309573";}
     LangName{"ZdcFtnCheck_309573";"ZdcFtnCheck_309573";}
     CvsVerHis{}
     Type{1;}
     Icon{0;}
     Properties{"Begin";}
     FormalParam{
      InputParam{"ID_Expression";
       LangName{"ID_Expression";"ID_Expression";}"Codefile_Result_Str";"Dummy_ID_Expression_Result";
       LangDesc{"Logischer Ausdr\xFCck der IDs (FTN)";"Logical ID term (FTN)";}}
      InputParam{"ID_Result";
       LangName{"ID_Result";"ID_Result";}"Codefile_Result_Str";"Dummy_ID_1_Result";
       LangDesc{"ID-String";"ID String";}}}
     LocalVar{}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     MSLCode{"if (zdcFtnCheck (ID_Expression, ID_Result, 12))\r\n    err = OK;\r\nelse\r\n    err = NOK;\r\n_statSetAsciiResult (err, ID_Result, FMWNOK);\r\n_statSetValue (ID_Expression);";}
     NodeCategory{"";}
     Info{"Baustein zur Bewertung eines logischen VW-LAS Ausdrucks (s).\r\n\r\nMit dem Parameter \"ID_Expression\" wird der logische Ausdruck \xFCbergeben.\r\nDieser Wert wird mit dem Baustein \"VW_Codefile_STG_9_2_0\" geliefert.\r\n\r\nMit dem Parameter \"ID_Result\" wird der ID-String oder die Verkettung von ID-Strings \xFCbergeben.\r\nDie ID's m\xFCssen jeweils genau 12 Zeichen lang sein.\r\n\r\nDer Baustein liefert OK zur\xFCck, wenn der logische Ausdruck durch die ID's im Parameter \"ID_Result\" wahr wird, \r\nandernfalls NOK.\r\n\r\n\r\n";"";}
     Rights{"Write";"Read";}
     VersionInfo{
      CurVersion{1;1;"CRE1";}
      Version{0;1;"DSA";"- in Arbeit -";"cm";"23.07.2003 18:36:24";}
      Version{0;2;"DSA";"- in Arbeit -";"cm";"23.07.2003 18:42:43";}
      Version{1;0;"PAE";"Freigabe";"vw-admin";"06.06.2005 15:54:37";}
      Version{1;1;"CRE1";"- in Arbeit -";"admin";"21.02.2006 13:26:51";}}}}}}
 FunctionDef{
  Name{"DSA_Bibliothek";}
  LangName{"DSA_Bibliothek";"DSA_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;1;"AC";}
   Version{1;0;"AC";"- freigegeben -";"dsa-admin";"04.03.2003 11:44:35";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"admin";"03.07.2006 10:17:25";}}
  FunctionDef{
   Name{"StatistikElemente";}
   LangName{"StatistikElemente";"StatisticElements";}
   CvsVerHis{}
   Type{1;}
   Icon{1;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Sammlung von Bausteinen zur Statistikdatengenerierung";"Collection of components relating to the generation of\r\nstatistical data.\r\n\r\nIt only makes sense to execute test sequences if there is some way of storing the results.\r\nThat is why PRODIS-OFFICE has built-in functions to gather and generate result data.\r\nOn the other hand, not all modules supply results which are relevant to the test sequence.\r\nFor example, a module which scans a measurement from a control unit should generate result data,\r\nbut a module which simply increases a loop counter should not provide such data.\r\nIt is the job of the person creating the test sequence to determine which modules generate result data.\r\nThe following sub-chapter addresses further aspects of result data generation.\r\n\r\n\r\nSome special modules must be included in the test sequence if any result data are to be generated.\r\nResult data are also known as \"statistical data\", since such data are used to generate statistical\r\nevaluations regarding the number of OK and NOK tests, or regarding the measurements ascertained.\r\n\r\n\r\nIt is also necessary that the DTM function be active, and that a valid communication handle exists\r\nfor the communication between the test sequence and the DTM.\r\nDuring execution of the StatisticResult module, the result data record is transferred to the DTM\r\nfor transmission to the host computer.";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{0;4;"SVW";}
    Version{0;1;"SVW";"- in Arbeit -";"admin";"12.04.2004 19:57:30";}
    Version{0;2;"SVW";"- in Arbeit -";"admin";"12.04.2004 19:58:34";}
    Version{0;3;"SVW";"- in Arbeit -";"admin";"12.04.2004 20:03:39";}
    Version{0;4;"SVW";"- in Arbeit -";"admin";"12.04.2004 21:43:02";}}
   FunctionDef{
    Name{"Statistics_utils";}
    LangName{"Statistics_utils";"Statistics_utils";}
    CvsVerHis{}
    Type{1;}
    Icon{0;}
    Properties{"Begin";}
    FormalParam{}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"";}
    NodeCategory{"";}
    Info{"";"";}
    Rights{"Write";"Read";}
    VersionInfo{
     CurVersion{0;1;"nbmr";}
     Version{0;1;"nbmr";"[ Baustein importiert (neu) ]";"dsa";"05.05.2010 12:49:26";}}
    FunctionDef{
     Name{"StatistikText_NOK";}
     LangName{"StatistikText_NOK";"StatisticText_NOK";}
     CvsVerHis{}
     Type{1;}
     Icon{4;}
     Properties{"Begin";}
     FormalParam{
      InputParam{"Text1";
       LangName{"Text1";"Text1";}"TEXT";"";
       LangDesc{"Statistik Eintrag";"Statistic entry";}}}
     LocalVar{}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     MSLCode{"int _err;\r\nif (err == OK)\r\n\t_err = _statSetAsciiResult(OK, Text1, FOK);\r\nelse\r\n\t_err = _statSetAsciiResult(NOK, Text1, FMWNOK);\r\n";}
     NodeCategory{"";}
     Info{"";"Schreibt einen text in die Statistik.\r\nDie Bewertung dieses Statistikeintrages haengt von dem zuvor erzeugten Error ab. \r\nBei err == NOK - NOK Statistik.";}
     Rights{"Read";"Read";}
     VersionInfo{
      CurVersion{0;2;"CRE2A";}
      Version{0;1;"RHM";"- in Arbeit -";"admin";"27.08.2002 10:14:44";}
      Version{0;2;"CRE2A";"- in Arbeit -";"admin";"23.02.2009 10:40:26";}}}}}}
 FunctionDef{
  Name{"Werk_Spezifische_Bibliothek";}
  LangName{"Werk_Spezifische_Bibliothek";"Customer_specific_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"Import-Ablage\r\n";"";}
  Rights{"Write";"Read";}
  VersionInfo{}
  FunctionDef{
   Name{"Library_Shanghai";}
   LangName{"";"Library_Shanghai";}
   CvsVerHis{}
   Type{1;}
   Icon{0;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";"nok";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"";"";}
   Rights{"Write";"Read";}
   VersionInfo{}
   FunctionDef{
    Name{"SVW_String_Softwareversion";}
    LangName{"SVW_String_Softwareversion";"SVW_String_Softwareversion";}
    CvsVerHis{}
    Type{1;}
    Icon{1;}
    Properties{"Begin";}
    FormalParam{
     InputParam{"SoftwareFile";
      LangName{"SoftwareFile";"SoftwareFile";}"IniFileName";"CIniFile_Software";
      LangDesc{"Datendatei mit Softwareversionen";"";}}
     InputParam{"PNR_String";
      LangName{"PNR_String";"PNR_String";}"VW_Result_Tel";"DVWECUSoftwareNumber";
      LangDesc{"Teilenummer-Identifikation";"Partnumber ID string";}}
     InputParam{"ID_String";
      LangName{"ID_String";"ID_String";}"VW_Result_Tel";"DVWApplicationSoftwareVersionNumber";
      LangDesc{"gelesene STG-Identifikation";"ECU ID string";}}}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"int length;\r\nint position;\r\nstring\tiStr;\r\nstring\tVersion;\r\n\r\n// Aufbau INI-Datei\r\n// [Version]\r\n// ;Teilenummer=Softwareversionsarray (jeweils 4 Byte )\r\n// 03D676453=1020,1021\r\n\r\n// Softwareversionsdatei \xF6ffnen\r\niniLoad(SoftwareFile);\r\n\r\n// ID_String auf 4 byte begrenzen\r\n\r\nID_String = midstr (ID_String,0,4); \r\n\r\n// Softwareversion auslesen\r\nerr=iniString(SoftwareFile,\"Version\",PNR_String,&Version);\r\n_statSetValue (Version);\r\n\r\nif ( err == OK )\r\n {\r\n   // ggf. mehrere Softwareversionen extrahieren und im Vergleich per ODER verkn\xFCpfen\r\n   length=strlen(Version); \r\n   position = 0;\r\n   while ( position < length)\r\n    {\r\n      iStr = midstr (Version, position, 4);\r\n      if ( iStr == ID_String )\r\n       {\r\n         // Version gefunden -> R\xFCckgabe OK\r\n         err=OK;\r\n         iniUnload(SoftwareFile);\r\n         _statSetAsciiResult (err, ID_String, FOK);\r\n         return(err); \r\n       } \r\n     position = position + 5;\r\n    }\r\n  // Softwareversion nicht gefunden -> R\xFCckgabe NOK\r\n  err=NOK;\r\n  _statSetAsciiResult (err, ID_String, FMWNOK);\r\n }\r\nelse\r\n {\r\n _statSetValue ( \"no Version defined\");\r\n _statSetAsciiResult (NOK,ID_String, FUABBR);\r\n }\r\n\r\n// Softwareversionsdatei schliessen \r\niniUnload(SoftwareFile);\r\n  ";}
    NodeCategory{"";}
    Info{"Modul lie\xDFt nicht die Steuerger\xE4te-Identifikation aus dem Steuerger\xE4t, sondern nutzt die durch\r\nden VW-Dienst VW2000_ID_Lesen in der Variablen ID-String abgespeicherten Identifiktion.\r\n\r\nVergleicht Softwareversion aus SG-Identifikation mit gepflegter Softwareversion in einer \r\nINI-Datei. Referenzierung \xFCber 9-stellige Teilenummer des SG.\r\n\r\n\r\nAufbau INI-Datei\r\n[Version]\r\nTeilenummer=Softwareversionsarray (jeweils 4 Stellen )\r\n03D676453 =1020,1021\r\n03D676454 =1133\r\n";"";}
    Rights{"Write";"Read";}
    VersionInfo{
     CurVersion{0;3;"cp11a";}
     Version{0;1;"cp11a";"- in Arbeit -";"svw-admin";"08.04.2008 10:28:30";}
     Version{0;2;"cp11a";"- in Arbeit -";"svw-admin";"08.04.2008 10:30:47";}
     Version{0;3;"cp11a";"- in Arbeit -";"svw-admin";"08.04.2008 10:35:22";}}}}}
 FunctionDef{
  Name{"VW_spezifische_Bibliothek";}
  LangName{"VW_spezifische_Bibliothek";"VW_specific_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"Sammlung von Bausteinen zur Kommunikation mit Steuergeraeten von VW.";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;2;"ZPH18";}
   Version{1;0;"AC";"- freigegeben -";"vw-admin";"04.03.2003 11:56:19";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"07.08.2006 13:58:14";}
   Version{1;2;"ZPH18";"[ Baustein importiert (ersetzt) ]";"admin";"14.08.2007 15:07:01";}}
  FunctionDef{
   Name{"VW2000_Dienste";}
   LangName{"VW2000_Dienste";"VW2000_Dienste";}
   CvsVerHis{}
   Type{1;}
   Icon{0;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Sammlung von Bausteinen zur Kommunikation mit Steuerger\xE4ten von VW mit dem Protokoll K2000";"";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{1;3;"PAE";}
    Version{1;0;"AC";"- freigegeben -";"vw-admin";"17.02.2003 15:37:21";}
    Version{1;1;"AC";"- in Arbeit -";"vw-admin";"28.08.2003 17:40:34";}
    Version{1;2;"AC";"- in Arbeit -";"dsa-admin";"08.06.2004 08:55:47";}
    Version{1;3;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"25.07.2006 08:36:16";}}
   FunctionDef{
    Name{"VW2000_Dienste_2E";}
    LangName{"VW2000_Dienste_2E";"VW2000_Dienste_2E";}
    CvsVerHis{}
    Type{1;}
    Icon{0;}
    Properties{"Begin";}
    FormalParam{}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"";}
    NodeCategory{"";}
    Info{"SG-Identifikation schreiben mit Service 0x2e (WriteDataByIdentifier).\r\nDiese sollen in Zukunft 0x3B \"WriteDataByLocalIdentifer\" abloesen.";"Moduls write the ECU Id by using the KWP2000-Comand WriteDataByIdentifier (Requesttitel 0x22)\r\nand will replace 0x3B \"WriteDataByLocalIdentifer\".";}
    Rights{"Write";"Read";}
    VersionInfo{
     CurVersion{1;0;"PAE";}
     Version{0;1;"PAE";"- in Arbeit -";"vw-admin";"30.05.2005 15:53:21";}
     Version{0;2;"PAE";"- in Arbeit -";"vw-admin";"31.05.2005 11:15:52";}
     Version{1;0;"PAE";" Freigabe ";"vw-admin";"03.06.2005 16:04:15";}}
    FunctionDef{
     Name{"VW2000_Write_Kalibrierung";}
     LangName{"VW2000_Write_Kalibrierung";"VW2000_Write_Calibration";}
     CvsVerHis{}
     Type{1;}
     Icon{1;}
     Properties{"Begin";}
     FormalParam{
      InputParam{"DialogHndl";
       LangName{"DialogHndl";"DialogHndl";}"DialogTyp";"DIALOG_LOKAL";
       LangDesc{"";"\"\"";}}
      InputParam{"Zeile";
       LangName{"Zeile";"Zeile";}"DialogLine";"CDialogZeile1";
       LangDesc{"Ausgabezeile";"\"\"";}}
      InputParam{"Konfig_String";
       LangName{"Konfig_String";"Konfig_String";}"Codefile_Result_Str";"Dummy_Konfig_Str";
       LangDesc{"zu konfigurierender String";"\"\"";}}
      InputParam{"Hndl";
       LangName{"Hndl";"Hndl";}"VCIKANAL";"VCIKanal1";
       LangDesc{"VCI-Kanal";"\"\"";}}}
     LocalVar{
      LocVarDef{"Kommentar";
       LangName{"Kommentar";"Kommentar";}"Locvar";"TEXT";
       LangDesc{"";"";}
       LangText{"\"programmieren\"";"\"\"";"\"programming\"";}"Const";}
      LocVarDef{"KommentarFehler";
       LangName{"KommentarFehler";"KommentarFehler";}"Locvar";"TEXT";
       LangDesc{"";"";}
       LangText{"\"Programmierfehler\"";"\"\"";"\"programming error\"";}"Const";}
      LocVarDef{"KommentarNOK";
       LangName{"KommentarNOK";"KommentarNOK";}"Locvar";"TEXT";
       LangDesc{"";"";}
       LangText{"\"Programmstring ung\xFCltig\"";"\"\"";"\"programmstring wrong\"";}"Const";}
      LocVarDef{"KommentarOK";
       LangName{"KommentarOK";"KommentarOK";}"Locvar";"TEXT";
       LangDesc{"";"";}
       LangText{"\"Programmierung OK\"";"\"\"";"\"programming OK\"";}"Const";}}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     MSLCode{"// dsi0pax - 23.05.07 Prototyp erstellt.\r\n//      sz - 24.05.07 Statistik (Begrenzung auf 1,5kByte), Doku angepasst.\r\n// dpp7pda - 19.02.09 Baustein f\xFCr KWP2000 Steuerger\xE4te angepasst\r\n\r\nint\tKonfigCount;\r\nint\tService;\r\nstring\tLID;\r\nint\tKonfigLen;\r\nstring\tTeilKonfigStr;\r\nstring\ttelbuf;\r\n\r\n\r\nint _err;\r\n\r\nstring sStatistik;\r\n\r\n\r\n\r\nif (Zeile > 0)\r\n\t_dlgMultiSetLine (DialogHndl, Zeile , Kommentar);\r\n\r\nerr = OK;\r\n\r\n#ifdef DEBUGZDC\r\n\terrDebug(1, \"Konfig_String from ZDC: \", hexstr(Konfig_String));\r\n#endif\r\n\r\nif (strlen(Konfig_String) <= 4)\r\n{\r\n\t_statSetAsciiResult (NOK, KommentarNOK, FUABBR);\r\n\treturn NOK;\r\n}\r\n\r\nKonfigCount  = binstrtoi(midstr(Konfig_String, 0, 4));\r\nKonfig_String = midstr(Konfig_String, 4, -1);\r\n\r\nsStatistik = \"\";\r\n\r\nwhile ((KonfigCount > 0) && (err == OK))\r\n{\r\n\tif (strlen(Konfig_String) <= 8)\r\n\t{\r\n\t\t_statSetAsciiResult (NOK, KommentarNOK, FUABBR);\r\n\t\treturn NOK;\r\n\t} \r\n\tService = binstrtoi(midstr(Konfig_String, 3, 1));\r\n\tKonfig_String = midstr(Konfig_String, 4, -1);\r\n\r\n\tLID = midstr(Konfig_String, 2, 2);\r\n\tKonfig_String = midstr(Konfig_String, 4, -1);\r\n\r\n\tKonfigLen = binstrtoi(midstr(Konfig_String, 0, 4));\r\n\tKonfig_String = midstr(Konfig_String, 4, -1);\r\n\r\n\tTeilKonfigStr = midstr(Konfig_String, 0, KonfigLen);\r\n\tKonfig_String  = midstr(Konfig_String, KonfigLen, -1);\r\n#ifdef DEBUGZDC\r\n\terrDebug(2, \"Count Konfig: \", KonfigCount);\r\n\terrDebug(3, \"Service: \", Service, \" LID: 0x\", hexstr(LID), \" Data: \", TeilKonfigStr);\r\n#endif\r\n\r\n\tif (strlen(TeilKonfigStr) < KonfigLen)\t\r\n\t{\r\n\t\t_statSetAsciiResult (NOK, KommentarNOK, FUABBR);\r\n\t\treturn NOK;\r\n\t}\r\n\r\n\t\r\n\tif (Service == 0x2E)\r\n\t{\r\n\t\r\n\t\terr = _vciDataExchange (Hndl, Service, 0x6e, LID + TeilKonfigStr, &telbuf);\r\n\r\n\t\tif (err)\r\n\t\t\t{\r\n\t\t\t\t_vciStatVciError (Hndl);\r\n\t\t\t\t_statSetStrResult (ABBR, telbuf, FSTGI);\r\n\t\t\t}\r\n\t\telse\r\n\t\t\t{\r\n       \t\t\t _statSetStrResult(err,TeilKonfigStr,FOK);\r\n\t\t\t}\r\n\r\n\r\n\t\tLID = hexstr(LID);\r\n\t\tstrupr(&LID);\r\n\r\n\t\tif ( err != OK )\t\t\r\n\t\t{  \r\n\t\t\tif (strlen(sStatistik + hexstr(TeilKonfigStr)) < 1536)\r\n\t\t\t\tsStatistik = sStatistik + \"Ident.: 0x\" + LID + \" Data: \" + hexstr(TeilKonfigStr) + \" Response: NOK\" + \"\\n\";\r\n\t\t\telse\r\n\t\t\t\tsStatistik = sStatistik + \"[...]\";\t\r\n\t\t\t_statSetStrResult(NOK, sStatistik, FUABBR);\r\n\t\t\treturn NOK;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tif (strlen(sStatistik + hexstr(TeilKonfigStr)) < 1536)\r\n\t\t\t\tsStatistik = sStatistik + \"Ident.: 0x\" + LID + \" Data: \" + hexstr(TeilKonfigStr) + \" Response: OK\" + \"\\n\";\r\n\t\t}\r\n\t\r\n\t}\r\n\telse\r\n\t{\r\n\t\tif (strlen(sStatistik) < 1536)\r\n\t\t\tsStatistik = sStatistik + \"Ident.: 0x\" + LID + \" no 0x2E Service!! Prog: NOK\";\r\n\t\t_statSetStrResult(NOK, sStatistik, FUABBR);\r\n\t\treturn NOK;\r\n\t}\r\n\r\n\tKonfigCount = KonfigCount - 1;\r\n}\r\n//errDebug(0, sStatistik, OK);\r\n\r\nif (strlen(sStatistik + hexstr(TeilKonfigStr)) >= 1536)\r\n\tsStatistik = sStatistik + \"[...]\";\t\r\n\r\n_statSetStrResult(OK, sStatistik, FOK);";}
     NodeCategory{"";}
     Info{">>POFF.PDRS.U.MCDCom.01.08\r\n\r\nDieser Baustein schreibt die Konfigurationsdatendaten aus dem Parameter \"Konfig_String\" in ein KWP Steuerger\xE4t.\r\n\r\nIn \"Konfig_String\" werden die Konfigurationsdaten aus dem Baustein ZDC_KonfigurationL \xFCbergeben.\r\n\r\nDie Bewertung dieses Bausteines ist OK, wenn das Schreiben in Ordnung war.\r\n\r\nDer Baustein ist auf die Verarbeitung von 4Byte Adress- und L\xE4ngeninforationen ausgelegt.\r\n\r\nIn die Statistik wird ein Statustext geschrieben.\r\n\r\n\r\ndpp7pda - 19.02.09 Bastein f\xFCr KWP2000 Steuerger\xE4te angepasst\r\ndsi0pax - 23.05.07 Prototyp erstellt.\r\nsz - 24.05.07 Statistik angepasst. (Begrenzung auf 1,5kByte)";"";}
     Rights{"Write";"Read";}
     VersionInfo{
      CurVersion{0;8;"CP41A";}
      Version{0;1;"ZPH18";"- in Arbeit -";"dsa-admin";"19.02.2009 13:17:33";}
      Version{0;2;"ZPH18";"- in Arbeit -";"dsa-admin";"19.02.2009 13:23:14";}
      Version{0;3;"ZPH18";"- in Arbeit -";"dsa-admin";"19.02.2009 13:33:11";}
      Version{0;4;"ZPH18";"- in Arbeit -";"dsa-admin";"19.02.2009 13:36:13";}
      Version{0;5;"ZPH18";"- in Arbeit -";"dpp7pda";"19.02.2009 14:12:40";}
      Version{0;6;"ZPH18";"- in Arbeit -";"dpp7pda";"18.06.2009 11:04:42";}
      Version{0;7;"ZPH18";"- in Arbeit -";"dpp7pda";"24.03.2010 07:35:56";}
      Version{0;8;"CP41A";"- in Arbeit -";"admin";"13.08.2010 11:20:02";}}}}}}
 FunctionDef{
  Name{"VW_spezifische_Bibliothek";}
  LangName{"VW_spezifische_Bibliothek";"VW_specific_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"Sammlung von Bausteinen zur Kommunikation mit Steuergeraeten von VW.";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;2;"ZPH18";}
   Version{1;0;"AC";"- freigegeben -";"vw-admin";"04.03.2003 11:56:19";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"07.08.2006 13:58:14";}
   Version{1;2;"ZPH18";"[ Baustein importiert (ersetzt) ]";"admin";"14.08.2007 15:07:01";}}
  FunctionDef{
   Name{"VW_Codefileauswahl";}
   LangName{"VW_Codefileauswahl";"VW_Codefileauswahl";}
   CvsVerHis{}
   Type{1;}
   Icon{0;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Platzhalter f\xFCr Pr\xFCfschritte";"";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{0;1;"PAE";}
    Version{0;1;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"24.07.2006 17:06:13";}}
   FunctionDef{
    Name{"CodefileLangeAnpassung_KWP2000_uf";}
    LangName{"CodefileLangeAnpassung_KWP2000_uf";"CodefileLangeAnpassung_KWP2000_uf";}
    CvsVerHis{}
    Type{1;}
    Icon{0;}
    Properties{"Begin";}
    FormalParam{
     InputParam{"DialogHndl";
      LangName{"DialogHndl";"DialogHndl";}"DialogTyp";"DIALOG_LOKAL";
      LangDesc{"";"\"\"";}}
     InputParam{"Zeile";
      LangName{"Zeile";"Zeile";}"DialogLine";"CDialogZeile1";
      LangDesc{"Ausgabezeile";"\"\"";}}
     InputParam{"Hndl";
      LangName{"Hndl";"Hndl";}"VCIKANAL";"VCIKanal1";
      LangDesc{"VCI-Kanal";"\"\"";}}
     InputParam{"Anpassung_String";
      LangName{"Anpassung_String";"Anpassung_String";}"Codefile_Result_Str";"Dummy_Anpassung_String";
      LangDesc{"zu programmierender String";"\"\"";}}}
    LocalVar{
     LocVarDef{"KommentarAnpassung";
      LangName{"KommentarAnpassung";"KommentarAnpassung";}"Locvar";"TEXT";
      LangDesc{"";"";}
      LangText{"\"Anpassung\"";"\"\"";"\"adaption\"";}"Const";}
     LocVarDef{"KommentarFehler";
      LangName{"KommentarFehler";"";}"Locvar";"TEXT";
      LangDesc{"";"";}
      LangText{"\"Fehler\"";"\"\"";"\"error\"";}"Const";}}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"// sz, 13.01.10 bei kurzer Anpassung f\xFCr SG mit langer Anpassung: Sonderbehandlung 1 Byte L\xE4nge\r\n// km, 28.10.09 f\xFCr die Auswahl der verwendeten Anpassung (kurze oder lange)\r\n// wird die unterst\xFCtzte Funktion ausgelesen\r\n// \\x01\\x0a -> lange Anpassung; \\x01\\x03 -> kurze Anpassung\r\n\r\n#pragma using VW2000_LangeAnpassung_Komplett_uf // err = VW2000_LangeAnpassung_Komplett_uf(err, Hndl, DlgHndl, Kanal, Anpassung, Text, MesswerteAuswert, &Rueckgabewert, &RecvTel);\r\n#pragma using VW2000_Anpassung_Komplett // err = VW2000_Anpassung_Komplett(err, Hndl, DlgHndl, Kanal, Anpassung, Text, &Rueckgabewert, &RecvTel);\r\n\r\nint\t\tAnzahl = 0;\r\nstring\tText;\r\nint\t\tKanal;\r\nint\t\tAnpassung;\r\nstring\tStatString = \"Anpassung\" + \" \";\r\nint\t\tRueckgabewert;\r\nstring\tRecvTel;\r\nint\t\tPos = 0;\r\nint\t\tAnpassLen = 0;\r\nint     \tMesswerteAuswert = 0;\r\nstring\tLangeAnpassung;\r\n\r\nint\t\tAnpassungstyp;\r\nstring \tServTel;\r\n\r\nAnpassungstyp = 1;\t// lange Anpassung soll unterstuetzt werden\r\n\r\n// Lesen der Unterst\xFCtzten Funktionen\r\nvciExDtaRead (Hndl, &ServTel);\r\nif ( (0 > strstr (ServTel, \"\\x01\\x0a\")) && (0 > strstr (ServTel, \"\\x01\\x03\")) )  // lange oder kurze Anpassung unterst\xFCtzt? \r\n{\r\n\t_vciStatVciError (Hndl);\r\n\t//_statSetStrResult (ABBR, KommentarFunktionNOK, FSTGI);\r\n\t_statSetAsciiResult(ABBR, sprintf(\"Funktion nicht unterstuetzt\"), FSTGI);\r\n\treturn(ABBR);\r\n}\r\nelse\r\n{\r\n\tif (0 > strstr (ServTel, \"\\x01\\x0a\"))\r\n\t\tAnpassungstyp = 0;\t// kurze Anpassung wird unterst\xFCtzt\r\n}\r\n\r\nif (strlen(Anpassung_String) > 2)\r\n\tAnzahl = Anpassung_String[0]*256 + Anpassung_String[1];\r\n\r\n#ifdef DEBUGANPASSUNG\r\nerrDebug (0, \"Anpassung_Typ: \",Anpassungstyp);\r\nerrDebug (0, \"Anpassung String: \",midstr (hexstr(Anpassung_String), 0, -1));\r\nerrDebug (0, \"Anzahl Anpassungen: \",Anzahl);\r\n#endif\r\n\r\nif (Anzahl > 0)\r\n{\r\n\terr = NOK;\r\n\twhile (Anzahl > 0) \r\n\t\t{\r\n\t\tKanal = Anpassung_String[Pos+2] * 256 + Anpassung_String[Pos+3];\r\n\t\tAnpassung = Anpassung_String[Pos+4] * 256 + Anpassung_String[Pos+5];\r\n\t\tText = \"Anpassung\" + \" \" + sprintf(\"%d\",Kanal) ;\r\n#ifdef DEBUGANPASSUNG\r\nerrDebug (0, \"Kanal: \", Kanal, \", Anpassung: \", Anpassung);\r\n#endif\r\n\t\terr = VW2000_Anpassung_Komplett(err, Hndl, DialogHndl, Kanal, Anpassung, Text, &Rueckgabewert, &RecvTel);\r\n\t\tif (err != OK)\r\n\t\t\t{\r\n\t\t\terr = NOK;\r\n\t\t\tStatString = \"Fehler\" + \" \" + \"Anpassung\" + \" \" + sprintf(\"%d=%d\",Kanal,Anpassung);\r\n\t\t\tbreak;\r\n\t\t\t}\r\n\t\telse StatString = StatString + sprintf(\"%d=%d\",Kanal,Anpassung) + \";\";\r\n\t\tPos = Pos +4;\r\n\t\tAnzahl = Anzahl -1;\r\n\t\tif (Anpassung_String[Pos+2] * 256 + Anpassung_String[Pos+3] <= 0)\r\n\t\t\tbreak;\r\n\t\t}\r\n}\r\nelse \r\n{\r\n\tAnzahl = binstrtoi(midstr(Anpassung_String,0,4));\r\n\tAnpassung_String = midstr(Anpassung_String,4,-1);\r\n#ifdef DEBUGANPASSUNG\r\nerrDebug (0, \"Anpassung String: \",midstr (hexstr(Anpassung_String), 0, -1));\r\nerrDebug (0, \"Anzahl Anpassungen: \",Anzahl);\r\n#endif\r\n\terr = NOK;\r\n\twhile (Anzahl > 0)\r\n\t{\r\n\t\tKanal = binstrtoi(midstr(Anpassung_String,0,4));\r\n\t\tAnpassung_String = midstr(Anpassung_String,4,-1);\r\n\t\t\r\n\t\tText = \"Anpassung\" + \" \" + sprintf(\"%d\",Kanal) ;\r\n\t\tAnpassLen = binstrtoi(midstr(Anpassung_String,0,4));\r\n#ifdef DEBUGANPASSUNG\r\nerrDebug (0, \"Anpassung String: \",midstr (hexstr(Anpassung_String), 0, -1));\t\t\r\nerrDebug (0, sprintf (\"AnpassLen: %d\",AnpassLen));\r\n#endif\r\n\t\tAnpassung_String = midstr(Anpassung_String,4,-1);\r\n\t\tif ((AnpassLen <= 2) && (Anpassungstyp == 0))\r\n\t\t{\r\n\t\t\tAnpassung = binstrtoi(midstr(Anpassung_String,0,AnpassLen));\r\n\t\t\tAnpassung_String = midstr(Anpassung_String,AnpassLen,-1);\r\n#ifdef DEBUGANPASSUNG\r\nerrDebug (0, \"Kanal: \", Kanal, \", Anpassung: \", Anpassung, \", Anpassung String: \",midstr (hexstr(Anpassung_String), 0, -1));\r\n#endif\t\t\t\r\n\t\t\terr = VW2000_Anpassung_Komplett(err, Hndl, DialogHndl, Kanal, Anpassung, Text, &Rueckgabewert, &RecvTel);\r\n\r\n\t\t\tif (err != OK)\r\n\t\t\t{\r\n\t\t\t\terr = NOK;\r\n\t\t\t\tStatString = \"Fehler\" + \" \" + \"Anpassung\" + \" \" + sprintf(\"%d=%d\",Kanal,Anpassung);\r\n\t\t\t\t// StatString = \"Fehler\" + \" \" + \"Anpassung\" + \" \" + sprintf(\"%d\",Kanal);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\telse \r\n\t\t\t\tStatString = StatString + sprintf(\"%d=%d\",Kanal,Anpassung) + \";\";\r\n\t\t\t\t// else StatString = StatString + sprintf(\"%d\",Kanal) + \";\";\r\n\r\n\t\t}\r\n\t\telse if ((AnpassLen > 0) && (Anpassungstyp == 1))\r\n\t\t{\r\n\t\t\tLangeAnpassung = midstr(Anpassung_String,0,AnpassLen);\r\n\t\t\tAnpassung_String = midstr(Anpassung_String,AnpassLen,-1);\r\n#ifdef DEBUGANPASSUNG\r\nerrDebug (0, \"Kanal: \", Kanal, \", lange Anpassung: \", hexstr (LangeAnpassung), \", Anpassung String: \",midstr (hexstr(Anpassung_String), 0, -1));\r\n#endif\t\t\t\r\n\t\t\terr = VW2000_LangeAnpassung_Komplett_uf(err, Hndl, DialogHndl, Kanal, LangeAnpassung, Text, MesswerteAuswert, &Rueckgabewert, &RecvTel);\r\n\t\t\tif (err != OK)\r\n\t\t\t{\r\n\t\t\t\terr = NOK;\r\n\t\t\t\tStatString = \"Fehler\" + \" \" + \"Anpassung\" + \" \" + sprintf(\"%d=%d\",Kanal,hexstr(LangeAnpassung));\r\n\t\t\t\t// StatString = \"Fehler\" + \" \" + \"Anpassung\" + \" \" + sprintf(\"%d\",Kanal);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\tStatString = StatString + sprintf(\"%d=0x%s\",Kanal,hexstr(LangeAnpassung)) + \";\";\r\n\t\t}\r\n\t\tAnzahl = Anzahl -1;\r\n\t}\r\n}\r\n_statSetAsciiResult (err, StatString, FOK);";}
    NodeCategory{"";}
    Info{"Dieser Baustein schreibt die Anpassungsdaten aus dem Parameter \"Anpassung_String\" in ein \r\nSteuergeraet mit VW2000 Protokoll.\r\n\r\nIn \"Anpassung_String\" werden die Anpassungsdaten aus dem Codefile / ZDC uebergeben. \r\nEs werden \"normale\" Anpassungen (1 Byte Kanal, max. 2 Byte Wert) und / oder \"lange\" Anpassungen\r\n(1 Byte Kanal, max. 80 Byte Wert ) geschrieben.\r\n\r\nWegen der langen Anpassung wurde das Uebergabeformat von \"Anpassung_String\" erweitert:\r\n4 Byte: Anzahl Anpassungen; 4 Byte: 1. Anpassungs-Kanal; 4 Byte: 1. Laenge n der einzelnen Anpassung; \r\nn Byte: 1. Anpassungswert; 4 Byte: 2. Anpassungs-Kanal; 4 Byte: 2. Laenge m der einzelnen Anpassung; \r\nm Byte: 2. Anpassungswert; ...\r\n\r\nDas \"alte\" Format kann nach wie vor Verarbeitet werden.\r\n\r\nDie Bewertung dieses Bausteines ist OK, wenn das Schreiben der Daten in Ordnung war. \r\nDie Bewertung ist NOK, bei Datenanzahl = 0 oder wenn das Schreiben eines Kanals NOK war.\r\n\r\nIn die Statistik wird ein Statustext geschrieben.\r\n\r\n02.01.2006, sz: Erstellt\r\nkm, 28.10.09 f\xFCr die Auswahl der verwendeten Anpassung (kurze oder lange) wird die unterst\xFCtzte Funktion ausgelesen\r\nsz, 13.01.10 bei kurzer Anpassung f\xFCr SG mit langer Anpassung: Sonderbehandlung 1 Byte L\xE4nge";"";}
    Rights{"Write";"Read";}
    VersionInfo{
     CurVersion{0;19;"cp32";}
     Version{0;1;"ING";"- in Arbeit -";"km";"28.10.2009 11:43:30";}
     Version{0;2;"ING";"- in Arbeit -";"km";"28.10.2009 12:20:29";}
     Version{0;3;"ING";"- in Arbeit -";"km";"28.10.2009 12:54:39";}
     Version{0;4;"ING";"- in Arbeit -";"km";"28.10.2009 13:07:03";}
     Version{0;5;"ING";"- in Arbeit -";"km";"28.10.2009 13:11:28";}
     Version{0;6;"ING";"- in Arbeit -";"km";"28.10.2009 13:15:45";}
     Version{0;7;"ING";"- in Arbeit -";"km";"28.10.2009 13:27:33";}
     Version{0;8;"ING";"- in Arbeit -";"km";"28.10.2009 13:37:00";}
     Version{0;9;"ING";"- in Arbeit -";"km";"28.10.2009 13:46:08";}
     Version{0;10;"ING";"- in Arbeit -";"km";"28.10.2009 13:53:49";}
     Version{0;11;"ING";"- in Arbeit -";"km";"28.10.2009 14:24:18";}
     Version{0;12;"ING";"- in Arbeit -";"km";"28.10.2009 15:00:18";}
     Version{0;13;"ING";"- in Arbeit -";"km";"28.10.2009 16:55:26";}
     Version{0;14;"ING";"- in Arbeit -";"km";"28.10.2009 16:58:21";}
     Version{0;15;"ING";"- in Arbeit -";"km";"28.10.2009 17:01:48";}
     Version{0;16;"ING";"- in Arbeit -";"km";"28.10.2009 17:08:55";}
     Version{0;17;"PAE";"- in Arbeit -";"dsa-admin";"13.01.2010 17:39:47";}
     Version{0;18;"PAE";"- in Arbeit -";"dsa-admin";"13.01.2010 17:40:47";}
     Version{0;19;"cp32";"- in Arbeit -";"admin";"25.08.2011 09:15:34";}}}}}
 FunctionDef{
  Name{"VW_spezifische_Bibliothek";}
  LangName{"VW_spezifische_Bibliothek";"VW_specific_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"Sammlung von Bausteinen zur Kommunikation mit Steuergeraeten von VW.";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;2;"ZPH18";}
   Version{1;0;"AC";"- freigegeben -";"vw-admin";"04.03.2003 11:56:19";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"07.08.2006 13:58:14";}
   Version{1;2;"ZPH18";"[ Baustein importiert (ersetzt) ]";"admin";"14.08.2007 15:07:01";}}
  FunctionDef{
   Name{"VW_Codefileauswahl";}
   LangName{"VW_Codefileauswahl";"VW_Codefileauswahl";}
   CvsVerHis{}
   Type{1;}
   Icon{0;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Platzhalter f\xFCr Pr\xFCfschritte";"";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{0;1;"PAE";}
    Version{0;1;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"24.07.2006 17:06:13";}}
   FunctionDef{
    Name{"VW_Xml_SGML";}
    LangName{"VW_Xml_SGML";"VW_Xml_SGML";}
    CvsVerHis{}
    Type{1;}
    Icon{0;}
    Properties{"Begin";}
    FormalParam{}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"";}
    NodeCategory{"";}
    Info{"";"";}
    Rights{"Write";"Read";}
    VersionInfo{
     CurVersion{0;1;"ZPH18";}
     Version{0;1;"ZPH18";"[ Baustein importiert (neu) ]";"admin";"14.08.2007 15:17:10";}}
    FunctionDef{
     Name{"GetFTC_Code";}
     LangName{"GetFTC_Code";"GetFTC_Code";}
     CvsVerHis{}
     Type{1;}
     Icon{0;}
     Properties{"Begin";}
     FormalParam{
      OutputParam{"Result";
       LangName{"Result";"Result";}"STRING";"";
       LangDesc{"";"\"\"";}}}
     LocalVar{}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     MSLCode{"int Tmp_Int;\r\n\r\nTmp_Int = GeraeteNr_VW * 8;\r\nTmp_Int = Tmp_Int + ((ImporteursNr_VW & 0x380) / 0x80);\r\n*Result = midstr(itobinstr(Tmp_Int),1,3);\r\n\r\nTmp_Int = ImporteursNr_VW * 2;\r\nif (WSC_VW > 0xffff)\r\n    Tmp_Int = Tmp_Int +1;\r\n*Result = *Result + midstr(itobinstr(Tmp_Int),3,1);\r\n\r\nTmp_Int = WSC_VW & 0xffff;\r\n*Result = *Result + midstr(itobinstr(Tmp_Int),2,2);";}
     NodeCategory{"";}
     Info{"Baustein zum berechnen des FTC-Code.\r\n\r\nIn \"Result\" wird der berechnete Code aus Ger\xE4tenummer, Importeursnummer und WSC ausgegeben.";"";}
     Rights{"Write";"Read";}
     VersionInfo{
      CurVersion{0;4;"ZPH18";}
      Version{0;1;"MOS";"- in Arbeit -";"mg";"03.02.2004 07:39:44";}
      Version{0;2;"MOS";"- in Arbeit -";"mg";"03.02.2004 07:42:03";}
      Version{0;3;"MOS";"- in Arbeit -";"dsa-admin";"13.02.2004 09:20:25";}
      Version{0;4;"ZPH18";"[ Baustein importiert (neu) ]";"admin";"14.08.2007 15:17:10";}}}}}}
 FunctionDef{
  Name{"VW_spezifische_Bibliothek";}
  LangName{"VW_spezifische_Bibliothek";"VW_specific_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"Sammlung von Bausteinen zur Kommunikation mit Steuergeraeten von VW.";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;2;"ZPH18";}
   Version{1;0;"AC";"- freigegeben -";"vw-admin";"04.03.2003 11:56:19";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"07.08.2006 13:58:14";}
   Version{1;2;"ZPH18";"[ Baustein importiert (ersetzt) ]";"admin";"14.08.2007 15:07:01";}}
  FunctionDef{
   Name{"UDS";}
   LangName{"UDS";"UDS";}
   CvsVerHis{}
   Type{1;}
   Icon{0;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Strukturbaustein zur Unterschiedung UDS-Protokoll";"";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{0;4;"ZPH18";}
    Version{0;1;"ING";"- in Arbeit -";"dsa-admin";"06.12.2005 09:55:30";}
    Version{0;2;"ING";"- in Arbeit -";"dsa-admin";"06.12.2005 09:58:03";}
    Version{0;3;"AC";"[ Baustein importiert (neu) ]";"dsa-admin";"17.01.2006 16:38:13";}
    Version{0;4;"ZPH18";"[ Baustein importiert (neu) ]";"admin";"14.08.2007 15:17:10";}}
   FunctionDef{
    Name{"UDS_WriteDataByIdentifier";}
    LangName{"UDS_WriteDataByIdentifier";"UDS_WriteDataByIdentifier";}
    CvsVerHis{}
    Type{1;}
    Icon{1;}
    Properties{"Begin";}
    FormalParam{
     InputParam{"Hndl";
      LangName{"Hndl";"Hndl";}"VCIKANAL";"VCIKanal1";
      LangDesc{"VCI-Kanal";"";}}
     InputParam{"RecordDataIdent";
      LangName{"RecordDataIdent";"RecordDataIdent";}"UDS_RecordDataIdentifier";"";
      LangDesc{"RecordDataIdentifier";"RecordDataIdentifier";}}
     InputParam{"Data";
      LangName{"Data";"Data";}"UDS_Data";"";
      LangDesc{"Data";"";}}
     OutputParam{"RecvTel";
      LangName{"RecvTel";"RecvTel";}"VCIResult";"DVciResult";
      LangDesc{"erhaltenes Datentelegramm";"";}}}
    LocalVar{
     LocVarDef{"IllegalDataIdent";
      LangName{"IllegalDataIdent";"IllegalDataIdent";}"Locvar";"TEXT";
      LangDesc{"";"";}
      LangText{"\"Illegaler DataIdent\"";"\"Illegaler DataIdent\"";"\"Illegaler DataIdent\"";}"Const";}}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"string RecordData;\r\n\r\nif ((RecordDataIdent < 0) || (RecordDataIdent > 0xffff))\r\n\t{\r\n\terr = ABBR;\r\n\t_statSetAsciiResult(ABBR,IllegalDataIdent,FSTGI);\r\n\treturn err;\r\n\t}\r\n\r\nRecordData = midstr(itobinstr (RecordDataIdent & 0xffff), 2, 2);\r\n\r\nerr = _vciDataExchange (Hndl, 0x2e, 0x6e, RecordData+Data, RecvTel);\r\nif ( err != OK )\r\n\t{\r\n\terr = NOK;\r\n\t_vciStatVciError (Hndl);\r\n\t_statSetStrResult(err,*RecvTel,FSTGI);\r\n\t}\r\nelse\r\n\t_statSetResult(OK,FOK);\r\n";}
    NodeCategory{"";}
    Info{"Mit diesem Service werden beliebige Daten in den Server (z.B.ECU) geschrieben. Die Datenart wird in der\r\nClient-Anforderung und innerhalb der System-Antwort durch den RecordDataIdentifier-Parameter (\xE0 2Byte)\r\ngenauer beschrieben und beinhalten z.B. Prozess-, Parameter-, Identifikations- oder Codierwerte des Systems.\r\nMit diesem Service ist ein elektronisches System vollst\xE4ndig konfigurierbar.\r\n\r\nDabei wird der UDS_Befehl \"WriteDataByIdentifier\" ( Blocktitel 0x2e) verwendet. Der RecordDataIdentifier stellt\r\nder Zugriff zu einem bestimmten String im STG dar. Der Data-Wert mu\xDF mit dem Zugriff \xFCbereinstimmen, da\xDF hei\xDFt\r\ndie L\xE4nge und der Aufbau werden von STG \xFCberpr\xFCft.\r\n\r\nDie Bewertung des Pr\xFCfschrittes ist immer OK, wenn der STG-Befehl erfolgreich ausgef\xFChrt werden konnte.\r\nDie Bewertung des Pr\xFCfschrittes ist immer NOK, wenn der STG-Befehl abgesetzt wird, aber eine negative Antwort erfolg.\r\nDie Bewertung des Pr\xFCfschrittes ist immer ABBR, wenn eine Illegaler DataIdent vorgegeben wurde.\r\n\r\nDie \"RecordDataIdent\" mu\xDF eiinen Wert von 0x0000 bis 0xffff haben.\r\n\r\nIn die Statistik wird im \r\n   OK-Fall nur die Bewertung des Pr\xFCfschrittes gespeichert.\r\n   NOK-Fall die die vollst\xE4ndige Antwort des STG gespeichert.\r\n   ABBR-Fall \"Illegaler DataIdent\" gespeichert.\r\n";"";}
    Rights{"Write";"Read";}
    VersionInfo{
     CurVersion{0;20;"nbmr";}
     Version{0;1;"ING";"- in Arbeit -";"dsa-admin";"08.12.2005 11:13:47";}
     Version{0;2;"ING";"- in Arbeit -";"dsa-admin";"08.12.2005 11:15:40";}
     Version{0;3;"ING";"- in Arbeit -";"dsa-admin";"08.12.2005 11:16:37";}
     Version{0;4;"ING";"- in Arbeit -";"dsa-admin";"08.12.2005 11:22:20";}
     Version{0;5;"ING";"- in Arbeit -";"dsa-admin";"08.12.2005 11:25:51";}
     Version{0;6;"ING";"- in Arbeit -";"dsa-admin";"08.12.2005 11:26:26";}
     Version{0;7;"ING";"- in Arbeit -";"dsa-admin";"08.12.2005 12:41:00";}
     Version{0;8;"ING";"- in Arbeit -";"dsa-admin";"08.12.2005 12:51:37";}
     Version{0;9;"ING";"- in Arbeit -";"dsa-admin";"08.12.2005 12:54:54";}
     Version{0;10;"ING";"- in Arbeit -";"dsa-admin";"08.12.2005 12:55:49";}
     Version{0;11;"ING";"- in Arbeit -";"dsa-admin";"08.12.2005 14:23:12";}
     Version{0;12;"ING";"- in Arbeit -";"dsa-admin";"08.12.2005 14:23:42";}
     Version{0;13;"ING";"- in Arbeit -";"dsa-admin";"11.12.2005 11:01:11";}
     Version{0;14;"ING";"- in Arbeit -";"dsa-admin";"11.12.2005 11:52:21";}
     Version{0;15;"ING";"- in Arbeit -";"dsa-admin";"15.12.2005 10:08:04";}
     Version{0;16;"ING";"- in Arbeit -";"dsa-admin";"20.12.2005 08:32:33";}
     Version{0;17;"ING";"- in Arbeit -";"dsa-admin";"20.12.2005 08:40:01";}
     Version{0;18;"ING";"- in Arbeit -";"dsa-admin";"20.12.2005 08:40:21";}
     Version{0;19;"AC";"[ Baustein importiert (neu) ]";"dsa-admin";"17.01.2006 16:38:14";}
     Version{0;20;"nbmr";"[ Baustein importiert (ersetzt) ]";"dsa";"05.05.2010 13:07:58";}}}}}
 FunctionDef{
  Name{"Werk_Spezifische_Bibliothek";}
  LangName{"Werk_Spezifische_Bibliothek";"Customer_specific_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"Import-Ablage\r\n";"";}
  Rights{"Write";"Read";}
  VersionInfo{}
  FunctionDef{
   Name{"Library_Shanghai";}
   LangName{"";"Library_Shanghai";}
   CvsVerHis{}
   Type{1;}
   Icon{0;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";"nok";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"";"";}
   Rights{"Write";"Read";}
   VersionInfo{}
   FunctionDef{
    Name{"SVW_CodefileProgrammLang_KWP2000";}
    LangName{"SVW_CodefileProgrammLang_KWP2000";"SVW_CodefileProgrammLang_KWP2000";}
    CvsVerHis{}
    Type{1;}
    Icon{0;}
    Properties{"Begin";}
    FormalParam{
     InputParam{"DialogHndl";
      LangName{"DialogHndl";"DialogHndl";}"DialogTyp";"DIALOG_LOKAL";
      LangDesc{"Dialog handle";"Dialog handle";}}
     InputParam{"Zeile";
      LangName{"Zeile";"Zeile";}"DialogLine";"CDialogZeile1";
      LangDesc{"Ausgabezeile";"Output line";}}
     InputParam{"Hndl";
      LangName{"Hndl";"Hndl";}"VCIKANAL";"VCIKanal1";
      LangDesc{"VCI-Kanal";"VCI channel";}}
     InputParam{"ProgL_String";
      LangName{"ProgL_String";"ProgL_String";}"Codefile_Result_Str";"Dummy_Prog_String";
      LangDesc{"Programmier String im 4-Byte Adressformat";"Programming string; 4-Byte address format";}}
     InputParam{"MaxBlockLength";
      LangName{"MaxBlockLength";"MaxBlockLength";}"INT";"";
      LangDesc{"Maximum Block Length in writing";"Maximum Block Length in writing";}}}
    LocalVar{
     LocVarDef{"Kommentar";
      LangName{"Kommentar";"";}"Locvar";"TEXT";
      LangDesc{"";"";}
      LangText{"\"programmieren\"";"\"\xB1\xE0\xB3\xCC\xD6\xD0\"";"\"Programming\"";}"Const";}
     LocVarDef{"KommentarFehler";
      LangName{"KommentarFehler";"";}"Locvar";"TEXT";
      LangDesc{"";"";}
      LangText{"\"Programmierfehler\"";"\"\xB1\xE0\xB3\xCC\xB3\xF6\xB4\xED\"";"\"Programming fault\"";}"Const";}
     LocVarDef{"KommentarNOK";
      LangName{"KommentarNOK";"";}"Locvar";"TEXT";
      LangDesc{"";"";}
      LangText{"\"Programmstring ung\xFCltig\"";"\"\xB1\xE0\xB3\xCC\xD7\xD6\xB7\xFB\xB4\xAE\xCE\xDE\xD0\xA7\"";"\"Programming string unvalid\"";}"Const";}
     LocVarDef{"KommentarOK";
      LangName{"KommentarOK";"";}"Locvar";"TEXT";
      LangDesc{"";"";}
      LangText{"\"Programmierung OK\"";"\"\xB1\xE0\xB3\xCCOK\"";"\"Programming OK\"";}"Const";}}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"// jk 14.08.03 Erweiterung auf 4-Byte Adresse und 4-Byte L\xE4nge f\xFCr Pfau >= 9.2.0.3\r\n\r\nint\t  AnzBlock;\r\nint\t  BlockAddr, TmpBlockAddr;\r\nint\t  BlockAnz;\r\nstring  TeilStr, TmpTeilStr;\r\nstring  ProgString;\r\nstring  Lesen;\r\n\r\nint\t  _err,TmpLoopCounter;    \r\n\r\nif (Zeile > 0)\r\n\t_dlgMultiSetLine (DialogHndl, Zeile , Kommentar);\r\n\r\nerr  = NOK;\r\n_err = OK;\r\nProgString = ProgL_String;\r\n\r\nerrDebug(1,hexstr(ProgString));\r\n\r\nif (strlen(ProgString) <= 4)\r\n\t{\r\n\t_statSetAsciiResult (NOK, KommentarNOK, FUABBR);\r\n\treturn NOK;\r\n\t}\r\n\r\nAnzBlock  = binstrtoi(midstr(ProgString,0,4));\r\nProgString = midstr(ProgString,4,strlen(ProgString)-4);\r\n\r\nwhile ((AnzBlock > 0) && (_err == OK))\r\n\t{\r\n\tif (strlen(ProgString) <= 8)\r\n\t\t{\r\n\t\t_statSetAsciiResult (NOK, KommentarNOK, FUABBR);\r\n\t\treturn NOK;\r\n\t\t} \r\n\tBlockAddr   = binstrtoi(midstr(ProgString,0,4));\r\n\tProgString  = midstr(ProgString,4,strlen(ProgString)-4);\r\n\tBlockAnz    = binstrtoi(midstr(ProgString,0,4));\r\n\tProgString  = midstr(ProgString,4,strlen(ProgString)-4);\r\n\tTeilStr     = midstr(ProgString,0,BlockAnz);\r\n\tProgString  = midstr(ProgString,BlockAnz,strlen(ProgString)-BlockAnz);\r\n\r\nerrDebug(1,\"BlockAddr \", BlockAddr);\r\nerrDebug(1,\"ProgString \", hexstr(ProgString));\r\nerrDebug(1,\"BlockAnz \", BlockAnz);\r\nerrDebug(1,\"TeilStr \", hexstr(TeilStr));\r\n\r\n\tif (strlen(TeilStr) < BlockAnz)\t\r\n      {\r\n         errDebug(1,\"Teil Str to short, error\");\r\n         _statSetAsciiResult (NOK, KommentarNOK, FUABBR);\r\n         return NOK;\r\n      }\r\n \r\n      if (strlen(TeilStr) <= MaxBlockLength)\r\n      {\r\n         errDebug(1,\"Normal Write\");         \r\n         _err= _vwK2000VWBlockWrite_1_03(Hndl, BlockAddr, TeilStr);\r\n      }//of if Teilstr <= MaxBlockLength\r\n      else\r\n      {\r\n         errDebug(1,\"Incremant Write\");\r\n         TmpTeilStr     = TeilStr;\r\n         TmpBlockAddr   = BlockAddr;\r\n         TmpLoopCounter = 0;\r\n         while (strlen(TmpTeilStr) >0)\r\n         {\r\n           errDebug(1,\"Incremant Write, while loop\");\r\n           TeilStr      = midstr(TmpTeilStr,0,min(MaxBlockLength,strlen(TmpTeilStr)));\r\n           _err= _vwK2000VWBlockWrite_1_03(Hndl, BlockAddr, TeilStr);\r\n           BlockAddr = BlockAddr+MaxBlockLength;\r\n           TmpTeilStr   = midstr(TmpTeilStr,min(MaxBlockLength,strlen(TmpTeilStr)),-1); \r\n         }// of while strlen(TmpTeilStr)\r\n      }//of else Teilstr <= MaxBlockLength\r\n\r\n      if (_err != OK)\r\n\t\t{\r\n\t\t_statSetAsciiResult (NOK, KommentarFehler, FUABBR);\r\n\t\treturn NOK;\r\n\t\t}\r\n\r\n\tAnzBlock = AnzBlock - 1;\r\n\t}\r\n\r\nerr = _err;\r\n_statSetAsciiResult (err, KommentarOK, FOK);";}
    NodeCategory{"";}
    Info{"Dieser Baustein schreibt die Programierdaten aus dem Parameter \"Prog_String\" in ein Steuerger\xE4t mit KWP2000.\r\n\r\nIn \"Prog_String\" werden die Programierdaten aus dem Codefile \xFCbergeben.\r\nDie max. Anzahl Datendatenbytes je Schreibbefehl ist \"Blockl\xE4nge\".\r\n\r\n####\r\nHierbei wird die neue Erweiterung zum KWP2000 Spec zum Thema Flashen verwendet.\r\nBen\xF6tigt z.B. f\xFCr Airbag prog. PQ35\r\n####\r\n\r\nDie Bewertung dieses Bausteines ist OK, wenn das Schreiben in Ordnung war.\r\nR\xFCcklesen ist nicht m\xF6glich.\r\n\r\nDer Baustein ist auf die Verarbeitung von 4Byte Adress- und L\xE4ngeninforationen ausgelegt.\r\n\r\nIn die Statistik wird ein Statustext geschrieben.";"In \"Prog_String\" werden die Programierdaten aus dem Codefile \xFCbergeben.\r\nDie max. Anzahl Datendatenbytes je Schreibbefehl ist \"Blockl\xE4nge\".\r\n\r\n####\r\nHierbei wird die neue Erweiterung zum KWP2000 Spec zum Thema Flashen verwendet.\r\nBen\xF6tigt z.B. f\xFCr Airbag prog. PQ35\r\n####\r\n\r\nDie Bewertung dieses Bausteines ist OK, wenn das Schreiben in Ordnung war.\r\nR\xFCcklesen ist nicht m\xF6glich.\r\n\r\nDer Baustein ist auf die Verarbeitung von 4Byte Adress- und L\xE4ngeninforationen ausgelegt.\r\n\r\nIn die Statistik wird ein Statustext geschrieben.\r\n\r\nIn MaxBlockLength wird eine Obergrenze pro Schreiben festgelegt. Es wird das Minimum von ECU\r\nund MaxBlockLength genommen.";}
    Rights{"Write";"Read";}
    VersionInfo{
     CurVersion{0;11;"nbmr";}
     Version{0;1;"nbmr";"- in Arbeit -";"dsa";"25.05.2009 13:38:51";}
     Version{0;2;"nbmr";"- in Arbeit -";"dsa";"25.05.2009 14:30:08";}
     Version{0;3;"nbmr";"- in Arbeit -";"dsa";"25.05.2009 14:45:51";}
     Version{0;4;"nbmr";"- in Arbeit -";"dsa";"25.05.2009 14:47:51";}
     Version{0;5;"nbmr";"- in Arbeit -";"dsa";"27.05.2009 12:30:59";}
     Version{0;6;"nbmr";"- in Arbeit -";"dsa";"27.05.2009 13:04:32";}
     Version{0;7;"nbmr";"- in Arbeit -";"dsa";"27.05.2009 13:24:49";}
     Version{0;8;"nbmr";"- in Arbeit -";"dsa";"27.05.2009 14:06:09";}
     Version{0;9;"nbmr";"- in Arbeit -";"dsa";"27.05.2009 14:12:11";}
     Version{0;10;"nbmr";"- in Arbeit -";"dsa";"27.05.2009 14:41:01";}
     Version{0;11;"nbmr";"- in Arbeit -";"dsa";"27.05.2009 15:02:51";}}}}}
 FunctionDef{
  Name{"VW_spezifische_Bibliothek";}
  LangName{"VW_spezifische_Bibliothek";"VW_specific_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"Sammlung von Bausteinen zur Kommunikation mit Steuergeraeten von VW.";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;2;"ZPH18";}
   Version{1;0;"AC";"- freigegeben -";"vw-admin";"04.03.2003 11:56:19";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"07.08.2006 13:58:14";}
   Version{1;2;"ZPH18";"[ Baustein importiert (ersetzt) ]";"admin";"14.08.2007 15:07:01";}}
  FunctionDef{
   Name{"VW2000_Dienste";}
   LangName{"VW2000_Dienste";"VW2000_Dienste";}
   CvsVerHis{}
   Type{1;}
   Icon{0;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Sammlung von Bausteinen zur Kommunikation mit Steuerger\xE4ten von VW mit dem Protokoll K2000";"";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{1;3;"PAE";}
    Version{1;0;"AC";"- freigegeben -";"vw-admin";"17.02.2003 15:37:21";}
    Version{1;1;"AC";"- in Arbeit -";"vw-admin";"28.08.2003 17:40:34";}
    Version{1;2;"AC";"- in Arbeit -";"dsa-admin";"08.06.2004 08:55:47";}
    Version{1;3;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"25.07.2006 08:36:16";}}
   FunctionDef{
    Name{"VW2000_STG_Verbindungsaufbau";}
    LangName{"VW2000_STG_Verbindungsaufbau";"VW2000_ECU_Connection";}
    CvsVerHis{}
    Type{1;}
    Icon{0;}
    Properties{"Begin";}
    FormalParam{}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"";}
    NodeCategory{"";}
    Info{"Platzhalter f\xFCr Pr\xFCfschritte";"";}
    Rights{"Write";"Read";}
    VersionInfo{}
    FunctionDef{
     Name{"VW2000_STG_Ende_309457";}
     LangName{"VW2000_STG_Ende_309457";"VW2000_ECU_Disconnect";}
     CvsVerHis{}
     Type{1;}
     Icon{1;}
     Properties{"Begin";}
     FormalParam{
      OutputParam{"Hndl";
       LangName{"Hndl";"Hndl";}"VCIKANAL";"VCIKanal1";
       LangDesc{"VCI-Kanal";"VCI channel";}}}
     LocalVar{}
     Condition{"ever";"ok";"";}
     Evaluation{"no";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     MSLCode{"string RecvTel;\r\nif (*Hndl >= 0)\r\n{\r\n\tif (_vciAdapt (*Hndl) == OK)\r\n\t{\r\n\t\terr = _vciDataExchange (*Hndl, 0x82, 0xc2, \"\", &RecvTel);\r\n\t\tif (err)\r\n\t\t{\r\n\t\t\t_vciStatVciError (*Hndl);\r\n\t\t\t_statSetResult (err, FSTGI);\r\n\t\t}\r\n\t\telse\r\n\t\t\t_statSetResult (err, FOK);\r\n\t}\r\n\t_vciClose (Hndl);\r\n}\r\nelse\r\n\terrDebug(0, \"Element 'VW2000_STG_Ende' not used\");\r\n\r\n";}
     NodeCategory{"";}
     Info{"Mit diesem Modul wird die Kommunikation zu einem Steuerger\xE4t beendet. Dieser Befehl ist\r\nimmer nach dem letzten Befehl f\xFCr ein Steuerger\xE4t zu senden bzw. bevor die Z\xFCndung\r\nausgeschaltet wird. \r\n\r\nDie Bewertung des Pr\xFCfschrittes ist \"OK\", wenn die Verbindung erfolgreich beendet werden\r\nkonnte.\r\n\r\nIn die Statistik wird nur ein \"OK\" bzw. \"NOK\" in Abh\xE4nigkeit von der Berwertung geschrieben.\r\n\r\n03.11.06, sz: Update: der Befehl Stop Communication wird nur noch gesendet, wenn das VCI-Handle noch g\xFCltig ist, und eine \r\n                                    Kommunikation zum SG besteht (_vciAdapt). Sonst wird nur das Handle geschlossen. \r\n                                    Einsetzbar ab MSL Version 4.";"";}
     Rights{"Write";"Read";}
     VersionInfo{
      CurVersion{2;1;"CRE1A_OF";}
      Version{1;0;"AC";"- freigegeben -";"vw-admin";"27.02.2003 10:44:10";}
      Version{2;0;"AC";"Update VCI-Handleling";"dsa-admin";"06.11.2006 16:45:13";}
      Version{2;1;"CRE1A_OF";"- in Arbeit -";"admin";"12.01.2007 09:32:33";}}}}}}
 FunctionDef{
  Name{"DSA_Bibliothek";}
  LangName{"DSA_Bibliothek";"DSA_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;1;"AC";}
   Version{1;0;"AC";"- freigegeben -";"dsa-admin";"04.03.2003 11:44:35";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"admin";"03.07.2006 10:17:25";}}
  FunctionDef{
   Name{"Daten_Bearbeitung";}
   LangName{"DatenBearbeitung";"Data_Manipulation";}
   CvsVerHis{}
   Type{1;}
   Icon{0;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Sammlung von Bausteinen zur Bearbeitung von Variablen.";"Data editing arises very frequently. Calculations must be carried out, character strings\r\nmust be copied or separated out, parameters must be initialised...";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{0;1;"SVW";}
    Version{0;1;"SVW";"- in Arbeit -";"admin";"12.04.2004 19:29:41";}}
   FunctionDef{
    Name{"FloatTest";}
    LangName{"FloatTest";"FloatTest";}
    CvsVerHis{}
    Type{1;}
    Icon{0;}
    Properties{"Begin";}
    FormalParam{}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"";}
    NodeCategory{"";}
    Info{"Sammlung von Bausteinen zur Bearbeitung von Zahlen.";"";}
    Rights{"Write";"Read";}
    VersionInfo{}
    FunctionDef{
     Name{"FloatDifferenz";}
     LangName{"FloatDifferenz";"FloatDifference";}
     CvsVerHis{}
     Type{1;}
     Icon{0;}
     Properties{"Begin";}
     FormalParam{
      InputParam{"Src1Float";
       LangName{"Src1Float";"Src1Float";}"FLOAT";"";
       LangDesc{"Source1Float";"";}}
      InputParam{"Src2Float";
       LangName{"Src2Float";"Src2Float";}"FLOAT";"";
       LangDesc{"Source2Float";"";}}
      OutputParam{"DesFloat";
       LangName{"DesFloat";"DesFloat";}"FLOAT";"";
       LangDesc{"Destination Float";"";}}}
     LocalVar{}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     MSLCode{"  *DesFloat = Src1Float-Src2Float;\r\n";}
     NodeCategory{"";}
     Info{"Baustein zum Bilden der Differenz zwischen zwei Flie\xDFkommazahlen (Float).";"";}
     Rights{"Write";"Read";}
     VersionInfo{}}}}}
 FunctionDef{
  Name{"Basis_Bibliothek";}
  LangName{"Basis_Bibliothek";"Base_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;0;"AC";}
   Version{1;0;"AC";"- freigegeben -";"dsa-admin";"04.03.2003 11:44:35";}}
  FunctionDef{
   Name{"Daten_Pruefungen";}
   LangName{"DatenPruefungen";"Data_Examination";}
   CvsVerHis{}
   Type{1;}
   Icon{0;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Sammlung von Pruef-Bausteinen";"";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{0;5;"PAE";}
    Version{0;1;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"24.07.2006 17:06:11";}
    Version{0;2;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"25.07.2006 08:26:55";}
    Version{0;3;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"25.07.2006 08:31:27";}
    Version{0;4;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"25.07.2006 08:35:23";}
    Version{0;5;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"25.07.2006 08:36:16";}}
   FunctionDef{
    Name{"FloatNeu";}
    LangName{"FloatPrfg";"Float_Examinations";}
    CvsVerHis{}
    Type{1;}
    Icon{1;}
    Properties{"Begin";}
    FormalParam{}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"";}
    NodeCategory{"";}
    Info{"";"";}
    Rights{"Write";"Read";}
    VersionInfo{}
    FunctionDef{
     Name{"FToleranzPrfng";}
     LangName{"FToleranzPrfng";"FloatToleranceCheck";}
     CvsVerHis{}
     Type{1;}
     Icon{1;}
     Properties{"End";}
     FormalParam{
      InputParam{"Istwert";
       LangName{"Istwert";"Istwert";}"FLOAT";"";
       LangDesc{"Istwert";"";}}
      InputParam{"Utg";
       LangName{"Utg";"Utg";}"FLOAT";"";
       LangDesc{"untere Grenze";"";}}
      InputParam{"Otg";
       LangName{"Otg";"Otg";}"FLOAT";"";
       LangDesc{"obere Grenze";"";}}}
     LocalVar{}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     MSLCode{"_statSetRange (sprintf(\"%f\",Utg), sprintf(\"%f\",Otg));\r\nif (Istwert > Otg)\r\n  err = _statSetFloatResult (NOK, Istwert, FMWGT);\r\nelse if (Istwert < Utg)\r\n  err = _statSetFloatResult (NOK, Istwert, FMWLT);\r\nelse\r\n  err = _statSetFloatResult (OK, Istwert, FOK);\r\n";}
     NodeCategory{"";}
     Info{"Baustein zur Toleranzbandpr\xFCfung. (S)\r\n\r\nBewertung ist OK, wenn der Istwert innerhalb der Toleranzgrenzen von Utg und Otg liegt.";"Component for the tolerance range test. (S)\r\nReturns \"OK\", if the actual value is within the defined tolerance\r\nrange from \"Utg\" to \"Otg\".";}
     Rights{"Write";"Read";}
     VersionInfo{
      CurVersion{0;3;"SVW";}
      Version{0;1;"BRU4A";"- in Arbeit -";"dsa";"14.05.2003 10:16:00";}
      Version{0;2;"SVW";"- in Arbeit -";"admin";"12.04.2004 19:54:27";}
      Version{0;3;"SVW";"- in Arbeit -";"admin";"12.04.2004 21:02:47";}}}}}}
 FunctionDef{
  Name{"DSA_Bibliothek";}
  LangName{"DSA_Bibliothek";"DSA_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;1;"AC";}
   Version{1;0;"AC";"- freigegeben -";"dsa-admin";"04.03.2003 11:44:35";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"admin";"03.07.2006 10:17:25";}}
  FunctionDef{
   Name{"BenutzerSchnittstellen";}
   LangName{"BenutzerSchnittstellen";"UserInterface";}
   CvsVerHis{}
   Type{1;}
   Icon{2;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Sammlung von Bausteinen zur Benutzerschnittstelle";"Collection of components relating to the user interface.";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{1;2;"SVW";}
    Version{1;0;"AC";"- freigegeben -";"dsa-admin";"04.03.2003 11:34:14";}
    Version{1;1;"SVW";"- in Arbeit -";"admin";"12.04.2004 19:08:29";}
    Version{1;2;"SVW";"- in Arbeit -";"admin";"12.04.2004 21:13:06";}}
   FunctionDef{
    Name{"DlgExit";}
    LangName{"DlgExit";"DlgExit";}
    CvsVerHis{}
    Type{1;}
    Icon{2;}
    Properties{"Begin";}
    FormalParam{
     InputParam{"DialogHndl";
      LangName{"DialogHndl";"DialogHndl";}"DialogTyp";"DIALOG_LOKAL";
      LangDesc{"Dialog handle";"Dialog handle";}}}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"  err = _dlgExit (DialogHndl);";}
    NodeCategory{"";}
    Info{"Baustein zur Deinitialisierung der Benutzerschnittstelle";"Deinitialises the communication handle";}
    Rights{"Write";"Read";}
    VersionInfo{
     CurVersion{0;1;"SVW";}
     Version{0;1;"SVW";"- in Arbeit -";"admin";"12.04.2004 16:21:22";}}}}}
 FunctionDef{
  Name{"VW_spezifische_Bibliothek";}
  LangName{"VW_spezifische_Bibliothek";"VW_specific_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"Sammlung von Bausteinen zur Kommunikation mit Steuergeraeten von VW.";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;2;"ZPH18";}
   Version{1;0;"AC";"- freigegeben -";"vw-admin";"04.03.2003 11:56:19";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"07.08.2006 13:58:14";}
   Version{1;2;"ZPH18";"[ Baustein importiert (ersetzt) ]";"admin";"14.08.2007 15:07:01";}}
  FunctionDef{
   Name{"VW2000_Dienste";}
   LangName{"VW2000_Dienste";"VW2000_Dienste";}
   CvsVerHis{}
   Type{1;}
   Icon{0;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Sammlung von Bausteinen zur Kommunikation mit Steuerger\xE4ten von VW mit dem Protokoll K2000";"";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{1;3;"PAE";}
    Version{1;0;"AC";"- freigegeben -";"vw-admin";"17.02.2003 15:37:21";}
    Version{1;1;"AC";"- in Arbeit -";"vw-admin";"28.08.2003 17:40:34";}
    Version{1;2;"AC";"- in Arbeit -";"dsa-admin";"08.06.2004 08:55:47";}
    Version{1;3;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"25.07.2006 08:36:16";}}
   FunctionDef{
    Name{"VW2000_AnpassFunktionen";}
    LangName{"VW2000_AnpassFunktionen";"VW2000_Adaptation_Functions";}
    CvsVerHis{}
    Type{1;}
    Icon{0;}
    Properties{"Begin";}
    FormalParam{}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"";}
    NodeCategory{"";}
    Info{"Platzhalter f\xFCr Pr\xFCfschritte";"";}
    Rights{"Write";"Read";}
    VersionInfo{}
    FunctionDef{
     Name{"VW2000_LangeAnpassung_Komplett_uf";}
     LangName{"VW2000_LangeAnpassung_Komplett_uf";"VW2000_LangeAnpassung_Komplett_uf";}
     CvsVerHis{}
     Type{1;}
     Icon{1;}
     Properties{"Begin";}
     FormalParam{
      InputParam{"Hndl";
       LangName{"Hndl";"Hndl";}"VCIKANAL";"VCIKanal1";
       LangDesc{"VCI-Kanal";"";}}
      InputParam{"DlgHndl";
       LangName{"DlgHndl";"DlgHndl";}"DialogTyp";"DIALOG_LOKAL";
       LangDesc{"";"";}}
      InputParam{"Kanal";
       LangName{"Kanal";"Kanal";}"STGAnpassung_Kanal";"";
       LangDesc{"Anpassungskanal";"";}}
      InputParam{"Anpassung";
       LangName{"Anpassung";"Anpassung";}"STG_Anpassung_Lang";"";
       LangDesc{"zu schreibende Anpassung";"";}}
      InputParam{"Text";
       LangName{"Text";"Text";}"TEXT";"CTextLeer";
       LangDesc{"AnzeigeText";"";}}
      InputParam{"MesswerteAuswert";
       LangName{"MesswerteAuswert";"MesswerteAuswert";}"Bool";"CLogWahr";
       LangDesc{"mitgelieferte Messwerte auswerten";"";}}
      OutputParam{"Rueckgabewert";
       LangName{"Rueckgabewert";"Rueckgabewert";}"STRING";"DAnpassungBString";
       LangDesc{"gelesene Anpassung";"";}}
      OutputParam{"RecvTel";
       LangName{"RecvTel";"RecvTel";}"VCIResult";"DVciResult";
       LangDesc{"VCI Ergebniss";"";}}}
     LocalVar{
      LocVarDef{"KommentarAnpassungUngleich";
       LangName{"KommentarAnpassungUngleich";"";}"Locvar";"TEXT";
       LangDesc{"";"";}
       LangText{"\"Anpassung ungleich\"";"\"\"";"\"\"";}"Const";}
      LocVarDef{"KommentarFunktionNOK";
       LangName{"KommentarFunktionNOK";"";}"Locvar";"TEXT";
       LangDesc{"";"";}
       LangText{"\"Funktion nicht untersuetzt\"";"\"\"";"\"function not supported\"";}"Const";}
      LocVarDef{"KommentarLaengeAnpaasungNOK";
       LangName{"KommentarLaengeAnpaasungNOK";"";}"Locvar";"TEXT";
       LangDesc{"";"";}
       LangText{"\"Laenge der Anpaasung NOK\"";"\"\"";"\"\"";}"Const";}
      LocVarDef{"KommentarUnerwartetesErgebnis";
       LangName{"KommentarUnerwartetesErgebnis";"";}"Locvar";"TEXT";
       LangDesc{"";"";}
       LangText{"\"Unerwartetes Ergebnis\"";"\"\"";"\"\"";}"Const";}
      LocVarDef{"KommentarWeiterschaltenNichtErlaubt";
       LangName{"KommentarWeiterschaltenNichtErlaubt";"";}"Locvar";"TEXT";
       LangDesc{"";"";}
       LangText{"\"Weiterschalten nicht erlaubt\"";"\"\"";"\"\"";}"Const";}}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     MSLCode{"#pragma using VwScalingOffset // err = VwScalingOffset(err, TestString, LangeAnpassung, MesswerteAuswert, &AnpassungBString, &MessWertString1, &MessWertString2, &MessWertString3, &MessWertString4, &MessWertBString);\r\n\r\nstring\tWert_Hex;\r\nstring\tWSC_String;\r\nint     Tmp_Int;\r\nstring\tAnpasKanal_Hex;\r\nstring\tAnpassungBString;\r\nstring\tMessWertString1;\r\nstring\tMessWertString2;\r\nstring\tMessWertString3;\r\nstring\tMessWertString4;\r\nstring\tMessWertBString;\r\nstring  ServTel;\r\n\r\nTmp_Int = GeraeteNr_VW * 8;\r\nTmp_Int = Tmp_Int + ((ImporteursNr_VW & 0x380) / 0x80);\r\nWSC_String = midstr(itobinstr(Tmp_Int),1,3);\r\n\r\nTmp_Int = ImporteursNr_VW * 2;\r\nif (WSC_VW > 0xffff)\r\n    Tmp_Int = Tmp_Int +1;\r\nWSC_String = WSC_String + midstr(itobinstr(Tmp_Int),3,1);\r\n\r\nTmp_Int = WSC_VW & 0xffff;\r\nWSC_String = WSC_String + midstr(itobinstr(Tmp_Int),2,2);\r\n\r\n_dlgMultiSetLine (DlgHndl, 1, Text);\r\n_statSetValue (Anpassung);\r\n\r\n// Lesen der Unterst\xFCtzten Funktionen\r\nvciExDtaRead (Hndl, &ServTel);\r\nif (0 > strstr (ServTel, \"\\x01\\x0a\"))\t// lange Anpassung unterst\xFCtzt? \r\n\t{\r\n\t_vciStatVciError (Hndl);\r\n\t_statSetStrResult (ABBR, KommentarFunktionNOK, FSTGI);\r\n\treturn(ABBR);\r\n\t}\r\n\r\n\r\nif ((Kanal < 0) || ( Kanal > 255))\r\n\t{\r\n\t_statSetResult (err,FMWNOK);\r\n\terr = NOK;\r\n\t_statSetIntResult (err,0,FMWNOK);\r\n\treturn err;\r\n\t}\r\nif (strlen (Anpassung) <= 0)\r\n\t{\r\n\t_statSetResult (err,FMWNOK);\r\n\terr = NOK;\r\n\t_statSetIntResult (err,0,FMWNOK);\r\n\treturn err;\r\n\t}\r\n\r\nAnpasKanal_Hex = midstr(itobinstr(Kanal),3,1);\r\n\r\nerr = _vciDataExchange (Hndl, 0x31, 0x71, \"\\xb8\\x01\\x0a\", RecvTel); // Anpassung starten\r\nif ( err != OK )\r\n\t{\r\n\t_vciStatVciError (Hndl);\r\n\t_statSetStrResult (NOK,*RecvTel, FSTGI);\r\n\t*Rueckgabewert = \"\";\r\n\t_vciDataExchange (Hndl, 0x32, 0x72, \"\\xb8\\x01\\x0a\", RecvTel);\r\n\treturn(NOK);\r\n\t}\r\nerr = _vciDataExchange (Hndl, 0x31, 0x71, \"\\xba\\x01\\x0a\", RecvTel); // Anpassung abfragen\r\nif ( err != OK )\r\n\t{\r\n\t_vciStatVciError (Hndl);\r\n\t_statSetStrResult (NOK,*RecvTel, FSTGI);\r\n\t*Rueckgabewert = \"\";\r\n\t_vciDataExchange (Hndl, 0x32, 0x72, \"\\xb8\\x01\\x0a\", RecvTel);\r\n\treturn(NOK);\r\n\t}\r\nelse\r\n\t{\r\n\tTmp_Int = *RecvTel[3];\r\n\tif (Tmp_Int != 0x81)\r\n\t\t{\r\n\t\terrDebug (1, \"Weiterschalten nicht erlaubt\" + hexstr (*RecvTel));\r\n\t\t_statSetAsciiResult (NOK,KommentarWeiterschaltenNichtErlaubt, FSTGI);\r\n\t\t*Rueckgabewert = \"\";\r\n\t\t_vciDataExchange (Hndl, 0x32, 0x72, \"\\xb8\\x01\\x0a\", RecvTel);\r\n\t\t_dlgMultiSetLine (DlgHndl, 2, KommentarWeiterschaltenNichtErlaubt);\r\n\t\tWait (1.0);\r\n\t\treturn(NOK);\r\n\t\t}\r\n\t}\r\nerr = _vciDataExchange (Hndl, 0x31, 0x71, \"\\xb9\\x01\\x0a\" + AnpasKanal_Hex, RecvTel); // Anpassung abfragen mit KanalNummer\r\nif ( err != OK )\r\n\t{\r\n\t_vciStatVciError (Hndl);\r\n\t_statSetStrResult (NOK,*RecvTel, FSTGI);\r\n\t*Rueckgabewert = \"\";\r\n\t_vciDataExchange (Hndl, 0x32, 0x72, \"\\xb8\\x01\\x0a\", RecvTel);\r\n\treturn(NOK);\r\n\t}\r\n\r\nerr = _vciDataExchange (Hndl, 0x31, 0x71, \"\\xba\\x01\\x0a\", RecvTel); // Anpassung abfragen; Wert lesen\r\nif ( err != OK )\r\n\t{\r\n\t_vciStatVciError (Hndl);\r\n\t_statSetStrResult (NOK,*RecvTel, FSTGI);\r\n\t*Rueckgabewert = \"\";\r\n\t_vciDataExchange (Hndl, 0x32, 0x72, \"\\xb8\\x01\\x0a\", RecvTel);\r\n\treturn(NOK);\r\n\t}\r\n\t\r\nelse\r\n\t{\r\n\terr = VwScalingOffset(err, *RecvTel, 1, MesswerteAuswert, &AnpassungBString, &MessWertString1, &MessWertString2, &MessWertString3, &MessWertString4, &MessWertBString);\r\n\tif (err != OK)\r\n\t\t{\r\n\t\terrDebug (1, sprintf (\"unerwartetes Ergebnis: %s \", hexstr (*RecvTel)));\r\n\t\t_statSetAsciiResult (NOK,KommentarUnerwartetesErgebnis, FSTGI);\r\n\t\t*Rueckgabewert = \"\";\r\n\t\t_vciDataExchange (Hndl, 0x32, 0x72, \"\\xb8\\x01\\x0a\", RecvTel);\r\n\t\t_dlgMultiSetLine (DlgHndl, 2, KommentarUnerwartetesErgebnis);\r\n\t\tWait (1.0);\r\n\t\treturn(NOK);\r\n\t\t}\r\n\tif (strlen (Anpassung) != strlen (AnpassungBString))\r\n\t\t{\r\n\t\terrDebug (1, sprintf (\"L\xE4nge der Anpassung NOK: %d != %d\", strlen (Anpassung), strlen (AnpassungBString)));\r\n\t\t_statSetAsciiResult (NOK,KommentarLaengeAnpaasungNOK, FMWNOK);\r\n\t\t*Rueckgabewert = \"\";\r\n\t\t_vciDataExchange (Hndl, 0x32, 0x72, \"\\xb8\\x01\\x0a\", RecvTel);\r\n\t\t_dlgMultiSetLine (DlgHndl, 2, KommentarLaengeAnpaasungNOK);\r\n\t\tWait (1.0);\r\n\t\treturn(NOK);\r\n\t\t}\r\n\telse\r\n\t\t{\r\n\t\t*Rueckgabewert = strfmt (\"A\", AnpassungBString);\r\n\t\terrDebug (1, \"Anpassung gelesen: \" + *Rueckgabewert);\r\n\t\terrDebug (2, \"Anpassung zu schreiben: \" + Anpassung);\r\n\t\tWert_Hex = Anpassung;\r\n\t\terrDebug (3, \"MW1:\" + MessWertString1 + \"MW2:\" + MessWertString2 + \"MW3:\" + MessWertString3 + \"MW4:\" + MessWertString4);\r\n\t\t_dlgMultiSetLine (DlgHndl, 2, Anpassung);\r\n\t\tif (MesswerteAuswert == 1)\r\n\t\t\t_dlgMultiSetLine (DlgHndl, 3, MessWertString1 + \" \" + MessWertString2 + \" \" + MessWertString3 + \" \" + MessWertString4);\r\n\t\t}\r\n\t}\r\n\r\nerr = _vciDataExchange (Hndl, 0x31, 0x71, \"\\xb9\\x01\\x0a\" + Wert_Hex, RecvTel); // Anpassung schreiben (Weiterschalten mit neuem Wert)\r\nif ( err != OK )\r\n\t{\r\n\t_vciStatVciError (Hndl);\r\n\t_statSetStrResult (NOK,*RecvTel, FSTGI);\r\n\t*Rueckgabewert = \"\";\r\n\t_vciDataExchange (Hndl, 0x32, 0x72, \"\\xb8\\x01\\x0a\", RecvTel);\r\n\treturn(NOK);\r\n\t}\r\nerr = _vciDataExchange (Hndl, 0x31, 0x71, \"\\xba\\x01\\x0a\", RecvTel); // Anpassung abfragen, nach schreiben\r\nif ( err != OK )\r\n\t{\r\n\t_vciStatVciError (Hndl);\r\n\t_statSetStrResult (NOK,*RecvTel, FSTGI);\r\n\t*Rueckgabewert = \"\";\r\n\t_vciDataExchange (Hndl, 0x32, 0x72, \"\\xb8\\x01\\x0a\", RecvTel);\r\n\treturn(NOK);\r\n\t}\r\n /*err = _vciDataExchange (Hndl, 0x31, 0x71, \"\\xb9\\x01\\x0a\" + Wert_Hex, RecvTel);\r\nif ( err != OK )\r\n\t{\r\n\t_vciStatVciError (Hndl);\r\n\t_statSetStrResult (NOK,*RecvTel, FSTGI);\r\n\t*Rueckgabewert = \"\";\r\n\t_vciDataExchange (Hndl, 0x32, 0x72, \"\\xb8\\x01\\x0a\", RecvTel);\r\n\treturn(NOK);\r\n\t}\r\nerr = _vciDataExchange (Hndl, 0x31, 0x71, \"\\xba\\x01\\x0a\", RecvTel);\r\nif ( err != OK )\r\n\t{\r\n\t_vciStatVciError (Hndl);\r\n\t_statSetStrResult (NOK,*RecvTel, FSTGI);\r\n\t*Rueckgabewert = \"\";\r\n\t_vciDataExchange (Hndl, 0x32, 0x72, \"\\xb8\\x01\\x0a\", RecvTel);\r\n\treturn(NOK);\r\n\t}*/\r\n\r\nerr = _vciDataExchange (Hndl, 0x31, 0x71, \"\\xbb\\x01\\x0a\" + Wert_Hex + WSC_String, RecvTel); // Anpassung speichern\r\nif ( err != OK )\r\n\t{\r\n\t_vciStatVciError (Hndl);\r\n\t_statSetStrResult (NOK,*RecvTel, FSTGI);\r\n\t*Rueckgabewert = \"\";\r\n\t_vciDataExchange (Hndl, 0x32, 0x72, \"\\xb8\\x01\\x0a\", RecvTel);\r\n\treturn(NOK);\r\n\t}\r\nerr = _vciDataExchange (Hndl, 0x31, 0x71, \"\\xba\\x01\\x0a\", RecvTel); // letzte Abfrage mit neuen Werten\r\nif ( err != OK )\r\n\t{\r\n\t_vciStatVciError (Hndl);\r\n\t_statSetStrResult (NOK,*RecvTel, FSTGI);\r\n\t*Rueckgabewert = \"\";\r\n\t_vciDataExchange (Hndl, 0x32, 0x72, \"\\xb8\\x01\\x0a\", RecvTel);\r\n\treturn(NOK);\r\n\t}\r\nelse\r\n\t{\r\n\terr = VwScalingOffset(err, *RecvTel, 1, MesswerteAuswert, &AnpassungBString, &MessWertString1, &MessWertString2, &MessWertString3, &MessWertString4, &MessWertBString);\r\n\tif (err != OK)\r\n\t\t{\r\n\t\terrDebug (1, sprintf (\"unerwartetes Ergebnis: %s \", hexstr (*RecvTel)));\r\n\t\t_statSetAsciiResult (NOK,KommentarUnerwartetesErgebnis, FSTGI);\r\n\t\t*Rueckgabewert = \"\";\r\n\t\t_dlgMultiSetLine (DlgHndl, 2, KommentarUnerwartetesErgebnis);\r\n\t\tWait (1.0);\r\n\t\t}\r\n\telse\r\n\t\t{\r\n\t\t*Rueckgabewert = strfmt (\"A\", AnpassungBString);\r\n\t\terrDebug (4, \"Anpassung gespeichert: \" + *Rueckgabewert);\r\n\t\terrDebug (5, \"MW1:\" + MessWertString1 + \"MW2:\" + MessWertString2 + \"MW3:\" + MessWertString3 + \"MW4:\" + MessWertString4);\r\n\t\tif (Anpassung == *Rueckgabewert)\r\n\t\t\t{\r\n\t\t\t_statSetAsciiResult (OK,*Rueckgabewert,FOK);\r\n\t\t\t_dlgMultiSetLine (DlgHndl, 2, *Rueckgabewert);\r\n\t\t\tif (MesswerteAuswert == 1)\r\n\t\t\t\t_dlgMultiSetLine (DlgHndl, 3, MessWertString1 + \" \" + MessWertString2 + \" \" + MessWertString3 + \" \" + MessWertString4);\r\n\t\t\t}\r\n\t\telse\r\n\t\t\t{\r\n\t\t\t_statSetAsciiResult (NOK, *Rueckgabewert, FMWNOK);\r\n\t\t\t_dlgMultiSetLine (DlgHndl, 2, KommentarAnpassungUngleich);\r\n\t\t\tWait (1.0);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n_vciDataExchange (Hndl, 0x32, 0x72, \"\\xb8\\x01\\x0a\", RecvTel);\r\n\r\n\r\n_dlgMultiClearLine (DlgHndl, 1);\r\n_dlgMultiClearLine (DlgHndl, 2);\r\n_dlgMultiClearLine (DlgHndl, 3);";}
     NodeCategory{"";}
     Info{"Mit diesem Modul kann der Wert einer \"langen Anpassung\" in einem Steuerger\xE4t geschrieben werden. (S)\r\n\r\nHndl                         das Handel zum STG-Kommunikationskanal; Typ: int; typisch VCIKanal1\r\nDlgHndl                    das verwendete Dialog-Handle; Typ: int; typisch DIALOD_LOKAL\r\nKanal                        die Anpassungs-Kanalnummer; Typ: int; Wertebereich: 0..255\r\nAnpassung               die zuschreibende Anpassung; Typ string\r\nText                          der Text, der w\xE4hrend der Ausf\xFChrung angezeigt wird\r\nMesswerteAuswert   Bool, ob die vom STG \xFCbergebenen Messwerte ausgewertet werden sollen oder nicht; Typ int; Wertebereich 0..1\r\nRueckgabewert       Antwort-Telegramm, das Ascii-Konvertiert vom STG zur\xFCckgegeben wird; Typ string\r\nRecvTel                   das STG-Telegramm, dies als Rohdaten zur\xFCckgegebenwerden, zur weiteren Auswertung; Typ string\r\n\r\nDie Bewertung des Pr\xFCfschrittes ist immer \"OK\", wenn der Befehl erfolgreich zum \r\nSteuerger\xE4t gesendet und von diesem akzeptiert wurde und die Anpassung erfolgreich geschrieben werden konnte.\r\n\r\nsz, 26.03.2004: Erstellung\r\nsz, 05.01.2005: Erweiterung auf Abfrage unterst\xFCtzter Funktionen";"";}
     Rights{"Write";"Read";}
     VersionInfo{
      CurVersion{1;1;"AC";}
      Version{1;0;"AC";" - fertiggestellt - ";"vw-admin";"05.01.2005 16:58:34";}
      Version{1;1;"AC";"- in Arbeit -";"vw-admin";"01.03.2005 13:41:13";}}}}}}
 FunctionDef{
  Name{"VW_spezifische_Bibliothek";}
  LangName{"VW_spezifische_Bibliothek";"VW_specific_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"Sammlung von Bausteinen zur Kommunikation mit Steuergeraeten von VW.";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;2;"ZPH18";}
   Version{1;0;"AC";"- freigegeben -";"vw-admin";"04.03.2003 11:56:19";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"07.08.2006 13:58:14";}
   Version{1;2;"ZPH18";"[ Baustein importiert (ersetzt) ]";"admin";"14.08.2007 15:07:01";}}
  FunctionDef{
   Name{"VW_diag_Funktionen";}
   LangName{"VW_diag_Funktionen";"VW_Diag_Functions";}
   CvsVerHis{}
   Type{1;}
   Icon{0;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"";"";}
   Rights{"Write";"Read";}
   VersionInfo{}
   FunctionDef{
    Name{"VwScalingOffset";}
    LangName{"VwScalingOffset";"VwScalingOffset";}
    CvsVerHis{}
    Type{1;}
    Icon{0;}
    Properties{"Begin";}
    FormalParam{
     InputParam{"TestString";
      LangName{"TestString";"TestString";}"STRING";"DTestString";
      LangDesc{"";"";}}
     InputParam{"LangeAnpassung";
      LangName{"LangeAnpassung";"LangeAnpassung";}"INT";"CInt1";
      LangDesc{"";"";}}
     InputParam{"MesswerteAuswert";
      LangName{"MesswerteAuswert";"MesswerteAuswert";}"Bool";"CLogWahr";
      LangDesc{"mitgelieferte Messwerte auswerten";"";}}
     OutputParam{"AnpassungBString";
      LangName{"AnpassungBString";"AnpassungBString";}"STRING";"DAnpassungBString";
      LangDesc{"";"";}}
     OutputParam{"MessWertString1";
      LangName{"MessWertString1";"MessWertString1";}"STRING";"DString1";
      LangDesc{"";"";}}
     OutputParam{"MessWertString2";
      LangName{"MessWertString2";"MessWertString2";}"STRING";"DString2";
      LangDesc{"";"";}}
     OutputParam{"MessWertString3";
      LangName{"MessWertString3";"MessWertString3";}"STRING";"DString3";
      LangDesc{"";"";}}
     OutputParam{"MessWertString4";
      LangName{"MessWertString4";"MessWertString4";}"STRING";"DString4";
      LangDesc{"";"";}}
     OutputParam{"MessWertBString";
      LangName{"MessWertBString";"MessWertBString";}"STRING";"MessWertBString";
      LangDesc{"";"";}}}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"#pragma using VwDgString // err = VwDgString(err, Position, &RecvTel, &Value, &Typ);\r\n\r\n// Scaling Offset:\r\nint\tscalingoffset;\r\nint\tTyp;\r\nint\tValueSO;\r\nint\t_err;\r\nint\ti;\r\n*MessWertBString = \"\";\r\n*MessWertString1 = \"\";\r\n*MessWertString2 = \"\";\r\n*MessWertString3 = \"\";\r\n*MessWertString4 = \"\";\r\n*AnpassungBString = \"\";\r\nerr = OK;\r\nif (LangeAnpassung == 1)\t\t\t\t\t\t\t\t// f\xFCr Lange Anpssung\r\n{\r\n\tscalingoffset = 5;\r\n\tValueSO = TestString[scalingoffset-1];\r\n\tif (((ValueSO & 0xc0) == 0xc0) || ((ValueSO & 0xc0) == 0x80))\t// wenn ASCII-Daten abholbar sind dann ist hier ein 0xCx; wenn NUM-Daten abholbar sind dann ist hier ein 0x8x\r\n\t\t*AnpassungBString = midstr (TestString, scalingoffset+1, TestString[scalingoffset]-1); //die L\xE4nge steht im Scaling Offset von der Anpassung\r\n\telse \r\n\t\tif ((ValueSO == 0x02) || (ValueSO == 0x05))\r\n\t\t\t*AnpassungBString = midstr (TestString, scalingoffset+1, TestString[scalingoffset]-1); //die L\xE4nge steht im Scaling Offset von der Anpassung\r\n\tif (strlen (*AnpassungBString) < 1)\r\n\t\treturn (NOK);\r\n\terrDebug (1, sprintf (\"Anpassstring: %s\", hexstr (*AnpassungBString)));\r\n}\t\r\nif (MesswerteAuswert == 1)\t\t\t\t\t\t\t\t// Messwerte auswerten?\r\n\t{\r\n\tValueSO = TestString [scalingoffset];\r\n\ti = 1;\r\n\twhile ((ValueSO < 0xff) && (i < 10))\r\n\t\t{\r\n\t\ti = i + 1;\r\n\t\tscalingoffset = scalingoffset + ValueSO; // der n\xE4chste Scalingoffset steht hier\r\n\t\t*MessWertBString = *MessWertBString + midstr (TestString, scalingoffset+1, TestString [scalingoffset]-1);\r\n\t\tValueSO = TestString [scalingoffset];\r\n\t\t}\r\n\tif (i > 9)\r\n\t\treturn (NOK);\r\n\terrDebug (2, sprintf (\"MessString: %s\", hexstr (*MessWertBString)));\r\n\tVwDgString(_err, 0, MessWertBString, MessWertString1, &Typ);\r\n\tVwDgString(_err, 1, MessWertBString, MessWertString2, &Typ);\r\n\tVwDgString(_err, 2, MessWertBString, MessWertString3, &Typ);\r\n\tVwDgString(_err, 3, MessWertBString, MessWertString4, &Typ);\r\n\t}";}
    NodeCategory{"";}
    Info{"";"";}
    Rights{"Write";"Read";}
    VersionInfo{
     CurVersion{0;9;"PAE";}
     Version{0;9;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"12.01.2010 15:23:50";}}}}}
 FunctionDef{
  Name{"VW_spezifische_Bibliothek";}
  LangName{"VW_spezifische_Bibliothek";"VW_specific_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"Sammlung von Bausteinen zur Kommunikation mit Steuergeraeten von VW.";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;2;"ZPH18";}
   Version{1;0;"AC";"- freigegeben -";"vw-admin";"04.03.2003 11:56:19";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"07.08.2006 13:58:14";}
   Version{1;2;"ZPH18";"[ Baustein importiert (ersetzt) ]";"admin";"14.08.2007 15:07:01";}}
  FunctionDef{
   Name{"VW2000_Dienste";}
   LangName{"VW2000_Dienste";"VW2000_Dienste";}
   CvsVerHis{}
   Type{1;}
   Icon{0;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Sammlung von Bausteinen zur Kommunikation mit Steuerger\xE4ten von VW mit dem Protokoll K2000";"";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{1;3;"PAE";}
    Version{1;0;"AC";"- freigegeben -";"vw-admin";"17.02.2003 15:37:21";}
    Version{1;1;"AC";"- in Arbeit -";"vw-admin";"28.08.2003 17:40:34";}
    Version{1;2;"AC";"- in Arbeit -";"dsa-admin";"08.06.2004 08:55:47";}
    Version{1;3;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"25.07.2006 08:36:16";}}
   FunctionDef{
    Name{"VW2000_AnpassFunktionen";}
    LangName{"VW2000_AnpassFunktionen";"VW2000_Adaptation_Functions";}
    CvsVerHis{}
    Type{1;}
    Icon{0;}
    Properties{"Begin";}
    FormalParam{}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"";}
    NodeCategory{"";}
    Info{"Platzhalter f\xFCr Pr\xFCfschritte";"";}
    Rights{"Write";"Read";}
    VersionInfo{}
    FunctionDef{
     Name{"VW2000_LangeAnpassung_Komplett";}
     LangName{"VW2000_LangeAnpassung_Komplett";"VW2000_LangeAnpassung_Komplett";}
     CvsVerHis{}
     Type{1;}
     Icon{1;}
     Properties{"Begin";}
     FormalParam{
      InputParam{"Hndl";
       LangName{"Hndl";"Hndl";}"VCIKANAL";"VCIKanal1";
       LangDesc{"VCI-Kanal";"";}}
      InputParam{"DlgHndl";
       LangName{"DlgHndl";"DlgHndl";}"DialogTyp";"DIALOG_LOKAL";
       LangDesc{"";"";}}
      InputParam{"Kanal";
       LangName{"Kanal";"Kanal";}"STGAnpassung_Kanal";"";
       LangDesc{"Anpassungskanal";"";}}
      InputParam{"Anpassung";
       LangName{"Anpassung";"Anpassung";}"STG_Anpassung_Lang";"";
       LangDesc{"zu schreibende Anpassung";"";}}
      InputParam{"Text";
       LangName{"Text";"Text";}"TEXT";"CTextLeer";
       LangDesc{"AnzeigeText";"";}}
      InputParam{"MesswerteAuswert";
       LangName{"MesswerteAuswert";"MesswerteAuswert";}"Bool";"CLogWahr";
       LangDesc{"mitgelieferte Messwerte auswerten";"";}}
      OutputParam{"Rueckgabewert";
       LangName{"Rueckgabewert";"Rueckgabewert";}"STRING";"DAnpassungBString";
       LangDesc{"gelesene Anpassung";"";}}
      OutputParam{"RecvTel";
       LangName{"RecvTel";"RecvTel";}"VCIResult";"DVciResult";
       LangDesc{"VCI Ergebniss";"";}}}
     LocalVar{
      LocVarDef{"KommentarAnpassungUngleich";
       LangName{"KommentarAnpassungUngleich";"KommentarAnpassungUngleich";}"Locvar";"TEXT";
       LangDesc{"";"";}
       LangText{"\"Anpassung ungleich\"";"\"Anpassung ungleich\"";"\"Anpassung ungleich\"";}"Const";}
      LocVarDef{"KommentarFunktionNOK";
       LangName{"KommentarFunktionNOK";"KommentarFunktionNOK";}"Locvar";"TEXT";
       LangDesc{"";"";}
       LangText{"\"Funktion nicht untersuetzt\"";"\"Funktion nicht untersuetzt\"";"\"function not supported\"";}"Const";}
      LocVarDef{"KommentarLaengeAnpaasungNOK";
       LangName{"KommentarLaengeAnpaasungNOK";"KommentarLaengeAnpaasungNOK";}"Locvar";"TEXT";
       LangDesc{"";"";}
       LangText{"\"Laenge der Anpaasung NOK\"";"\"Laenge der Anpaasung NOK\"";"\"Laenge der Anpaasung NOK\"";}"Const";}
      LocVarDef{"KommentarUnerwartetesErgebnis";
       LangName{"KommentarUnerwartetesErgebnis";"KommentarUnerwartetesErgebnis";}"Locvar";"TEXT";
       LangDesc{"";"";}
       LangText{"\"Unerwartetes Ergebnis\"";"\"Unerwartetes Ergebnis\"";"\"Unerwartetes Ergebnis\"";}"Const";}
      LocVarDef{"KommentarWeiterschaltenNichtErlaubt";
       LangName{"KommentarWeiterschaltenNichtErlaubt";"KommentarWeiterschaltenNichtErlaubt";}"Locvar";"TEXT";
       LangDesc{"";"";}
       LangText{"\"Weiterschalten nicht erlaubt\"";"\"Weiterschalten nicht erlaubt\"";"\"Weiterschalten nicht erlaubt\"";}"Const";}}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     MSLCode{"#pragma using VwScalingOffset // err = VwScalingOffset(err, TestString, LangeAnpassung, MesswerteAuswert, &AnpassungBString, &MessWertString1, &MessWertString2, &MessWertString3, &MessWertString4, &MessWertBString);\r\n\r\nstring\tWert_Hex;\r\nstring\tWSC_String;\r\nint     Tmp_Int;\r\nstring\tAnpasKanal_Hex;\r\nstring\tAnpassungBString;\r\nstring\tMessWertString1;\r\nstring\tMessWertString2;\r\nstring\tMessWertString3;\r\nstring\tMessWertString4;\r\nstring\tMessWertBString;\r\nstring  ServTel;\r\n\r\nTmp_Int = GeraeteNr_VW * 8;\r\nTmp_Int = Tmp_Int + ((ImporteursNr_VW & 0x380) / 0x80);\r\nWSC_String = midstr(itobinstr(Tmp_Int),1,3);\r\n\r\nTmp_Int = ImporteursNr_VW * 2;\r\nif (WSC_VW > 0xffff)\r\n    Tmp_Int = Tmp_Int +1;\r\nWSC_String = WSC_String + midstr(itobinstr(Tmp_Int),3,1);\r\n\r\nTmp_Int = WSC_VW & 0xffff;\r\nWSC_String = WSC_String + midstr(itobinstr(Tmp_Int),2,2);\r\n\r\n_dlgMultiSetLine (DlgHndl, 1, Text);\r\n_statSetValue (Anpassung);\r\n\r\n// Lesen der Unterst\xFCtzten Funktionen\r\nvciExDtaRead (Hndl, &ServTel);\r\nif (0 > strstr (ServTel, \"\\x01\\x0a\"))\t// lange Anpassung unterst\xFCtzt? \r\n\t{\r\n\t_vciStatVciError (Hndl);\r\n\t_statSetStrResult (ABBR, KommentarFunktionNOK, FSTGI);\r\n\treturn(ABBR);\r\n\t}\r\n\r\n\r\nif ((Kanal < 0) || ( Kanal > 255))\r\n\t{\r\n\t_statSetResult (err,FMWNOK);\r\n\terr = NOK;\r\n\t_statSetIntResult (err,0,FMWNOK);\r\n\treturn err;\r\n\t}\r\nif (strlen (Anpassung) <= 0)\r\n\t{\r\n\t_statSetResult (err,FMWNOK);\r\n\terr = NOK;\r\n\t_statSetIntResult (err,0,FMWNOK);\r\n\treturn err;\r\n\t}\r\n\r\nAnpasKanal_Hex = midstr(itobinstr(Kanal),3,1);\r\n\r\nerr = _vciDataExchange (Hndl, 0x31, 0x71, \"\\xb8\\x01\\x0a\", RecvTel); // Anpassung starten\r\nif ( err != OK )\r\n\t{\r\n\t_vciStatVciError (Hndl);\r\n\t_statSetStrResult (NOK,*RecvTel, FSTGI);\r\n\t*Rueckgabewert = \"\";\r\n\t_vciDataExchange (Hndl, 0x32, 0x72, \"\\xb8\\x01\\x0a\", RecvTel);\r\n\treturn(NOK);\r\n\t}\r\nerr = _vciDataExchange (Hndl, 0x31, 0x71, \"\\xba\\x01\\x0a\", RecvTel); // Anpassung abfragen\r\nif ( err != OK )\r\n\t{\r\n\t_vciStatVciError (Hndl);\r\n\t_statSetStrResult (NOK,*RecvTel, FSTGI);\r\n\t*Rueckgabewert = \"\";\r\n\t_vciDataExchange (Hndl, 0x32, 0x72, \"\\xb8\\x01\\x0a\", RecvTel);\r\n\treturn(NOK);\r\n\t}\r\nelse\r\n\t{\r\n\tTmp_Int = *RecvTel[3];\r\n\tif (Tmp_Int != 0x81)\r\n\t\t{\r\n\t\terrDebug (1, \"Weiterschalten nicht erlaubt\" + hexstr (*RecvTel));\r\n\t\t_statSetAsciiResult (NOK,KommentarWeiterschaltenNichtErlaubt, FSTGI);\r\n\t\t*Rueckgabewert = \"\";\r\n\t\t_vciDataExchange (Hndl, 0x32, 0x72, \"\\xb8\\x01\\x0a\", RecvTel);\r\n\t\t_dlgMultiSetLine (DlgHndl, 2, KommentarWeiterschaltenNichtErlaubt);\r\n\t\tWait (1.0);\r\n\t\treturn(NOK);\r\n\t\t}\r\n\t}\r\nerr = _vciDataExchange (Hndl, 0x31, 0x71, \"\\xb9\\x01\\x0a\" + AnpasKanal_Hex, RecvTel); // Anpassung abfragen mit KanalNummer\r\nif ( err != OK )\r\n\t{\r\n\t_vciStatVciError (Hndl);\r\n\t_statSetStrResult (NOK,*RecvTel, FSTGI);\r\n\t*Rueckgabewert = \"\";\r\n\t_vciDataExchange (Hndl, 0x32, 0x72, \"\\xb8\\x01\\x0a\", RecvTel);\r\n\treturn(NOK);\r\n\t}\r\n\r\nerr = _vciDataExchange (Hndl, 0x31, 0x71, \"\\xba\\x01\\x0a\", RecvTel); // Anpassung abfragen; Wert lesen\r\nif ( err != OK )\r\n\t{\r\n\t_vciStatVciError (Hndl);\r\n\t_statSetStrResult (NOK,*RecvTel, FSTGI);\r\n\t*Rueckgabewert = \"\";\r\n\t_vciDataExchange (Hndl, 0x32, 0x72, \"\\xb8\\x01\\x0a\", RecvTel);\r\n\treturn(NOK);\r\n\t}\r\n\t\r\nelse\r\n\t{\r\n\terr = VwScalingOffset(err, *RecvTel, 1, MesswerteAuswert, &AnpassungBString, &MessWertString1, &MessWertString2, &MessWertString3, &MessWertString4, &MessWertBString);\r\n\tif (err != OK)\r\n\t\t{\r\n\t\terrDebug (1, sprintf (\"unerwartetes Ergebnis: %s \", hexstr (*RecvTel)));\r\n\t\t_statSetAsciiResult (NOK,KommentarUnerwartetesErgebnis, FSTGI);\r\n\t\t*Rueckgabewert = \"\";\r\n\t\t_vciDataExchange (Hndl, 0x32, 0x72, \"\\xb8\\x01\\x0a\", RecvTel);\r\n\t\t_dlgMultiSetLine (DlgHndl, 2, KommentarUnerwartetesErgebnis);\r\n\t\tWait (1.0);\r\n\t\treturn(NOK);\r\n\t\t}\r\n\tif (strlen (Anpassung) != strlen (AnpassungBString))\r\n\t\t{\r\n\t\terrDebug (1, sprintf (\"L\xE4nge der Anpassung NOK: %d != %d\", strlen (Anpassung), strlen (AnpassungBString)));\r\n\t\t_statSetAsciiResult (NOK,KommentarLaengeAnpaasungNOK, FMWNOK);\r\n\t\t*Rueckgabewert = \"\";\r\n\t\t_vciDataExchange (Hndl, 0x32, 0x72, \"\\xb8\\x01\\x0a\", RecvTel);\r\n\t\t_dlgMultiSetLine (DlgHndl, 2, KommentarLaengeAnpaasungNOK);\r\n\t\tWait (1.0);\r\n\t\treturn(NOK);\r\n\t\t}\r\n\telse\r\n\t\t{\r\n//\t\t*Rueckgabewert = strfmt (\"A\", AnpassungBString);\r\n\t\t*Rueckgabewert = AnpassungBString;\r\n\r\n//\t\terrDebug (1, \"Anpassung gelesen: \" + *Rueckgabewert);\r\n\t\terrDebug (1, \"Anpassung gelesen: \" + *Rueckgabewert + \" hex: \" + hexstr (*Rueckgabewert ));\r\n\t\terrDebug (2, \"Anpassung zu schreiben: \" + Anpassung);\r\n\t\tWert_Hex = Anpassung;\r\n\t\terrDebug (3, \"MW1:\" + MessWertString1 + \"MW2:\" + MessWertString2 + \"MW3:\" + MessWertString3 + \"MW4:\" + MessWertString4);\r\n\t\t_dlgMultiSetLine (DlgHndl, 2, Anpassung);\r\n\t\tif (MesswerteAuswert == 1)\r\n\t\t\t_dlgMultiSetLine (DlgHndl, 3, MessWertString1 + \" \" + MessWertString2 + \" \" + MessWertString3 + \" \" + MessWertString4);\r\n\t\t}\r\n\t}\r\n\r\nerr = _vciDataExchange (Hndl, 0x31, 0x71, \"\\xb9\\x01\\x0a\" + Wert_Hex, RecvTel); // Anpassung schreiben (Weiterschalten mit neuem Wert)\r\nif ( err != OK )\r\n\t{\r\n\t_vciStatVciError (Hndl);\r\n\t_statSetStrResult (NOK,*RecvTel, FSTGI);\r\n\t*Rueckgabewert = \"\";\r\n\t_vciDataExchange (Hndl, 0x32, 0x72, \"\\xb8\\x01\\x0a\", RecvTel);\r\n\treturn(NOK);\r\n\t}\r\nerr = _vciDataExchange (Hndl, 0x31, 0x71, \"\\xba\\x01\\x0a\", RecvTel); // Anpassung abfragen, nach schreiben\r\nif ( err != OK )\r\n\t{\r\n\t_vciStatVciError (Hndl);\r\n\t_statSetStrResult (NOK,*RecvTel, FSTGI);\r\n\t*Rueckgabewert = \"\";\r\n\t_vciDataExchange (Hndl, 0x32, 0x72, \"\\xb8\\x01\\x0a\", RecvTel);\r\n\treturn(NOK);\r\n\t}\r\n /*err = _vciDataExchange (Hndl, 0x31, 0x71, \"\\xb9\\x01\\x0a\" + Wert_Hex, RecvTel);\r\nif ( err != OK )\r\n\t{\r\n\t_vciStatVciError (Hndl);\r\n\t_statSetStrResult (NOK,*RecvTel, FSTGI);\r\n\t*Rueckgabewert = \"\";\r\n\t_vciDataExchange (Hndl, 0x32, 0x72, \"\\xb8\\x01\\x0a\", RecvTel);\r\n\treturn(NOK);\r\n\t}\r\nerr = _vciDataExchange (Hndl, 0x31, 0x71, \"\\xba\\x01\\x0a\", RecvTel);\r\nif ( err != OK )\r\n\t{\r\n\t_vciStatVciError (Hndl);\r\n\t_statSetStrResult (NOK,*RecvTel, FSTGI);\r\n\t*Rueckgabewert = \"\";\r\n\t_vciDataExchange (Hndl, 0x32, 0x72, \"\\xb8\\x01\\x0a\", RecvTel);\r\n\treturn(NOK);\r\n\t}*/\r\n\r\nerr = _vciDataExchange (Hndl, 0x31, 0x71, \"\\xbb\\x01\\x0a\" + Wert_Hex + WSC_String, RecvTel); // Anpassung speichern\r\nif ( err != OK )\r\n\t{\r\n\t_vciStatVciError (Hndl);\r\n\t_statSetStrResult (NOK,*RecvTel, FSTGI);\r\n\t*Rueckgabewert = \"\";\r\n\t_vciDataExchange (Hndl, 0x32, 0x72, \"\\xb8\\x01\\x0a\", RecvTel);\r\n\treturn(NOK);\r\n\t}\r\nerr = _vciDataExchange (Hndl, 0x31, 0x71, \"\\xba\\x01\\x0a\", RecvTel); // letzte Abfrage mit neuen Werten\r\nif ( err != OK )\r\n\t{\r\n\t_vciStatVciError (Hndl);\r\n\t_statSetStrResult (NOK,*RecvTel, FSTGI);\r\n\t*Rueckgabewert = \"\";\r\n\t_vciDataExchange (Hndl, 0x32, 0x72, \"\\xb8\\x01\\x0a\", RecvTel);\r\n\treturn(NOK);\r\n\t}\r\nelse\r\n\t{\r\n\terr = VwScalingOffset(err, *RecvTel, 1, MesswerteAuswert, &AnpassungBString, &MessWertString1, &MessWertString2, &MessWertString3, &MessWertString4, &MessWertBString);\r\n\tif (err != OK)\r\n\t\t{\r\n\t\terrDebug (1, sprintf (\"unerwartetes Ergebnis: %s \", hexstr (*RecvTel)));\r\n\t\t_statSetAsciiResult (NOK,KommentarUnerwartetesErgebnis, FSTGI);\r\n\t\t*Rueckgabewert = \"\";\r\n\t\t_dlgMultiSetLine (DlgHndl, 2, KommentarUnerwartetesErgebnis);\r\n\t\tWait (1.0);\r\n\t\t}\r\n\telse\r\n\t\t{\r\n//\t\t*Rueckgabewert = strfmt (\"A\", AnpassungBString);\r\n\t\t*Rueckgabewert = AnpassungBString;\r\n\t\terrDebug (4, \"Anpassung gespeichert: \" + *Rueckgabewert + \" hex: \" + hexstr (*Rueckgabewert ));\r\n\t\terrDebug (5, \"MW1:\" + MessWertString1 + \"MW2:\" + MessWertString2 + \"MW3:\" + MessWertString3 + \"MW4:\" + MessWertString4);\r\n\t\tif (Anpassung == *Rueckgabewert)\r\n\t\t\t{\r\n\t\t\t_statSetStrResult (OK,*Rueckgabewert,FOK);\r\n\t\t\t_dlgMultiSetLine (DlgHndl, 2, *Rueckgabewert + \" / \" + hexstr (*Rueckgabewert));\r\n\t\t\tif (MesswerteAuswert == 1)\r\n\t\t\t\t_dlgMultiSetLine (DlgHndl, 3, MessWertString1 + \" \" + MessWertString2 + \" \" + MessWertString3 + \" \" + MessWertString4);\r\n\t\t\t}\r\n\t\telse\r\n\t\t\t{\r\n\t\t\t_statSetStrResult (NOK, *Rueckgabewert, FMWNOK);\r\n\t\t\t_dlgMultiSetLine (DlgHndl, 2, KommentarAnpassungUngleich);\r\n\t\t\tWait (1.0);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n_vciDataExchange (Hndl, 0x32, 0x72, \"\\xb8\\x01\\x0a\", RecvTel);\r\n\r\n\r\n_dlgMultiClearLine (DlgHndl, 1);\r\n_dlgMultiClearLine (DlgHndl, 2);\r\n_dlgMultiClearLine (DlgHndl, 3);";}
     NodeCategory{"";}
     Info{"Mit diesem Modul kann der Wert einer \"langen Anpassung\" in einem Steuerger\xE4t geschrieben werden. (S)\r\n\r\nHndl                         das Handel zum STG-Kommunikationskanal; Typ: int; typisch VCIKanal1\r\nDlgHndl                    das verwendete Dialog-Handle; Typ: int; typisch DIALOD_LOKAL\r\nKanal                        die Anpassungs-Kanalnummer; Typ: int; Wertebereich: 0..255\r\nAnpassung               die zuschreibende Anpassung; Typ string\r\nText                          der Text, der w\xE4hrend der Ausf\xFChrung angezeigt wird\r\nMesswerteAuswert   Bool, ob die vom STG \xFCbergebenen Messwerte ausgewertet werden sollen oder nicht; Typ int; Wertebereich 0..1\r\nRueckgabewert       Antwort-Telegramm, das Ascii-Konvertiert vom STG zur\xFCckgegeben wird; Typ string\r\nRecvTel                   das STG-Telegramm, dies als Rohdaten zur\xFCckgegebenwerden, zur weiteren Auswertung; Typ string\r\n\r\nDie Bewertung des Pr\xFCfschrittes ist immer \"OK\", wenn der Befehl erfolgreich zum \r\nSteuerger\xE4t gesendet und von diesem akzeptiert wurde und die Anpassung erfolgreich geschrieben werden konnte.\r\n\r\nsz, 26.03.2004: Erstellung\r\nsz, 05.01.2005: Erweiterung auf Abfrage unterst\xFCtzter Funktionen\r\nfd, 19.06.2007: Erweiterung: Anpassung und R\xFCckgabewert k\xF6nnen auch Bin\xE4rstzrings sein";"";}
     Rights{"Write";"Read";}
     VersionInfo{
      CurVersion{1;2;"nbmr";}
      Version{1;0;"AC";" - fertiggestellt - ";"vw-admin";"05.01.2005 16:58:34";}
      Version{1;1;"AC";"- in Arbeit -";"vw-admin";"01.03.2005 13:41:13";}
      Version{1;2;"nbmr";"[ Baustein importiert (ersetzt) ]";"dsa";"03.12.2008 12:32:02";}}}}}}
 FunctionDef{
  Name{"VW_spezifische_Bibliothek";}
  LangName{"VW_spezifische_Bibliothek";"VW_specific_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"Sammlung von Bausteinen zur Kommunikation mit Steuergeraeten von VW.";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;2;"ZPH18";}
   Version{1;0;"AC";"- freigegeben -";"vw-admin";"04.03.2003 11:56:19";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"07.08.2006 13:58:14";}
   Version{1;2;"ZPH18";"[ Baustein importiert (ersetzt) ]";"admin";"14.08.2007 15:07:01";}}
  FunctionDef{
   Name{"VW2000_Dienste";}
   LangName{"VW2000_Dienste";"VW2000_Dienste";}
   CvsVerHis{}
   Type{1;}
   Icon{0;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Sammlung von Bausteinen zur Kommunikation mit Steuerger\xE4ten von VW mit dem Protokoll K2000";"";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{1;3;"PAE";}
    Version{1;0;"AC";"- freigegeben -";"vw-admin";"17.02.2003 15:37:21";}
    Version{1;1;"AC";"- in Arbeit -";"vw-admin";"28.08.2003 17:40:34";}
    Version{1;2;"AC";"- in Arbeit -";"dsa-admin";"08.06.2004 08:55:47";}
    Version{1;3;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"25.07.2006 08:36:16";}}
   FunctionDef{
    Name{"VW2000_ID";}
    LangName{"VW2000_ID";"VW2000_ID";}
    CvsVerHis{}
    Type{1;}
    Icon{0;}
    Properties{"Begin";}
    FormalParam{}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"";}
    NodeCategory{"";}
    Info{"";"";}
    Rights{"Write";"Read";}
    VersionInfo{
     CurVersion{0;1;"PAE";}
     Version{0;1;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"24.07.2006 17:06:13";}}
    FunctionDef{
     Name{"VW2000_ID_Lesen";}
     LangName{"VW2000_ID_Lesen";"VW2000_ID_Read";}
     CvsVerHis{}
     Type{1;}
     Icon{1;}
     Properties{"Begin";}
     FormalParam{
      InputParam{"Hndl";
       LangName{"Hndl";"Hndl";}"VCIKANAL";"VCIKanal1";
       LangDesc{"VCI-Kanal";"VCI channel";}}
      OutputParam{"ID_String";
       LangName{"ID_String";"ID_String";}"VW_Result_Tel";"VW_Stg_ID";
       LangDesc{"Steuerger\xE4te-Identifikation";"ECU ID string";}}}
     LocalVar{}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     MSLCode{"err = _vciDataExchange (Hndl, 0x1a, 0x5a, \"\\x9b\", ID_String);\r\n\r\nif (err)\r\n\t{\r\n\t_vciStatVciError (Hndl);\r\n\terr = NOK;\r\n\t}\r\n\r\n_statSetStrResult (err, *ID_String, FSTGI);\r\n";}
     NodeCategory{"";}
     Info{"Modul lie\xDFt die Steuerger\xE4te-Identifikation.\r\nDabei wird der KWP2000-Befehl ReadECUIdentification ( Blocktitel 0x1a)\r\nmit dem Parameter ECUidentification ( 0x9b) verwendet.\r\n\r\nDie gelesene Identifikation wird immer vollst\xE4ndig in der Variablen ID-String abgespeichert und\r\nsomit sp\xE4ter mit den VW-Diensten VW2000_ID_Bew,VW2000_TNr_Bew,VW2000-Cod_Bew,\r\nVW2000_Tnr_Cod_Bew, VW2000_ID_Pos_Bew, VW2000_Vers_Speichern)\r\nausgewertet bzw. weiter verarbeitet werden.\r\n\r\nIn der Statistik wird immer der konvertierte ID-String ( entsprechend VAG1551/1552 ) abgespeichert.\r\nDabei wird die Importeursnummer und die Ger\xE4tenummer nicht in der Konvertierung ber\xFCcksichtigt\r\n\r\nDie Bewertung des Pr\xFCfschrittes ist immer OK, wenn das Lesen der ID vom Steuerger\xE4t erfolgreich\r\nwar.\r\n\r\n";"";}
     Rights{"Write";"Read";}
     VersionInfo{
      CurVersion{1;1;"SVW";}
      Version{1;0;"AC";"- freigegeben -";"vw-admin";"04.03.2003 13:00:46";}
      Version{1;1;"SVW";"- in Arbeit -";"admin";"30.09.2003 13:16:10";}}}}}}
 FunctionDef{
  Name{"VW_spezifische_Bibliothek";}
  LangName{"VW_spezifische_Bibliothek";"VW_specific_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"Sammlung von Bausteinen zur Kommunikation mit Steuergeraeten von VW.";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;2;"ZPH18";}
   Version{1;0;"AC";"- freigegeben -";"vw-admin";"04.03.2003 11:56:19";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"07.08.2006 13:58:14";}
   Version{1;2;"ZPH18";"[ Baustein importiert (ersetzt) ]";"admin";"14.08.2007 15:07:01";}}
  FunctionDef{
   Name{"VW2000_Dienste";}
   LangName{"VW2000_Dienste";"VW2000_Dienste";}
   CvsVerHis{}
   Type{1;}
   Icon{0;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Sammlung von Bausteinen zur Kommunikation mit Steuerger\xE4ten von VW mit dem Protokoll K2000";"";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{1;3;"PAE";}
    Version{1;0;"AC";"- freigegeben -";"vw-admin";"17.02.2003 15:37:21";}
    Version{1;1;"AC";"- in Arbeit -";"vw-admin";"28.08.2003 17:40:34";}
    Version{1;2;"AC";"- in Arbeit -";"dsa-admin";"08.06.2004 08:55:47";}
    Version{1;3;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"25.07.2006 08:36:16";}}
   FunctionDef{
    Name{"VW2000_AnpassFunktionen";}
    LangName{"VW2000_AnpassFunktionen";"VW2000_Adaptation_Functions";}
    CvsVerHis{}
    Type{1;}
    Icon{0;}
    Properties{"Begin";}
    FormalParam{}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"";}
    NodeCategory{"";}
    Info{"Platzhalter f\xFCr Pr\xFCfschritte";"";}
    Rights{"Write";"Read";}
    VersionInfo{}
    FunctionDef{
     Name{"VW2000_Anpassung_Komplett";}
     LangName{"VW2000_Anpassung_Komplett";"VW2000_Adaptation_complete";}
     CvsVerHis{}
     Type{1;}
     Icon{1;}
     Properties{"Begin";}
     FormalParam{
      InputParam{"Hndl";
       LangName{"Hndl";"Hndl";}"VCIKANAL";"VCIKanal1";
       LangDesc{"VCI-Kanal";"VCI channel";}}
      InputParam{"DlgHndl";
       LangName{"DlgHndl";"DlgHndl";}"DialogTyp";"DIALOG_LOKAL";
       LangDesc{"Dialog handle";"Dialog handle";}}
      InputParam{"Kanal";
       LangName{"Kanal";"Kanal";}"STGAnpassung_Kanal";"";
       LangDesc{"Anpassungskanal";"";}}
      InputParam{"Anpassung";
       LangName{"Anpassung";"Anpassung";}"STG_Anpassung";"";
       LangDesc{"zu schreibende Anpassung";"";}}
      InputParam{"Text";
       LangName{"Text";"Text";}"TEXT";"CTextLeer";
       LangDesc{"AnzeigeText";"";}}
      OutputParam{"Rueckgabewert";
       LangName{"Rueckgabewert";"Rueckgabewert";}"STG_Anpassung";"Anpassung_Rueck";
       LangDesc{"gelesene Anpassung";"";}}
      OutputParam{"RecvTel";
       LangName{"RecvTel";"RecvTel";}"VCIResult";"DVciResult";
       LangDesc{"VCI Ergebniss";"";}}}
     LocalVar{}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     MSLCode{"string\tWert_Hex;\r\nstring\tWSC_String;\r\nint     Tmp_Int;\r\nstring\tAnpasKanal_Hex;\r\n\r\n\r\nTmp_Int = GeraeteNr_VW * 8;\r\nTmp_Int = Tmp_Int + ((ImporteursNr_VW & 0x380) / 0x80);\r\nWSC_String = midstr(itobinstr(Tmp_Int),1,3);\r\n\r\nTmp_Int = ImporteursNr_VW * 2;\r\nif (WSC_VW > 0xffff)\r\n    Tmp_Int = Tmp_Int +1;\r\nWSC_String = WSC_String + midstr(itobinstr(Tmp_Int),3,1);\r\n\r\nTmp_Int = WSC_VW & 0xffff;\r\nWSC_String = WSC_String + midstr(itobinstr(Tmp_Int),2,2);\r\n\r\n_dlgMultiSetLine (DlgHndl, 1, Text);\r\n\r\nif ((Kanal < 0) || ( Kanal > 255))\r\n\t{\r\n\t_statSetResult (err,FMWNOK);\r\n\terr = NOK;\r\n\t_statSetIntResult (err,0,FMWNOK);\r\n\treturn err;\r\n\t}\r\n\r\nAnpasKanal_Hex = midstr(itobinstr(Kanal),3,1);\r\nWert_Hex = midstr(itobinstr(Anpassung),2,2);\r\n\r\nerr = _vciDataExchange (Hndl, 0x31, 0x71, \"\\xb8\\x01\\x03\", RecvTel);\r\nif ( err != OK )\r\n\t{\r\n\t_vciStatVciError (Hndl);\r\n\t_statSetStrResult (NOK,*RecvTel, FSTGI);\r\n\t*Rueckgabewert = -1;\r\n\t_vciDataExchange (Hndl, 0x32, 0x72, \"\\xb8\\x01\\x03\", RecvTel);\r\n\treturn(NOK);\r\n\t}\r\nerr = _vciDataExchange (Hndl, 0x31, 0x71, \"\\xba\\x01\\x03\", RecvTel);\r\nif ( err != OK )\r\n\t{\r\n\t_vciStatVciError (Hndl);\r\n\t_statSetStrResult (NOK,*RecvTel, FSTGI);\r\n\t*Rueckgabewert = -1;\r\n\t_vciDataExchange (Hndl, 0x32, 0x72, \"\\xb8\\x01\\x03\", RecvTel);\r\n\treturn(NOK);\r\n\t}\r\nerr = _vciDataExchange (Hndl, 0x31, 0x71, \"\\xb9\\x01\\x03\" + AnpasKanal_Hex, RecvTel);\r\nif ( err != OK )\r\n\t{\r\n\t_vciStatVciError (Hndl);\r\n\t_statSetStrResult (NOK,*RecvTel, FSTGI);\r\n\t*Rueckgabewert = -1;\r\n\t_vciDataExchange (Hndl, 0x32, 0x72, \"\\xb8\\x01\\x03\", RecvTel);\r\n\treturn(NOK);\r\n\t}\r\n\r\nerr = _vciDataExchange (Hndl, 0x31, 0x71, \"\\xba\\x01\\x03\", RecvTel);\r\nif ( err != OK )\r\n\t{\r\n\t_vciStatVciError (Hndl);\r\n\t_statSetStrResult (NOK,*RecvTel, FSTGI);\r\n\t*Rueckgabewert = -1;\r\n\t_vciDataExchange (Hndl, 0x32, 0x72, \"\\xb8\\x01\\x03\", RecvTel);\r\n\treturn(NOK);\r\n\t}\r\n\r\n// START Eingef\xFCgt laut Lastenheft\r\nerr = _vciDataExchange (Hndl, 0x31, 0x71, \"\\xb9\\x01\\x03\" + Wert_Hex, RecvTel);\r\nif ( err != OK )\r\n\t{\r\n\t_vciStatVciError (Hndl);\r\n\t_statSetStrResult (NOK,*RecvTel, FSTGI);\r\n\t*Rueckgabewert = -1;\r\n\t_vciDataExchange (Hndl, 0x32, 0x72, \"\\xb8\\x01\\x03\", RecvTel);\r\n\treturn(NOK);\r\n\t}\r\nerr = _vciDataExchange (Hndl, 0x31, 0x71, \"\\xba\\x01\\x03\", RecvTel);\r\nif ( err != OK )\r\n\t{\r\n\t_vciStatVciError (Hndl);\r\n\t_statSetStrResult (NOK,*RecvTel, FSTGI);\r\n\t*Rueckgabewert = -1;\r\n\t_vciDataExchange (Hndl, 0x32, 0x72, \"\\xb8\\x01\\x03\", RecvTel);\r\n\treturn(NOK);\r\n\t}\r\nerr = _vciDataExchange (Hndl, 0x31, 0x71, \"\\xb9\\x01\\x03\" + Wert_Hex, RecvTel);\r\nif ( err != OK )\r\n\t{\r\n\t_vciStatVciError (Hndl);\r\n\t_statSetStrResult (NOK,*RecvTel, FSTGI);\r\n\t*Rueckgabewert = -1;\r\n\t_vciDataExchange (Hndl, 0x32, 0x72, \"\\xb8\\x01\\x03\", RecvTel);\r\n\treturn(NOK);\r\n\t}\r\nerr = _vciDataExchange (Hndl, 0x31, 0x71, \"\\xba\\x01\\x03\", RecvTel);\r\nif ( err != OK )\r\n\t{\r\n\t_vciStatVciError (Hndl);\r\n\t_statSetStrResult (NOK,*RecvTel, FSTGI);\r\n\t*Rueckgabewert = -1;\r\n\t_vciDataExchange (Hndl, 0x32, 0x72, \"\\xb8\\x01\\x03\", RecvTel);\r\n\treturn(NOK);\r\n\t}\r\n// ENDE Eingef\xFCgt laut Lastenheft\r\n\r\nerr = _vciDataExchange (Hndl, 0x31, 0x71, \"\\xbb\\x01\\x03\" + Wert_Hex + WSC_String, RecvTel);\r\nif ( err != OK )\r\n\t{\r\n\t_vciStatVciError (Hndl);\r\n\t_statSetStrResult (NOK,*RecvTel, FSTGI);\r\n\t*Rueckgabewert = -1;\r\n\t_vciDataExchange (Hndl, 0x32, 0x72, \"\\xb8\\x01\\x03\", RecvTel);\r\n\treturn(NOK);\r\n\t}\r\nerr = _vciDataExchange (Hndl, 0x31, 0x71, \"\\xba\\x01\\x03\", RecvTel);\r\nif ( err != OK )\r\n\t{\r\n\t_vciStatVciError (Hndl);\r\n\t_statSetStrResult (NOK,*RecvTel, FSTGI);\r\n\t*Rueckgabewert = -1;\r\n\t_vciDataExchange (Hndl, 0x32, 0x72, \"\\xb8\\x01\\x03\", RecvTel);\r\n\treturn(NOK);\r\n\t}\r\nelse\r\n\t{\r\n\t*Rueckgabewert =fcalcTerm(*RecvTel,\"@6*256+@7\");\r\n\t_statSetFloatResult (err,*Rueckgabewert * 1.0,FOK);\r\n\t}\r\n\r\n// Eingef\xFCgt laut Lastenheft\r\n_vciDataExchange (Hndl, 0x32, 0x72, \"\\xb8\\x01\\x03\", RecvTel);\r\n\r\n\r\n_dlgMultiClearLine (DlgHndl, 1);\r\n\r\n";}
     NodeCategory{"";}
     Info{"F\xFCr manche Steuerger\xE4te ist zum Speichern einer Anpassung immer der komplette Ablauf\r\n( Anpassung Lesen, Anpassung Schreiben, Anpassung Speichern) notwendig. Mit diesem Modul wird dieser\r\nkomplette Ablauf umgesetzt und es kann der Wert einer \"Anpassung\" in einem Steuerger\xE4t gespeichert \r\nwerden.\r\n\r\nDie Anpassungs-Kanalnummer mu?in der Variable \"Kanal\" \xFCbergeben werden und mu?sich im Bereich\r\nzwischen \"0\" und \"255\" befinden..\r\nDie Anpassungs-Wert mu?in der Variable \"Anpassung\" \xFCbergeben werden und mu?sich im Bereich\r\nzwischen \"0\" und \"65535\" befinden..\r\nDer gelesene Anpassungswert wird hierbei verworfen.\r\n\r\nDie Bewertung des Pr\xFCfschrittes ist immer \"OK\", wenn alle drei Befehle erfolgreich zum \r\nSteuerger\xE4t gesendet und von diesem akzeptiert wurden und die Anpassungs-Kanalnummer und der\r\nAnpassungs-Wert sich im entsprechenden Bereich befindet.\r\n\r\nIn die Statistik wird ein \"OK\" oder \"NOK\" in Abh\xE4ngigkeit der Bewertung und der r\xFCckgemeldete Wert des\r\nentsprechenden Anpassungs-Kanals der Funktion \"Anpassung Speichern\" geschrieben.";"";}
     Rights{"Write";"Read";}
     VersionInfo{
      CurVersion{2;1;"nbmr";}
      Version{1;0;"AC";"- freigegeben -";"vw-admin";"27.02.2003 13:25:20";}
      Version{1;1;"MOS";"- in Arbeit -";"mosel-admin";"07.05.2003 10:36:53";}
      Version{1;2;"MOS";"- in Arbeit -";"mosel-admin";"21.07.2003 14:06:28";}
      Version{1;3;"MOS";"- in Arbeit -";"mosel-admin";"21.07.2003 14:12:30";}
      Version{2;0;"AC";" - freigegeben - ";"vw-admin";"25.08.2003 16:04:06";}
      Version{2;1;"nbmr";"[ Baustein importiert (ersetzt) ]";"dsa";"21.05.2009 10:43:11";}}}}}}
 FunctionDef{
  Name{"VW_spezifische_Bibliothek";}
  LangName{"VW_spezifische_Bibliothek";"VW_specific_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"Sammlung von Bausteinen zur Kommunikation mit Steuergeraeten von VW.";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;2;"ZPH18";}
   Version{1;0;"AC";"- freigegeben -";"vw-admin";"04.03.2003 11:56:19";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"07.08.2006 13:58:14";}
   Version{1;2;"ZPH18";"[ Baustein importiert (ersetzt) ]";"admin";"14.08.2007 15:07:01";}}
  FunctionDef{
   Name{"VW2000_Dienste";}
   LangName{"VW2000_Dienste";"VW2000_Dienste";}
   CvsVerHis{}
   Type{1;}
   Icon{0;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Sammlung von Bausteinen zur Kommunikation mit Steuerger\xE4ten von VW mit dem Protokoll K2000";"";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{1;3;"PAE";}
    Version{1;0;"AC";"- freigegeben -";"vw-admin";"17.02.2003 15:37:21";}
    Version{1;1;"AC";"- in Arbeit -";"vw-admin";"28.08.2003 17:40:34";}
    Version{1;2;"AC";"- in Arbeit -";"dsa-admin";"08.06.2004 08:55:47";}
    Version{1;3;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"25.07.2006 08:36:16";}}
   FunctionDef{
    Name{"VW2000_Dienste_22";}
    LangName{"VW2000_Dienste_22";"VW2000_Services_22";}
    CvsVerHis{}
    Type{1;}
    Icon{0;}
    Properties{"Begin";}
    FormalParam{}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"";}
    NodeCategory{"";}
    Info{"SG-Identifikation mit Service 0x22.\r\nDiese sollen in Zukunft die STG - ID 0x1A (0x9b, 0x9a, 0x91, 0x86, ...) abloesen.";"Moduls read the ECU Id by using the KWP2000-Comand ReadByIdentifier (Requesttitel 0x22) ";}
    Rights{"Write";"Read";}
    VersionInfo{
     CurVersion{1;0;"PAE";}
     Version{0;1;"PAE";"- in Arbeit -";"vw-admin";"30.05.2005 14:08:48";}
     Version{0;2;"PAE";"- in Arbeit -";"vw-admin";"31.05.2005 11:13:39";}
     Version{1;0;"PAE";" Freigabe ";"vw-admin";"03.06.2005 15:53:13";}}
    FunctionDef{
     Name{"VW2000_Read_Service_22_allgemein";}
     LangName{"VW2000_Read_Service_22_allgemein";"VW2000_Read_Service_22_general";}
     CvsVerHis{}
     Type{1;}
     Icon{1;}
     Properties{"Begin";}
     FormalParam{
      InputParam{"Hndl";
       LangName{"Hndl";"Hndl";}"VCIKANAL";"VCIKanal1";
       LangDesc{"VCI-Kanal";"VCI channel";}}
      InputParam{"LID";
       LangName{"LID";"LID";}"VCISendTel";"";
       LangDesc{"local Identifier (Bin-String)";"";}}
      OutputParam{"RecvTel";
       LangName{"RecvTel";"RecvTel";}"VW_Result_Tel";"DLID";
       LangDesc{"";"";}}}
     LocalVar{
      LocVarDef{"CKommentarFunktionNOK";
       LangName{"CKommentarFunktionNOK";"CKommentarFunktionNOK";}"Locvar";"TEXT";
       LangDesc{"";"";}
       LangText{"\"Funktion nicht unterstuetzt\"";"\"\xB9\xA6\xC4\xDC\xB2\xBB\xD6\xA7\xB3\xD6\"";"\"Function not supported\"";}"Const";}}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     MSLCode{"string ServTel;\r\n\r\n*RecvTel = \"\";\r\n\r\nvciExDtaRead (Hndl, &ServTel);\r\nif (0 > strstr (ServTel, \"\\x01\\x14\"))\t// Funktion unterstuetzt? \r\n{\r\n\t_statSetStrResult (ABBR,CKommentarFunktionNOK, FSTGI);\r\n\t// return(ABBR);\r\n}\r\n\r\nif (strlen(LID) != 2)\r\n\t{\r\n\t_statSetStrResult (ABBR,CKommentarFunktionNOK, FSTGI);\r\n\treturn(ABBR);\r\n\t}\r\n\r\nerr = _vciDataExchange (Hndl, 0x22, 0x62, LID, RecvTel);\r\n\r\nif (err)\r\n{\r\n\t_vciStatVciError (Hndl);\r\n\terr = NOK;\r\n}\r\n\r\n_statSetStrResult (err, *RecvTel, FSTGI);\r\n";}
     NodeCategory{"";}
     Info{"SG-Identifikation mit Service 0x22; \r\nmit Local Identifier (LID), der im Parameter LID uebergeben wird.:\r\nEs wird ueberprueft, ob die Diagnosefunktion unterstuetzt wird, dann wird der Service ausgefuehrt.\r\nDer Parameter RecvTel liefert den kompletten Wert zurueck der STG_Antwort zur\xFCck.\r\nDer Baustein liefert ein OK wenn die LID gelesen werden konnte.\r\nDer Baustein liefert ein ABBR wenn die Diagnosefunktion nicht unterst\xFCtzt wird.\r\nDer Baustein liefert ein NOK wenn die LID nicht gelesen werden konnte.\r\n\r\njk, 29.12.05";"Modul reads the ECU Id by using the KWP2000-Comand ReadByIdentifier (Requesttitel 0x22) \r\nthe RID will be given in the parameter LID.\r\nIt will be testet if the service is supported, than the service will be executed.\r\nThe parameter ID_String contains the ECU answer without the LID. Length n Byte (see spec.)\r\nThe evaluatin of the module will be OK if the reading of the RID was OK.\r\n\r\nsz, 31.05.05";}
     Rights{"Write";"Read";}
     VersionInfo{
      CurVersion{0;7;"CP41A_Te";}
      Version{0;1;"ING";"- in Arbeit -";"dsa-admin";"22.12.2005 10:19:22";}
      Version{0;2;"ING";"- in Arbeit -";"dsa-admin";"29.12.2005 08:30:21";}
      Version{0;3;"ING";"- in Arbeit -";"dsa-admin";"29.12.2005 09:14:11";}
      Version{0;4;"ING";"- in Arbeit -";"dsa-admin";"29.12.2005 09:14:36";}
      Version{0;5;"ING";"- in Arbeit -";"dsa-admin";"29.12.2005 09:29:28";}
      Version{0;6;"ING";"- in Arbeit -";"na";"05.04.2006 15:01:57";}
      Version{0;7;"CP41A_Te";"- in Arbeit -";"admin";"07.04.2010 17:43:53";}}}}}}
 FunctionDef{
  Name{"VW_spezifische_Bibliothek";}
  LangName{"VW_spezifische_Bibliothek";"VW_specific_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"Sammlung von Bausteinen zur Kommunikation mit Steuergeraeten von VW.";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;2;"ZPH18";}
   Version{1;0;"AC";"- freigegeben -";"vw-admin";"04.03.2003 11:56:19";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"07.08.2006 13:58:14";}
   Version{1;2;"ZPH18";"[ Baustein importiert (ersetzt) ]";"admin";"14.08.2007 15:07:01";}}
  FunctionDef{
   Name{"VW2000_Dienste";}
   LangName{"VW2000_Dienste";"VW2000_Dienste";}
   CvsVerHis{}
   Type{1;}
   Icon{0;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Sammlung von Bausteinen zur Kommunikation mit Steuerger\xE4ten von VW mit dem Protokoll K2000";"";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{1;3;"PAE";}
    Version{1;0;"AC";"- freigegeben -";"vw-admin";"17.02.2003 15:37:21";}
    Version{1;1;"AC";"- in Arbeit -";"vw-admin";"28.08.2003 17:40:34";}
    Version{1;2;"AC";"- in Arbeit -";"dsa-admin";"08.06.2004 08:55:47";}
    Version{1;3;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"25.07.2006 08:36:16";}}
   FunctionDef{
    Name{"VW2000_Codierungen";}
    LangName{"VW2000_Codierungen";"VW2000_Codierungen";}
    CvsVerHis{}
    Type{1;}
    Icon{0;}
    Properties{"Begin";}
    FormalParam{}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"";}
    NodeCategory{"";}
    Info{"";"";}
    Rights{"Write";"Read";}
    VersionInfo{}
    FunctionDef{
     Name{"VW2000_Codieren_Lang";}
     LangName{"VW2000_Codieren_Lang";"VW2000_Codieren_Lang";}
     CvsVerHis{}
     Type{1;}
     Icon{1;}
     Properties{"Begin";}
     FormalParam{
      InputParam{"Hndl";
       LangName{"Hndl";"Hndl";}"VCIKANAL";"VCIKanal1";
       LangDesc{"VCI-Kanal";"\"\"";}}
      InputParam{"DlgHndl";
       LangName{"DlgHndl";"DlgHndl";}"DialogTyp";"DIALOG_LOKAL";
       LangDesc{"";"\"\"";}}
      InputParam{"Zeile";
       LangName{"Zeile";"Zeile";}"DialogLine";"CDialogZeile1";
       LangDesc{"Ausgabezeile";"\"\"";}}
      InputParam{"Codierung";
       LangName{"Codierung";"Codierung";}"STRING";"DLangCodierung";
       LangDesc{"Steuerger\xE4te Codierung";"\"\"";}}
      InputParam{"Version";
       LangName{"Version";"Version";}"VW_Result_Tel";"ID_Version";
       LangDesc{"";"\"\"";}}
      InputParam{"Subsystem";
       LangName{"Subsystem";"Subsystem";}"VW_Subsystem";"LIN_Subsystem";
       LangDesc{"LIN-Bus-Subsystem";"\"\"";}}}
     LocalVar{
      LocVarDef{"Kommentar1";
       LangName{"Kommentar1";"";}"Locvar";"TEXT";
       LangDesc{"";"";}
       LangText{"\"Codierung\"";"\"\xB1\xE0\xC2\xEB\"";"\"coding\"";}"Const";}
      LocVarDef{"KommentarStatNOK";
       LangName{"KommentarStatNOK";"";}"Locvar";"TEXT";
       LangDesc{"";"";}
       LangText{"\"keine lange Codierung\"";"\"\xCE\xDE\xB3\xA4\xB1\xE0\xC2\xEB\"";"\"no long code\"";}"Const";}}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     MSLCode{"string\tCod_String;\r\nint     Tmp_Int;\r\nstring  StgResult;\r\n\r\n\r\nif (Zeile > 0 )\r\n\t_dlgMultiSetLine (DlgHndl, Zeile, Kommentar1);\r\n\r\nif ((Subsystem < 0x10) || ((Subsystem & 0xf0) == 0x20) || (Subsystem > 0x3f)) \r\n\t{\r\n\t_statSetAsciiResult(NOK,sprintf(\"%s:%02lx\",KommentarStatNOK,Subsystem),FMWNOK);\r\n\tif (Zeile > 0 )\r\n\t\t_dlgMultiClearLine (DlgHndl, Zeile);\r\n\treturn NOK;\r\n\t}\r\n\r\nTmp_Int = GeraeteNr_VW * 8;\r\nTmp_Int = Tmp_Int + ((ImporteursNr_VW & 0x380) / 0x80);\r\nCod_String = midstr(itobinstr(Tmp_Int),1,3);\r\n\r\nTmp_Int = ImporteursNr_VW * 2;\r\nif (WSC_VW > 0xffff)\r\n    Tmp_Int = Tmp_Int +1;\r\nCod_String = Cod_String + midstr(itobinstr(Tmp_Int),3,1);\r\n\r\nTmp_Int = WSC_VW & 0xffff;\r\nCod_String = Cod_String + midstr(itobinstr(Tmp_Int),2,2);\r\n\r\nif (strlen(Version) != 4)\r\n    Version = \"0000\";\r\n//else\r\n//    strbyteset(&Version, 0, Version[0] & 0x7f);\t\r\n\t\r\nCod_String = Cod_String + Version;\r\n\r\nCod_String = Cod_String + midstr(itobinstr(Subsystem),3,1);\r\n\r\nTmp_Int = strlen (Codierung) + 1;\r\nCod_String = Cod_String + midstr(itobinstr(Tmp_Int),3,1);\r\nCod_String = Cod_String + Codierung + \"\\xff\";\r\n\r\nerr = _vciDataExchange (Hndl, 0x3b, 0x7b, \"\\x9a\"+Cod_String, &StgResult);\r\n\r\nif (err)\r\n\t{\r\n\t_vciStatVciError (Hndl);\r\n       _statSetStrResult(err,StgResult,FSTGI);\r\n\t}\r\nelse\r\n\t{\r\n        _statSetStrResult(err,Codierung,FOK);\r\n\t}\r\n\r\nif (Zeile > 0 )\r\n\t_dlgMultiClearLine (DlgHndl, Zeile);\r\n";}
     NodeCategory{"";}
     Info{"Mit diesem Modul kann eine LangCodierung (bis 250 Byte) zum Steuerger\xE4t gesendet werden.\r\n\r\nDer Codierung mu\xDF in der Variable \"Codierung\" als String \xFCbergeben werden.\r\nZum Erstellen des Codierstring k\xF6nnen die Bausteine IntToCodString1 / 5 / 10 genutzt werden (Daten_Bearbeiten / Integer / ...)\r\n\r\nIn dem Parameter Subsystem wird die erforderliche Codiertabelle als HexWert \xFCbergeben.\r\nDie Bewertung des Pr\xFCfschrittes ist immer \"OK\", wenn der Befehl erfolgreich zum \r\nSteuerger\xE4t gesendet wurde und die als Antwort zur\xFCck gegebene Codierung mit der\r\nvorgegebenen \xFCberein stimmt.\r\nDesweiterern  ist sie OK, wenn es sich um ein STG handelt, dessen Master-STG eine\r\nlange Codierung oder dessen LIN-Bus-Slave eine lange Codiereung erwartet.\r\n\r\nDie Bewertung des Pr\xFCfschrittes ist immer \"OK\", wenn der Befehl erfolgreich zum \r\nSteuerger\xE4t gesendet wurde.\r\n\r\nIn die Statistik wird die Codierung geschrieben.\r\n\r\n// sz, 23.04.03, Bugfix: NOK wenn Baustein nicht f\xFCr lange Codierung verwendet wird.";"";}
     Rights{"Write";"Read";}
     VersionInfo{
      CurVersion{1;6;"PAE";}
      Version{1;0;"AC";"- freigegeben -";"vw-admin";"24.03.2003 16:37:32";}
      Version{1;1;"AC";"- in Arbeit -";"dsa-admin";"23.04.2003 10:54:24";}
      Version{1;2;"AC";"- in Arbeit -";"dsa-admin";"23.04.2003 17:19:50";}
      Version{1;3;"AC";"- in Arbeit -";"vw-admin";"13.11.2003 15:20:30";}
      Version{1;4;"AC";"- in Arbeit -";"vw-admin";"13.11.2003 15:27:51";}
      Version{1;5;"AC";"- in Arbeit -";"sz";"13.11.2003 18:05:26";}
      Version{1;6;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"24.07.2006 17:06:14";}}}}}}
 FunctionDef{
  Name{"VW_spezifische_Bibliothek";}
  LangName{"VW_spezifische_Bibliothek";"VW_specific_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"Sammlung von Bausteinen zur Kommunikation mit Steuergeraeten von VW.";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;2;"ZPH18";}
   Version{1;0;"AC";"- freigegeben -";"vw-admin";"04.03.2003 11:56:19";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"07.08.2006 13:58:14";}
   Version{1;2;"ZPH18";"[ Baustein importiert (ersetzt) ]";"admin";"14.08.2007 15:07:01";}}
  FunctionDef{
   Name{"VW2000_Dienste";}
   LangName{"VW2000_Dienste";"VW2000_Dienste";}
   CvsVerHis{}
   Type{1;}
   Icon{0;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Sammlung von Bausteinen zur Kommunikation mit Steuerger\xE4ten von VW mit dem Protokoll K2000";"";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{1;3;"PAE";}
    Version{1;0;"AC";"- freigegeben -";"vw-admin";"17.02.2003 15:37:21";}
    Version{1;1;"AC";"- in Arbeit -";"vw-admin";"28.08.2003 17:40:34";}
    Version{1;2;"AC";"- in Arbeit -";"dsa-admin";"08.06.2004 08:55:47";}
    Version{1;3;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"25.07.2006 08:36:16";}}
   FunctionDef{
    Name{"VW2000_Codierungen";}
    LangName{"VW2000_Codierungen";"VW2000_Codierungen";}
    CvsVerHis{}
    Type{1;}
    Icon{0;}
    Properties{"Begin";}
    FormalParam{}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"";}
    NodeCategory{"";}
    Info{"";"";}
    Rights{"Write";"Read";}
    VersionInfo{}
    FunctionDef{
     Name{"VW2000_Codieren";}
     LangName{"VW2000_Codieren";"VW2000_Coding";}
     CvsVerHis{}
     Type{1;}
     Icon{1;}
     Properties{"Begin";}
     FormalParam{
      InputParam{"Hndl";
       LangName{"Hndl";"Hndl";}"VCIKANAL";"VCIKanal1";
       LangDesc{"VCI-Kanal";"\"\"";}}
      InputParam{"DlgHndl";
       LangName{"DlgHndl";"DlgHndl";}"DialogTyp";"DIALOG_LOKAL";
       LangDesc{"";"\"\"";}}
      InputParam{"Zeile";
       LangName{"Zeile";"Zeile";}"DialogLine";"CDialogZeile1";
       LangDesc{"Ausgabezeile";"\"\"";}}
      InputParam{"Codierung";
       LangName{"Codierung";"Codierung";}"StgCodierung";"";
       LangDesc{"Steuerger\xE4te Codierung";"\"\"";}}
      InputParam{"Version";
       LangName{"Version";"Version";}"VW_Result_Tel";"ID_Version";
       LangDesc{"";"\"\"";}}
      InputParam{"Subsystem";
       LangName{"Subsystem";"Subsystem";}"VW_Subsystem";"LIN_Subsystem";
       LangDesc{"LIN-Bus-Subsystem";"\"\"";}}}
     LocalVar{
      LocVarDef{"Kommentar1";
       LangName{"Kommentar1";"";}"Locvar";"TEXT";
       LangDesc{"";"";}
       LangText{"\"Codieren\"";"\"\xB1\xE0\xC2\xEB\"";"\"coding\"";}"Const";}
      LocVarDef{"KommentarStatNOK";
       LangName{"KommentarStatNOK";"";}"Locvar";"TEXT";
       LangDesc{"";"";}
       LangText{"\"keine kurze Codierung\"";"\"\xCE\xDE\xB6\xCC\xB1\xE0\xC2\xEB\"";"\"no short code\"";}"Const";}}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     MSLCode{"string\tCod_String;\r\nint     Tmp_Int;\r\nstring  StgResult;\r\n\r\nif (Zeile > 0 )\r\n\t_dlgMultiSetLine (DlgHndl, Zeile, Kommentar1);\r\n\r\nif (((Subsystem < 0x10) && (Subsystem != 0x03)) || ((Subsystem & 0xf0) == 0x10) || ((Subsystem & 0xf0) == 0x30) || (Subsystem > 0x3f)) \r\n\t{\r\n\t_statSetAsciiResult(NOK,sprintf(\"%s:%02lx\",KommentarStatNOK,Subsystem),FMWNOK);\r\n\tif (Zeile > 0 )\r\n\t\t_dlgMultiClearLine (DlgHndl, Zeile);\r\n\treturn NOK;\r\n\t}\r\n\r\nTmp_Int = GeraeteNr_VW * 8;\r\nTmp_Int = Tmp_Int + ((ImporteursNr_VW & 0x380) / 0x80);\r\nCod_String = midstr(itobinstr(Tmp_Int),1,3);\r\n\r\nTmp_Int = ImporteursNr_VW * 2;\r\nif (WSC_VW > 0xffff)\r\n    Tmp_Int = Tmp_Int +1;\r\nCod_String = Cod_String + midstr(itobinstr(Tmp_Int),3,1);\r\n\r\nTmp_Int = WSC_VW & 0xffff;\r\nCod_String = Cod_String + midstr(itobinstr(Tmp_Int),2,2);\r\n\r\nif (strlen(Version) != 4)\r\n    Version = \"0000\";\r\nCod_String = Cod_String + Version;\r\n\r\nCod_String = Cod_String + midstr(itobinstr(Subsystem),3,1);\r\n\r\nif (Subsystem == 03)\r\n\tTmp_Int = Codierung & 0x7fffff;\r\nelse\r\n\tTmp_Int = Codierung & 0xffffff;\r\n\r\nCod_String = Cod_String + midstr(itobinstr(Tmp_Int),1,3);\r\n\r\nerr = _vciDataExchange (Hndl, 0x3b, 0x7b, \"\\x9a\"+Cod_String, &StgResult);\r\n\r\nif (err)\r\n\t{\r\n\t_vciStatVciError (Hndl);\r\n       _statSetStrResult(err,StgResult,FSTGI);\r\n\t}\r\nelse\r\n\t{\r\n        _statSetFloatResult(err,Codierung,FOK);\r\n\t}\r\n\r\nif (Zeile > 0 )\r\n\t_dlgMultiClearLine (DlgHndl, Zeile);";}
     NodeCategory{"";}
     Info{"Mit diesem Modul kann ein \"Codierung\" zu Steuerger\xE4t gesendet werden.\r\n\r\nDer Codierung mu\xDF in der Variable \"Codierung\" \xFCbergeben werden.\r\n\r\nDie Bewertung des Pr\xFCfschrittes ist immer \"OK\", wenn der Befehl erfolgreich zum \r\nSteuerger\xE4t gesendet wurde und die als Antwort zur\xFCck gegebene Codierung mit der\r\nvorgegebenen \xFCberein stimmt.\r\nDesweiteren ist sie OK, wenn es sich um ein STG handelt, dessen Master-STG eine\r\nkurze Codierung oder dessen LIN-Bus-Slave eine kurze Codiereung erwartet.\r\n\r\nIn die Statistik wird die vom Steuerger\xE4t zur\xFCck gegebene Codierung geschrieben.\r\n\r\n// sz, 23.04.03, Bugfix: NOK wenn Baustein nicht f\xFCr kurze Codierung verwendet wird.";"";}
     Rights{"Write";"Read";}
     VersionInfo{
      CurVersion{1;4;"PAE";}
      Version{1;0;"AC";"- freigegeben -";"vw-admin";"24.03.2003 16:37:24";}
      Version{1;1;"AC";"- in Arbeit -";"dsa-admin";"23.04.2003 10:54:08";}
      Version{1;2;"AC";"- in Arbeit -";"dsa-admin";"23.04.2003 17:19:34";}
      Version{1;3;"AC";"- in Arbeit -";"dsa-admin";"25.04.2003 13:59:39";}
      Version{1;4;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"24.07.2006 17:06:14";}}}}}}
 FunctionDef{
  Name{"VW_spezifische_Bibliothek";}
  LangName{"VW_spezifische_Bibliothek";"VW_specific_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"Sammlung von Bausteinen zur Kommunikation mit Steuergeraeten von VW.";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;2;"ZPH18";}
   Version{1;0;"AC";"- freigegeben -";"vw-admin";"04.03.2003 11:56:19";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"07.08.2006 13:58:14";}
   Version{1;2;"ZPH18";"[ Baustein importiert (ersetzt) ]";"admin";"14.08.2007 15:07:01";}}
  FunctionDef{
   Name{"VW2000_Dienste";}
   LangName{"VW2000_Dienste";"VW2000_Dienste";}
   CvsVerHis{}
   Type{1;}
   Icon{0;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Sammlung von Bausteinen zur Kommunikation mit Steuerger\xE4ten von VW mit dem Protokoll K2000";"";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{1;3;"PAE";}
    Version{1;0;"AC";"- freigegeben -";"vw-admin";"17.02.2003 15:37:21";}
    Version{1;1;"AC";"- in Arbeit -";"vw-admin";"28.08.2003 17:40:34";}
    Version{1;2;"AC";"- in Arbeit -";"dsa-admin";"08.06.2004 08:55:47";}
    Version{1;3;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"25.07.2006 08:36:16";}}
   FunctionDef{
    Name{"VW2000_Dienste_22";}
    LangName{"VW2000_Dienste_22";"VW2000_Services_22";}
    CvsVerHis{}
    Type{1;}
    Icon{0;}
    Properties{"Begin";}
    FormalParam{}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"";}
    NodeCategory{"";}
    Info{"SG-Identifikation mit Service 0x22.\r\nDiese sollen in Zukunft die STG - ID 0x1A (0x9b, 0x9a, 0x91, 0x86, ...) abloesen.";"Moduls read the ECU Id by using the KWP2000-Comand ReadByIdentifier (Requesttitel 0x22) ";}
    Rights{"Write";"Read";}
    VersionInfo{
     CurVersion{1;0;"PAE";}
     Version{0;1;"PAE";"- in Arbeit -";"vw-admin";"30.05.2005 14:08:48";}
     Version{0;2;"PAE";"- in Arbeit -";"vw-admin";"31.05.2005 11:13:39";}
     Version{1;0;"PAE";" Freigabe ";"vw-admin";"03.06.2005 15:53:13";}}
    FunctionDef{
     Name{"VW2000_Read_Service_22_anyone_LID";}
     LangName{"VW2000_Lese_Dienst_22_eine_LID";"VW2000_Read_Service_22_anyone_LID";}
     CvsVerHis{}
     Type{1;}
     Icon{1;}
     Properties{"Begin";}
     FormalParam{
      InputParam{"Hndl";
       LangName{"Hndl";"Hndl";}"VCIKANAL";"VCIKanal1";
       LangDesc{"VCI-Kanal";"VCI channel";}}
      InputParam{"LID";
       LangName{"LID";"LID";}"VCISendTel";"";
       LangDesc{"local Identifier (Bin-String)";"";}}
      OutputParam{"ID_String";
       LangName{"ID_String";"ID_String";}"VW_Result_Tel";"DLID";
       LangDesc{"";"";}}}
     LocalVar{
      LocVarDef{"CKommentarFunktionNOK";
       LangName{"CKommentarFunktionNOK";"CKommentarFunktionNOK";}"Locvar";"TEXT";
       LangDesc{"";"";}
       LangText{"\"Funktion nicht unterstuetzt\"";"\"\xB9\xA6\xC4\xDC\xB2\xBB\xD6\xA7\xB3\xD6\"";"\"function not supported\"";}"Const";}}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     MSLCode{"string ServTel;\r\n\r\nvciExDtaRead (Hndl, &ServTel);\r\nif (0 > strstr (ServTel, \"\\x01\\x14\"))\t// Funktion unterstuetzt? \r\n{\r\n\t_vciStatVciError (Hndl);\r\n\t_statSetAsciiResult (ABBR,CKommentarFunktionNOK, FSTGI);\r\n\treturn(ABBR);\r\n}\r\nif (strlen(LID) != 2)\r\n{\r\n\t_statSetAsciiResult (ABBR,CKommentarFunktionNOK, FSTGI);\r\n\treturn(ABBR);\r\n}\r\nerr = _vciDataExchange (Hndl, 0x22, 0x62, LID, ID_String);\r\n\r\nif (err)\r\n{\r\n\t_vciStatVciError (Hndl);\r\n\terr = _statSetStrResult (NOK, *ID_String, FSTGI);\r\n}\r\nif (!err)\r\n{\r\n\t_statSetStrResult (err, *ID_String, FOK);\r\n\t*ID_String = midstr (*ID_String, 2, -1);\r\n}\r\n\r\n\r\n";}
     NodeCategory{"";}
     Info{"SG-Identifikation mit Service 0x22; \r\nmit Local Identifier (LID), der im Parameter LID uebergeben wird.:\r\nEs wird ueberprueft, ob die Diagnosefunktion unterstuetzt wird, dann wird der Service ausgefuehrt.\r\nDer Parameter ID_String liefert den Wert zurueck. Laenge n Byte (nach Spec.).\r\nDer Baustein liefert ein OK wenn die LID gelesen werden konnte.\r\n\r\n14.06.06, sz: erstellt";"Modul reads the ECU Id by using the KWP2000-Comand ReadByIdentifier (Requesttitel 0x22) \r\nthe RID will be given in the parameter LID.\r\nIt will be testet if the service is supported, than the service will be executed.\r\nThe parameter ID_String contains the ECU answer without the LID. Length n Byte (see spec.)\r\nThe evaluatin of the module will be OK if the reading of the RID was OK.\r\n\r\nsz, 31.05.05";}
     Rights{"Write";"Read";}
     VersionInfo{
      CurVersion{2;2;"nbmr";}
      Version{0;1;"PAE";"- in Arbeit -";"vw-admin";"25.05.2005 08:39:30";}
      Version{0;2;"PAE";"- in Arbeit -";"vw-admin";"25.05.2005 08:40:57";}
      Version{0;3;"PAE";"- in Arbeit -";"vw-admin";"25.05.2005 08:41:11";}
      Version{0;4;"PAE";"- in Arbeit -";"vw-admin";"25.05.2005 08:43:32";}
      Version{0;5;"PAE";"- in Arbeit -";"vw-admin";"30.05.2005 16:38:02";}
      Version{0;6;"PAE";"- in Arbeit -";"vw-admin";"31.05.2005 10:26:57";}
      Version{0;7;"PAE";"- in Arbeit -";"vw-admin";"02.06.2005 15:02:24";}
      Version{0;8;"PAE";"- in Arbeit -";"vw-admin";"03.06.2005 15:54:21";}
      Version{1;0;"PAE";" Freigabe ";"vw-admin";"03.06.2005 15:57:37";}
      Version{1;1;"AC";"- in Arbeit -";"dsa-admin";"14.12.2005 11:20:03";}
      Version{1;2;"AC";"- in Arbeit -";"dsa-admin";"01.02.2006 16:49:47";}
      Version{1;3;"AC";"- in Arbeit -";"dsa-admin";"12.06.2006 08:54:57";}
      Version{1;4;"AC";"- in Arbeit -";"dsa-admin";"14.06.2006 14:45:53";}
      Version{1;5;"AC";"- in Arbeit -";"dsa-admin";"14.06.2006 15:40:22";}
      Version{2;0;"AC";" - Updated to LH 2006 -";"dsa-admin";"14.06.2006 15:48:35";}
      Version{2;1;"CP3";"- in Arbeit -";"admin";"24.10.2007 11:28:16";}
      Version{2;2;"nbmr";"[ Baustein importiert (ersetzt) ]";"dsa";"14.05.2009 09:30:30";}}}}}}
 FunctionDef{
  Name{"VW_spezifische_Bibliothek";}
  LangName{"VW_spezifische_Bibliothek";"VW_specific_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"Sammlung von Bausteinen zur Kommunikation mit Steuergeraeten von VW.";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;2;"ZPH18";}
   Version{1;0;"AC";"- freigegeben -";"vw-admin";"04.03.2003 11:56:19";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"07.08.2006 13:58:14";}
   Version{1;2;"ZPH18";"[ Baustein importiert (ersetzt) ]";"admin";"14.08.2007 15:07:01";}}
  FunctionDef{
   Name{"VW_diag_Funktionen";}
   LangName{"VW_diag_Funktionen";"VW_Diag_Functions";}
   CvsVerHis{}
   Type{1;}
   Icon{0;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"";"";}
   Rights{"Write";"Read";}
   VersionInfo{}
   FunctionDef{
    Name{"VwDgString";}
    LangName{"VwDgString";"VwDgString";}
    CvsVerHis{}
    Type{1;}
    Icon{0;}
    Properties{"Begin";}
    FormalParam{
     InputParam{"Position";
      LangName{"Position";"Position";}"INT";"CInt1";
      LangDesc{"Position (0..3)";"";}}
     OutputParam{"RecvTel";
      LangName{"RecvTel";"RecvTel";}"VCIResult";"DVciResult";
      LangDesc{"VCI-Regebnis";"";}}
     OutputParam{"Value";
      LangName{"Value";"Value";}"STRING";"";
      LangDesc{"Text";"";}}
     OutputParam{"Typ";
      LangName{"Typ";"Typ";}"INT";"";
      LangDesc{"Datentyp 1=Formel, 2=Filter, 3=Text";"";}}}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"int\tValInt;\r\nint\tCount;\r\n\r\n*Value  =  \"\";\r\nerr = vwdgString (RecvTel, Position, Value, Typ);\r\nif (!err)\r\n    err = NOK;\r\nif (*Typ == 2)\r\n\t{\r\n\tValInt = ascstrtoi(*Value);\r\n\t*Value = strfmt (\"B008\",midstr (itobinstr (ValInt), 3, 1));\r\n\t}";}
    NodeCategory{"";}
    Info{"Anwenden einer Formel aus der vw_diag.ini.\r\n\r\nDer STG-String wird \xFCbergeben in \"RecvTel\".\r\nDie Me\xDFwertnummer wird \xFCbergeben in \"Position\" (typisch: 0..3; 0..7) [3 Byte = 1 MW]\r\nDer errechnete Wert wird in \"Value\" immer als String \xFCbergeben. (z.B. auch \"-35.6\")\r\nDer Datentyp (Formeltyp) wird in Typ \xFCbergeben \r\nTyp = 1 ->  Me\xDFwert\r\nTyp = 2 -> Bitmuster\r\nTyp = 3 -> Text\r\n\r\nDieser Baustein ist f\xFCr  alle Me\xDFwerte zul\xE4ssig.\r\nAufbau der Me\xDFwerte: NA NW MW\r\nNA: Normanzeigenummer (welche Formel) oder Text\r\nNW: Normierwert  (nw: signed) oder Textnummer\r\nMW: Me\xDFwert       (mw: signed) oder Textnummer\r\nNW bildet mit MW in der Formel einen zu errechnenden Wert oder ....\r\n";"";}
    Rights{"Write";"Read";}
    VersionInfo{
     CurVersion{1;0;"AC";}
     Version{1;0;"AC";"- freigegeben -";"vw-admin";"04.03.2003 15:56:14";}}}}}
 FunctionDef{
  Name{"VW_spezifische_Bibliothek";}
  LangName{"VW_spezifische_Bibliothek";"VW_specific_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"Sammlung von Bausteinen zur Kommunikation mit Steuergeraeten von VW.";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;2;"ZPH18";}
   Version{1;0;"AC";"- freigegeben -";"vw-admin";"04.03.2003 11:56:19";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"07.08.2006 13:58:14";}
   Version{1;2;"ZPH18";"[ Baustein importiert (ersetzt) ]";"admin";"14.08.2007 15:07:01";}}
  FunctionDef{
   Name{"VW2000_Dienste";}
   LangName{"VW2000_Dienste";"VW2000_Dienste";}
   CvsVerHis{}
   Type{1;}
   Icon{0;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Sammlung von Bausteinen zur Kommunikation mit Steuerger\xE4ten von VW mit dem Protokoll K2000";"";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{1;3;"PAE";}
    Version{1;0;"AC";"- freigegeben -";"vw-admin";"17.02.2003 15:37:21";}
    Version{1;1;"AC";"- in Arbeit -";"vw-admin";"28.08.2003 17:40:34";}
    Version{1;2;"AC";"- in Arbeit -";"dsa-admin";"08.06.2004 08:55:47";}
    Version{1;3;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"25.07.2006 08:36:16";}}
   FunctionDef{
    Name{"VW2000_Dienste_2E";}
    LangName{"VW2000_Dienste_2E";"VW2000_Dienste_2E";}
    CvsVerHis{}
    Type{1;}
    Icon{0;}
    Properties{"Begin";}
    FormalParam{}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"";}
    NodeCategory{"";}
    Info{"SG-Identifikation schreiben mit Service 0x2e (WriteDataByIdentifier).\r\nDiese sollen in Zukunft 0x3B \"WriteDataByLocalIdentifer\" abloesen.";"Moduls write the ECU Id by using the KWP2000-Comand WriteDataByIdentifier (Requesttitel 0x22)\r\nand will replace 0x3B \"WriteDataByLocalIdentifer\".";}
    Rights{"Write";"Read";}
    VersionInfo{
     CurVersion{1;0;"PAE";}
     Version{0;1;"PAE";"- in Arbeit -";"vw-admin";"30.05.2005 15:53:21";}
     Version{0;2;"PAE";"- in Arbeit -";"vw-admin";"31.05.2005 11:15:52";}
     Version{1;0;"PAE";" Freigabe ";"vw-admin";"03.06.2005 16:04:15";}}
    FunctionDef{
     Name{"VW2000_Write_Service_2E_any_LID";}
     LangName{"VW2000_Schreibe_Dienst_2E_eine_LID";"VW2000_Write_Service_2E_any_LID";}
     CvsVerHis{}
     Type{1;}
     Icon{1;}
     Properties{"Begin";}
     FormalParam{
      InputParam{"Hndl";
       LangName{"Hndl";"Hndl";}"VCIKANAL";"VCIKanal1";
       LangDesc{"VCI-Kanal";"VCI channel";}}
      InputParam{"LID";
       LangName{"LID";"LID";}"VCISendTel";"";
       LangDesc{"Identifier (Bin-String)";"";}}
      InputParam{"WriteData";
       LangName{"WriteData";"WriteData";}"VCISendTel";"";
       LangDesc{"";"";}}}
     LocalVar{
      LocVarDef{"CKommentarFunktionNOK";
       LangName{"CKommentarFunktionNOK";"CKommentarFunktionNOK";}"Locvar";"TEXT";
       LangDesc{"";"";}
       LangText{"\"Funktion nicht unterstuetzt\"";"\"\xB9\xA6\xC4\xDC\xB2\xBB\xD6\xA7\xB3\xD6\"";"\"function not supported\"";}"Const";}}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     MSLCode{"string telbuf;\r\nstring ServTel;\r\n\r\nvciExDtaRead (Hndl, &ServTel);\r\nif (0 > strstr (ServTel, \"\\x01\\x14\"))\t// Funktion unterstuetzt? \r\n{\r\n\t_vciStatVciError (Hndl);\r\n\t_statSetAsciiResult (ABBR,CKommentarFunktionNOK, FSTGI);\r\n\treturn(ABBR);\r\n}\r\nif (strlen(LID) != 2)\r\n{\r\n\t_statSetAsciiResult (ABBR,CKommentarFunktionNOK, FSTGI);\r\n\treturn(ABBR);\r\n}\r\nerr = _vciDataExchange (Hndl, 0x2e, 0x6e, LID + WriteData, &telbuf);\r\n\r\nif (err)\r\n{\r\n\t_vciStatVciError (Hndl);\r\n\terr = NOK;\r\n}\r\n_statSetStrResult (err, telbuf, FSTGI);\r\n\r\n\r\n";}
     NodeCategory{"";}
     Info{"SG-Identifikation mit Service 0x2e; \r\nmit Local Identifier (LID), der im Parameter LID uebergeben wird.:\r\nDer Parameter WriteData uebergibt den Wert an das STG.\r\n\r\nsz, 14.12.05";"Modul writes the ECU Id by using the KWP2000-Comand WriteDataByIdentifier (Requesttitel 0x2e) \r\nwith the RID 0xF187.\r\nIt will be testet if the service is supported, than the service will be executed.\r\nThe parameter WriteData puts the data into the request to the ECU. Length 11 Byte (see spec.)\r\n\r\nVWSparePartNumber:   (extract from Diagnosetemplate B8.doc)\r\nDieser Wert ist f\xFCr die Ausgabe der ZSB-Teilenummer reserviert und entspricht einer \r\nVW-Teilenummer (z.B. ZBZZZZZZZXX).\r\n\r\nsz, 31.05.05";}
     Rights{"Write";"Read";}
     VersionInfo{
      CurVersion{1;0;"AC";}
      Version{0;1;"AC";"- in Arbeit -";"dsa-admin";"14.12.2005 11:27:04";}
      Version{0;2;"AC";"- in Arbeit -";"dsa-admin";"14.12.2005 11:27:45";}
      Version{0;3;"AC";"- in Arbeit -";"vw-admin";"19.12.2005 14:20:24";}
      Version{0;4;"AC";"- in Arbeit -";"dsa-admin";"09.06.2006 13:46:14";}
      Version{0;5;"AC";"- in Arbeit -";"dsa-admin";"09.06.2006 15:13:12";}
      Version{0;6;"AC";"- in Arbeit -";"dsa-admin";"12.06.2006 08:55:55";}
      Version{0;7;"AC";"- in Arbeit -";"dsa-admin";"12.06.2006 08:56:54";}
      Version{0;8;"AC";"- in Arbeit -";"dsa-admin";"14.06.2006 14:46:48";}
      Version{1;0;"AC";" - initial check in -";"dsa-admin";"14.06.2006 15:46:53";}}}}}}
 FunctionDef{
  Name{"VW_spezifische_Bibliothek";}
  LangName{"VW_spezifische_Bibliothek";"VW_specific_Library";}
  CvsVerHis{}
  Type{1;}
  Icon{0;}
  Properties{"Begin";}
  FormalParam{}
  LocalVar{}
  Condition{"ever";"ok";"";}
  Evaluation{"direct";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  MSLCode{"";}
  NodeCategory{"";}
  Info{"Sammlung von Bausteinen zur Kommunikation mit Steuergeraeten von VW.";"";}
  Rights{"Write";"Read";}
  VersionInfo{
   CurVersion{1;2;"ZPH18";}
   Version{1;0;"AC";"- freigegeben -";"vw-admin";"04.03.2003 11:56:19";}
   Version{1;1;"AC";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"07.08.2006 13:58:14";}
   Version{1;2;"ZPH18";"[ Baustein importiert (ersetzt) ]";"admin";"14.08.2007 15:07:01";}}
  FunctionDef{
   Name{"VW2000_Dienste";}
   LangName{"VW2000_Dienste";"VW2000_Dienste";}
   CvsVerHis{}
   Type{1;}
   Icon{0;}
   Properties{"Begin";}
   FormalParam{}
   LocalVar{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   MSLCode{"";}
   NodeCategory{"";}
   Info{"Sammlung von Bausteinen zur Kommunikation mit Steuerger\xE4ten von VW mit dem Protokoll K2000";"";}
   Rights{"Write";"Read";}
   VersionInfo{
    CurVersion{1;3;"PAE";}
    Version{1;0;"AC";"- freigegeben -";"vw-admin";"17.02.2003 15:37:21";}
    Version{1;1;"AC";"- in Arbeit -";"vw-admin";"28.08.2003 17:40:34";}
    Version{1;2;"AC";"- in Arbeit -";"dsa-admin";"08.06.2004 08:55:47";}
    Version{1;3;"PAE";"[ Baustein importiert (ersetzt) ]";"dsa-admin";"25.07.2006 08:36:16";}}
   FunctionDef{
    Name{"VW2000_Dienste_22";}
    LangName{"VW2000_Dienste_22";"VW2000_Services_22";}
    CvsVerHis{}
    Type{1;}
    Icon{0;}
    Properties{"Begin";}
    FormalParam{}
    LocalVar{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    MSLCode{"";}
    NodeCategory{"";}
    Info{"SG-Identifikation mit Service 0x22.\r\nDiese sollen in Zukunft die STG - ID 0x1A (0x9b, 0x9a, 0x91, 0x86, ...) abloesen.";"Moduls read the ECU Id by using the KWP2000-Comand ReadByIdentifier (Requesttitel 0x22) ";}
    Rights{"Write";"Read";}
    VersionInfo{
     CurVersion{1;0;"PAE";}
     Version{0;1;"PAE";"- in Arbeit -";"vw-admin";"30.05.2005 14:08:48";}
     Version{0;2;"PAE";"- in Arbeit -";"vw-admin";"31.05.2005 11:13:39";}
     Version{1;0;"PAE";" Freigabe ";"vw-admin";"03.06.2005 15:53:13";}}
    FunctionDef{
     Name{"VW2000_Read_Service_22_up_to_8_LIDs";}
     LangName{"VW2000_Lese_Dienst_22_bis_zu_8_LIDs";"VW2000_Read_Service_22_up_to_8_LIDs";}
     CvsVerHis{}
     Type{1;}
     Icon{1;}
     Properties{"Begin";}
     FormalParam{
      InputParam{"Hndl";
       LangName{"Hndl";"Hndl";}"VCIKANAL";"VCIKanal1";
       LangDesc{"VCI-Kanal";"VCI channel";}}
      InputParam{"LID1";
       LangName{"LID1";"LID1";}"VCISendTel";"CVciSTelNull";
       LangDesc{"local Identifier (Bin-String)";"";}}
      InputParam{"LID1Len";
       LangName{"LID1Len";"LID1Len";}"INT";"CInt0";
       LangDesc{"Laenge der Antwort";"";}}
      OutputParam{"LID1Result";
       LangName{"LID1Result";"LID1Result";}"VCIResult";"DLID1Result";
       LangDesc{"LID Antwort";"";}}
      InputParam{"LID2";
       LangName{"LID2";"LID2";}"VCISendTel";"CVciSTelNull";
       LangDesc{"local Identifier (Bin-String)";"";}}
      InputParam{"LID2Len";
       LangName{"LID2Len";"LID2Len";}"INT";"CInt0";
       LangDesc{"Laenge der Antwort";"";}}
      OutputParam{"LID2Result";
       LangName{"LID2Result";"LID2Result";}"VCIResult";"DLIDResult2";
       LangDesc{"LID Antwort";"";}}
      InputParam{"LID3";
       LangName{"LID3";"LID3";}"VCISendTel";"CVciSTelNull";
       LangDesc{"local Identifier (Bin-String)";"";}}
      InputParam{"LID3Len";
       LangName{"LID3Len";"LID3Len";}"INT";"CInt0";
       LangDesc{"Laenge der Antwort";"";}}
      OutputParam{"LID3Result";
       LangName{"LID3Result";"LID3Result";}"VCIResult";"DLID3Result";
       LangDesc{"LID Antwort";"";}}
      InputParam{"LID4";
       LangName{"LID4";"LID4";}"VCISendTel";"CVciSTelNull";
       LangDesc{"local Identifier (Bin-String)";"";}}
      InputParam{"LID4Len";
       LangName{"LID4Len";"LID4Len";}"INT";"CInt0";
       LangDesc{"Laenge der Antwort";"";}}
      OutputParam{"LID4Result";
       LangName{"LID4Result";"LID4Result";}"VCIResult";"DLID4Result";
       LangDesc{"LID Antwort";"";}}
      InputParam{"LID5";
       LangName{"LID5";"LID5";}"VCISendTel";"CVciSTelNull";
       LangDesc{"local Identifier (Bin-String)";"";}}
      InputParam{"LID5Len";
       LangName{"LID5Len";"LID5Len";}"INT";"CInt0";
       LangDesc{"Laenge der Antwort";"";}}
      OutputParam{"LID5Result";
       LangName{"LID5Result";"LID5Result";}"VCIResult";"DLID5Result";
       LangDesc{"LID Antwort";"";}}
      InputParam{"LID6";
       LangName{"LID6";"LID6";}"VCISendTel";"CVciSTelNull";
       LangDesc{"local Identifier (Bin-String)";"";}}
      InputParam{"LID6Len";
       LangName{"LID6Len";"LID6Len";}"INT";"CInt0";
       LangDesc{"Laenge der Antwort";"";}}
      OutputParam{"LID6Result";
       LangName{"LID6Result";"LID6Result";}"VCIResult";"DLID6Result";
       LangDesc{"LID Antwort";"";}}
      InputParam{"LID7";
       LangName{"LID7";"LID7";}"VCISendTel";"CVciSTelNull";
       LangDesc{"local Identifier (Bin-String)";"";}}
      InputParam{"LID7Len";
       LangName{"LID7Len";"LID7Len";}"INT";"CInt0";
       LangDesc{"Laenge der Antwort";"";}}
      OutputParam{"LID7Result";
       LangName{"LID7Result";"LID7Result";}"VCIResult";"DLID7Result";
       LangDesc{"LID Antwort";"";}}
      InputParam{"LID8";
       LangName{"LID8";"LID8";}"VCISendTel";"CVciSTelNull";
       LangDesc{"local Identifier (Bin-String)";"";}}
      InputParam{"LID8Len";
       LangName{"LID8Len";"LID8Len";}"INT";"CInt0";
       LangDesc{"Laenge der Antwort";"";}}
      OutputParam{"LID8Result";
       LangName{"LID8Result";"LID8Result";}"VCIResult";"DLID8Result";
       LangDesc{"LID Antwort";"";}}
      OutputParam{"ID_String";
       LangName{"ID_String";"ID_String";}"VW_Result_Tel";"DLID";
       LangDesc{"";"";}}}
     LocalVar{
      LocVarDef{"CKommentarFunktionNOK";
       LangName{"CKommentarFunktionNOK";"CKommentarFunktionNOK";}"Locvar";"TEXT";
       LangDesc{"";"";}
       LangText{"\"Funktion nicht unterstuetzt\"";"\"\xB9\xA6\xC4\xDC\xB2\xBB\xD6\xA7\xB3\xD6\"";"\"function not supported\"";}"Const";}}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     MSLCode{"string ServTel;\r\nstring TmpStr;\r\nvciExDtaRead (Hndl, &ServTel);\r\nif (0 > strstr (ServTel, \"\\x01\\x14\"))\t// Funktion unterstuetzt? \r\n{\r\n\t_vciStatVciError (Hndl);\r\n\t_statSetAsciiResult (ABBR,CKommentarFunktionNOK, FSTGI);\r\n\treturn(ABBR);\r\n}\r\n\r\n\r\nerr = _vciDataExchange (Hndl, 0x22, 0x62, LID1+LID2+LID3+LID4+LID5+LID6+LID7+LID8, ID_String);\r\n\r\nif (err)\r\n{\r\n\t_vciStatVciError (Hndl);\r\n\terr = NOK;\r\n}\r\nelse\r\n{\r\n        TmpStr = *ID_String;\r\n\tif ((strlen (LID1) > 0)\t&& (LID1Len > 0))\r\n\t\tif (strstr (*ID_String, LID1) == 0)\r\n\t\t{\r\n\t\t\t*LID1Result = midstr (*ID_String, strlen (LID1), LID1Len);\r\n\t\t\t*ID_String = midstr (*ID_String, LID1Len + strlen (LID1), -1);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\terr = NOK;\r\n\t\t\t*LID1Result = \"\";\r\n\t\t}\r\n\tif ((strlen (LID2) > 0)\t&& (LID2Len > 0))\r\n\t\tif (strstr (*ID_String, LID2) == 0)\r\n\t\t{\r\n\t\t\t*LID2Result = midstr (*ID_String, strlen (LID2), LID2Len);\r\n\t\t\t*ID_String = midstr (*ID_String, LID2Len + strlen (LID2), -1);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\terr = NOK;\r\n\t\t\t*LID2Result = \"\";\r\n\t\t}\r\n\tif ((strlen (LID3) > 0)\t&& (LID3Len > 0))\r\n\t\tif (strstr (*ID_String, LID3) == 0)\r\n\t\t{\r\n\t\t\t*LID3Result = midstr (*ID_String, strlen (LID3), LID3Len);\r\n\t\t\t*ID_String = midstr (*ID_String, LID3Len + strlen (LID3), -1);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\terr = NOK;\r\n\t\t\t*LID3Result = \"\";\r\n\t\t}\r\n\tif ((strlen (LID4) > 0)\t&& (LID4Len > 0))\r\n\t\tif (strstr (*ID_String, LID4) == 0)\r\n\t\t{\r\n\t\t\t*LID4Result = midstr (*ID_String, strlen (LID4), LID4Len);\r\n\t\t\t*ID_String = midstr (*ID_String, LID4Len + strlen (LID4), -1);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\terr = NOK;\r\n\t\t\t*LID4Result = \"\";\r\n\t\t}\r\n\tif ((strlen (LID5) > 0)\t&& (LID5Len > 0))\r\n\t\tif (strstr (*ID_String, LID5) == 0)\r\n\t\t{\r\n\t\t\t*LID5Result = midstr (*ID_String, strlen (LID5), LID5Len);\r\n\t\t\t*ID_String = midstr (*ID_String, LID5Len + strlen (LID5), -1);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\terr = NOK;\r\n\t\t\t*LID5Result = \"\";\r\n\t\t}\r\n\tif ((strlen (LID6) > 0)\t&& (LID6Len > 0))\r\n\t\tif (strstr (*ID_String, LID6) == 0)\r\n\t\t{\r\n\t\t\t*LID6Result = midstr (*ID_String, strlen (LID6), LID6Len);\r\n\t\t\t*ID_String = midstr (*ID_String, LID6Len + strlen (LID6), -1);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\terr = NOK;\r\n\t\t\t*LID6Result = \"\";\r\n\t\t}\r\n\tif ((strlen (LID7) > 0)\t&& (LID7Len > 0))\r\n\t\tif (strstr (*ID_String, LID7) == 0)\r\n\t\t{\r\n\t\t\t*LID7Result = midstr (*ID_String, strlen (LID7), LID7Len);\r\n\t\t\t*ID_String = midstr (*ID_String, LID7Len + strlen (LID7), -1);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\terr = NOK;\r\n\t\t\t*LID7Result = \"\";\r\n\t\t}\r\n\tif ((strlen (LID8) > 0)\t&& (LID8Len > 0))\r\n\t\tif (strstr (*ID_String, LID8) == 0)\r\n\t\t{\r\n\t\t\t*LID8Result = midstr (*ID_String, strlen (LID8), LID8Len);\r\n\t\t\t*ID_String = midstr (*ID_String, LID8Len + strlen (LID8), -1);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\terr = NOK;\r\n\t\t\t*LID8Result = \"\";\r\n\t\t}\r\n}\r\n_statSetStrResult (err, TmpStr, FSTGI);\r\n\r\n\r\n";}
     NodeCategory{"";}
     Info{"SG-Identifikation mit Service 0x22; \r\nmit Local Identifier (LID), der im Parameter LID uebergeben wird.\r\nEs koennen max. 8 LIDs gleichzeitig angefragt werden (LID1, LID2, ..., LID8)\r\nEs wird ueberprueft, ob die Diagnosefunktion unterstuetzt wird, dann wird der Service ausgefuehrt.\r\nDer Parameter LID1_Result, LID2_Reslt, ..., LID8_Result liefert die Werte zurueck. \r\nEs muessen die Laenge in Bytes angegeben werden, damit eine korrekte zuordnung der LIDs zu \r\nden Daten erfolgen kann. (nach Spec.).\r\nDer Baustein liefert ein OK wenn alle LIDs gelesen und zugeordnet werden konnten.\r\n\r\n14.06.06, sz: erstellt";"Modul reads the ECU Id by using the KWP2000-Comand ReadByIdentifier (Requesttitel 0x22) \r\nthe RID will be given in the parameter LID.\r\n8 LIDs could be asked for in one request (LID1, LID2, ..., LID8).\r\nIt will be testet if the service is supported, than the service will be executed.\r\nThe parameter LID1_Result, LID2_Reslt, ..., LID8_Result contain the ECU answer without the LID. \r\nIn the parameters LID1Len, LID2Len, ..., LID8Len  the length of the LIDs have to be specified for \r\nthe correct correspondence to the LIDs\r\nThe evaluatin of the module will be OK if the reading of all RIDs were OK.\r\n\r\nsz, 31.05.05";}
     Rights{"Write";"Read";}
     VersionInfo{
      CurVersion{2;0;"AC";}
      Version{0;1;"PAE";"- in Arbeit -";"vw-admin";"25.05.2005 09:17:55";}
      Version{0;2;"PAE";"- in Arbeit -";"vw-admin";"25.05.2005 09:26:08";}
      Version{0;3;"PAE";"- in Arbeit -";"vw-admin";"25.05.2005 10:52:09";}
      Version{0;4;"PAE";"- in Arbeit -";"vw-admin";"25.05.2005 10:52:55";}
      Version{0;5;"PAE";"- in Arbeit -";"vw-admin";"25.05.2005 12:01:33";}
      Version{0;6;"PAE";"- in Arbeit -";"vw-admin";"30.05.2005 16:41:25";}
      Version{0;7;"PAE";"- in Arbeit -";"vw-admin";"31.05.2005 10:33:43";}
      Version{0;8;"PAE";"- in Arbeit -";"vw-admin";"02.06.2005 15:02:30";}
      Version{0;9;"PAE";"- in Arbeit -";"vw-admin";"03.06.2005 09:46:55";}
      Version{0;10;"PAE";"- in Arbeit -";"vw-admin";"03.06.2005 15:54:27";}
      Version{1;0;"PAE";" Freigabe ";"vw-admin";"03.06.2005 15:57:44";}
      Version{1;1;"AC";"- in Arbeit -";"dsa-admin";"14.06.2006 13:47:25";}
      Version{1;2;"AC";"- in Arbeit -";"dsa-admin";"14.06.2006 14:46:19";}
      Version{1;3;"AC";"- in Arbeit -";"dsa-admin";"14.06.2006 15:40:25";}
      Version{2;0;"AC";" - Updated to LH 2006 -";"dsa-admin";"14.06.2006 15:48:40";}}}}}}}
Sequence{
 FunctionDef{
  Name{"SeqRoot";}
  LangName{"sk316_gateway_init_Main";"sk316_gateway_init_Main";}
  Type{3;}
  Icon{5;}
  Properties{}
  ActualParam{}
  Condition{"ever";"ok";"";}
  Evaluation{"no";"never";
   ActionCond{"";}}
  Extra{"teststep";}
  NodeCategory{"";}
  Info{"sequence root for task sk316_gateway_init";"sequence root for task sk316_gateway_init";}
  Rights{"Write";"Read";}
  VersionInfo{}
  Class{"sk316_gateway_init_LibMain";}
  FunctionDef{
   Name{"Neu.9806";}
   LangName{"Infofield.9806";"Infofield.9806";}
   Type{2;}
   Icon{0;}
   Properties{}
   ActualParam{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"teststep";}
   NodeCategory{"";}
   Info{"Import-Ablage\r\n";"";}
   Rights{"Write";"Read";}
   VersionInfo{}
   Class{"Neu";}}
  FunctionDef{
   Name{"PBL_Init_Gateway_STG.9807";}
   LangName{"PBL_Init_Gateway_STG.9807";"TBL_Init_Gateway_ECU.9807";}
   Type{2;}
   Icon{0;}
   Properties{}
   ActualParam{}
   Condition{"ever";"ok";"";}
   Evaluation{"direct";"never";
    ActionCond{"";}}
   Extra{"testblock";"19";"40";"";"CPblText_Gateway_init";"";"ON";"ON";"";}
   NodeCategory{"";}
   Info{"";"";}
   Rights{"Write";"Read";}
   VersionInfo{}
   Class{"Neu";}
   FunctionDef{
    Name{"General_inits.9808";}
    LangName{"General_inits.9808";"General_inits.9808";}
    Type{2;}
    Icon{0;}
    Properties{}
    ActualParam{}
    Condition{"ever";"progcond";"AUTOPRF == 0";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    NodeCategory{"";}
    Info{"";"";}
    Rights{"Write";"Read";}
    VersionInfo{}
    Class{"Neu";}
    FunctionDef{
     Name{"ZeitLesen.9809";}
     LangName{"ZeitLesen.9809";"Read_Time.9809";}
     Type{2;}
     Icon{0;}
     Properties{}
     ActualParam{"DTimeF";"Symbol";}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     NodeCategory{"";}
     Info{"";"Element to read the time. \r\n\r\nThe actual time will be returned as Float.";}
     Rights{"Write";"Read";}
     VersionInfo{}
     Class{"ZeitLesen";}}
    FunctionDef{
     Name{"DlgInit.9810";}
     LangName{"DlgInit.9810";"DlgInit.9810";}
     Type{2;}
     Icon{2;}
     Properties{}
     ActualParam{"DIALOG_LOKAL";"Symbol";}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     NodeCategory{"";}
     Info{"Baustein zur Initialisierung der Benutzerschnittstelle";"";}
     Rights{"Write";"Read";}
     VersionInfo{}
     Class{"DlgInit";}}
    FunctionDef{
     Name{"DlgMultiInit.9811";}
     LangName{"DlgMultiInit.9811";"DlgMultiInit.9811";}
     Type{2;}
     Icon{2;}
     Properties{}
     ActualParam{"DIALOG_LOKAL";"Symbol";"CTextCodierungGateway";"Symbol";"CDialogS_NON";"Symbol";}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     NodeCategory{"";}
     Info{"Bausteinen zur Initialisierung der Anzeigeeinheit.";"";}
     Rights{"Write";"Read";}
     VersionInfo{}
     Class{"DlgMultiInit";}}}
   FunctionDef{
    Name{"ECU_Handling_1A.9812";}
    LangName{"ECU_Handling_1A.9812";"ECU_Handling_1A.9812";}
    Type{2;}
    Icon{0;}
    Properties{}
    ActualParam{}
    Condition{"LAS";"LAS_Codefile_ZV";"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    NodeCategory{"";}
    Info{"";"";}
    Rights{"Write";"Read";}
    VersionInfo{}
    Class{"Neu";}
    FunctionDef{
     Name{"StatSetAsciiResult.9813";}
     LangName{"StatSetAsciiResult.9813";"StatSetAsciiResult.9813";}
     Type{2;}
     Icon{1;}
     Properties{}
     ActualParam{"NOK";"Symbol";"CText_TestBlockIncomplete";"Symbol";}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"resultblock";"459";"";"CText_TestBlockComplete";"\"\"";"\"\"";"";0;"";"";"\"\"";"SN";"";}
     NodeCategory{"";}
     Info{"Baustein zum Schreiben von OK oder NOK in die Statistik. (S)";"";}
     Rights{"Write";"Read";}
     VersionInfo{}
     Class{"StatSetAsciiResult";}}
    FunctionDef{
     Name{"Codefile_selection.9814";}
     LangName{"Codefile_selection.9814";"Codefile_selection.9814";}
     Type{2;}
     Icon{0;}
     Properties{}
     ActualParam{}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     NodeCategory{"";}
     Info{"Import-Ablage\r\n";"";}
     Rights{"Write";"Read";}
     VersionInfo{}
     Class{"Neu";}
     FunctionDef{
      Name{"IWertVergleich.9815";}
      LangName{"Auswahl_erfolgt_Gateway.9815";"Selection_done.9815";}
      Type{2;}
      Icon{1;}
      Properties{}
      ActualParam{"Gateway_Status";"Symbol";"ConstVar22417";"Const";}
      Condition{"ever";"ok";"";}
      Evaluation{"direct";"never";
       ActionCond{"";}}
      Extra{"teststep";}
      NodeCategory{"";}
      Info{"Baustein zum Vergleich von zwei ganzen Zahlen auf Gleichheit. (S)";"Element to compare, whether value1 is equal to value2 or not";}
      Rights{"Write";"Read";}
      VersionInfo{}
      Class{"IWertVergleich";}}
     FunctionDef{
      Name{"VW_Codefile_STG.9816";}
      LangName{"VW_Codefile_STG.9816";"VW_Codefile_ECU.9816";}
      Type{2;}
      Icon{0;}
      Properties{}
      ActualParam{"DIALOG_LOKAL";"Symbol";"CDialogZeile1";"Symbol";"CTextCodefile_Gateway";"Symbol";"Gateway";"Symbol";"Gateway_ID_Result";"Symbol";"Dummy_ID_2_Result";"Symbol";"Dummy_ID_3_Result";"Symbol";"Dummy_ID_4_Result";"Symbol";"Dummy_ID_5_Result";"Symbol";"Dummy_ID_6_Result";"Symbol";"Dummy_ID_7_Result";"Symbol";"Gateway_Codierung_Result";"Symbol";"Gateway_LongCode_Result";"Symbol";"Gateway_Codier_Art";"Symbol";"Dummy_Login_1";"Symbol";"Dummy_Login_2";"Symbol";"Dummy_Anzahl_Stg";"Symbol";"Gateway_Anpassung_String";"Symbol";"Gateway_Prog_String";"Symbol";"Gateway_ProgL_String";"Symbol";"Gateway_Status";"Symbol";"Gateway_Result";"Symbol";"Gateway_Auswahl";"Symbol";"GatewayContainer_Name";"Symbol";"GatewayContainer_Version";"Symbol";"Gateway_ID_Exp";"Symbol";"Dummy_HWBgp";"Symbol";"Dummy_SWBgp";"Symbol";"Dummy_Rohteilenummer";"Symbol";}
      Condition{"when";"ok";"";}
      Evaluation{"direct";"never";
       ActionCond{"";}}
      Extra{"teststep";}
      NodeCategory{"";}
      Info{"Dieser Baustein wertet das Codfile mit der entsprechenden STG_Nr (XX) aus.\r\n\r\nDabei werden die Files \"codefXX\",\"lXXtab\" und \"codverXX\" auf dem Pr\xFCfplatz im Directory \"skript\" ben\xF6tigt\".\r\nDiese Files werden auf ihre Richtigkeit und Zugeh\xF6hrigkeit \xFCberpr\xFCft. Sind die CRC-Pr\xFCfsummen i.O. und\r\nbesitzen alle drei Files die gleiche Versionsnummer, wird der entsprechende Satz durch \xDCberpr\xFCfung der\r\nLAS aus dem File \"lXXtab\" an Hand des Fahrzeugdatensatzes gesucht. Ist ein Satz g\xFCltig,\r\nwerden die fahrzeugabh\xE4nigen Daten aus dem File \"codefXX\" und die Freigabeversion dieses Satzes\r\naus dem File \"codverXX\" geladen.\r\n\r\nDie Bewertung dieses Bausteines OK, wenn alle oben genannten Bedingungen erf\xFCllt sind und damit ein f\xFCr diese\r\nFahrzeugausstattung passender Satz gefunden wurde. In allen anderen F\xE4llen ist die Bewertung NOK.\r\n\r\nIst die Bewertung OK, werden die gefundenen Daten unformatiert in der Variablen \"Result\" zur Verf\xFCgung\r\ngestellt. Anschlie\xDFend werden die Daten aufbereitet, in der Variablen \"ID-Result\" die Teilenummer(n) und der \r\nIndex des erwarteten Steuerger\xE4tes 12stellig und in der Variablen \"Codierung_Result\" die\r\nCodierung f\xFCr dieses Fahrzeug gespeichert. Die Codierung kann entweder in der Freigabetabelle, in einem\r\n XML-Container, oder in einem XML Container, der einen \"Codierwortgenerator\" ben\xF6tigt, enthalten sein. In \r\n\"Prog_String\" werden die zu programierenden Daten bereitgestellt (wenn vorhanden).\r\nDiese k\xF6nnen dann an das Element \"CodefileProgramm_Dummy\" \xFCbergeben werden\r\n\r\nDie Variable \"Auswahl_Ergebnis\" enth\xE4lt im NOK-Fall die Fehlermeldung im Klartext und im OK-Fall\r\ndie Versionsnummer der Freigabetabelle, die gefundene Satznummer und den entsprechende LAS.\r\nDiese Information wird auch in die Statistik geschrieben.\r\n\r\nDie Variable \"Result_Status\" kann f\xFCr Ablaufsteuerungen verwendet werden. Sobald der Baustein seine\r\nAnalyse beginnt wird sie auf -1 gesetzt. Ist die Analyse beendet sigalisiert eine 0 die G\xFCltigkeit der Daten.\r\nEine 1 zeigt, da?w\xE4hrend der Analyse ein Fehler aufgetreten ist, oder das f\xFCr diese Fahrzeug keine\r\nDaten gefunden werden konnten.\r\nWerden Codefile-Informationen an verschiedenen Stellen des Ablaufes oder in verschiedenen Sequenzen\r\nben\xF6tigt, so kann man \xFCber die Variable \"Result_Status\" abfragen, ob die Codefile-Auswahl schon einmal\r\nerfolgt und g\xFCltig ist. So kann man wiederholte Codefile-Auswahl vermeiden. Auch ist eine Parallelisierung \r\naller Codefile-Auswertungen in einer Hintergrund-Task m\xF6glich. Voraussetzung f\xFCr die Verwendung an\r\nmehreren Stellen oder die Parallelisierung ist eine Initialisierung dieser Variablen auf -2 nach Anforderung \r\neines Fahrzeugdatensatzes.\r\nDie Syncronisatzion der Abl\xE4ufe kann hierbei mit \"Codefile_Warten\" oder Codefile_Warten_Statistik\" erfolgen.\r\n\r\nsz, 29.08.02\r\n";"";}
      Rights{"Write";"Read";}
      VersionInfo{}
      Class{"VW_Codefile_STG";}}
     FunctionDef{
      Name{"Codefile_Warten_Statistik.9817";}
      LangName{"Codefile_Warten_Statistik.9817";"Codefile_Wait_Statistic.9817";}
      Type{2;}
      Icon{0;}
      Properties{}
      ActualParam{"DIALOG_LOKAL";"Symbol";"CDialogZeile1";"Symbol";"CTextCodefile_Gateway";"Symbol";"Gateway_Status";"Symbol";"Gateway_Auswahl";"Symbol";"CTime30";"Symbol";}
      Condition{"ever";"ok";"";}
      Evaluation{"direct";"never";
       ActionCond{"";}}
      Extra{"resultblock";"2418";"";"CStatTxtCodefileGateway";"\"\"";"\"\"";"";0;"";"";"\"\"";"\"SN\"";"";}
      NodeCategory{"";}
      Info{"Platzhalter f\xFCr Pr\xFCfschritte";"";}
      Rights{"Write";"Read";}
      VersionInfo{}
      Class{"Codefile_Warten_Statistik";}}}
    FunctionDef{
     Name{"ZDC_202_Processing.9818";}
     LangName{"ZDC_202_Processing.9818";"ZDC_202_Processing.9818";}
     Type{2;}
     Icon{0;}
     Properties{}
     ActualParam{}
     Condition{"when";"progcond";"GatewayContainer_Version==\"0202\"\r\n||GatewayContainer_Version==\"0203\"\r\n||GatewayContainer_Version==\"0204\"\r\n||GatewayContainer_Version==\"020401\"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     NodeCategory{"";}
     Info{"Struckturbaustein";"Structure element";}
     Rights{"Write";"Read";}
     VersionInfo{}
     Class{"Neu";}
     FunctionDef{
      Name{"ZdcOpen.9819";}
      LangName{"ZdcOpen.9819";"ZdcOpen.9819";}
      Type{2;}
      Icon{0;}
      Properties{}
      ActualParam{"DZdcHndl";"Symbol";"GatewayContainer_Name";"Symbol";"GatewayContainer_Version";"Symbol";"CLevel3";"Symbol";}
      Condition{"ever";"ok";"";}
      Evaluation{"direct";"never";
       ActionCond{"";}}
      Extra{"teststep";}
      NodeCategory{"";}
      Info{"Baustein \xF6ffnet einen Zieldaten-Container (ZDC) in der Version 2.02.\r\n\r\nNach erfolgreichem Aufruf wird das \xFCbergebene Handle mit einem g\xFCltigen Wert (Wert >= 0) gesetzt.\r\nAndernfalls wird der Parameter \"ZdcHndl\" auf -1 gesetzt.\r\n\r\nDer Baustein steht in engem Zusammenhang mit dem Baustein \"VW_Codefile_STG_9_2_0\", der die\r\nEingangsparameter \"XmlContainer\" und \"XmlVersion\" f\xFCr diesem Baustein liefert.\r\n";"";}
      Rights{"Write";"Read";}
      VersionInfo{}
      Class{"ZdcOpen";}}
     FunctionDef{
      Name{"ZdcCodierung.9820";}
      LangName{"ZdcCodierung.9820";"ZdcCoding.9820";}
      Type{2;}
      Icon{0;}
      Properties{}
      ActualParam{"DIALOG_LOKAL";"Symbol";"CDialog_Keine_Anzeige";"Symbol";"CTextCodefileAuswahl";"Symbol";"DZdcHndl";"Symbol";"CZDCModusAll";"Symbol";"Gateway_Codierung_Result";"Symbol";"Gateway_LongCode_Result";"Symbol";"Gateway_Codier_Art";"Symbol";}
      Condition{"ever";"ok";"";}
      Evaluation{"direct";"never";
       ActionCond{"";}}
      Extra{"resultblock";"2476";"";"CStat_ZDC_Codierung_vw_2000";"\"\"";"\"\"";"";0;"";"";"\"\"";"SN";"";}
      NodeCategory{"";}
      Info{"Dieser Baustein berechnet das Codierwort nach dem Zieldatencontainer (ZDC) V 2.02. (S)\r\n\r\nAls Parameter muss das \"ZdcHndl\" \xFCbergeben werden, dass mit dem Baustein \"ZdcOpen\" erzeugt wurde.\r\n\r\nDer Parameter \"Modusteil\" kann zur Filterung der Daten innerhalb des Containers verwendet werden. \r\nMit Modusteil gleich \"\" werden alle Tabellen mit dem Modus \"C\" im ZDC ausgewertet.\r\n\r\nIm Parameter \"Codierung_Art\" wird der Ergebnistyp zur\xFCck gemeldet:\r\n0: kurze Codierung (bis zu 31 Bit)\r\n1: lange Codierung (bis zu 250 Byte)\r\n-1: Codierung ung\xFCltig\r\n\r\nBei kurzer Codierung (Codierung_Art = 0) wird die Variable \"Codierung_Result\" mit dem Wert des Codierwortes gef\xFCllt.\r\nBei langer Codierung (Codierung_Art = 1) wird die Variable \"LangCode_Result\" mit der Codierung gef\xFCllt.\r\n\r\nDer Baustein berechnet nur die Codierung. Das Schreiben der Codierung erfolgt nicht durch diesen Baustein!\r\n\r\nDie Codierung des Stuerger\xE4ts kann \xFCber die Bausteine:\r\n- VW2000_Codieren\r\n- VW2000_Codieren_Lang\r\n- ...\r\nerfolgen.";"";}
      Rights{"Write";"Read";}
      VersionInfo{}
      Class{"ZdcCodierung";}}
     FunctionDef{
      Name{"Zdc203Anpassung.9821";}
      LangName{"Zdc203Anpassung.9821";"Zdc203Anpassung.9821";}
      Type{2;}
      Icon{0;}
      Properties{}
      ActualParam{"DIALOG_LOKAL";"Symbol";"CDialog_Keine_Anzeige";"Symbol";"CTextCodefileAuswahl";"Symbol";"DZdcHndl";"Symbol";"CZDCModusAll";"Symbol";"Gateway_Anpassung_String";"Symbol";}
      Condition{"ever";"ok";"";}
      Evaluation{"direct";"never";
       ActionCond{"";}}
      Extra{"resultblock";"2477";"";"CStat_ZDC_Anpasung_2000";"\"\"";"\"\"";"";0;"";"";"\"\"";"SN";"";}
      NodeCategory{"";}
      Info{"Dieser Baustein berechnet die Anpassdaten nach dem Zieldatencontainer (ZDC) V 2.03. (S)\r\nZieldatencontainer der Version 2.02 k\xF6nnen mit diesem Baustein auch verarbeitet werden.\r\nEs gibt dann keine \"Lange Anpassung\".\r\n\r\nAls Parameter muss das \"ZdcHndl\" \xFCbergeben werden, dass mit dem Baustein \"ZdcOpen\" erzeugt wurde.\r\n\r\nDer Parameter \"Modusteil\" kann zur Filterung der Daten innerhalb des Containers verwendet werden. \r\nMit Modusteil gleich \"\" werden alle Tabellen mit dem Modus \"A\" im ZDC ausgewertet.\r\n\r\nDer Baustein liefert mit dem Parameter \"Anpassung_String\" die Anpassdaten im folgenden Format:\r\n\r\n4 Byte: Anzahl Anpassungen;\r\n    4 Byte: 1. Anpassungs-Kanal;\r\n    4 Byte: 1. Laenge n der einzelnen Anpassung; \r\n    n Byte: 1. Anpassungswert;\r\n\r\n    4 Byte: 2. Anpassungs-Kanal;\r\n    4 Byte: 2. Laenge m der einzelnen Anpassung; \r\n    m Byte: 2. Anpassungswert; ...\r\n\r\n\r\nBeispiel:\r\n\"\\h000000020000000100000002abcd00000005000000a00102030405060708090a\"\r\nAnzahl Anpassungen: 2\r\nKanal: 1 kurze Anpassung: 43981 (int)\r\nKanal: 5 lange Anpassung: 0102030405060708090A\r\n\r\nDer Baustein berechnet nur die Anpassdaten. Das Schreiben der Daten erfolgt nicht durch diesen Baustein!\r\n\r\n20.01.06, sr: erstellt";"";}
      Rights{"Write";"Read";}
      VersionInfo{}
      Class{"Zdc203Anpassung";}}
     FunctionDef{
      Name{"ZdcProgrammierungL.9822";}
      LangName{"ZdcProgrammierungL.9822";"ZdcProgrammingLong.9822";}
      Type{2;}
      Icon{0;}
      Properties{}
      ActualParam{"DIALOG_LOKAL";"Symbol";"CDialog_Keine_Anzeige";"Symbol";"CTextCodefileAuswahl";"Symbol";"DZdcHndl";"Symbol";"CZDCModusAll";"Symbol";"Gateway_ProgL_String";"Symbol";}
      Condition{"ever";"ok";"";}
      Evaluation{"direct";"never";
       ActionCond{"";}}
      Extra{"resultblock";"2478";"";"CStat_ZDC_ProgramL_2000";"\"\"";"\"\"";"";0;"";"";"\"\"";"SN";"";}
      NodeCategory{"";}
      Info{"Dieser Baustein berechnet die Programmierdaten nach dem Zieldatencontainer (ZDC) V 2.02. (S)\r\n\r\nAls Parameter muss das \"ZdcHndl\" \xFCbergeben werden, dass mit dem Baustein \"ZdcOpen\" erzeugt wurde.\r\n\r\nDer Parameter \"Modusteil\" kann zur Filterung der Daten innerhalb des Containers verwendet werden. \r\nMit Modusteil gleich \"\" werden alle Tabellen mit dem Modus \"P\" im ZDC ausgewertet.\r\n\r\nDer Baustein liefert mit dem Parameter \"ProgL_String\" die Programmierdaten im DSA internen Austauschformat\r\nf\xFCr die Bausteine:\r\n- CodefileProgrammLang_KWP2000\r\n- CodefileProgrammLang_KWP1281\r\n- CodefileProgrammLang_KWP2000_1_03\r\nAchtung:\r\nHier wird das 'neue' (lange) DSA interne Austauschformat f\xFCr Programmierdaten verwendet. \r\n\r\nDer Baustein berechnet nur die Programmierdaten. Das Schreiben der Programmierdaten erfolgt nicht \r\ndurch diesen Baustein!";"";}
      Rights{"Write";"Read";}
      VersionInfo{}
      Class{"ZdcProgrammierungL";}}
     FunctionDef{
      Name{"ZdcClose.9823";}
      LangName{"ZdcClose.9823";"ZdcClose.9823";}
      Type{2;}
      Icon{0;}
      Properties{}
      ActualParam{"DZdcHndl";"Symbol";}
      Condition{"ever";"ok";"";}
      Evaluation{"direct";"never";
       ActionCond{"";}}
      Extra{"teststep";}
      NodeCategory{"";}
      Info{"Baustein schlie\xDFt einen Zieldaten-Container (ZDC) in der Version 2.02, der zuvor mit dem Baustein \r\n\"ZdcOpen\" ge\xF6ffnet wurde.";"";}
      Rights{"Write";"Read";}
      VersionInfo{}
      Class{"ZdcClose";}}}
    FunctionDef{
     Name{"VCI_Inits.9824";}
     LangName{"VCI_Inits.9824";"VCI_Inits.9824";}
     Type{2;}
     Icon{0;}
     Properties{}
     ActualParam{}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"break";
      ActionCond{"";"nok";}}
     Extra{"teststep";}
     NodeCategory{"";}
     Info{"";"";}
     Rights{"Write";"Read";}
     VersionInfo{}
     Class{"Neu";}
     FunctionDef{
      Name{"VW_STG_Verbindung_Param.9825";}
      LangName{"VW_STG_Verbindung_Param.9825";"VW_ECU_Connection_Param.9825";}
      Type{2;}
      Icon{1;}
      Properties{}
      ActualParam{"VCIKanal1";"Symbol";"DIALOG_LOKAL";"Symbol";"CDialogZeile1";"Symbol";"VCI_Typ_VCI5";"Symbol";"Prokoll_KWP2000_TP20";"Symbol";"ECU_Gateway";"Symbol";"CTimeout_00010";"Symbol";"DLevel";"Symbol";"SemaCanTP20";"Symbol";}
      Condition{"ever";"ok";"";}
      Evaluation{"direct";"never";
       ActionCond{"";}}
      Extra{"resultblock";"2419";"";"CStatKommunikationGateway_24355";"\"\"";"\"\"";"";0;"";"";"\"\"";"SN";"";}
      NodeCategory{"";}
      Info{"VW_STG_Verbindung\r\n\r\nBaustein zum Oeffnen eines Steuergeraetekanals auf K- oder CAN-Leitung \r\n\r\nDieser Baustein liest eine Standard-Konfiguration zur STG-Kommunikation ein. Danach werden alle notwendigen Parameter\r\n in diesem Init-Datensatz ueberschrieben und der Kanal geoeffnet.\r\nAusserdem wird der Debug-Level fuer die VCI-Kommunikation gesetzt und fuer die Kommunikation TP2.0 auf VCI2,4,6 der\r\nParameter zur Entkopplung des Oeffnen des CAN-Kanals gegeben..\r\n\r\nDieser Baustein mu\xDF vor Verwendung aller anderen VCI-Funktionen ausgef\xFChrt werden.\r\n\r\nParameter:\r\n\r\nSTG_Hndl: das VCI-Handle, das geoeffnet wird.\r\nDLG_Hndl: das Dialog-Handle, das geoeffnet wird.\r\nZeile: die ZeilenNr fuer die Ausgabe (<1 keine Ausgabe)\r\nVCI_Type: der in dem Geraet eingesetzter VCI-Typ  (VCI_Type = 0 : VCI4; VCI_Type = 1 : VCI5)\r\nProtokoll: das verwendete Protokoll fuer die VCI-Kommuniktion\r\nSteuergeraet: der Steuergeraete der Kommunikation\r\nTimeout: die Zeit, welche fuer das Anreizen verwendet wird\r\nLevel: Debuglevel der VCI-Kommunikation\r\nParHndl: Handel zum Enttkoppeln des gleichzeitigen Anreizens\r\n\r\n04.07.06 sz - Aenderung der Wartezeit bei der Parallel-Verriegelung vor das VCI-Init \r\n03.11.06 sz - Erweiterung bei nicht geschlossenem Handle, _vciAdapt (ab msl version 4!!)";"";}
      Rights{"Write";"Read";}
      VersionInfo{}
      Class{"VW_STG_Verbindung_Param";}}
     FunctionDef{
      Name{"No_ECU_Communication.9826";}
      LangName{"Keine_Verbindung_STG.9826";"No_ECU_Communication.9826";}
      Type{2;}
      Icon{0;}
      Properties{}
      ActualParam{}
      Condition{"when";"nok";"";}
      Evaluation{"direct";"never";
       ActionCond{"";}}
      Extra{"teststep";}
      NodeCategory{"";}
      Info{"";"";}
      Rights{"Write";"Read";}
      VersionInfo{}
      Class{"Neu";}
      FunctionDef{
       Name{"Warten.9827";}
       LangName{"Warten.9827";"Wait.9827";}
       Type{2;}
       Icon{0;}
       Properties{}
       ActualParam{"CTime01";"Symbol";}
       Condition{"ever";"ok";"";}
       Evaluation{"no";"never";
        ActionCond{"";}}
       Extra{"teststep";}
       NodeCategory{"";}
       Info{"Baustein zum Warten einer bestimmten Zeit.\r\n\r\nDer Parameter \"Timeout\" gibt die Wartezeit in Sekunden an.\r\n";"";}
       Rights{"Write";"Read";}
       VersionInfo{}
       Class{"Warten";}}
      FunctionDef{
       Name{"VW_STG_Verbindung_Param.9828";}
       LangName{"VW_STG_Verbindung_Param.9828";"VW_ECU_Connection_Param.9828";}
       Type{2;}
       Icon{1;}
       Properties{}
       ActualParam{"VCIKanal1";"Symbol";"DIALOG_LOKAL";"Symbol";"CDialogZeile1";"Symbol";"VCI_Typ_VCI5";"Symbol";"Prokoll_KWP2000_TP20";"Symbol";"ECU_Gateway";"Symbol";"CTimeout_00010";"Symbol";"DLevel";"Symbol";"SemaCanTP20";"Symbol";}
       Condition{"ever";"ok";"";}
       Evaluation{"direct";"break";
        ActionCond{"";"nok";"break";}}
       Extra{"resultblock";"2419";"";"CStatKommunikationGateway_24355";"\"\"";"\"\"";"";0;"";"";"\"\"";"SN";"";}
       NodeCategory{"";}
       Info{"VW_STG_Verbindung\r\n\r\nBaustein zum Oeffnen eines Steuergeraetekanals auf K- oder CAN-Leitung \r\n\r\nDieser Baustein liest eine Standard-Konfiguration zur STG-Kommunikation ein. Danach werden alle notwendigen Parameter\r\n in diesem Init-Datensatz ueberschrieben und der Kanal geoeffnet.\r\nAusserdem wird der Debug-Level fuer die VCI-Kommunikation gesetzt und fuer die Kommunikation TP2.0 auf VCI2,4,6 der\r\nParameter zur Entkopplung des Oeffnen des CAN-Kanals gegeben..\r\n\r\nDieser Baustein mu\xDF vor Verwendung aller anderen VCI-Funktionen ausgef\xFChrt werden.\r\n\r\nParameter:\r\n\r\nSTG_Hndl: das VCI-Handle, das geoeffnet wird.\r\nDLG_Hndl: das Dialog-Handle, das geoeffnet wird.\r\nZeile: die ZeilenNr fuer die Ausgabe (<1 keine Ausgabe)\r\nVCI_Type: der in dem Geraet eingesetzter VCI-Typ  (VCI_Type = 0 : VCI4; VCI_Type = 1 : VCI5)\r\nProtokoll: das verwendete Protokoll fuer die VCI-Kommuniktion\r\nSteuergeraet: der Steuergeraete der Kommunikation\r\nTimeout: die Zeit, welche fuer das Anreizen verwendet wird\r\nLevel: Debuglevel der VCI-Kommunikation\r\nParHndl: Handel zum Enttkoppeln des gleichzeitigen Anreizens\r\n\r\n04.07.06 sz - Aenderung der Wartezeit bei der Parallel-Verriegelung vor das VCI-Init \r\n03.11.06 sz - Erweiterung bei nicht geschlossenem Handle, _vciAdapt (ab msl version 4!!)";"";}
       Rights{"Write";"Read";}
       VersionInfo{}
       Class{"VW_STG_Verbindung_Param";}}}}
    FunctionDef{
     Name{"Initial_Tests.9829";}
     LangName{"Initial_Tests.9829";"Initial_Test.9829";}
     Type{2;}
     Icon{0;}
     Properties{}
     ActualParam{}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     NodeCategory{"";}
     Info{"";"";}
     Rights{"Write";"Read";}
     VersionInfo{}
     Class{"Neu";}
     FunctionDef{
      Name{"ID_Check.9830";}
      LangName{"ID_Check.9830";"ID_Check.9830";}
      Type{2;}
      Icon{0;}
      Properties{}
      ActualParam{}
      Condition{"ever";"ok";"";}
      Evaluation{"direct";"never";
       ActionCond{"";}}
      Extra{"teststep";}
      NodeCategory{"";}
      Info{"Import-Ablage\r\n";"";}
      Rights{"Write";"Read";}
      VersionInfo{}
      Class{"Neu";}
      FunctionDef{
       Name{"VW2000_ID_9b_Lesen_kompatibel_LID.9831";}
       LangName{"VW2000_ID_9b_Lesen_kompatibel_LID.9831";"VW2000_ID_9b_Read_kompatible_LID.9831";}
       Type{2;}
       Icon{1;}
       Properties{}
       ActualParam{"VCIKanal1";"Symbol";"VW_Stg_ID";"Symbol";}
       Condition{"ever";"ok";"";}
       Evaluation{"direct";"never";
        ActionCond{"";}}
       Extra{"resultblock";"1233";"";"ID_lesen";"\"\"";"\"\"";"";0;"";"";"\"\"";"SN";"";}
       NodeCategory{"";}
       Info{"Modul lie\xDFt die Steuergeraete-Identifikation.\r\nDabei wird der KWP2000-Befehl ReadECUIdentification (Blocktitel 0x1a)\r\nmit dem Parameter ECU-Identification ( 0x9b) verwendet.\r\nUnterstuetzt das STG den Befehl ReadByIdentifier (Blocktitel 0x22) werden die RIDs \r\n F187, F189, 0600, F1A5, F1AA, F197 gelesen und die klassische ID zusammengebaut. Damit ist die Verwendung\r\nder bisherigen Bewertungsbausteine moeglich und ein fliessender Uebergang von 0x1A \r\nzu 0x22 moeglich.\r\n\r\nDie gelesene Identifikation wird immer vollstaendig in der Variablen ID-String abgespeichert.\r\n\r\nIn der Statistik wird der ID-String abgespeichert.\r\n\r\nDie Bewertung des Pr\xFCfschrittes ist immer OK, wenn das Lesen der ID vom Steuerger\xE4t erfolgreich\r\nwar.\r\n\r\n14.06.06, sz: erstellt\r\n21.06.06, sz: Bugfix: der WSC kann nicht ueber LID F198 gelesen werden sondern ueber LID F1A5.";"Modul reads the ECU Id.\r\nBy using the KWP2000-Comand ReadECUIdentification (Requesttitel 0x1a)\r\nwith parameter ECUidentification (0x9b).\r\nIf the ECU supports the command ReadByIdentifier (Requesttitel 0x22) the RIDs \r\nF187, F188, F189, 0600 will be read and the classic id will be built.  For that the existing \r\nevaluations could be used and a change from 0x1A to 0x22 is possible.\r\n\r\nThe id will be stored in the parameter ID-String.\r\n\r\nAlso in the statistiks will the id be stored.\r\n\r\nThe evaluatin of the module will be OK if the reading of the id was OK.\r\n\r\nsz, 31.05.05";}
       Rights{"Write";"Read";}
       VersionInfo{}
       Class{"VW2000_ID_9b_Lesen_kompatibel_LID";}}
      FunctionDef{
       Name{"TNr_Check.9832";}
       LangName{"TNr_Check.9832";"TNr_Check.9832";}
       Type{2;}
       Icon{0;}
       Properties{}
       ActualParam{}
       Condition{"ever";"ok";"";}
       Evaluation{"direct";"never";
        ActionCond{"";}}
       Extra{"teststep";}
       NodeCategory{"";}
       Info{"Struckturbaustein";"";}
       Rights{"Write";"Read";}
       VersionInfo{}
       Class{"Neu";}
       FunctionDef{
        Name{"VW2000_TNr.9833";}
        LangName{"VW2000_TNr.9833";"VW2000_TNr.9833";}
        Type{2;}
        Icon{1;}
        Properties{}
        ActualParam{"erste_ID";"Symbol";"VW_Stg_ID";"Symbol";"LIN_Subsystem";"Symbol";"DTNR";"Symbol";}
        Condition{"ever";"ok";"";}
        Evaluation{"no";"never";
         ActionCond{"";}}
        Extra{"teststep";}
        NodeCategory{"";}
        Info{"Modul lie\xDFt nicht die Steuerger\xE4te-Identifikation aus dem Steuerger\xE4t, sondern nutzt die durch\r\neinen VW-Dienst VW2000_ID_Lesen in der  Variablen ID-String abgespeicherten Identifiktion.\r\n\r\nDie 12 Stellen VW/Audi-Teilenummer der gelesenen Identifikation werden in der Varablen\r\n\"Teilenummer\" gespeichert.\r\n\r\nDas LIN-Bus-Codierbyte wird dabei dem Subsystem \xFCbergeben.\r\n";"";}
        Rights{"Write";"Read";}
        VersionInfo{}
        Class{"VW2000_TNr";}}
       FunctionDef{
        Name{"ZdcFtnCheck.9834";}
        LangName{"ZdcFtnCheck.9834";"ZdcFtnCheck.9834";}
        Type{2;}
        Icon{0;}
        Properties{}
        ActualParam{"Gateway_ID_Exp";"Symbol";"DTNR";"Symbol";}
        Condition{"ever";"ok";"";}
        Evaluation{"direct";"never";
         ActionCond{"";}}
        Extra{"resultblock";"1234";"";"CStatTeilenummerGateway";"\"\"";"\"\"";"";0;"";"";"\"\"";"SN";"";}
        NodeCategory{"";}
        Info{"Baustein zur Bewertung eines logischen VW-LAS Ausdrucks (s).\r\n\r\nMit dem Parameter \"ID_Expression\" wird der logische Ausdruck \xFCbergeben.\r\nDieser Wert wird mit dem Baustein \"VW_Codefile_STG_9_2_0\" geliefert.\r\n\r\nMit dem Parameter \"ID_Result\" wird der ID-String oder die Verkettung von ID-Strings \xFCbergeben.\r\nDie ID's m\xFCssen jeweils genau 12 Zeichen lang sein.\r\n\r\nDer Baustein liefert OK zur\xFCck, wenn der logische Ausdruck durch die ID's im Parameter \"ID_Result\" wahr wird, \r\nandernfalls NOK.\r\n\r\n\r\n";"";}
        Rights{"Write";"Read";}
        VersionInfo{}
        Class{"ZdcFtnCheck";}}}
      FunctionDef{
       Name{"VW2000_Softwareversion.9835";}
       LangName{"VW2000_Softwareversion.9835";"VW2000_Softwareversion.9835";}
       Type{2;}
       Icon{1;}
       Properties{}
       ActualParam{"CIniFile_Software_sk316";"Symbol";"erste_ID";"Symbol";"VW_Stg_ID";"Symbol";}
       Condition{"ever";"ok";"";}
       Evaluation{"direct";"never";
        ActionCond{"";}}
       Extra{"resultblock";"3713";"";"CStatTxtVersGateway";"\"\"";"\"\"";"";0;"";"";"\"A1\"";"\"SN\"";"";}
       NodeCategory{"";}
       Info{"Vergleich Softwareversion aus SG-Identifikation mit gepflegter Softwareversion in einer \r\nINI-Datei. Referenzierung \xFCber 9-stellige Teilenummer des SG.\r\n\r\n\r\nAufbau INI-Datei\r\n[Version]\r\nTeilenummer=Softwareversionsarray (jeweils 4 Byte )\r\n03D676453 =10201021\r\n03D676454 =1133\r\n";"";}
       Rights{"Write";"Read";}
       VersionInfo{
        CurVersion{0;1;"cp32";}
        Version{0;1;"cp32";"- in Arbeit -";"admin";"06.11.2012 13:24:29";}}
       Class{"VW2000_Softwareversion";}}
      FunctionDef{
       Name{"VW2000_Vers_Speichern.9836";}
       LangName{"VW2000_Vers_Speichern.9836";"VW2000_ID_Version_Store.9836";}
       Type{2;}
       Icon{1;}
       Properties{}
       ActualParam{"erste_ID";"Symbol";"VW_Stg_ID";"Symbol";"ID_Version_1";"Symbol";}
       Condition{"ever";"ok";"";}
       Evaluation{"direct";"never";
        ActionCond{"";}}
       Extra{"teststep";}
       NodeCategory{"";}
       Info{"Modul lie\xDFt nicht die Steuerger\xE4te-Identifikation aus dem Steuerger\xE4t, sondern nutzt die durch\r\neinen VW-Dienst (VW2000_ID_Lesen, VW2000_TNr_Lesen_Bew, VW2000-Cod_Lesen_Bew,\r\nVW2000_Tnr_Cod_Lesen_Bew, VW2000_ID_Pos_Lesen_Bew, VW2000_Version_Lesen_Speichern) \r\nin der  Variablen ID-String abgespeicherten Identifiktion.\r\n\r\nDieser Pr\xFCfschritt, oder VW2000_Vers_Lesen_Speichern ist immer vor einer Codierung oder eiem Login \r\nauszuf\xFChren, da bei diesen Befehlen der Datenstand an das STG gesendet werden mu\xDF.\r\n\r\nAus der Identifikation werden die 4 Byte Datenstand in der Variablen \"Version\" gespeichert.\r\nDiese Version wird in der Statistik gespeichert.\r\n\r\nDie Bewertung des Pr\xFCfschrittes ist immer OK, wenn in der Variblen \"ID_String\" eine g\xFCltige Identifikation\r\ngespeichert ist. Is dies nicht der Fall, wird in der Variablen \"Version\" \"0000\" gespeichert.\r\n\r\n";"";}
       Rights{"Write";"Read";}
       VersionInfo{}
       Class{"VW2000_Vers_Speichern";}}}
     FunctionDef{
      Name{"Programming.9837";}
      LangName{"Programming.9837";"Programming.9837";}
      Type{2;}
      Icon{0;}
      Properties{}
      ActualParam{}
      Condition{"when";"progcond";"Gateway_ProgL_String !=\"\"";}
      Evaluation{"direct";"never";
       ActionCond{"";}}
      Extra{"teststep";}
      NodeCategory{"";}
      Info{"Struckturbaustein";"";}
      Rights{"Write";"Read";}
      VersionInfo{}
      Class{"Neu";}
      FunctionDef{
       Name{"VW2000_SeedKeyLevel2.9838";}
       LangName{"VW2000_SeedKeyLevel2.9838";"VW2000_SeedKeyLevel2.9838";}
       Type{2;}
       Icon{1;}
       Properties{}
       ActualParam{"VCIKanal1";"Symbol";"DIALOG_LOKAL";"Symbol";"CDialogZeile1";"Symbol";"ConstVar37044";"Const";}
       Condition{"Never";"ever";"ok";"";}
       Evaluation{"direct";"never";
        ActionCond{"";}}
       Extra{"resultblock";"859";"";"CStatTxt_Login";"\"\"";"\"\"";"";0;"";"";"\"\"";"SN";"";}
       NodeCategory{"";}
       Info{"Mit diesem Modul kann das Seed&Key Verfahren mit einem Steuerger\xE4t angewendet werden.\r\n(VAG-Tester Funktion 16)\r\n\r\nDer Login mu?in der Variable \"Login\" \xFCbergeben werden.\r\n\r\nDie Bewertung des Pr\xFCfschrittes ist immer \"OK\", wenn der Seed und der Key erfolgreich zum \r\nSteuerger\xE4t gesendet wurde.\r\n\r\nIn die Statistik wird der Login geschrieben.";"";}
       Rights{"Write";"Read";}
       VersionInfo{}
       Class{"VW2000_SeedKeyLevel2";}}
      FunctionDef{
       Name{"VW2000_StartDiagnosticSession.9839";}
       LangName{"VW2000_StartDiagnosticSession.9839";"VW2000_StartDiagnosticSession.9839";}
       Type{2;}
       Icon{1;}
       Properties{}
       ActualParam{"VCIKanal1";"Symbol";"DiagSession_Entwickler";"Symbol";}
       Condition{"ever";"ok";"";}
       Evaluation{"direct";"never";
        ActionCond{"";}}
       Extra{"resultblock";"4041";"";"StatTxt_StartDiagSession";"\"\"";"\"\"";"";0;"";"";"\"\"";"SN";"";}
       NodeCategory{"";}
       Info{"Dieser Baustein startet eine definierte Diagnosesitzung in STG. Dadurch werden in der Regel bestimmte\r\nDiagnosebefehle zur Nutzung freigegeben.\r\nDabei wird der KWP2000-Befehl StartDiagnosticSession ( Blocktitel 0x10)\r\nmit dem Parameter \"Mode\"  verwendet.\r\nIn den meisten F\xE4llen ist vor der Verwendung dieses Befehls die Berechtigung mit Hilfe eines Login oder \r\ndurch das Seed and Key -Verfahren zu erlangen.\r\n\r\nDie Bewertung des Pr\xFCfschrittes ist immer OK, wenn der STG-Befehl erfolgreich ausgef\xFChrt werden konnte.\r\n\r\nIn die Statistik wird im OK-Fall nur die Bewertung des Pr\xFCfschrittes und im NOK-Fall\r\ndie die vollst\xE4ndige Antwort des STG gespeichert.";"";}
       Rights{"Write";"Read";}
       VersionInfo{}
       Class{"VW2000_StartDiagnosticSession";}}
      FunctionDef{
       Name{"Warten.9840";}
       LangName{"Warten.9840";"Wait.9840";}
       Type{2;}
       Icon{0;}
       Properties{}
       ActualParam{"CTime01";"Symbol";}
       Condition{"ever";"ok";"";}
       Evaluation{"no";"never";
        ActionCond{"";}}
       Extra{"teststep";}
       NodeCategory{"";}
       Info{"Baustein zum Warten einer bestimmten Zeit.\r\n\r\nDer Parameter \"Timeout\" gibt die Wartezeit in Sekunden an.\r\n";"Module to wait a defined time.\r\n\r\nThe parameter \"timout\" defines the waiting time in seconds.";}
       Rights{"Write";"Read";}
       VersionInfo{}
       Class{"Warten";}}
      FunctionDef{
       Name{"CodefileProgrammLang_KWP2000_1_03.9841";}
       LangName{"CodefileProgrammLang_KWP2000_1_03.9841";"CodefileProgrammLang_KWP2000_1_03.9841";}
       Type{2;}
       Icon{0;}
       Properties{}
       ActualParam{"DIALOG_LOKAL";"Symbol";"CDialogZeile1";"Symbol";"VCIKanal1";"Symbol";"Gateway_ProgL_String";"Symbol";}
       Condition{"ever";"progcond";"";}
       Evaluation{"direct";"never";
        ActionCond{"";}}
       Extra{"resultblock";"2822";"";"CStatProgrammierenGateway";"\"\"";"\"\"";"";0;"";"";"\"\"";"\"SN\"";"";}
       NodeCategory{"";}
       Info{"Dieser Baustein schreibt die Programierdaten aus dem Parameter \"Prog_String\" in ein Steuerger\xE4t mit KWP2000.\r\n\r\nIn \"Prog_String\" werden die Programierdaten aus dem Codefile \xFCbergeben.\r\nDie max. Anzahl Datendatenbytes je Schreibbefehl ist \"Blockl\xE4nge\".\r\n\r\n####\r\nHierbei wird die neue Erweiterung zum KWP2000 Spec zum Thema Flashen verwendet.\r\nBen\xF6tigt z.B. f\xFCr Airbag prog. PQ35\r\n####\r\n\r\nDie Bewertung dieses Bausteines ist OK, wenn das Schreiben in Ordnung war.\r\nR\xFCcklesen ist nicht m\xF6glich.\r\n\r\nDer Baustein ist auf die Verarbeitung von 4Byte Adress- und L\xE4ngeninforationen ausgelegt.\r\n\r\nIn die Statistik wird ein Statustext geschrieben.";"";}
       Rights{"Write";"Read";}
       VersionInfo{}
       Class{"CodefileProgrammLang_KWP2000_1_03";}}
      FunctionDef{
       Name{"DlgMultiLineResultStatus.9842";}
       LangName{"DlgMultiLineResultStatus.9842";"DlgMultiLineResultStatus.9842";}
       Type{2;}
       Icon{2;}
       Properties{}
       ActualParam{"DIALOG_LOKAL";"Symbol";"CDialogZeile1";"Symbol";"CText___OK";"Symbol";"CSymbol1";"Symbol";"CText___NOK";"Symbol";"CSymbol3";"Symbol";"CText___ABR";"Symbol";"CSymbol2";"Symbol";"CTextt___UNK";"Symbol";"CTimeMs_00500";"Symbol";}
       Condition{"ever";"ok";"";}
       Evaluation{"no";"never";
        ActionCond{"";}}
       Extra{"teststep";}
       NodeCategory{"";}
       Info{"Bausteinen zum Setzen einer Zeile des Multi-Dialogs";"Module to set a line of the multi-dialog.";}
       Rights{"Write";"Read";}
       VersionInfo{}
       Class{"DlgMultiLineResultStatus";}}}
     FunctionDef{
      Name{"Neu.9845";}
      LangName{"Codierung_Motor.9845";"Coding.9845";}
      Type{2;}
      Icon{0;}
      Properties{}
      ActualParam{}
      Condition{"ever";"ok";"";}
      Evaluation{"direct";"never";
       ActionCond{"";}}
      Extra{"teststep";}
      NodeCategory{"";}
      Info{"Import-Ablage\r\n";"";}
      Rights{"Write";"Read";}
      VersionInfo{}
      Class{"Neu";}
      FunctionDef{
       Name{"VW2000_StartDiagnosticSession.9846";}
       LangName{"VW2000_StartDiagnosticSession.9846";"VW2000_StartDiagnosticSession.9846";}
       Type{2;}
       Icon{1;}
       Properties{}
       ActualParam{"VCIKanal1";"Symbol";"DiagSession_EndOfLine";"Symbol";}
       Condition{"Never";"ever";"ok";"";}
       Evaluation{"direct";"never";
        ActionCond{"";}}
       Extra{"teststep";}
       NodeCategory{"";}
       Info{"Dieser Baustein startet eine definierte Diagnosesitzung in STG. Dadurch werden in der Regel bestimmte\r\nDiagnosebefehle zur Nutzung freigegeben.\r\nDabei wird der KWP2000-Befehl StartDiagnosticSession ( Blocktitel 0x10)\r\nmit dem Parameter \"Mode\"  verwendet.\r\nIn den meisten F\xE4llen ist vor der Verwendung dieses Befehls die Berechtigung mit Hilfe eines Login oder \r\ndurch das Seed and Key -Verfahren zu erlangen.\r\n\r\nDie Bewertung des Pr\xFCfschrittes ist immer OK, wenn der STG-Befehl erfolgreich ausgef\xFChrt werden konnte.\r\n\r\nIn die Statistik wird im OK-Fall nur die Bewertung des Pr\xFCfschrittes und im NOK-Fall\r\ndie die vollst\xE4ndige Antwort des STG gespeichert.";"";}
       Rights{"Write";"Read";}
       VersionInfo{}
       Class{"VW2000_StartDiagnosticSession";}}
      FunctionDef{
       Name{"VW2000_Codieren_kompatibel.9847";}
       LangName{"VW2000_Codieren_kompatibel.9847";"VW2000_Coding_kompatible.9847";}
       Type{2;}
       Icon{1;}
       Properties{}
       ActualParam{"VCIKanal1";"Symbol";"DIALOG_LOKAL";"Symbol";"CDialogZeile1";"Symbol";"Gateway_Codierung_Result";"Symbol";"ID_Version";"Symbol";"VW_Master";"Symbol";}
       Condition{"when";"progcond";"Gateway_Codier_Art == 0";}
       Evaluation{"direct";"never";
        ActionCond{"";}}
       Extra{"resultblock";"2424";"";"CStatCodierenGateway_24359";"\"\"";"\"\"";"";0;"";"";"\"\"";"SN";"";}
       NodeCategory{"";}
       Info{"Modul schreibt die Steuergeraete-Codierung.\r\nDabei wird der Baustein \"VW2000_Codieren\" verwendet.\r\nUnterstuetzt das STG den Befehl WriteByIdentifier (Blocktitel 0x2e) werden die RIDs  \r\n0601 gelesen, die L\xE4nge der Codierung geprueft, bei OK der  WSC mit F198 und die \r\nCodierung mit 0600 geschrieben. Damit ist ein fliessender Uebergang von 0x3B \r\nzu 0x2E moeglich.\r\n\r\n14.06.06, sz: erstellt";"";}
       Rights{"Write";"Read";}
       VersionInfo{}
       Class{"VW2000_Codieren_kompatibel";}}
      FunctionDef{
       Name{"VW2000_Coding_Long_kompatible.9848";}
       LangName{"VW2000_Codieren_Lang_kompatibel.9848";"VW2000_Coding_Long_kompatible.9848";}
       Type{2;}
       Icon{1;}
       Properties{}
       ActualParam{"VCIKanal1";"Symbol";"DIALOG_LOKAL";"Symbol";"CDialogZeile1";"Symbol";"Gateway_LongCode_Result";"Symbol";"ID_Version";"Symbol";"VW_Master_Lang";"Symbol";}
       Condition{"when";"progcond";"Gateway_Codier_Art == 1";}
       Evaluation{"direct";"never";
        ActionCond{"";}}
       Extra{"resultblock";"2424";"";"CStatCodierenGateway_24359";"\"\"";"\"\"";"";0;"";"";"\"\"";"SN";"";}
       NodeCategory{"";}
       Info{"Modul schreibt die \"lange\" Steuergeraete-Codierung.\r\nDabei wird der Baustein \"VW2000_Codieren_Lang\" verwendet.\r\nUnterstuetzt das STG den Befehl WriteByIdentifier (Blocktitel 0x2e) werden die RIDs  \r\n0601 gelesen, die L\xE4nge der Codierung geprueft, bei OK der  WSC mit F198 und die \r\nCodierung mit 0600 geschrieben. Damit ist ein fliessender Uebergang von 0x3B \r\nzu 0x2E moeglich.\r\n\r\n14.06.06, sz: erstellt";"";}
       Rights{"Write";"Read";}
       VersionInfo{}
       Class{"VW2000_Coding_Long_kompatible";}}}
     FunctionDef{
      Name{"Anpassung.9849";}
      LangName{"Anpassung.9849";"Anpassung.9849";}
      Type{2;}
      Icon{0;}
      Properties{}
      ActualParam{}
      Condition{"when";"progcond";"Gateway_Anpassung_String != \"\"";}
      Evaluation{"direct";"never";
       ActionCond{"";}}
      Extra{"teststep";}
      NodeCategory{"";}
      Info{"Platzhalter f\xFCr Pr\xFCfschritte";"";}
      Rights{"Write";"Read";}
      VersionInfo{}
      Class{"Pruefschrittvorlage";}
      FunctionDef{
       Name{"VW2000_SeedKeyLevel2.9850";}
       LangName{"VW2000_SeedKeyLevel_40975__2.9850";"VW2000_SeedKeyLevel2.9850";}
       Type{2;}
       Icon{1;}
       Properties{}
       ActualParam{"VCIKanal1";"Symbol";"DIALOG_LOKAL";"Symbol";"CDialogZeile1";"Symbol";"STG_Login_DSR_HHC";"Symbol";}
       Condition{"Never";"ever";"ok";"";}
       Evaluation{"direct";"never";
        ActionCond{"";}}
       Extra{"resultblock";"1804";"";"CStatText_Login";"\"\"";"\"\"";"";0;"";"";"\"\"";"SN";"";}
       NodeCategory{"";}
       Info{"Mit diesem Modul kann das Seed&Key Verfahren mit einem Steuerger\xE4t angewendet werden.\r\n(VAG-Tester Funktion 16)\r\n\r\nDer Login mu?in der Variable \"Login\" \xFCbergeben werden.\r\n\r\nDie Bewertung des Pr\xFCfschrittes ist immer \"OK\", wenn der Seed und der Key erfolgreich zum \r\nSteuerger\xE4t gesendet wurde.\r\n\r\nIn die Statistik wird der Login geschrieben.";"";}
       Rights{"Write";"Read";}
       VersionInfo{}
       Class{"VW2000_SeedKeyLevel2";}}
      FunctionDef{
       Name{"CodefileLangeAnpassung_KWP2000.9851";}
       LangName{"CodefileLangeAnpassung_KWP2000.9851";"CodefileLangeAnpassung_KWP2000.9851";}
       Type{2;}
       Icon{0;}
       Properties{}
       ActualParam{"DIALOG_LOKAL";"Symbol";"CDialogZeile1";"Symbol";"VCIKanal1";"Symbol";"Gateway_Anpassung_String";"Symbol";}
       Condition{"ever";"ok";"";}
       Evaluation{"direct";"never";
        ActionCond{"";}}
       Extra{"resultblock";"2823";"";"CStat_Anpassung";"\"\"";"\"\"";"";0;"";"";"\"\"";"SN";"";}
       NodeCategory{"";}
       Info{"Dieser Baustein schreibt die Anpassungsdaten aus dem Parameter \"Anpassung_String\" in ein \r\nSteuergeraet mit VW2000 Protokoll.\r\n\r\nIn \"Anpassung_String\" werden die Anpassungsdaten aus dem Codefile / ZDC uebergeben. \r\nEs werden \"normale\" Anpassungen (1 Byte Kanal, max. 2 Byte Wert) und / oder \"lange\" Anpassungen\r\n(1 Byte Kanal, max. 80 Byte Wert ) geschrieben.\r\n\r\nWegen der langen Anpassung wurde das Uebergabeformat von \"Anpassung_String\" erweitert:\r\n4 Byte: Anzahl Anpassungen; 4 Byte: 1. Anpassungs-Kanal; 4 Byte: 1. Laenge n der einzelnen Anpassung; \r\nn Byte: 1. Anpassungswert; 4 Byte: 2. Anpassungs-Kanal; 4 Byte: 2. Laenge m der einzelnen Anpassung; \r\nm Byte: 2. Anpassungswert; ...\r\n\r\nDas \"alte\" Format kann nach wie vor Verarbeitet werden.\r\n\r\nDie Bewertung dieses Bausteines ist OK, wenn das Schreiben der Daten in Ordnung war. \r\nDie Bewertung ist NOK, bei Datenanzahl = 0 oder wenn das Schreiben eines Kanals NOK war.\r\n\r\nIn die Statistik wird ein Statustext geschrieben.\r\n\r\n02.01.2006, sz: Erstellt";"";}
       Rights{"Write";"Read";}
       VersionInfo{}
       Class{"CodefileLangeAnpassung_KWP2000";}}
      FunctionDef{
       Name{"CodefileAnpassung_KWP2000.9852";}
       LangName{"CodefileAnpassung_KWP2000.9852";"CodefileAnpassung_KWP2000.9852";}
       Type{2;}
       Icon{0;}
       Properties{}
       ActualParam{"DIALOG_LOKAL";"Symbol";"CDialogZeile1";"Symbol";"VCIKanal1";"Symbol";"Gateway_Anpassung_String";"Symbol";}
       Condition{"Never";"ever";"ok";"";}
       Evaluation{"direct";"never";
        ActionCond{"";}}
       Extra{"resultblock";"2823";"";"CStat_Anpassung";"\"\"";"\"\"";"";0;"";"";"\"\"";"SN";"";}
       NodeCategory{"";}
       Info{"Dieser Baustein schreibt die Anpassungsdaten aus dem Parameter \"Anpassung_String\" in ein Steuerger\xE4t mit KWP1281.\r\n\r\nIn \"Anpassung_String\" werden die Anpassungsdaten aus dem Codefile \xFCbergeben. Die Kan\xE4le sind hierbei unbedeudent.\r\n\r\nDie Bewertung dieses Bausteines ist OK, wenn das Schreiben der Daten in Ordnung war. \r\nDie Bewertung ist NOK, bei Datenanzahl = 0 oder wenn das Schreiben eines Kanals NOK war.\r\n\r\nIn die Statistik wird ein Statustext geschrieben.";"";}
       Rights{"Write";"Read";}
       VersionInfo{}
       Class{"CodefileAnpassung_KWP2000";}}}
     FunctionDef{
      Name{"DTC_Read_Clear.9853";}
      LangName{"FSP_lesen_loeschen.9853";"DTC_Read_Clear.9853";}
      Type{2;}
      Icon{0;}
      Properties{}
      ActualParam{}
      Condition{"ever";"ok";"";}
      Evaluation{"direct";"never";
       ActionCond{"";}}
      Extra{"teststep";}
      NodeCategory{"";}
      Info{"";"";}
      Rights{"Write";"Read";}
      VersionInfo{}
      Class{"Neu";}
      FunctionDef{
       Name{"VW2000_FSP_Lesen_Anzahl.9854";}
       LangName{"VW2000_FSP_Lesen_Anzahl.9854";"VW2000_DTC_Read_Quantity.9854";}
       Type{2;}
       Icon{1;}
       Properties{}
       ActualParam{"VCIKanal1";"Symbol";"DInt";"Symbol";"VW_FSP_Result";"Symbol";"VW_Codes_FSP_Lesen";"Symbol";}
       Condition{"ever";"ok";"";}
       Evaluation{"direct";"never";
        ActionCond{"";}}
       Extra{"teststep";}
       NodeCategory{"";}
       Info{"Dieses Modul lie\xDFt den Fehlerspeicher eines Steuerger\xE4tes.\r\nDabei wird der KWP2000-Befehl readDiagnosticInfomation ( Blocktitel 0x18)\r\nmit dem Parameter allGroups (0x02 0xff 0x00) verwendet.\r\n\r\nDer gelesene Fehlerspeicherinhalt wird immer in der Variablen \"FSP-String\" zur weiteren\r\nBearbeitung abgespeichert.\r\n\r\nBewertet und in die Statistik geschrieben wird die Anzahl, der im Steuerger\xE4t vorhanden\r\nFehler. Eine Filterung wird hierbei nicht vorgenommen.\r\n\r\nDie Bewertung diese Pr\xFCfschrittes is \"OK\", wenn der Steuerger\xE4tebefehl erfolgreich \r\nausgef\xFChrt werden konnte und kein Fehler vorhandenen ist.\r\nDie Bewertung diese Pr\xFCfschrittes is \"NOK\", wenn der Steuerger\xE4tebefehl erfolgreich \r\nausgef\xFChrt werden konnte und mindestens ein Fehler vorhandenen ist.\r\nDie Bewertung diese Pr\xFCfschrittes is \"ABBR\", wenn der Steuerger\xE4tebefehl nicht\r\nerfolgreich ausgef\xFChrt werden konnte.\r\n";"";}
       Rights{"Write";"Read";}
       VersionInfo{}
       Class{"VW2000_FSP_Lesen_Anzahl";}}
      FunctionDef{
       Name{"VW2000_FSP_Loeschen.9855";}
       LangName{"VW2000_FSP_Loeschen.9855";"VW2000_DTC_Clear.9855";}
       Type{2;}
       Icon{1;}
       Properties{}
       ActualParam{"VCIKanal1";"Symbol";"DIALOG_LOKAL";"Symbol";"CDialogZeile1";"Symbol";"CTime_1";"Symbol";}
       Condition{"ever";"ok";"";}
       Evaluation{"direct";"never";
        ActionCond{"";}}
       Extra{"teststep";}
       NodeCategory{"";}
       Info{"Dieses Modul l\xF6scht den Fehlerspeicher eines Steuerger\xE4tes.\r\nDabei wird der KWP2000-Befehl ClearDiagnosticInfomation ( Blocktitel 0x14)\r\nmit dem Parameter allGroups ( 0xff 0x00) verwendet.\r\n\r\nDie Bewertung diese Pr\xFCfschrittes ist \"OK\", wenn der Steuerger\xE4tebefehl erfolgreich \r\nausgef\xFChrt werden konnte, Die Bewertung des Pr\xFCfschrittes wird in die Statistik gesschrieben.";"";}
       Rights{"Write";"Read";}
       VersionInfo{}
       Class{"VW2000_FSP_Loeschen";}}
      FunctionDef{
       Name{"StatSetAsciiResult.9856";}
       LangName{"StatSetAsciiResult.9856";"StatSetAsciiResult.9856";}
       Type{2;}
       Icon{1;}
       Properties{}
       ActualParam{"OK";"Symbol";"CText_TestBlockIncomplete";"Symbol";}
       Condition{"ever";"ok";"";}
       Evaluation{"direct";"never";
        ActionCond{"";}}
       Extra{"resultblock";"459";"";"CText_TestBlockComplete";"\"\"";"\"\"";"";0;"";"";"\"\"";"SN";"";}
       NodeCategory{"";}
       Info{"Baustein zum Schreiben von OK oder NOK in die Statistik. (S)";"";}
       Rights{"Write";"Read";}
       VersionInfo{}
       Class{"StatSetAsciiResult";}}}}
    FunctionDef{
     Name{"VW2000_STG_Ende.9857";}
     LangName{"VW2000_STG_Ende.9857";"VW2000_ECU_Disconnect.9857";}
     Type{2;}
     Icon{1;}
     Properties{}
     ActualParam{"VCIKanal1";"Symbol";}
     Condition{"ever";"ok";"";}
     Evaluation{"no";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     NodeCategory{"";}
     Info{"Mit diesem Modul wird die Kommunikation zu einem Steuerger\xE4t beendet. Dieser Befehl ist\r\nimmer nach dem letzten Befehl f\xFCr ein Steuerger\xE4t zu senden bzw. bevor die Z\xFCndung\r\nausgeschaltet wird. \r\n\r\nDie Bewertung des Pr\xFCfschrittes ist \"OK\", wenn die Verbindung erfolgreich beendet werden\r\nkonnte.\r\n\r\nIn die Statistik wird nur ein \"OK\" bzw. \"NOK\" in Abh\xE4nigkeit von der Berwertung geschrieben.\r\n\r\n";"This modules terminates the communication to a control unit. This command\r\nalways has to be send after the last command for a control unit or before the \r\nignition is going to be switched off.\r\n\r\nThe evaluation of the test step is \"OK\" if a connection could be established.\r\n\r\nTo the statistic only an \"OK\" or an \"NOK\" is written respectively to the evaluation.\r\n\r\n";}
     Rights{"Write";"Read";}
     VersionInfo{}
     Class{"VW2000_STG_Ende";}}}
   FunctionDef{
    Name{"ECU_Handling_Service_22.9858";}
    LangName{"ECU_Handling_Service_22.9858";"ECU_Handling_Service_22.9858";}
    Type{2;}
    Icon{0;}
    Properties{}
    ActualParam{}
    Condition{"LAS";"LAS_WFS3Gen_3_Schluessel1";"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    NodeCategory{"";}
    Info{"Strukturelement";"structure element";}
    Rights{"Write";"Read";}
    VersionInfo{}
    Class{"Neu_309535";}
    FunctionDef{
     Name{"Set_TBL_incomplete.9859";}
     LangName{"Set_TBL_incomplete.9859";"Set_TBL_incomplete.9859";}
     Type{2;}
     Icon{1;}
     Properties{}
     ActualParam{"NOK";"Symbol";"CText_Info_TestBlockIncomplete";"Symbol";}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"resultblock";"459";"";"CText_TestBlockComplete";"\"\"";"\"\"";"";0;"";"";"\"\"";"SN";"";}
     NodeCategory{"";}
     Info{"Baustein zum Schreiben von OK oder NOK in die Statistik. (S)";"";}
     Rights{"Write";"Read";}
     VersionInfo{}
     Class{"StatSetAsciiResult_293306";}}
    FunctionDef{
     Name{"Codefile_selection.9860";}
     LangName{"Codefile_selection.9860";"Codefile_selection.9860";}
     Type{2;}
     Icon{0;}
     Properties{}
     ActualParam{}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"break";
      ActionCond{"";"nok";}}
     Extra{"teststep";}
     NodeCategory{"";}
     Info{"Strukturelement";"structure element";}
     Rights{"Write";"Read";}
     VersionInfo{}
     Class{"Neu_309535";}
     FunctionDef{
      Name{"VW_Codefile_STG.9861";}
      LangName{"VW_Codefile_STG.9861";"VW_Codefile_STG.9861";}
      Type{2;}
      Icon{0;}
      Properties{}
      ActualParam{"DIALOG_LOKAL";"Symbol";"CDialogZeile1";"Symbol";"CText_Info_Codefile_Gateway";"Symbol";"C19_Gateway";"Symbol";"Gateway_ID_1_Result";"Symbol";"Gateway_ID_2_Result";"Symbol";"Gateway_ID_3_Result";"Symbol";"Gateway_ID_4_Result";"Symbol";"Gateway_ID_5_Result";"Symbol";"Gateway_ID_6_Result";"Symbol";"Gateway_ID_7_Result";"Symbol";"Gateway_Coding_Result";"Symbol";"Gateway_LongCode_Result";"Symbol";"Gateway_Coding_Style";"Symbol";"Gateway_Login_1";"Symbol";"Gateway_Login_2";"Symbol";"Gateway_Quantity_ECU";"Symbol";"Gateway_Adaptation_String";"Symbol";"Gateway_Prog_String";"Symbol";"Gateway_ProgL_String";"Symbol";"Gateway_State";"Symbol";"Gateway_Result";"Symbol";"Gateway_Selection";"Symbol";"Gateway_Container_Name";"Symbol";"Gateway_Container_Version";"Symbol";"Gateway_ID_Expression_Result";"Symbol";"Gateway_HWBgp";"Symbol";"Gateway_SWBgp";"Symbol";"Gateway_RawPartNumber";"Symbol";}
      Condition{"ever";"ok";"";}
      Evaluation{"direct";"never";
       ActionCond{"";}}
      Extra{"teststep";}
      NodeCategory{"";}
      Info{"Dieser Baustein wertet das Codfile mit der entsprechenden STG_Nr (XX) aus.\r\n\r\nDabei werden die Files \"codefXX\",\"lXXtab\" und \"codverXX\" auf dem Pr\xFCfplatz im Directory \"skript\" ben\xF6tigt\".\r\nDiese Files werden auf ihre Richtigkeit und Zugeh\xF6hrigkeit \xFCberpr\xFCft. Sind die CRC-Pr\xFCfsummen i.O. und\r\nbesitzen alle drei Files die gleiche Versionsnummer, wird der entsprechende Satz durch \xDCberpr\xFCfung der\r\nLAS aus dem File \"lXXtab\" an Hand des Fahrzeugdatensatzes gesucht. Ist ein Satz g\xFCltig,\r\nwerden die fahrzeugabh\xE4nigen Daten aus dem File \"codefXX\" und die Freigabeversion dieses Satzes\r\naus dem File \"codverXX\" geladen.\r\n\r\nDie Bewertung dieses Bausteines OK, wenn alle oben genannten Bedingungen erf\xFCllt sind und damit ein f\xFCr diese\r\nFahrzeugausstattung passender Satz gefunden wurde. In allen anderen F\xE4llen ist die Bewertung NOK.\r\n\r\nIst die Bewertung OK, werden die gefundenen Daten unformatiert in der Variablen \"Result\" zur Verf\xFCgung\r\ngestellt. Anschlie\xDFend werden die Daten aufbereitet, in der Variablen \"ID-Result\" die Teilenummer(n) und der \r\nIndex des erwarteten Steuerger\xE4tes 12stellig und in der Variablen \"Codierung_Result\" die\r\nCodierung f\xFCr dieses Fahrzeug gespeichert. Die Codierung kann entweder in der Freigabetabelle, in einem\r\n XML-Container, oder in einem XML Container, der einen \"Codierwortgenerator\" ben\xF6tigt, enthalten sein. \r\nIn \"Login1_Result\" / \"Login2_Result\" werden Logins bereitgestellt (wenn vorhanden).\r\nIn \"Prog_String\" werden die zu programierenden Daten bereitgestellt (wenn vorhanden).\r\nDiese k\xF6nnen dann an das Element \"CodefileProgramm_Dummy\" \xFCbergeben werden\r\n\r\nDie Variable \"Auswahl_Ergebnis\" enth\xE4lt im NOK-Fall die Fehlermeldung im Klartext und im OK-Fall\r\ndie Versionsnummer der Freigabetabelle, die gefundene Satznummer und den entsprechende LAS.\r\nDiese Information wird auch in die Statistik geschrieben.\r\n\r\nDie Variable \"Result_Status\" kann f\xFCr Ablaufsteuerungen verwendet werden. Sobald der Baustein seine\r\nAnalyse beginnt wird sie auf -1 gesetzt. Ist die Analyse beendet sigalisiert eine 0 die G\xFCltigkeit der Daten.\r\nEine 1 zeigt, da\xDF w\xE4hrend der Analyse ein Fehler aufgetreten ist, oder das f\xFCr diese Fahrzeug keine\r\nDaten gefunden werden konnten.\r\nWerden Codefile-Informationen an verschiedenen Stellen des Ablaufes oder in verschiedenen Sequenzen\r\nben\xF6tigt, so kann man \xFCber die Variable \"Result_Status\" abfragen, ob die Codefile-Auswahl schon einmal\r\nerfolgt und g\xFCltig ist. So kann man wiederholte Codefile-Auswahl vermeiden. Auch ist eine Parallelisierung \r\naller Codefile-Auswertungen in einer Hintergrund-Task m\xF6glich. Voraussetzung f\xFCr die Verwendung an\r\nmehreren Stellen oder die Parallelisierung ist eine Initialisierung dieser Variablen auf -2 nach Anforderung \r\neines Fahrzeugdatensatzes.\r\nDie Syncronisatzion der Abl\xE4ufe kann hierbei mit \"Codefile_Warten\" oder Codefile_Warten_Statistik\" erfolgen.\r\n\r\nsz, 29.08.02\r\n\r\nErweietrung auf LangeCodierung.\r\nNun wird im Parameter \"Codier_Art\" angegeben ob es eine \"kurze\" Codierung wie bisher (Wert = 0) oder \r\neine Lange Codierung (Wert = 1) handelt. Bei Codier_Art = 1 wird der CodierString der langen Codierung in \r\ndem Parameter LangCode_Result \xFCbergeben; die Lange Codierung kann bis zu 250 Bytes beinhalten und mit den \r\nBausteinen \"VW2000_Codierung_Lang\" geschrieben und \"VW2000_Cod_Lang_Lesen_Bew\" gepr\xFCft werden. \r\n\r\nsz, 26.03.03\r\n\r\nErweiterung f\xFCr Freigabetabellen in Version 2.0 und Erweiterung f\xFCr ZDC 2.02.\r\nSofern in der Freigabetabelle ein Verweis auf einen ZDC V 2.02 enthalten ist, kann der WinPfau die Berechnung von \r\nCodierwort, Anpassung, Programmierdaten und Flashdaten nicht offline durchf\xFChren. Der Baustein liefert als Erweiterung\r\nneben dem Namen des Containers auch die Version des Containes zur\xFCck. Die Berechnung von Codierwort, \r\nAnpassung, Programmierung und Flashdaten erfolgt durch spezielle ZdcXxx Bausteine.\r\nF\xFCr Daten im \"alten\" WinPfau-Format <= V 102 werden die Parameter abw\xE4rtkompatibel aufgef\xFCllt.\r\nEin weiterer neuer Parameter ist \"ID_Expression\", der mit dem logischen Ausdruck der Fertigteilnummern gef\xFCllt wird.\r\n\r\ncm, 03.07.03\r\n\r\nErweiterung um den Parameter \"ProgL_String\"\r\nAb der WinPfau Version 9.2.0.3 wird in dem Parameter \"ProgL_String\" der Programmierstring im 4 Byte \r\nFormat erzeugt. Aufbau ist identisch zu dem Parameter  \"Prog_String\", jedoch Anzahl, L\xE4nge und Adresse \r\nsind jeweils 4 Byte Motorola codiert.\r\n\r\ncm, 13.08.03\r\n\r\nErzeugt der WinPfau CSF Codefiles gibt es kein Telegramm \"PRG\" mehr. Nur noch \"PRG2\"; \r\nnun wird die kurze Programmierung \"Prog_String\" mit sinnvollen Daten bef\xFCllt; damit ist der Baustein abw\xE4rtskompatibel.\r\nMit dieser Version wird nun \"Prog_String\" mit plausiblen Daten gef\xFCllt solange die START-ADR <= 2 Byte ist.\r\n\r\nsz, 03.09.03\r\n\r\nWeitere Fehler bei Umwandlung PRG2 nach PRG beseitigt.\r\n\r\njk 11.09.03\r\n\r\nBugfix zur Inkompatibilit\xE4t der Freigabetabelle *.txt mit mehr als 3 TNR (abschneiden der TNR 4 u. 5)\r\nDer Fehler tritt nur bei mehr als 3 TNR und CF20 bei FTabs im Format *.txt auf.\r\n\r\nsz  28.04.04\r\n\r\nBugfix zur Versionskennung der FTab und LAS-String in der Statistik\r\n(wurde ab Version 2.5.6 der mslext nicht mehr vollst\xE4ndig in der Statistik aufgenommen)\r\n\r\nsz  07.06.04\r\n\r\nBugfix zum Bugfix: im Fehlerfall wird jetzt nicht mehr abgebrochen, sondern wie fr\xFCher ein \r\nNOK in die Statistik geschrieben.\r\n\r\nsz  08.06.04 \r\n\r\nBugfix: fehlende Initialisierung des Parameters XmlVersion eingetragen\r\n\r\nsz  21.01.05 ";"Dieser Baustein wertet das Codfile mit der entsprechenden STG_Nr (XX) aus.\r\n\r\nDabei werden die Files \"codefXX\",\"lXXtab\" und \"codverXX\" auf dem Pr\xFCfplatz im Directory \"skript\" ben\xF6tigt\".\r\nDiese Files werden auf ihre Richtigkeit und Zugeh\xF6hrigkeit \xFCberpr\xFCft. Sind die CRC-Pr\xFCfsummen i.O. und\r\nbesitzen alle drei Files die gleiche Versionsnummer, wird der entsprechende Satz durch \xDCberpr\xFCfung der\r\nLAS aus dem File \"lXXtab\" an Hand des Fahrzeugdatensatzes gesucht. Ist ein Satz g\xFCltig,\r\nwerden die fahrzeugabh\xE4nigen Daten aus dem File \"codefXX\" und die Freigabeversion dieses Satzes\r\naus dem File \"codverXX\" geladen.\r\n\r\nDie Bewertung dieses Bausteines OK, wenn alle oben genannten Bedingungen erf\xFCllt sind und damit ein f\xFCr diese\r\nFahrzeugausstattung passender Satz gefunden wurde. In allen anderen F\xE4llen ist die Bewertung NOK.\r\n\r\nIst die Bewertung OK, werden die gefundenen Daten unformatiert in der Variablen \"Result\" zur Verf\xFCgung\r\ngestellt. Anschlie\xDFend werden die Daten aufbereitet, in der Variablen \"ID-Result\" die Teilenummer(n) und der \r\nIndex des erwarteten Steuerger\xE4tes 12stellig und in der Variablen \"Codierung_Result\" die\r\nCodierung f\xFCr dieses Fahrzeug gespeichert. Die Codierung kann entweder in der Freigabetabelle, in einem\r\n XML-Container, oder in einem XML Container, der einen \"Codierwortgenerator\" ben\xF6tigt, enthalten sein. In \r\n\"Prog_String\" werden die zu programierenden Daten bereitgestellt (wenn vorhanden).\r\nDiese k\xF6nnen dann an das Element \"CodefileProgramm_Dummy\" \xFCbergeben werden\r\n\r\nDie Variable \"Auswahl_Ergebnis\" enth\xE4lt im NOK-Fall die Fehlermeldung im Klartext und im OK-Fall\r\ndie Versionsnummer der Freigabetabelle, die gefundene Satznummer und den entsprechende LAS.\r\nDiese Information wird auch in die Statistik geschrieben.\r\n\r\nDie Variable \"Result_Status\" kann f\xFCr Ablaufsteuerungen verwendet werden. Sobald der Baustein seine\r\nAnalyse beginnt wird sie auf -1 gesetzt. Ist die Analyse beendet sigalisiert eine 0 die G\xFCltigkeit der Daten.\r\nEine 1 zeigt, da\xDF w\xE4hrend der Analyse ein Fehler aufgetreten ist, oder das f\xFCr diese Fahrzeug keine\r\nDaten gefunden werden konnten.\r\nWerden Codefile-Informationen an verschiedenen Stellen des Ablaufes oder in verschiedenen Sequenzen\r\nben\xF6tigt, so kann man \xFCber die Variable \"Result_Status\" abfragen, ob die Codefile-Auswahl schon einmal\r\nerfolgt und g\xFCltig ist. So kann man wiederholte Codefile-Auswahl vermeiden. Auch ist eine Parallelisierung \r\naller Codefile-Auswertungen in einer Hintergrund-Task m\xF6glich. Voraussetzung f\xFCr die Verwendung an\r\nmehreren Stellen oder die Parallelisierung ist eine Initialisierung dieser Variablen auf -2 nach Anforderung \r\neines Fahrzeugdatensatzes.\r\nDie Syncronisatzion der Abl\xE4ufe kann hierbei mit \"Codefile_Warten\" oder Codefile_Warten_Statistik\" erfolgen.\r\n\r\nsz, 29.08.02\r\n";}
      Rights{"Write";"Read";}
      VersionInfo{}
      Class{"VW_Codefile_STG";}}
     FunctionDef{
      Name{"Codefile_Warten_Statistik.9862";}
      LangName{"Codefile_Warten_Statistik.9862";"Codefile_Wait_Statistic.9862";}
      Type{2;}
      Icon{0;}
      Properties{}
      ActualParam{"DIALOG_LOKAL";"Symbol";"CDialogZeile1";"Symbol";"CText_Info_Codefile_Gateway";"Symbol";"Gateway_State";"Symbol";"Gateway_Selection";"Symbol";"CTime10";"Symbol";}
      Condition{"ever";"ok";"";}
      Evaluation{"direct";"never";
       ActionCond{"";}}
      Extra{"resultblock";"2418";"";"CStatTxtCodefileGateway";"\"\"";"\"\"";"";0;"";"";"\"\"";"\"SN\"";"";}
      NodeCategory{"";}
      Info{"Platzhalter f\xFCr Pr\xFCfschritte";"";}
      Rights{"Write";"Read";}
      VersionInfo{}
      Class{"Codefile_Warten_Statistik";}}
     FunctionDef{
      Name{"ZDC_Auswerten.9863";}
      LangName{"ZDC_Auswerten.9863";"ZDC_Processing.9863";}
      Type{2;}
      Icon{0;}
      Properties{}
      ActualParam{}
      Condition{"ever";"progcond";"";}
      Evaluation{"direct";"never";
       ActionCond{"";}}
      Extra{"teststep";}
      NodeCategory{"";}
      Info{"Import-Ablage\r\n";"";}
      Rights{"Write";"Read";}
      VersionInfo{}
      Class{"Neu_309535";}
      FunctionDef{
       Name{"ZDC_Open.9864";}
       LangName{"ZDC_Open.9864";"ZDC_Open.9864";}
       Type{2;}
       Icon{0;}
       Properties{}
       ActualParam{}
       Condition{"ever";"ok";"";}
       Evaluation{"direct";"never";
        ActionCond{"";}}
       Extra{"teststep";}
       NodeCategory{"";}
       Info{"Strukturbaustein";"";}
       Rights{"Write";"Read";}
       VersionInfo{}
       Class{"Neu_309535";}
       FunctionDef{
        Name{"ZdcOpen.9865";}
        LangName{"ZdcOpen.9865";"ZdcOpen.9865";}
        Type{2;}
        Icon{0;}
        Properties{}
        ActualParam{"DZdcHndl";"Symbol";"Gateway_Container_Name";"Symbol";"Gateway_Container_Version";"Symbol";"CInt_DebugLevel_06";"Symbol";}
        Condition{"ever";"ok";"";}
        Evaluation{"direct";"never";
         ActionCond{"";}}
        Extra{"teststep";}
        NodeCategory{"";}
        Info{"Baustein oeffnet einen Zieldaten-Container (ZDC) in der Version 2.02.\r\n\r\nNach erfolgreichem Aufruf wird das uebergebene Handle mit einem gueltigen Wert (Wert >= 0) gesetzt.\r\nAndernfalls wird der Parameter \"ZdcHndl\" auf -1 gesetzt.\r\n\r\nDer Baustein steht in engem Zusammenhang mit dem Baustein \"VW_Codefile_STG_9_2_0\", der die\r\nEingangsparameter \"XmlContainer\" und \"XmlVersion\" fuer diesem Baustein liefert.\r\n";"";}
        Rights{"Write";"Read";}
        VersionInfo{}
        Class{"ZdcOpen_309552";}}
       FunctionDef{
        Name{"ErrDebugInfoStr.9866";}
        LangName{"ErrDebugInfoStr.9866";"ErrDebugInfoStr.9866";}
        Type{2;}
        Icon{2;}
        Properties{}
        ActualParam{"CNullPosition";"Symbol";"Gateway_Container_Name";"Symbol";"ConstVar44293";"Const";}
        Condition{"ever";"ok";"";}
        Evaluation{"no";"never";
         ActionCond{"";}}
        Extra{"teststep";}
        NodeCategory{"";}
        Info{"Debug-Ausgabe einer Zeichenkette";"Debug-Ausgabe einer Zeichenkette";}
        Rights{"Write";"Read";}
        VersionInfo{}
        Class{"ErrDebugInfoStr";}}
       FunctionDef{
        Name{"ErrDebugInfoStr.9867";}
        LangName{"ErrDebugInfoStr.9867";"ErrDebugInfoStr.9867";}
        Type{2;}
        Icon{2;}
        Properties{}
        ActualParam{"CNullPosition";"Symbol";"Gateway_Container_Version";"Symbol";"ConstVar44294";"Const";}
        Condition{"ever";"ok";"";}
        Evaluation{"no";"never";
         ActionCond{"";}}
        Extra{"teststep";}
        NodeCategory{"";}
        Info{"Debug-Ausgabe einer Zeichenkette";"Debug-Ausgabe einer Zeichenkette";}
        Rights{"Write";"Read";}
        VersionInfo{}
        Class{"ErrDebugInfoStr";}}}
      FunctionDef{
       Name{"ZDC_Config_data.9868";}
       LangName{"ZDC_Config_data.9868";"ZDC_Config_data.9868";}
       Type{2;}
       Icon{0;}
       Properties{}
       ActualParam{}
       Condition{"ever";"ok";"";}
       Evaluation{"direct";"never";
        ActionCond{"";}}
       Extra{"teststep";}
       NodeCategory{"";}
       Info{"Strukturbaustein";"";}
       Rights{"Write";"Read";}
       VersionInfo{}
       Class{"Neu_309535";}
       FunctionDef{
        Name{"ZdcKalibrierungL.9869";}
        LangName{"ZdcKalibrierungL.9869";"ZdcKalibrierungL.9869";}
        Type{2;}
        Icon{0;}
        Properties{}
        ActualParam{"DIALOG_LOKAL";"Symbol";"CDialog_Keine_Anzeige";"Symbol";"CText_Info_Codefile_Gateway";"Symbol";"DZdcHndl";"Symbol";"CStr_ZDC_Modus_All";"Symbol";"Gateway_ZDC_Calibration_String";"Symbol";}
        Condition{"ever";"ok";"";}
        Evaluation{"direct";"never";
         ActionCond{"";}}
        Extra{"resultblock";"3028";"";"";"\"\"";"\"\"";"";0;"";"";"\"\"";"SN";"";}
        NodeCategory{"";}
        Info{"Dieser Baustein berechnet die Kalibrierdaten nach dem Zieldatencontainer (ZDC) V 2.04. (S)\r\n\r\nAls Parameter muss das \"ZdcHndl\" \xFCbergeben werden, dass mit dem Baustein \"ZdcOpen\" erzeugt wurde.\r\n\r\nDer Parameter \"Modusteil\" kann zur Filterung der Daten innerhalb des Containers verwendet werden. \r\nMit Modusteil gleich \"\" werden alle Tabellen mit dem Modus \"K\" im ZDC ausgewertet.\r\n\r\n\r\nDer Baustein liefert mit dem Parameter \"KalibL_String\" die Kalibrierdaten im DSA internen Austauschformat\r\nf\xFCr Kalibrierdaten mit 4 Byte Adresse.\r\n\r\nDer Baustein berechnet nur die Kalibrierdaten. Das Schreiben der Daten erfolgt nicht \r\ndurch diesen Baustein!\r\n\r\n\r\nDas Format des KalibL_String ist wie folgt aufgebaut:\r\n\r\n4 Byte: Anzahl Kalibrierungen;\r\n    4 Byte: 1. ServiceID (z.B. 0000002E f\xFCr Dienst 2E);\r\n    4 Byte: 1. RecordDataID (entspricht vom Sinn her einer Adresse. Z.B. 00000530);\r\n    4 Byte: 1. Laenge n der einzelnen Kalibrierung; \r\n    n Byte: 1. Kalibrierdaten;\r\n\r\n    4 Byte: 2. ServiceID;\r\n    4 Byte: 2. RecordDataID;\r\n    4 Byte: 2. Laenge m der einzelnen Kalibrierung; \r\n    m Byte: 2. Kalibrierdaten;\r\n\r\n    ...\r\n\r\n";"";}
        Rights{"Write";"Read";}
        VersionInfo{}
        Class{"ZdcKalibrierungL_309560";}}
       FunctionDef{
        Name{"ZdcProgrammierungL.9870";}
        LangName{"ZdcProgrammierungL.9870";"ZdcProgrammingLong.9870";}
        Type{2;}
        Icon{0;}
        Properties{}
        ActualParam{"DIALOG_LOKAL";"Symbol";"CDialog_Keine_Anzeige";"Symbol";"CTextCodefileAuswahl";"Symbol";"DZdcHndl";"Symbol";"CZDCModusAll";"Symbol";"Gateway_ProgL_String";"Symbol";}
        Condition{"ever";"ok";"";}
        Evaluation{"direct";"never";
         ActionCond{"";}}
        Extra{"resultblock";"4538";"";"";"\"\"";"\"\"";"";0;"";"";"\"\"";"SN";"";}
        NodeCategory{"";}
        Info{"Dieser Baustein berechnet die Programmierdaten nach dem Zieldatencontainer (ZDC) V 2.02. (S)\r\n\r\nAls Parameter muss das \"ZdcHndl\" \xFCbergeben werden, dass mit dem Baustein \"ZdcOpen\" erzeugt wurde.\r\n\r\nDer Parameter \"Modusteil\" kann zur Filterung der Daten innerhalb des Containers verwendet werden. \r\nMit Modusteil gleich \"\" werden alle Tabellen mit dem Modus \"P\" im ZDC ausgewertet.\r\n\r\nDer Baustein liefert mit dem Parameter \"ProgL_String\" die Programmierdaten im DSA internen Austauschformat\r\nf\xFCr die Bausteine:\r\n- CodefileProgrammLang_KWP2000\r\n- CodefileProgrammLang_KWP1281\r\n- CodefileProgrammLang_KWP2000_1_03\r\nAchtung:\r\nHier wird das 'neue' (lange) DSA interne Austauschformat f\xFCr Programmierdaten verwendet. \r\n\r\nDer Baustein berechnet nur die Programmierdaten. Das Schreiben der Programmierdaten erfolgt nicht \r\ndurch diesen Baustein!";"";}
        Rights{"Write";"Read";}
        VersionInfo{}
        Class{"ZdcProgrammierungL";}}
       FunctionDef{
        Name{"ErrDebugInfoStr.9871";}
        LangName{"ErrDebugInfoStr.9871";"ErrDebugInfoStr.9871";}
        Type{2;}
        Icon{2;}
        Properties{}
        ActualParam{"CNullPosition";"Symbol";"Gateway_ProgL_String";"Symbol";"ConstVar48957";"Const";}
        Condition{"ever";"ok";"";}
        Evaluation{"no";"never";
         ActionCond{"";}}
        Extra{"teststep";}
        NodeCategory{"";}
        Info{"Debug-Ausgabe einer Zeichenkette";"Debug-Ausgabe einer Zeichenkette";}
        Rights{"Write";"Read";}
        VersionInfo{
         CurVersion{0;1;"cp32";}
         Version{0;1;"cp32";"- in Arbeit -";"admin";"26.02.2013 13:01:42";}}
        Class{"ErrDebugInfoStr";}}
       FunctionDef{
        Name{"ErrDebugInfoStr.9872";}
        LangName{"ErrDebugInfoStr.9872";"ErrDebugInfoStr.9872";}
        Type{2;}
        Icon{2;}
        Properties{}
        ActualParam{"CNullPosition";"Symbol";"Gateway_ZDC_Calibration_String";"Symbol";"ConstVar44468";"Const";}
        Condition{"ever";"ok";"";}
        Evaluation{"no";"never";
         ActionCond{"";}}
        Extra{"teststep";}
        NodeCategory{"";}
        Info{"Debug-Ausgabe einer Zeichenkette";"Debug-Ausgabe einer Zeichenkette";}
        Rights{"Write";"Read";}
        VersionInfo{}
        Class{"ErrDebugInfoStr";}}}
      FunctionDef{
       Name{"Neu.9874";}
       LangName{"ZDC_schliessen.9874";"ZDC_Close.9874";}
       Type{2;}
       Icon{0;}
       Properties{}
       ActualParam{}
       Condition{"ever";"ok";"";}
       Evaluation{"direct";"never";
        ActionCond{"";}}
       Extra{"teststep";}
       NodeCategory{"";}
       Info{"Strukturbaustein";"";}
       Rights{"Write";"Read";}
       VersionInfo{}
       Class{"Neu_309535";}
       FunctionDef{
        Name{"ZdcClose.9875";}
        LangName{"ZdcClose.9875";"ZdcClose.9875";}
        Type{2;}
        Icon{0;}
        Properties{}
        ActualParam{"DZdcHndl";"Symbol";}
        Condition{"ever";"ok";"";}
        Evaluation{"direct";"never";
         ActionCond{"";}}
        Extra{"teststep";}
        NodeCategory{"";}
        Info{"Baustein schlie\xDFt einen Zieldaten-Container (ZDC) in der Version 2.02, der zuvor mit dem Baustein \r\n\"ZdcOpen\" ge\xF6ffnet wurde.";"";}
        Rights{"Write";"Read";}
        VersionInfo{}
        Class{"ZdcClose_309563";}}}}}
    FunctionDef{
     Name{"ECU_communication_start.9876";}
     LangName{"ECU_communication_start.9876";"ECU_communication_start.9876";}
     Type{2;}
     Icon{0;}
     Properties{}
     ActualParam{}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"break";
      ActionCond{"";"nok";}}
     Extra{"teststep";}
     NodeCategory{"";}
     Info{"";"";}
     Rights{"Write";"Read";}
     VersionInfo{}
     Class{"Neu_309535";}
     FunctionDef{
      Name{"VW_STG_Verbindung_Param.9877";}
      LangName{"VW_STG_Verbindung_Param.9877";"VW_ECU_Connection_Param.9877";}
      Type{2;}
      Icon{1;}
      Properties{}
      ActualParam{"VCIKanal1";"Symbol";"DIALOG_LOKAL";"Symbol";"CDialogZeile1";"Symbol";"VCI_Typ_VCI5";"Symbol";"Prokoll_KWP2000_TP20";"Symbol";"ECU_Gateway";"Symbol";"CTimeout_00010";"Symbol";"ConstVar25928";"Const";"SemaCanTP20";"Symbol";}
      Condition{"ever";"ok";"";}
      Evaluation{"direct";"never";
       ActionCond{"";}}
      Extra{"resultblock";"2419";"";"CStatKommunikationGateway_24355";"\"\"";"\"\"";"";0;"";"";"\"\"";"SN";"";}
      NodeCategory{"";}
      Info{"VW_STG_Verbindung\r\n\r\nBaustein zum Oeffnen eines Steuergeraetekanals auf K- oder CAN-Leitung \r\n\r\nDieser Baustein liest eine Standard-Konfiguration zur STG-Kommunikation ein. Danach werden alle notwendigen Parameter\r\n in diesem Init-Datensatz ueberschrieben und der Kanal geoeffnet.\r\nAusserdem wird der Debug-Level fuer die VCI-Kommunikation gesetzt und fuer die Kommunikation TP2.0 auf VCI2,4,6 der\r\nParameter zur Entkopplung des Oeffnen des CAN-Kanals gegeben..\r\n\r\nDieser Baustein mu\xDF vor Verwendung aller anderen VCI-Funktionen ausgef\xFChrt werden.\r\n\r\nParameter:\r\n\r\nSTG_Hndl: das VCI-Handle, das geoeffnet wird.\r\nDLG_Hndl: das Dialog-Handle, das geoeffnet wird.\r\nZeile: die ZeilenNr fuer die Ausgabe (<1 keine Ausgabe)\r\nVCI_Type: der in dem Geraet eingesetzter VCI-Typ  (VCI_Type = 0 : VCI4; VCI_Type = 1 : VCI5)\r\nProtokoll: das verwendete Protokoll fuer die VCI-Kommuniktion\r\nSteuergeraet: der Steuergeraete der Kommunikation\r\nTimeout: die Zeit, welche fuer das Anreizen verwendet wird\r\nLevel: Debuglevel der VCI-Kommunikation\r\nParHndl: Handel zum Enttkoppeln des gleichzeitigen Anreizens\r\n\r\n04.07.06 sz - Aenderung der Wartezeit bei der Parallel-Verriegelung vor das VCI-Init \r\n03.11.06 sz - Erweiterung bei nicht geschlossenem Handle, _vciAdapt (ab msl version 4!!)";"";}
      Rights{"Write";"Read";}
      VersionInfo{}
      Class{"VW_STG_Verbindung_Param";}}}
    FunctionDef{
     Name{"ZDC_Processing_for_Anpassung.9878";}
     LangName{"ZDC_Processing_for_Anpassung.9878";"ZDC_Processing_for_Anpassung.9878";}
     Type{2;}
     Icon{0;}
     Properties{}
     ActualParam{}
     Condition{"ever";"progcond";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     NodeCategory{"";}
     Info{"Import-Ablage\r\n";"";}
     Rights{"Write";"Read";}
     VersionInfo{}
     Class{"Neu_309535";}
     FunctionDef{
      Name{"ZDC_Open.9879";}
      LangName{"ZDC_Open.9879";"ZDC_Open.9879";}
      Type{2;}
      Icon{0;}
      Properties{}
      ActualParam{}
      Condition{"ever";"ok";"";}
      Evaluation{"direct";"never";
       ActionCond{"";}}
      Extra{"teststep";}
      NodeCategory{"";}
      Info{"Strukturbaustein";"";}
      Rights{"Write";"Read";}
      VersionInfo{}
      Class{"Neu_309535";}
      FunctionDef{
       Name{"ZdcOpen.9880";}
       LangName{"ZdcOpen.9880";"ZdcOpen.9880";}
       Type{2;}
       Icon{0;}
       Properties{}
       ActualParam{"DZdcHndl";"Symbol";"Gateway_Container_Name";"Symbol";"Gateway_Container_Version";"Symbol";"CInt_DebugLevel_06";"Symbol";}
       Condition{"ever";"ok";"";}
       Evaluation{"direct";"never";
        ActionCond{"";}}
       Extra{"teststep";}
       NodeCategory{"";}
       Info{"Baustein oeffnet einen Zieldaten-Container (ZDC) in der Version 2.02.\r\n\r\nNach erfolgreichem Aufruf wird das uebergebene Handle mit einem gueltigen Wert (Wert >= 0) gesetzt.\r\nAndernfalls wird der Parameter \"ZdcHndl\" auf -1 gesetzt.\r\n\r\nDer Baustein steht in engem Zusammenhang mit dem Baustein \"VW_Codefile_STG_9_2_0\", der die\r\nEingangsparameter \"XmlContainer\" und \"XmlVersion\" fuer diesem Baustein liefert.\r\n";"";}
       Rights{"Write";"Read";}
       VersionInfo{}
       Class{"ZdcOpen_309552";}}
      FunctionDef{
       Name{"ErrDebugInfoStr.9881";}
       LangName{"ErrDebugInfoStr.9881";"ErrDebugInfoStr.9881";}
       Type{2;}
       Icon{2;}
       Properties{}
       ActualParam{"CNullPosition";"Symbol";"Gateway_Container_Name";"Symbol";"ConstVar44293";"Const";}
       Condition{"ever";"ok";"";}
       Evaluation{"no";"never";
        ActionCond{"";}}
       Extra{"teststep";}
       NodeCategory{"";}
       Info{"Debug-Ausgabe einer Zeichenkette";"Debug-Ausgabe einer Zeichenkette";}
       Rights{"Write";"Read";}
       VersionInfo{}
       Class{"ErrDebugInfoStr";}}
      FunctionDef{
       Name{"ErrDebugInfoStr.9882";}
       LangName{"ErrDebugInfoStr.9882";"ErrDebugInfoStr.9882";}
       Type{2;}
       Icon{2;}
       Properties{}
       ActualParam{"CNullPosition";"Symbol";"Gateway_Container_Version";"Symbol";"ConstVar44294";"Const";}
       Condition{"ever";"ok";"";}
       Evaluation{"no";"never";
        ActionCond{"";}}
       Extra{"teststep";}
       NodeCategory{"";}
       Info{"Debug-Ausgabe einer Zeichenkette";"Debug-Ausgabe einer Zeichenkette";}
       Rights{"Write";"Read";}
       VersionInfo{}
       Class{"ErrDebugInfoStr";}}}
     FunctionDef{
      Name{"ZDC_Config_data.9883";}
      LangName{"ZDC_Config_data.9883";"ZDC_Config_data.9883";}
      Type{2;}
      Icon{0;}
      Properties{}
      ActualParam{}
      Condition{"ever";"ok";"";}
      Evaluation{"direct";"never";
       ActionCond{"";}}
      Extra{"teststep";}
      NodeCategory{"";}
      Info{"Strukturbaustein";"";}
      Rights{"Write";"Read";}
      VersionInfo{}
      Class{"Neu_309535";}
      FunctionDef{
       Name{"Zdc203Anpassung_uf.9884";}
       LangName{"Zdc203Anpassung_uf.9884";"Zdc203Anpassung_uf.9884";}
       Type{2;}
       Icon{0;}
       Properties{}
       ActualParam{"VCIKanal1";"Symbol";"DIALOG_LOKAL";"Symbol";"CDialog_Keine_Anzeige";"Symbol";"CTextCodefileAuswahl";"Symbol";"DZdcHndl";"Symbol";"CZDCModusAll";"Symbol";"Gateway_Adaptation_String";"Symbol";}
       Condition{"ever";"ok";"";}
       Evaluation{"direct";"never";
        ActionCond{"";}}
       Extra{"resultblock";"2847";"";"";"\"\"";"\"\"";"";0;"";"";"\"\"";"SN";"";}
       NodeCategory{"";}
       Info{"Dieser Baustein berechnet die Anpassdaten nach dem Zieldatencontainer (ZDC) V 2.03. (S)\r\nZieldatencontainer der Version 2.02 k\xF6nnen mit diesem Baustein auch verarbeitet werden.\r\nEs gibt dann keine \"Lange Anpassung\".\r\n\r\nAls Parameter muss das \"ZdcHndl\" \xFCbergeben werden, dass mit dem Baustein \"ZdcOpen\" erzeugt wurde.\r\n\r\nDer Parameter \"Modusteil\" kann zur Filterung der Daten innerhalb des Containers verwendet werden. \r\nMit Modusteil gleich \"\" werden alle Tabellen mit dem Modus \"A\" im ZDC ausgewertet.\r\n\r\nDer Baustein liefert mit dem Parameter \"Anpassung_String\" die Anpassdaten im folgenden Format:\r\n\r\n4 Byte: Anzahl Anpassungen;\r\n    4 Byte: 1. Anpassungs-Kanal;\r\n    4 Byte: 1. Laenge n der einzelnen Anpassung; \r\n    n Byte: 1. Anpassungswert;\r\n\r\n    4 Byte: 2. Anpassungs-Kanal;\r\n    4 Byte: 2. Laenge m der einzelnen Anpassung; \r\n    m Byte: 2. Anpassungswert; ...\r\n\r\n\r\nBeispiel:\r\n\"\\h000000020000000100000002abcd00000005000000a00102030405060708090a\"\r\nAnzahl Anpassungen: 2\r\nKanal: 1 kurze Anpassung: 43981 (int)\r\nKanal: 5 lange Anpassung: 0102030405060708090A\r\n\r\nDer Baustein berechnet nur die Anpassdaten. Das Schreiben der Daten erfolgt nicht durch diesen Baustein!\r\n\r\n20.01.06, sr: erstellt\r\nkm, 28.10.09 f\xFCr die Auswahl der verwendeten Anpassung (kurze oder lange) wird die unterst\xFCtzte Funktion ausgelesen\r\nsz, 13.01.10 bei kurzer Anpassung f\xFCr SG mit langer Anpassung: Sonderbehandlung 1 Byte L\xE4nge";"";}
       Rights{"Write";"Read";}
       VersionInfo{}
       Class{"Zdc203Anpassung_uf";}}
      FunctionDef{
       Name{"ErrDebugInfoStr.9885";}
       LangName{"ErrDebugInfoStr.9885";"ErrDebugInfoStr.9885";}
       Type{2;}
       Icon{2;}
       Properties{}
       ActualParam{"CNullPosition";"Symbol";"Gateway_Adaptation_String";"Symbol";"ConstVar44467";"Const";}
       Condition{"ever";"ok";"";}
       Evaluation{"no";"never";
        ActionCond{"";}}
       Extra{"teststep";}
       NodeCategory{"";}
       Info{"Debug-Ausgabe einer Zeichenkette";"Debug-Ausgabe einer Zeichenkette";}
       Rights{"Write";"Read";}
       VersionInfo{}
       Class{"ErrDebugInfoStr";}}}
     FunctionDef{
      Name{"Neu.9937";}
      LangName{"ZDC_schliessen.9937";"ZDC_Close.9937";}
      Type{2;}
      Icon{0;}
      Properties{}
      ActualParam{}
      Condition{"ever";"ok";"";}
      Evaluation{"direct";"never";
       ActionCond{"";}}
      Extra{"teststep";}
      NodeCategory{"";}
      Info{"Strukturbaustein";"";}
      Rights{"Write";"Read";}
      VersionInfo{}
      Class{"Neu_309535";}
      FunctionDef{
       Name{"ZdcClose.9938";}
       LangName{"ZdcClose.9938";"ZdcClose.9938";}
       Type{2;}
       Icon{0;}
       Properties{}
       ActualParam{"DZdcHndl";"Symbol";}
       Condition{"ever";"ok";"";}
       Evaluation{"direct";"never";
        ActionCond{"";}}
       Extra{"teststep";}
       NodeCategory{"";}
       Info{"Baustein schlie\xDFt einen Zieldaten-Container (ZDC) in der Version 2.02, der zuvor mit dem Baustein \r\n\"ZdcOpen\" ge\xF6ffnet wurde.";"";}
       Rights{"Write";"Read";}
       VersionInfo{}
       Class{"ZdcClose_309563";}}}}
    FunctionDef{
     Name{"Neu.9939";}
     LangName{"ID_Check.9939";"ID_Check.9939";}
     Type{2;}
     Icon{0;}
     Properties{}
     ActualParam{}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"break";
      ActionCond{"";"nok";}}
     Extra{"teststep";}
     NodeCategory{"";}
     Info{"Strukturelement";"This branch of the library is used for temporary files from\r\nnew or imported library modules. It is a pure structuring\r\nlevel.";}
     Rights{"Write";"Read";}
     VersionInfo{}
     Class{"Neu_309535";}
     FunctionDef{
      Name{"Read_PartNo.9940";}
      LangName{"Read_PartNo.9940";"Read_PartNo.9940";}
      Type{2;}
      Icon{0;}
      Properties{}
      ActualParam{}
      Condition{"ever";"ok";"";}
      Evaluation{"direct";"break";
       ActionCond{"";"nok";}}
      Extra{"teststep";}
      NodeCategory{"";}
      Info{"Strukturelement";"structure element";}
      Rights{"Write";"Read";}
      VersionInfo{}
      Class{"Neu_309535";}
      FunctionDef{
       Name{"Read_ECU_Spare_PartNo.9941";}
       LangName{"Read_ECU_Spare_PartNo.9941";"Read_ECU_Spare_PartNo.9941";}
       Type{2;}
       Icon{0;}
       Properties{}
       ActualParam{}
       Condition{"ever";"ok";"";}
       Evaluation{"direct";"never";
        ActionCond{"";}}
       Extra{"teststep";}
       NodeCategory{"";}
       Info{"Strukturelement";"structure element";}
       Rights{"Write";"Read";}
       VersionInfo{}
       Class{"Neu_309535";}
       FunctionDef{
        Name{"VW2000_ReadDataByLocalId_ASCII_String.9942";}
        LangName{"VW2000_ReadDataByLocalId_ASCII_String.9942";"VW2000_ReadDataByLocalId_ASCII_String.9942";}
        Type{2;}
        Icon{1;}
        Properties{}
        ActualParam{"VCIKanal1";"Symbol";"CLID_VW_SparePartNumber";"Symbol";"DStr_Gateway_Spare_PartNo";"Symbol";"DLID";"Symbol";}
        Condition{"ever";"ok";"";}
        Evaluation{"direct";"never";
         ActionCond{"";}}
        Extra{"teststep";}
        NodeCategory{"";}
        Info{"SG-Identifikation mit Service 0x22; \r\nmit Local Identifier (LID), der im Parameter LID uebergeben wird.:\r\nEs wird ueberprueft, ob die Diagnosefunktion unterstuetzt wird, dann wird der Service ausgefuehrt.\r\nDer Parameter RecvTel liefert den kompletten Wert der STG-Antwort zur\xFCck und\r\nder Parameter ASCII_String den eigentlichen gelesenen Wert.\r\nDer Baustein liefert ein OK wenn die LID gelesen werden konnte.\r\nDer Baustein liefert ein ABBR wenn die Diagnosefunktion nicht unterst\xFCtzt wird.\r\nDer Baustein liefert ein NOK wenn die LID nicht gelesen werden konnte.\r\n\r\njk, 29.12.05";"Modul reads the ECU Id by using the KWP2000-Comand ReadByIdentifier (Requesttitel 0x22) \r\nthe RID will be given in the parameter LID.\r\nIt will be testet if the service is supported, than the service will be executed.\r\nThe parameter ID_String contains the ECU answer without the LID. Length n Byte (see spec.)\r\nThe evaluatin of the module will be OK if the reading of the RID was OK.\r\n\r\nsz, 31.05.05";}
        Rights{"Write";"Read";}
        VersionInfo{}
        Class{"VW2000_ReadDataByLocalId_ASCII_String";}}
       FunctionDef{
        Name{"ErrDebugInfoStr.9943";}
        LangName{"ErrDebugInfoStr.9943";"ErrDebugInfoStr.9943";}
        Type{2;}
        Icon{2;}
        Properties{}
        ActualParam{"CNullPosition";"Symbol";"DStr_Gateway_Spare_PartNo";"Symbol";"ConstVar44303";"Const";}
        Condition{"ever";"ok";"";}
        Evaluation{"no";"never";
         ActionCond{"";}}
        Extra{"teststep";}
        NodeCategory{"";}
        Info{"Debug-Ausgabe einer Zeichenkette";"Debug-Ausgabe einer Zeichenkette";}
        Rights{"Write";"Read";}
        VersionInfo{}
        Class{"ErrDebugInfoStr";}}
       FunctionDef{
        Name{"Validate_PartNo.9944";}
        LangName{"Validate_PartNo.9944";"Validate_PartNo.9944";}
        Type{2;}
        Icon{0;}
        Properties{}
        ActualParam{}
        Condition{"ever";"ok";"";}
        Evaluation{"direct";"never";
         ActionCond{"";"nok";}}
        Extra{"teststep";}
        NodeCategory{"";}
        Info{"Import-Ablage\r\n";"";}
        Rights{"Write";"Read";}
        VersionInfo{}
        Class{"Neu_309535";}
        FunctionDef{
         Name{"StringAdd.9945";}
         LangName{"StringAdd.9945";"StringAdd.9945";}
         Type{2;}
         Icon{0;}
         Properties{}
         ActualParam{"DStr_Gateway_Spare_PartNo";"Symbol";"ConstVar44786";"Const";"DVWSparePartNumber";"Symbol";}
         Condition{"ever";"ok";"";}
         Evaluation{"direct";"never";
          ActionCond{"";}}
         Extra{"teststep";}
         NodeCategory{"";}
         Info{"Baustein zur Verkettung von Zeichenketten.\r\n\r\nDestString = String1 + String2";"Component for the linking of strings.\r\n\r\nDestString = String1 + String2\r\n";}
         Rights{"Write";"Read";}
         VersionInfo{}
         Class{"StringAdd";}}
        FunctionDef{
         Name{"ZdcFtnCheck.9946";}
         LangName{"ZdcFtnCheck.9946";"ZdcFtnCheck.9946";}
         Type{2;}
         Icon{0;}
         Properties{}
         ActualParam{"Gateway_ID_Expression_Result";"Symbol";"DVWSparePartNumber";"Symbol";}
         Condition{"ever";"ok";"";}
         Evaluation{"direct";"never";
          ActionCond{"";}}
         Extra{"resultblock";"2422";"";"CStatTeilenummerGateway";"\"\"";"\"\"";"";0;"";"";"\"\"";"SN";"";}
         NodeCategory{"";}
         Info{"Baustein zur Bewertung eines logischen VW-LAS Ausdrucks (s).\r\n\r\nMit dem Parameter \"ID_Expression\" wird der logische Ausdruck \xFCbergeben.\r\nDieser Wert wird mit dem Baustein \"VW_Codefile_STG_9_2_0\" geliefert.\r\n\r\nMit dem Parameter \"ID_Result\" wird der ID-String oder die Verkettung von ID-Strings \xFCbergeben.\r\nDie ID's m\xFCssen jeweils genau 12 Zeichen lang sein.\r\n\r\nDer Baustein liefert OK zur\xFCck, wenn der logische Ausdruck durch die ID's im Parameter \"ID_Result\" wahr wird, \r\nandernfalls NOK.\r\n\r\n\r\n";"";}
         Rights{"Write";"Read";}
         VersionInfo{}
         Class{"ZdcFtnCheck_309573";}}}}
      FunctionDef{
       Name{"Read_ECU_HW_Ref_PartNo.9947";}
       LangName{"Read_ECU_HW_Ref_PartNo.9947";"Read_ECU_HW_Ref_PartNo.9947";}
       Type{2;}
       Icon{0;}
       Properties{}
       ActualParam{}
       Condition{"Never";"ever";"ok";"";}
       Evaluation{"direct";"never";
        ActionCond{"";}}
       Extra{"teststep";}
       NodeCategory{"";}
       Info{"Strukturelement";"structure element";}
       Rights{"Write";"Read";}
       VersionInfo{}
       Class{"Neu_309535";}
       FunctionDef{
        Name{"VW2000_ReadDataByLocalId_ASCII_String.9948";}
        LangName{"VW2000_ReadDataByLocalId_ASCII_String.9948";"VW2000_ReadDataByLocalId_ASCII_String.9948";}
        Type{2;}
        Icon{1;}
        Properties{}
        ActualParam{"VCIKanal1";"Symbol";"CLID_VW_HW_Ref_PartNo";"Symbol";"DStr_Gateway_HW_Ref_PartNo";"Symbol";"DLID";"Symbol";}
        Condition{"ever";"ok";"";}
        Evaluation{"direct";"never";
         ActionCond{"";}}
        Extra{"resultblock";"4195";"";"CStat_HW_Ref_PartNo_Gateway_init";"\"\"";"\"\"";"";0;"";"";"\"\"";"SN";"";}
        NodeCategory{"";}
        Info{"SG-Identifikation mit Service 0x22; \r\nmit Local Identifier (LID), der im Parameter LID uebergeben wird.:\r\nEs wird ueberprueft, ob die Diagnosefunktion unterstuetzt wird, dann wird der Service ausgefuehrt.\r\nDer Parameter RecvTel liefert den kompletten Wert der STG-Antwort zur\xFCck und\r\nder Parameter ASCII_String den eigentlichen gelesenen Wert.\r\nDer Baustein liefert ein OK wenn die LID gelesen werden konnte.\r\nDer Baustein liefert ein ABBR wenn die Diagnosefunktion nicht unterst\xFCtzt wird.\r\nDer Baustein liefert ein NOK wenn die LID nicht gelesen werden konnte.\r\n\r\njk, 29.12.05";"Modul reads the ECU Id by using the KWP2000-Comand ReadByIdentifier (Requesttitel 0x22) \r\nthe RID will be given in the parameter LID.\r\nIt will be testet if the service is supported, than the service will be executed.\r\nThe parameter ID_String contains the ECU answer without the LID. Length n Byte (see spec.)\r\nThe evaluatin of the module will be OK if the reading of the RID was OK.\r\n\r\nsz, 31.05.05";}
        Rights{"Write";"Read";}
        VersionInfo{}
        Class{"VW2000_ReadDataByLocalId_ASCII_String";}}
       FunctionDef{
        Name{"ErrDebugInfoStr.9949";}
        LangName{"ErrDebugInfoStr.9949";"ErrDebugInfoStr.9949";}
        Type{2;}
        Icon{2;}
        Properties{}
        ActualParam{"CNullPosition";"Symbol";"DStr_Gateway_HW_Ref_PartNo";"Symbol";"ConstVar44309";"Const";}
        Condition{"ever";"ok";"";}
        Evaluation{"no";"never";
         ActionCond{"";}}
        Extra{"teststep";}
        NodeCategory{"";}
        Info{"Debug-Ausgabe einer Zeichenkette";"Debug-Ausgabe einer Zeichenkette";}
        Rights{"Write";"Read";}
        VersionInfo{}
        Class{"ErrDebugInfoStr";}}}
      FunctionDef{
       Name{"Read_ECU_HW_Version.9950";}
       LangName{"Read_ECU_HW_Version.9950";"Read_ECU_HW_Version.9950";}
       Type{2;}
       Icon{0;}
       Properties{}
       ActualParam{}
       Condition{"Never";"ever";"ok";"";}
       Evaluation{"direct";"never";
        ActionCond{"";}}
       Extra{"teststep";}
       NodeCategory{"";}
       Info{"Strukturelement";"structure element";}
       Rights{"Write";"Read";}
       VersionInfo{}
       Class{"Neu_309535";}
       FunctionDef{
        Name{"VW2000_ReadDataByLocalId_ASCII_String.9951";}
        LangName{"VW2000_ReadDataByLocalId_ASCII_String.9951";"VW2000_ReadDataByLocalId_ASCII_String.9951";}
        Type{2;}
        Icon{1;}
        Properties{}
        ActualParam{"VCIKanal1";"Symbol";"CLID_VW_HW_Version_Number";"Symbol";"DStr_Gateway_HW_Version";"Symbol";"DLID";"Symbol";}
        Condition{"ever";"ok";"";}
        Evaluation{"direct";"never";
         ActionCond{"";}}
        Extra{"teststep";}
        NodeCategory{"";}
        Info{"SG-Identifikation mit Service 0x22; \r\nmit Local Identifier (LID), der im Parameter LID uebergeben wird.:\r\nEs wird ueberprueft, ob die Diagnosefunktion unterstuetzt wird, dann wird der Service ausgefuehrt.\r\nDer Parameter RecvTel liefert den kompletten Wert der STG-Antwort zur\xFCck und\r\nder Parameter ASCII_String den eigentlichen gelesenen Wert.\r\nDer Baustein liefert ein OK wenn die LID gelesen werden konnte.\r\nDer Baustein liefert ein ABBR wenn die Diagnosefunktion nicht unterst\xFCtzt wird.\r\nDer Baustein liefert ein NOK wenn die LID nicht gelesen werden konnte.\r\n\r\njk, 29.12.05";"Modul reads the ECU Id by using the KWP2000-Comand ReadByIdentifier (Requesttitel 0x22) \r\nthe RID will be given in the parameter LID.\r\nIt will be testet if the service is supported, than the service will be executed.\r\nThe parameter ID_String contains the ECU answer without the LID. Length n Byte (see spec.)\r\nThe evaluatin of the module will be OK if the reading of the RID was OK.\r\n\r\nsz, 31.05.05";}
        Rights{"Write";"Read";}
        VersionInfo{}
        Class{"VW2000_ReadDataByLocalId_ASCII_String";}}
       FunctionDef{
        Name{"ErrDebugInfoStr.9952";}
        LangName{"ErrDebugInfoStr.9952";"ErrDebugInfoStr.9952";}
        Type{2;}
        Icon{2;}
        Properties{}
        ActualParam{"CNullPosition";"Symbol";"DStr_Gateway_HW_Version";"Symbol";"ConstVar44312";"Const";}
        Condition{"ever";"ok";"";}
        Evaluation{"no";"never";
         ActionCond{"";}}
        Extra{"teststep";}
        NodeCategory{"";}
        Info{"Debug-Ausgabe einer Zeichenkette";"Debug-Ausgabe einer Zeichenkette";}
        Rights{"Write";"Read";}
        VersionInfo{}
        Class{"ErrDebugInfoStr";}}}
      FunctionDef{
       Name{"Read_ECU_SW_Version.9953";}
       LangName{"Read_ECU_SW_Version.9953";"Read_ECU_SW_Version.9953";}
       Type{2;}
       Icon{0;}
       Properties{}
       ActualParam{}
       Condition{"ever";"ok";"";}
       Evaluation{"direct";"never";
        ActionCond{"";}}
       Extra{"teststep";}
       NodeCategory{"";}
       Info{"Strukturelement";"structure element";}
       Rights{"Write";"Read";}
       VersionInfo{}
       Class{"Neu_309535";}
       FunctionDef{
        Name{"VW2000_ReadDataByLocalId_ASCII_String.9954";}
        LangName{"VW2000_ReadDataByLocalId_ASCII_String.9954";"VW2000_ReadDataByLocalId_ASCII_String.9954";}
        Type{2;}
        Icon{1;}
        Properties{}
        ActualParam{"VCIKanal1";"Symbol";"CLID_VW_SW_Version_Number";"Symbol";"DStr_Gateway_SW_Version";"Symbol";"DLID";"Symbol";}
        Condition{"ever";"ok";"";}
        Evaluation{"direct";"never";
         ActionCond{"";}}
        Extra{"teststep";}
        NodeCategory{"";}
        Info{"SG-Identifikation mit Service 0x22; \r\nmit Local Identifier (LID), der im Parameter LID uebergeben wird.:\r\nEs wird ueberprueft, ob die Diagnosefunktion unterstuetzt wird, dann wird der Service ausgefuehrt.\r\nDer Parameter RecvTel liefert den kompletten Wert der STG-Antwort zur\xFCck und\r\nder Parameter ASCII_String den eigentlichen gelesenen Wert.\r\nDer Baustein liefert ein OK wenn die LID gelesen werden konnte.\r\nDer Baustein liefert ein ABBR wenn die Diagnosefunktion nicht unterst\xFCtzt wird.\r\nDer Baustein liefert ein NOK wenn die LID nicht gelesen werden konnte.\r\n\r\njk, 29.12.05";"Modul reads the ECU Id by using the KWP2000-Comand ReadByIdentifier (Requesttitel 0x22) \r\nthe RID will be given in the parameter LID.\r\nIt will be testet if the service is supported, than the service will be executed.\r\nThe parameter ID_String contains the ECU answer without the LID. Length n Byte (see spec.)\r\nThe evaluatin of the module will be OK if the reading of the RID was OK.\r\n\r\nsz, 31.05.05";}
        Rights{"Write";"Read";}
        VersionInfo{}
        Class{"VW2000_ReadDataByLocalId_ASCII_String";}}
       FunctionDef{
        Name{"ErrDebugInfoStr.9955";}
        LangName{"ErrDebugInfoStr.9955";"ErrDebugInfoStr.9955";}
        Type{2;}
        Icon{2;}
        Properties{}
        ActualParam{"CNullPosition";"Symbol";"DStr_Gateway_SW_Version";"Symbol";"ConstVar44315";"Const";}
        Condition{"ever";"ok";"";}
        Evaluation{"no";"never";
         ActionCond{"";}}
        Extra{"teststep";}
        NodeCategory{"";}
        Info{"Debug-Ausgabe einer Zeichenkette";"Debug-Ausgabe einer Zeichenkette";}
        Rights{"Write";"Read";}
        VersionInfo{}
        Class{"ErrDebugInfoStr";}}}
      FunctionDef{
       Name{"StatisticRecord.9956";}
       LangName{"StatisticRecord.9956";"StatisticRecord.9956";}
       Type{2;}
       Icon{0;}
       Properties{}
       ActualParam{}
       Condition{"ever";"ok";"";}
       Evaluation{"direct";"never";
        ActionCond{"";}}
       Extra{"teststep";}
       NodeCategory{"";}
       Info{"Strukturelement";"structure element";}
       Rights{"Write";"Read";}
       VersionInfo{}
       Class{"Neu_309535";}
       FunctionDef{
        Name{"StatistikText_HW_Version.9957";}
        LangName{"StatistikText_HW_Version.9957";"StatisticText_HW_Version.9957";}
        Type{2;}
        Icon{4;}
        Properties{}
        ActualParam{"DStr_Gateway_HW_Version";"Symbol";}
        Condition{"Never";"ever";"ok";"";}
        Evaluation{"direct";"never";
         ActionCond{"";}}
        Extra{"resultblock";"4196";"";"CStat_HW_Version_Gateway_init";"\"\"";"\"\"";"";0;"";"";"\"\"";"SN";"";}
        NodeCategory{"";}
        Info{"";"Schreibt einen text in die Statistik.\r\nDie Bewertung dieses Statistikeintrages haengt von dem zuvor erzeugten Error ab. \r\nBei err == NOK - NOK Statistik.";}
        Rights{"Write";"Read";}
        VersionInfo{}
        Class{"StatistikText_NOK";}}
       FunctionDef{
        Name{"StatistikText_SW_Version.9958";}
        LangName{"StatistikText_SW_Version.9958";"StatisticText_SW_Version.9958";}
        Type{2;}
        Icon{4;}
        Properties{}
        ActualParam{"DStr_Gateway_SW_Version";"Symbol";}
        Condition{"ever";"ok";"";}
        Evaluation{"direct";"never";
         ActionCond{"";}}
        Extra{"resultblock";"3713";"";"CStatTxtVersGateway";"\"\"";"\"\"";"";0;"";"";"\"A1\"";"SN";"";}
        NodeCategory{"";}
        Info{"";"Schreibt einen text in die Statistik.\r\nDie Bewertung dieses Statistikeintrages haengt von dem zuvor erzeugten Error ab. \r\nBei err == NOK - NOK Statistik.";}
        Rights{"Write";"Read";}
        VersionInfo{}
        Class{"StatistikText_NOK";}}
       FunctionDef{
        Name{"SVW_String_Softwareversion.9959";}
        LangName{"SVW_String_Softwareversion.9959";"SVW_String_Softwareversion.9959";}
        Type{2;}
        Icon{1;}
        Properties{}
        ActualParam{"CIniFile_Software_sk316";"Symbol";"DVWSparePartNumber";"Symbol";"DStr_Gateway_SW_Version";"Symbol";}
        Condition{"ever";"ok";"";}
        Evaluation{"direct";"never";
         ActionCond{"";}}
        Extra{"resultblock";"3713";"";"CStatTxtVersGateway";"\"\"";"\"\"";"";0;"";"";"\"A1\"";"SN";"";}
        NodeCategory{"";}
        Info{"Modul lie\xDFt nicht die Steuerger\xE4te-Identifikation aus dem Steuerger\xE4t, sondern nutzt die durch\r\nden VW-Dienst VW2000_ID_Lesen in der Variablen ID-String abgespeicherten Identifiktion.\r\n\r\nVergleicht Softwareversion aus SG-Identifikation mit gepflegter Softwareversion in einer \r\nINI-Datei. Referenzierung \xFCber 9-stellige Teilenummer des SG.\r\n\r\n\r\nAufbau INI-Datei\r\n[Version]\r\nTeilenummer=Softwareversionsarray (jeweils 4 Stellen )\r\n03D676453 =1020,1021\r\n03D676454 =1133\r\n";"";}
        Rights{"Write";"Read";}
        VersionInfo{
         CurVersion{0;1;"cp32";}
         Version{0;1;"cp32";"- in Arbeit -";"admin";"06.11.2012 13:25:50";}}
        Class{"SVW_String_Softwareversion";}}}}}
    FunctionDef{
     Name{"Write_Configuration.9960";}
     LangName{"Write_Configuration.9960";"Write_Configuration.9960";}
     Type{2;}
     Icon{0;}
     Properties{}
     ActualParam{}
     Condition{"ever";"progcond";"DIntCorrect_CM_Fitted == 0";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     NodeCategory{"";}
     Info{"Strukturelement";"structure element";}
     Rights{"Write";"Read";}
     VersionInfo{}
     Class{"Neu_309535";}
     FunctionDef{
      Name{"VW2000_Write_Kalibrierung.9961";}
      LangName{"VW2000_Write_Kalibrierung.9961";"VW2000_Write_Calibration.9961";}
      Type{2;}
      Icon{1;}
      Properties{}
      ActualParam{"DIALOG_LOKAL";"Symbol";"CDialogZeile1";"Symbol";"Gateway_ZDC_Calibration_String";"Symbol";"VCIKanal1";"Symbol";}
      Condition{"ever";"ok";"";}
      Evaluation{"direct";"never";
       ActionCond{"";}}
      Extra{"resultblock";"2424";"";"CStatCodierenGateway_24359";"\"\"";"\"\"";"";0;"";"";"\"\"";"SN";"";}
      NodeCategory{"";}
      Info{">>POFF.PDRS.U.MCDCom.01.08\r\n\r\nDieser Baustein schreibt die Konfigurationsdatendaten aus dem Parameter \"Konfig_String\" in ein KWP Steuerger\xE4t.\r\n\r\nIn \"Konfig_String\" werden die Konfigurationsdaten aus dem Baustein ZDC_KonfigurationL \xFCbergeben.\r\n\r\nDie Bewertung dieses Bausteines ist OK, wenn das Schreiben in Ordnung war.\r\n\r\nDer Baustein ist auf die Verarbeitung von 4Byte Adress- und L\xE4ngeninforationen ausgelegt.\r\n\r\nIn die Statistik wird ein Statustext geschrieben.\r\n\r\n\r\ndpp7pda - 19.02.09 Bastein f\xFCr KWP2000 Steuerger\xE4te angepasst\r\ndsi0pax - 23.05.07 Prototyp erstellt.\r\nsz - 24.05.07 Statistik angepasst. (Begrenzung auf 1,5kByte)";"";}
      Rights{"Write";"Read";}
      VersionInfo{}
      Class{"VW2000_Write_Kalibrierung";}}}
    FunctionDef{
     Name{"Anpassung.9962";}
     LangName{"Anpassung.9962";"Anpassung.9962";}
     Type{2;}
     Icon{0;}
     Properties{}
     ActualParam{}
     Condition{"when";"progcond";"Gateway_Adaptation_String != \"\"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     NodeCategory{"";}
     Info{"Strukturelement";"This branch of the library is used for temporary files from\r\nnew or imported library modules. It is a pure structuring\r\nlevel.";}
     Rights{"Write";"Read";}
     VersionInfo{}
     Class{"Neu";}
     FunctionDef{
      Name{"ErrDebugInfoStr.9963";}
      LangName{"ErrDebugInfoStr.9963";"ErrDebugInfoStr.9963";}
      Type{2;}
      Icon{2;}
      Properties{}
      ActualParam{"CNullPosition";"Symbol";"ConstVar25347";"Const";"ConstVar45254";"Const";}
      Condition{"ever";"ok";"";}
      Evaluation{"direct";"never";
       ActionCond{"";}}
      Extra{"teststep";}
      NodeCategory{"";}
      Info{"Debug-Ausgabe einer Zeichenkette";"";}
      Rights{"Write";"Read";}
      VersionInfo{}
      Class{"ErrDebugInfoStr";}}
     FunctionDef{
      Name{"CodefileLangeAnpassung_KWP2000_uf.9964";}
      LangName{"CodefileLangeAnpassung_KWP2000_uf.9964";"CodefileLangeAnpassung_KWP2000_uf.9964";}
      Type{2;}
      Icon{0;}
      Properties{}
      ActualParam{"DIALOG_LOKAL";"Symbol";"CDialogZeile1";"Symbol";"VCIKanal1";"Symbol";"Gateway_Adaptation_String";"Symbol";}
      Condition{"ever";"ok";"";}
      Evaluation{"direct";"never";
       ActionCond{"";}}
      Extra{"resultblock";"3231";"";"CStat_Anpassung";"\"\"";"\"\"";"";0;"";"";"\"\"";"SN";"";}
      NodeCategory{"";}
      Info{"Dieser Baustein schreibt die Anpassungsdaten aus dem Parameter \"Anpassung_String\" in ein \r\nSteuergeraet mit VW2000 Protokoll.\r\n\r\nIn \"Anpassung_String\" werden die Anpassungsdaten aus dem Codefile / ZDC uebergeben. \r\nEs werden \"normale\" Anpassungen (1 Byte Kanal, max. 2 Byte Wert) und / oder \"lange\" Anpassungen\r\n(1 Byte Kanal, max. 80 Byte Wert ) geschrieben.\r\n\r\nWegen der langen Anpassung wurde das Uebergabeformat von \"Anpassung_String\" erweitert:\r\n4 Byte: Anzahl Anpassungen; 4 Byte: 1. Anpassungs-Kanal; 4 Byte: 1. Laenge n der einzelnen Anpassung; \r\nn Byte: 1. Anpassungswert; 4 Byte: 2. Anpassungs-Kanal; 4 Byte: 2. Laenge m der einzelnen Anpassung; \r\nm Byte: 2. Anpassungswert; ...\r\n\r\nDas \"alte\" Format kann nach wie vor Verarbeitet werden.\r\n\r\nDie Bewertung dieses Bausteines ist OK, wenn das Schreiben der Daten in Ordnung war. \r\nDie Bewertung ist NOK, bei Datenanzahl = 0 oder wenn das Schreiben eines Kanals NOK war.\r\n\r\nIn die Statistik wird ein Statustext geschrieben.\r\n\r\n02.01.2006, sz: Erstellt\r\nkm, 28.10.09 f\xFCr die Auswahl der verwendeten Anpassung (kurze oder lange) wird die unterst\xFCtzte Funktion ausgelesen\r\nsz, 13.01.10 bei kurzer Anpassung f\xFCr SG mit langer Anpassung: Sonderbehandlung 1 Byte L\xE4nge";"";}
      Rights{"Write";"Read";}
      VersionInfo{}
      Class{"CodefileLangeAnpassung_KWP2000_uf";}}}
    FunctionDef{
     Name{"Program.9965";}
     LangName{"Program.9965";"Program.9965";}
     Type{2;}
     Icon{0;}
     Properties{}
     ActualParam{}
     Condition{"when";"progcond";"Gateway_ProgL_String != \"\"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     NodeCategory{"";}
     Info{"Strukturelement";"This branch of the library is used for temporary files from\r\nnew or imported library modules. It is a pure structuring\r\nlevel.";}
     Rights{"Write";"Read";}
     VersionInfo{
      CurVersion{0;1;"cp32";}
      Version{0;1;"cp32";"- in Arbeit -";"admin";"05.01.2013 16:14:44";}}
     Class{"Neu";}
     FunctionDef{
      Name{"VW2000_SeedKeyLevel2.9966";}
      LangName{"VW2000_SeedKeyLevel2.9966";"VW2000_SeedKeyLevel2.9966";}
      Type{2;}
      Icon{1;}
      Properties{}
      ActualParam{"VCIKanal1";"Symbol";"DIALOG_LOKAL";"Symbol";"CDialogZeile1";"Symbol";"ConstVar46819";"Const";}
      Condition{"ever";"ok";"";}
      Evaluation{"direct";"never";
       ActionCond{"";}}
      Extra{"resultblock";"4930";"";"";"\"\"";"\"\"";"";0;"";"";"\"\"";"SN";"";}
      NodeCategory{"";}
      Info{"Mit diesem Modul kann das Seed&Key Verfahren mit einem Steuerger\xE4t angewendet werden.\r\n(VAG-Tester Funktion 16)\r\n\r\nDer Login mu?in der Variable \"Login\" \xFCbergeben werden.\r\n\r\nDie Bewertung des Pr\xFCfschrittes ist immer \"OK\", wenn der Seed und der Key erfolgreich zum \r\nSteuerger\xE4t gesendet wurde.\r\n\r\nIn die Statistik wird der Login geschrieben.";"";}
      Rights{"Write";"Read";}
      VersionInfo{}
      Class{"VW2000_SeedKeyLevel2";}}
     FunctionDef{
      Name{"VW2000_StartDiagnosticSession.9967";}
      LangName{"VW2000_StartDiagnosticSession.9967";"VW2000_StartDiagnosticSession.9967";}
      Type{2;}
      Icon{1;}
      Properties{}
      ActualParam{"VCIKanal1";"Symbol";"DiagSession_EndOfLine";"Symbol";}
      Condition{"ever";"ok";"";}
      Evaluation{"direct";"never";
       ActionCond{"";}}
      Extra{"resultblock";"4041";"";"StatTxt_StartDiagSession";"\"\"";"\"\"";"";0;"";"";"\"\"";"SN";"";}
      NodeCategory{"";}
      Info{"Dieser Baustein startet eine definierte Diagnosesitzung in STG. Dadurch werden in der Regel bestimmte\r\nDiagnosebefehle zur Nutzung freigegeben.\r\nDabei wird der KWP2000-Befehl StartDiagnosticSession ( Blocktitel 0x10)\r\nmit dem Parameter \"Mode\"  verwendet.\r\nIn den meisten F\xE4llen ist vor der Verwendung dieses Befehls die Berechtigung mit Hilfe eines Login oder \r\ndurch das Seed and Key -Verfahren zu erlangen.\r\n\r\nDie Bewertung des Pr\xFCfschrittes ist immer OK, wenn der STG-Befehl erfolgreich ausgef\xFChrt werden konnte.\r\n\r\nIn die Statistik wird im OK-Fall nur die Bewertung des Pr\xFCfschrittes und im NOK-Fall\r\ndie die vollst\xE4ndige Antwort des STG gespeichert.";"";}
      Rights{"Write";"Read";}
      VersionInfo{}
      Class{"VW2000_StartDiagnosticSession";}}
     FunctionDef{
      Name{"GetFTC_Code.9968";}
      LangName{"GetFTC_Code.9968";"GetFTC_Code.9968";}
      Type{2;}
      Icon{0;}
      Properties{}
      ActualParam{"DString_FTC_Code";"Symbol";}
      Condition{"ever";"ok";"";}
      Evaluation{"direct";"never";
       ActionCond{"";}}
      Extra{"resultblock";"4932";"";"";"\"\"";"\"\"";"";0;"";"";"\"\"";"SN";"";}
      NodeCategory{"";}
      Info{"Baustein zum berechnen des FTC-Code.\r\n\r\nIn \"Result\" wird der berechnete Code aus Ger\xE4tenummer, Importeursnummer und WSC ausgegeben.";"";}
      Rights{"Write";"Read";}
      VersionInfo{}
      Class{"GetFTC_Code";}}
     FunctionDef{
      Name{"UDS_WriteDataByIdentifier.9969";}
      LangName{"UDS_WriteDataByIdentifier_Fingerprint.9969";"UDS_WriteDataByIdentifier.9969";}
      Type{2;}
      Icon{1;}
      Properties{}
      ActualParam{"VCIKanal1";"Symbol";"Fingerprint_0xF198";"Symbol";"DString_FTC_Code";"Symbol";"DVciResult";"Symbol";}
      Condition{"ever";"ok";"";}
      Evaluation{"no";"break";
       ActionCond{"";}}
      Extra{"resultblock";"4931";"";"";"\"\"";"\"\"";"";0;"";"";"\"\"";"SN";"";}
      NodeCategory{"";}
      Info{"Mit diesem Service werden beliebige Daten in den Server (z.B.ECU) geschrieben. Die Datenart wird in der\r\nClient-Anforderung und innerhalb der System-Antwort durch den RecordDataIdentifier-Parameter (\xE0 2Byte)\r\ngenauer beschrieben und beinhalten z.B. Prozess-, Parameter-, Identifikations- oder Codierwerte des Systems.\r\nMit diesem Service ist ein elektronisches System vollst\xE4ndig konfigurierbar.\r\n\r\nDabei wird der UDS_Befehl \"WriteDataByIdentifier\" ( Blocktitel 0x2e) verwendet. Der RecordDataIdentifier stellt\r\nder Zugriff zu einem bestimmten String im STG dar. Der Data-Wert mu\xDF mit dem Zugriff \xFCbereinstimmen, da\xDF hei\xDFt\r\ndie L\xE4nge und der Aufbau werden von STG \xFCberpr\xFCft.\r\n\r\nDie Bewertung des Pr\xFCfschrittes ist immer OK, wenn der STG-Befehl erfolgreich ausgef\xFChrt werden konnte.\r\nDie Bewertung des Pr\xFCfschrittes ist immer NOK, wenn der STG-Befehl abgesetzt wird, aber eine negative Antwort erfolg.\r\nDie Bewertung des Pr\xFCfschrittes ist immer ABBR, wenn eine Illegaler DataIdent vorgegeben wurde.\r\n\r\nDie \"RecordDataIdent\" mu\xDF eiinen Wert von 0x0000 bis 0xffff haben.\r\n\r\nIn die Statistik wird im \r\n   OK-Fall nur die Bewertung des Pr\xFCfschrittes gespeichert.\r\n   NOK-Fall die die vollst\xE4ndige Antwort des STG gespeichert.\r\n   ABBR-Fall \"Illegaler DataIdent\" gespeichert.\r\n";"";}
      Rights{"Write";"Read";}
      VersionInfo{}
      Class{"UDS_WriteDataByIdentifier";}}
     FunctionDef{
      Name{"Warten.9970";}
      LangName{"Warten.9970";"Wait.9970";}
      Type{2;}
      Icon{0;}
      Properties{}
      ActualParam{"CTime01";"Symbol";}
      Condition{"ever";"ok";"";}
      Evaluation{"no";"never";
       ActionCond{"";}}
      Extra{"teststep";}
      NodeCategory{"";}
      Info{"Baustein zum Warten einer bestimmten Zeit.\r\n\r\nDer Parameter \"Timeout\" gibt die Wartezeit in Sekunden an.\r\n";"Module to wait a defined time.\r\n\r\nThe parameter \"timout\" defines the waiting time in seconds.";}
      Rights{"Write";"Read";}
      VersionInfo{}
      Class{"Warten";}}
     FunctionDef{
      Name{"CodefileProgrammLang_KWP2000_1_03.9971";}
      LangName{"CodefileProgrammLang_KWP2000_1_03.9971";"CodefileProgramLong_KWP2000_1_03.9971";}
      Type{2;}
      Icon{0;}
      Properties{}
      ActualParam{"DIALOG_LOKAL";"Symbol";"CDialogZeile1";"Symbol";"VCIKanal1";"Symbol";"Gateway_ProgL_String";"Symbol";}
      Condition{"ever";"ok";"";}
      Evaluation{"direct";"never";
       ActionCond{"";}}
      Extra{"resultblock";"3232";"";"CStat_ZDC_ProgramL_2000";"\"\"";"\"\"";"";0;"";"";"\"\"";"SN";"";}
      NodeCategory{"";}
      Info{"Dieser Baustein schreibt die Programierdaten aus dem Parameter \"Prog_String\" in ein Steuerger\xE4t mit KWP2000.\r\n\r\nIn \"Prog_String\" werden die Programierdaten aus dem Codefile \xFCbergeben.\r\nDie max. Anzahl Datendatenbytes je Schreibbefehl ist \"Blockl\xE4nge\".\r\n\r\n####\r\nHierbei wird die neue Erweiterung zum KWP2000 Spec zum Thema Flashen verwendet.\r\nBen\xF6tigt z.B. f\xFCr Airbag prog. PQ35\r\n####\r\n\r\nDie Bewertung dieses Bausteines ist OK, wenn das Schreiben in Ordnung war.\r\nR\xFCcklesen ist nicht m\xF6glich.\r\n\r\nDer Baustein ist auf die Verarbeitung von 4Byte Adress- und L\xE4ngeninforationen ausgelegt.\r\n\r\nIn die Statistik wird ein Statustext geschrieben.";"";}
      Rights{"Write";"Read";}
      VersionInfo{}
      Class{"CodefileProgrammLang_KWP2000_1_03";}}
     FunctionDef{
      Name{"ErrDebugInfoStr.9972";}
      LangName{"ErrDebugInfoStr.9972";"ErrDebugInfoStr.9972";}
      Type{2;}
      Icon{2;}
      Properties{}
      ActualParam{"CNullPosition";"Symbol";"Gateway_Container_Name";"Symbol";"ConstVar47144";"Const";}
      Condition{"Never";"ever";"ok";"";}
      Evaluation{"no";"never";
       ActionCond{"";}}
      Extra{"teststep";}
      NodeCategory{"";}
      Info{"Debug-Ausgabe einer Zeichenkette";"Debug-Ausgabe einer Zeichenkette";}
      Rights{"Write";"Read";}
      VersionInfo{}
      Class{"ErrDebugInfoStr";}}
     FunctionDef{
      Name{"SVW_CodefileProgrammLang_KWP2000.9973";}
      LangName{"SVW_CodefileProgrammLang_KWP2000.9973";"SVW_CodefileProgrammLang_KWP2000.9973";}
      Type{2;}
      Icon{0;}
      Properties{}
      ActualParam{"DIALOG_LOKAL";"Symbol";"CDialogZeile1";"Symbol";"VCIKanal1";"Symbol";"Gateway_ProgL_String";"Symbol";"ConstVar47143";"Const";}
      Condition{"Never";"ever";"ok";"";}
      Evaluation{"direct";"never";
       ActionCond{"";}}
      Extra{"resultblock";"4928";"";"";"\"\"";"\"\"";"";0;"";"";"\"\"";"SN";"";}
      NodeCategory{"";}
      Info{"Dieser Baustein schreibt die Programierdaten aus dem Parameter \"Prog_String\" in ein Steuerger\xE4t mit KWP2000.\r\n\r\nIn \"Prog_String\" werden die Programierdaten aus dem Codefile \xFCbergeben.\r\nDie max. Anzahl Datendatenbytes je Schreibbefehl ist \"Blockl\xE4nge\".\r\n\r\n####\r\nHierbei wird die neue Erweiterung zum KWP2000 Spec zum Thema Flashen verwendet.\r\nBen\xF6tigt z.B. f\xFCr Airbag prog. PQ35\r\n####\r\n\r\nDie Bewertung dieses Bausteines ist OK, wenn das Schreiben in Ordnung war.\r\nR\xFCcklesen ist nicht m\xF6glich.\r\n\r\nDer Baustein ist auf die Verarbeitung von 4Byte Adress- und L\xE4ngeninforationen ausgelegt.\r\n\r\nIn die Statistik wird ein Statustext geschrieben.";"In \"Prog_String\" werden die Programierdaten aus dem Codefile \xFCbergeben.\r\nDie max. Anzahl Datendatenbytes je Schreibbefehl ist \"Blockl\xE4nge\".\r\n\r\n####\r\nHierbei wird die neue Erweiterung zum KWP2000 Spec zum Thema Flashen verwendet.\r\nBen\xF6tigt z.B. f\xFCr Airbag prog. PQ35\r\n####\r\n\r\nDie Bewertung dieses Bausteines ist OK, wenn das Schreiben in Ordnung war.\r\nR\xFCcklesen ist nicht m\xF6glich.\r\n\r\nDer Baustein ist auf die Verarbeitung von 4Byte Adress- und L\xE4ngeninforationen ausgelegt.\r\n\r\nIn die Statistik wird ein Statustext geschrieben.\r\n\r\nIn MaxBlockLength wird eine Obergrenze pro Schreiben festgelegt. Es wird das Minimum von ECU\r\nund MaxBlockLength genommen.";}
      Rights{"Write";"Read";}
      VersionInfo{}
      Class{"SVW_CodefileProgrammLang_KWP2000";}}}
    FunctionDef{
     Name{"Program.9974";}
     LangName{"Program.9974";"Program.9974";}
     Type{2;}
     Icon{0;}
     Properties{}
     ActualParam{}
     Condition{"Never";"LAS";"LAS_not_GP1";"when";"progcond";"Gateway_ProgL_String != \"\"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     NodeCategory{"";}
     Info{"Strukturelement";"This branch of the library is used for temporary files from\r\nnew or imported library modules. It is a pure structuring\r\nlevel.";}
     Rights{"Write";"Read";}
     VersionInfo{
      CurVersion{0;1;"cp32";}
      Version{0;1;"cp32";"- in Arbeit -";"admin";"05.01.2013 16:14:40";}}
     Class{"Neu";}
     FunctionDef{
      Name{"CodefileProgrammLang_KWP2000_1_03.9975";}
      LangName{"CodefileProgrammLang_KWP2000_1_03.9975";"CodefileProgramLong_KWP2000_1_03.9975";}
      Type{2;}
      Icon{0;}
      Properties{}
      ActualParam{"DIALOG_LOKAL";"Symbol";"CDialogZeile1";"Symbol";"VCIKanal1";"Symbol";"Gateway_ProgL_String";"Symbol";}
      Condition{"ever";"ok";"";}
      Evaluation{"direct";"never";
       ActionCond{"";}}
      Extra{"resultblock";"3232";"";"CStat_ZDC_ProgramL_2000";"\"\"";"\"\"";"";0;"";"";"\"\"";"SN";"";}
      NodeCategory{"";}
      Info{"Dieser Baustein schreibt die Programierdaten aus dem Parameter \"Prog_String\" in ein Steuerger\xE4t mit KWP2000.\r\n\r\nIn \"Prog_String\" werden die Programierdaten aus dem Codefile \xFCbergeben.\r\nDie max. Anzahl Datendatenbytes je Schreibbefehl ist \"Blockl\xE4nge\".\r\n\r\n####\r\nHierbei wird die neue Erweiterung zum KWP2000 Spec zum Thema Flashen verwendet.\r\nBen\xF6tigt z.B. f\xFCr Airbag prog. PQ35\r\n####\r\n\r\nDie Bewertung dieses Bausteines ist OK, wenn das Schreiben in Ordnung war.\r\nR\xFCcklesen ist nicht m\xF6glich.\r\n\r\nDer Baustein ist auf die Verarbeitung von 4Byte Adress- und L\xE4ngeninforationen ausgelegt.\r\n\r\nIn die Statistik wird ein Statustext geschrieben.";"";}
      Rights{"Write";"Read";}
      VersionInfo{}
      Class{"CodefileProgrammLang_KWP2000_1_03";}}}
    FunctionDef{
     Name{"DTC_Read_Clear.9976";}
     LangName{"FSP_Lesen_Loeschen.9976";"DTC_Read_Clear.9976";}
     Type{2;}
     Icon{0;}
     Properties{}
     ActualParam{}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     NodeCategory{"";}
     Info{"";"";}
     Rights{"Write";"Read";}
     VersionInfo{}
     Class{"Neu_309535";}
     FunctionDef{
      Name{"VW2000_FSP_Lesen_Anzahl.9977";}
      LangName{"VW2000_FSP_Lesen_Anzahl.9977";"VW2000_DTC_Read_Quantity.9977";}
      Type{2;}
      Icon{1;}
      Properties{}
      ActualParam{"VCIKanal1";"Symbol";"DInt";"Symbol";"VW_DTC_Result";"Symbol";"VW_Codes_DTC_Read";"Symbol";}
      Condition{"ever";"ok";"";}
      Evaluation{"direct";"never";
       ActionCond{"";}}
      Extra{"teststep";}
      NodeCategory{"";}
      Info{"Dieses Modul lie\xDFt den Fehlerspeicher eines Steuerger\xE4tes.\r\nEs wertet zun\xE4chst die unterst\xFCtzten Funktionen aus.\r\nDabei wird der KWP2000-Befehl readDiagnosticInfomation ( Blocktitel 0x18)\r\nmit dem Parameter allGroups (0x02 0xff 0x00) verwendet.\r\nWenn Funktion 0x0118 unterst\xFCtzt wird, wird zum lesen der SAE-Codes in neueren STG mit Parameter 0x00 0xff 0x00 gelesen.\r\nWie und ob gelesen werden konnte wird in dem Parameter FSP_Lesen_Code zur\xFCckgegeben.\r\n\r\nDer gelesene Fehlerspeicherinhalt wird immer in der Variablen \"FSP-String\" zur weiteren\r\nBearbeitung abgespeichert.\r\n\r\nBewertet und in die Statistik geschrieben wird die Anzahl, der im Steuerger\xE4t vorhanden\r\nFehler. Eine Filterung wird hierbei nicht vorgenommen.\r\n\r\nDie Bewertung diese Pr\xFCfschrittes is \"OK\", wenn der Steuerger\xE4tebefehl erfolgreich \r\nausgef\xFChrt werden konnte und kein Fehler vorhandenen ist.\r\nDie Bewertung diese Pr\xFCfschrittes is \"NOK\", wenn der Steuerger\xE4tebefehl erfolgreich \r\nausgef\xFChrt werden konnte und mindestens ein Fehler vorhandenen ist.\r\nDie Bewertung diese Pr\xFCfschrittes is \"ABBR\", wenn der Steuerger\xE4tebefehl nicht\r\nerfolgreich ausgef\xFChrt werden konnte.\r\n";"";}
      Rights{"Write";"Read";}
      VersionInfo{}
      Class{"VW2000_FSP_Lesen_Anzahl";}}
     FunctionDef{
      Name{"VW2000_FSP_Loeschen.9978";}
      LangName{"VW2000_FSP_Loeschen.9978";"VW2000_DTC_Clear.9978";}
      Type{2;}
      Icon{1;}
      Properties{}
      ActualParam{"VCIKanal1";"Symbol";"DIALOG_LOKAL";"Symbol";"CDialogZeile1";"Symbol";"CTime_0";"Symbol";}
      Condition{"ever";"ok";"";}
      Evaluation{"direct";"never";
       ActionCond{"";}}
      Extra{"teststep";}
      NodeCategory{"";}
      Info{"Dieses Modul l\xF6scht den Fehlerspeicher eines Steuerger\xE4tes.\r\nDabei wird der KWP2000-Befehl ClearDiagnosticInfomation ( Blocktitel 0x14)\r\nmit dem Parameter allGroups ( 0xff 0x00) verwendet.\r\n\r\nDie Bewertung diese Pr\xFCfschrittes ist \"OK\", wenn der Steuerger\xE4tebefehl erfolgreich \r\nausgef\xFChrt werden konnte, Die Bewertung des Pr\xFCfschrittes wird in die Statistik gesschrieben.";"";}
      Rights{"Write";"Read";}
      VersionInfo{}
      Class{"VW2000_FSP_Loeschen";}}}
    FunctionDef{
     Name{"ECU_comminication_stop.9979";}
     LangName{"ECU_comminication_stop.9979";"ECU_comminication_stop.9979";}
     Type{2;}
     Icon{0;}
     Properties{}
     ActualParam{}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     NodeCategory{"";}
     Info{"Struckturbaustein";"";}
     Rights{"Write";"Read";}
     VersionInfo{}
     Class{"Neu_309535";}
     FunctionDef{
      Name{"VW2000_STG_Ende_309457.9980";}
      LangName{"VW2000_STG_Ende_309457.9980";"VW2000_ECU_Disconnect.9980";}
      Type{2;}
      Icon{1;}
      Properties{}
      ActualParam{"VCIKanal1";"Symbol";}
      Condition{"ever";"ok";"";}
      Evaluation{"no";"never";
       ActionCond{"";}}
      Extra{"teststep";}
      NodeCategory{"";}
      Info{"Mit diesem Modul wird die Kommunikation zu einem Steuerger\xE4t beendet. Dieser Befehl ist\r\nimmer nach dem letzten Befehl f\xFCr ein Steuerger\xE4t zu senden bzw. bevor die Z\xFCndung\r\nausgeschaltet wird. \r\n\r\nDie Bewertung des Pr\xFCfschrittes ist \"OK\", wenn die Verbindung erfolgreich beendet werden\r\nkonnte.\r\n\r\nIn die Statistik wird nur ein \"OK\" bzw. \"NOK\" in Abh\xE4nigkeit von der Berwertung geschrieben.\r\n\r\n03.11.06, sz: Update: der Befehl Stop Communication wird nur noch gesendet, wenn das VCI-Handle noch g\xFCltig ist, und eine \r\n                                    Kommunikation zum SG besteht (_vciAdapt). Sonst wird nur das Handle geschlossen. \r\n                                    Einsetzbar ab MSL Version 4.";"";}
      Rights{"Write";"Read";}
      VersionInfo{}
      Class{"VW2000_STG_Ende_309457";}}}
    FunctionDef{
     Name{"Set_TBL_complete.9981";}
     LangName{"Set_TBL_complete.9981";"Set_TBL_complete.9981";}
     Type{2;}
     Icon{1;}
     Properties{}
     ActualParam{"OK";"Symbol";"CText_Info_TestBlockComplete";"Symbol";}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"resultblock";"459";"";"CText_TestBlockComplete";"\"\"";"\"\"";"";0;"";"";"\"\"";"SN";"";}
     NodeCategory{"";}
     Info{"Baustein zum Schreiben von OK oder NOK in die Statistik. (S)";"";}
     Rights{"Write";"Read";}
     VersionInfo{}
     Class{"StatSetAsciiResult_293306";}}}
   FunctionDef{
    Name{"General_exits.9982";}
    LangName{"General_exits.9982";"General_exits.9982";}
    Type{2;}
    Icon{0;}
    Properties{}
    ActualParam{}
    Condition{"ever";"ok";"";}
    Evaluation{"direct";"never";
     ActionCond{"";}}
    Extra{"teststep";}
    NodeCategory{"";}
    Info{"";"";}
    Rights{"Write";"Read";}
    VersionInfo{}
    Class{"Neu";}
    FunctionDef{
     Name{"Pruefzeit.9983";}
     LangName{"TestTime.9983";"TestTime.9983";}
     Type{2;}
     Icon{0;}
     Properties{}
     ActualParam{}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     NodeCategory{"";}
     Info{"";"";}
     Rights{"Write";"Read";}
     VersionInfo{}
     Class{"Neu";}
     FunctionDef{
      Name{"ZeitLesen.9984";}
      LangName{"ZeitLesen.9984";"Read_Time.9984";}
      Type{2;}
      Icon{0;}
      Properties{}
      ActualParam{"DTimeF2";"Symbol";}
      Condition{"ever";"ok";"";}
      Evaluation{"direct";"never";
       ActionCond{"";}}
      Extra{"teststep";}
      NodeCategory{"";}
      Info{"";"Element to read the time. \r\n\r\nThe actual time will be returned as Float.";}
      Rights{"Write";"Read";}
      VersionInfo{}
      Class{"ZeitLesen";}}
     FunctionDef{
      Name{"Floatdifferenz.9985";}
      LangName{"Floatdifferenz.9985";"FloatDifference.9985";}
      Type{2;}
      Icon{0;}
      Properties{}
      ActualParam{"DTimeF2";"Symbol";"DTimeF";"Symbol";"DTimeF";"Symbol";}
      Condition{"ever";"ok";"";}
      Evaluation{"direct";"never";
       ActionCond{"";}}
      Extra{"teststep";}
      NodeCategory{"";}
      Info{"Baustein zum Bilden der Differenz zwischen zwei Flie\xDFkommazahlen (Float).";"";}
      Rights{"Write";"Read";}
      VersionInfo{}
      Class{"FloatDifferenz";}}
     FunctionDef{
      Name{"FToleranzPrfng.9986";}
      LangName{"FToleranzPrfng.9986";"FloatToleranceCheck.9986";}
      Type{2;}
      Icon{1;}
      Properties{}
      ActualParam{"DTimeF";"Symbol";"CFloat0";"Symbol";"CFloat_3600";"Symbol";}
      Condition{"ever";"ok";"";}
      Evaluation{"direct";"never";
       ActionCond{"";}}
      Extra{"resultblock";"1505";"";"CStatTxt_a5_gateway_init";"\"\"";"\"\"";"";0;"";"";"\"\"";"\"SN\"";"";}
      NodeCategory{"";}
      Info{"Baustein zur Toleranzbandpr\xFCfung. (S)\r\n\r\nBewertung ist OK, wenn der Istwert innerhalb der Toleranzgrenzen von Utg und Otg liegt.";"";}
      Rights{"Write";"Read";}
      VersionInfo{}
      Class{"FToleranzPrfng";}}}
    FunctionDef{
     Name{"DlgExit.9987";}
     LangName{"DlgExit.9987";"DlgExit.9987";}
     Type{2;}
     Icon{2;}
     Properties{}
     ActualParam{"DIALOG_LOKAL";"Symbol";}
     Condition{"ever";"ok";"";}
     Evaluation{"direct";"never";
      ActionCond{"";}}
     Extra{"teststep";}
     NodeCategory{"";}
     Info{"Baustein zur Deinitialisierung der Benutzerschnittstelle";"";}
     Rights{"Write";"Read";}
     VersionInfo{}
     Class{"DlgExit";}}}}}}